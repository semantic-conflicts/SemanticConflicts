import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        java.lang.String str13 = response1.getHeaderCaseInsensitive("null=Content-Encoding");
        org.jsoup.Connection.Method method14 = response1.method();
        boolean boolean16 = response1.hasHeader("hi!=Content-Encoding");
        java.net.URL uRL17 = response1.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL17);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("null=Content-Encoding");
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal2.key("Content-Encoding");
        boolean boolean7 = keyVal2.hasInputStream();
        java.lang.String str8 = keyVal2.key;
        java.io.InputStream inputStream9 = keyVal2.inputStream();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Content-Encoding" + "'", str8.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream9);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request9 = request0.postDataCharset("");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: ");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection.Response response24 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        int int26 = request25.timeout();
        boolean boolean27 = request25.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request29 = request25.timeout(0);
        boolean boolean31 = request29.hasCookie("application/x-www-form-urlencoded");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection32 = request29.data();
        org.jsoup.Connection connection33 = httpConnection0.data(keyValCollection32);
        org.jsoup.Connection connection35 = httpConnection0.timeout((int) (byte) 100);
        org.jsoup.helper.HttpConnection.Response response36 = null;
        org.jsoup.helper.HttpConnection.Response response37 = new org.jsoup.helper.HttpConnection.Response(response36);
        org.jsoup.Connection.Response response40 = response37.cookie("null=Content-Encoding", "multipart/form-data");
        int int41 = response37.statusCode();
        boolean boolean44 = response37.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response46 = response37.removeCookie("Content-Encoding");
        org.jsoup.Connection.Response response49 = response37.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        java.lang.String str51 = response37.cookie("application/x-www-form-urlencoded");
        java.util.Map<java.lang.String, java.lang.String> strMap52 = response37.cookies();
        org.jsoup.Connection connection53 = httpConnection0.response((org.jsoup.Connection.Response) response37);
        org.jsoup.Connection connection55 = httpConnection0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean57 = request56.ignoreContentType;
        request56.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request62 = request56.proxy("hi!", (int) (short) 0);
        boolean boolean63 = request56.validateTSLCertificates;
        org.jsoup.parser.Parser parser64 = null;
        org.jsoup.helper.HttpConnection.Request request65 = request56.parser(parser64);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection66 = request65.data;
        httpConnection0.req = request65;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document68 = httpConnection0.post();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3000 + "'", int26 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "multipart/form-data" + "'", str51.equals("multipart/form-data"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection66);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        org.jsoup.Connection.Response response9 = response1.header("hi!", "multipart/form-data");
        java.nio.ByteBuffer byteBuffer10 = null;
        response1.byteData = byteBuffer10;
        int int12 = response1.statusCode;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.maxBodySize(0);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.Connection connection9 = httpConnection7.parser(parser8);
        org.jsoup.Connection connection11 = httpConnection7.userAgent("hi!");
        org.jsoup.Connection connection13 = httpConnection7.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str15 = keyVal14.key();
        keyVal14.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal18.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray21 = new org.jsoup.Connection.KeyVal[] { keyVal14, keyVal18 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList22 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList22, keyValArray21);
        org.jsoup.Connection connection24 = httpConnection7.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList22);
        org.jsoup.parser.Parser parser25 = null;
        org.jsoup.Connection connection26 = httpConnection7.parser(parser25);
        org.jsoup.Connection connection28 = httpConnection7.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser30 = null;
        org.jsoup.Connection connection31 = httpConnection29.parser(parser30);
        org.jsoup.Connection connection33 = httpConnection29.referrer("multipart/form-data");
        org.jsoup.Connection connection36 = httpConnection29.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection.Response response37 = null;
        org.jsoup.helper.HttpConnection.Response response38 = new org.jsoup.helper.HttpConnection.Response(response37);
        response38.numRedirects = '4';
        org.jsoup.Connection.Method method41 = response38.method();
        response38.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = response38.cookies();
        org.jsoup.Connection connection45 = httpConnection29.cookies(strMap44);
        org.jsoup.Connection connection46 = httpConnection7.data(strMap44);
        org.jsoup.Connection connection47 = httpConnection0.cookies(strMap44);
        org.jsoup.Connection.Request request48 = httpConnection0.req;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection50 = httpConnection0.postDataCharset("application/x-www-form-urlencoded=null=Content-Encoding");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: application/x-www-form-urlencoded=null=Content-Encoding");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        org.jsoup.Connection.Response response6 = response1.header("null=Content-Encoding", "multipart/form-data");
        java.lang.String str7 = response1.contentType();
        org.jsoup.Connection.Response response10 = response1.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        boolean boolean13 = response1.hasHeaderWithValue("hi!=Content-Encoding", "null=Content-Encoding");
        java.net.URL uRL14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response15 = response1.url(uRL14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.key();
        java.io.InputStream inputStream4 = keyVal0.stream;
        java.io.InputStream inputStream5 = null;
        keyVal0.stream = inputStream5;
        java.lang.String str7 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.key("null=null");
        java.lang.String str10 = keyVal0.value;
        java.io.InputStream inputStream11 = keyVal0.stream;
        java.io.InputStream inputStream12 = keyVal0.stream;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Content-Encoding" + "'", str10.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream12);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection.Response response24 = httpConnection0.response();
        org.jsoup.Connection connection27 = httpConnection0.cookie("application/x-www-form-urlencoded", "null=multipart/form-data");
        org.jsoup.Connection connection29 = httpConnection0.timeout(1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request0.validateTSLCertificates = false;
        boolean boolean9 = request0.ignoreContentType;
        int int10 = request0.maxBodySize();
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser12 = null;
        org.jsoup.Connection connection13 = httpConnection11.parser(parser12);
        org.jsoup.Connection connection15 = httpConnection11.referrer("multipart/form-data");
        org.jsoup.Connection connection18 = httpConnection11.cookie("Content-Encoding", "");
        org.jsoup.Connection connection21 = httpConnection11.header("multipart/form-data", "multipart/form-data");
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean23 = request22.ignoreContentType;
        request22.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request27 = request22.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request29 = request22.data((org.jsoup.Connection.KeyVal) keyVal28);
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request36 = request30.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy37 = request36.proxy;
        org.jsoup.helper.HttpConnection.Request request38 = request22.proxy(proxy37);
        boolean boolean41 = request22.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        request22.ignoreContentType = false;
        org.jsoup.helper.HttpConnection httpConnection44 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser45 = null;
        org.jsoup.Connection connection46 = httpConnection44.parser(parser45);
        org.jsoup.Connection connection48 = httpConnection44.userAgent("hi!");
        org.jsoup.Connection connection50 = httpConnection44.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal51 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str52 = keyVal51.key();
        keyVal51.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal55 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal55.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray58 = new org.jsoup.Connection.KeyVal[] { keyVal51, keyVal55 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList59 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList59, keyValArray58);
        org.jsoup.Connection connection61 = httpConnection44.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList59);
        org.jsoup.parser.Parser parser62 = null;
        org.jsoup.Connection connection63 = httpConnection44.parser(parser62);
        org.jsoup.Connection connection65 = httpConnection44.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection66 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser67 = null;
        org.jsoup.Connection connection68 = httpConnection66.parser(parser67);
        org.jsoup.Connection connection70 = httpConnection66.userAgent("hi!");
        org.jsoup.Connection connection72 = httpConnection66.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal73 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str74 = keyVal73.key();
        keyVal73.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal77 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal77.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray80 = new org.jsoup.Connection.KeyVal[] { keyVal73, keyVal77 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList81 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList81, keyValArray80);
        org.jsoup.Connection connection83 = httpConnection66.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList81);
        org.jsoup.helper.HttpConnection.Request request84 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser85 = request84.parser();
        org.jsoup.Connection connection86 = httpConnection66.parser(parser85);
        org.jsoup.Connection connection87 = httpConnection44.parser(parser85);
        request22.parser = parser85;
        org.jsoup.Connection connection89 = httpConnection11.parser(parser85);
        request0.parser = parser85;
        java.net.URL uRL91 = request0.url();
        java.net.URL uRL92 = request0.url();
        org.jsoup.helper.HttpConnection.KeyVal keyVal95 = org.jsoup.helper.HttpConnection.KeyVal.create("application/x-www-form-urlencoded", "null=Content-Encoding");
        java.io.InputStream inputStream96 = keyVal95.inputStream();
        java.io.InputStream inputStream97 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal98 = keyVal95.inputStream(inputStream97);
        org.jsoup.helper.HttpConnection.Request request99 = request0.data((org.jsoup.Connection.KeyVal) keyVal98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request99);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        boolean boolean7 = request0.validateTSLCertificates;
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.helper.HttpConnection.Request request9 = request0.parser(parser8);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request9.data;
        boolean boolean11 = request9.ignoreContentType;
        java.lang.String str13 = request9.header("null=null");
        java.net.URL uRL14 = request9.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL14);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        org.jsoup.Connection connection14 = httpConnection0.ignoreHttpErrors(true);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document15 = httpConnection0.post();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        response1.contentType = "";
        java.util.Map<java.lang.String, java.lang.String> strMap11 = response1.headers();
        org.jsoup.Connection.Response response13 = response1.removeHeader("multipart/form-data");
        boolean boolean15 = response1.hasHeader("hi!");
        java.lang.String str16 = response1.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.jsoup.helper.HttpConnection.FORM_URL_ENCODED = "hi!=Content-Encoding=UTF-8";
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        org.jsoup.Connection.Response response6 = response1.removeHeader("multipart/form-data");
        java.lang.String str8 = response1.header("null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.Connection connection29 = httpConnection22.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        response31.numRedirects = '4';
        org.jsoup.Connection.Method method34 = response31.method();
        response31.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = response31.cookies();
        org.jsoup.Connection connection38 = httpConnection22.cookies(strMap37);
        org.jsoup.Connection connection39 = httpConnection0.data(strMap37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean41 = request40.ignoreContentType;
        request40.ignoreContentType = true;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection44 = request40.data();
        org.jsoup.Connection connection45 = httpConnection0.data(keyValCollection44);
        org.jsoup.helper.HttpConnection.Response response46 = null;
        org.jsoup.helper.HttpConnection.Response response47 = new org.jsoup.helper.HttpConnection.Response(response46);
        boolean boolean48 = response47.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = response47.cookies();
        org.jsoup.helper.HttpConnection httpConnection50 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal51 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str52 = keyVal51.key();
        keyVal51.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal55 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal55.value = "Content-Encoding";
        java.lang.String str58 = keyVal55.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal59 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal59.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal62 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream63 = keyVal62.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal64 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream65 = keyVal64.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray66 = new org.jsoup.Connection.KeyVal[] { keyVal51, keyVal55, keyVal59, keyVal62, keyVal64 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList67 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList67, keyValArray66);
        org.jsoup.Connection connection69 = httpConnection50.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList67);
        org.jsoup.helper.HttpConnection.Request request70 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean71 = request70.ignoreContentType;
        request70.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request75 = request70.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal76 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request77 = request70.data((org.jsoup.Connection.KeyVal) keyVal76);
        org.jsoup.helper.HttpConnection.Request request78 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean79 = request78.ignoreContentType;
        request78.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request84 = request78.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy85 = request84.proxy;
        org.jsoup.helper.HttpConnection.Request request86 = request70.proxy(proxy85);
        org.jsoup.Connection.Method method87 = request86.method();
        org.jsoup.Connection connection88 = httpConnection50.method(method87);
        org.jsoup.Connection.Response response89 = response47.method(method87);
        org.jsoup.Connection connection90 = httpConnection0.method(method87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "null=Content-Encoding" + "'", str58.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request86);
        org.junit.Assert.assertTrue("'" + method87 + "' != '" + org.jsoup.Connection.Method.GET + "'", method87.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection90);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response5 = null;
        org.jsoup.helper.HttpConnection.Response response6 = new org.jsoup.helper.HttpConnection.Response(response5);
        boolean boolean7 = response6.executed;
        java.net.URL uRL8 = response6.url();
        boolean boolean9 = response6.executed;
        response6.executed = false;
        httpConnection0.res = response6;
        org.jsoup.Connection.Response response15 = response6.cookie("application/x-www-form-urlencoded", "");
        org.jsoup.Connection.Response response18 = response6.cookie("multipart/form-data", "application/x-www-form-urlencoded=null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response18);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection5 = httpConnection0.data("null=application/x-www-form-urlencoded", "null=null");
        org.jsoup.Connection.Response response6 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean8 = request7.ignoreContentType;
        request7.maxBodySizeBytes = (byte) -1;
        java.lang.String str11 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request7);
        request7.parserDefined = true;
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean15 = request14.ignoreContentType;
        request14.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request20 = request14.proxy("hi!", (int) (short) 0);
        request14.validateTSLCertificates = false;
        boolean boolean23 = request14.ignoreContentType;
        org.jsoup.Connection.Request request25 = request14.followRedirects(true);
        org.jsoup.parser.Parser parser26 = request14.parser();
        int int27 = request14.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean29 = request28.ignoreContentType;
        request28.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request34 = request28.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy35 = request34.proxy;
        org.jsoup.helper.HttpConnection.Request request36 = request14.proxy(proxy35);
        org.jsoup.helper.HttpConnection.Request request37 = request7.proxy(proxy35);
        org.jsoup.Connection connection38 = httpConnection0.proxy(proxy35);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection40 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal41 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str42 = keyVal41.key();
        keyVal41.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal45.value = "Content-Encoding";
        java.lang.String str48 = keyVal45.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal49 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal49.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal52 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream53 = keyVal52.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal54 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream55 = keyVal54.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray56 = new org.jsoup.Connection.KeyVal[] { keyVal41, keyVal45, keyVal49, keyVal52, keyVal54 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList57 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList57, keyValArray56);
        org.jsoup.Connection connection59 = httpConnection40.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList57);
        request39.data = keyValList57;
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean62 = request61.ignoreContentType;
        request61.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request66 = request61.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal67 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request68 = request61.data((org.jsoup.Connection.KeyVal) keyVal67);
        org.jsoup.helper.HttpConnection.Request request69 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean70 = request69.ignoreContentType;
        request69.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request75 = request69.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy76 = request75.proxy;
        org.jsoup.helper.HttpConnection.Request request77 = request61.proxy(proxy76);
        org.jsoup.helper.HttpConnection.Request request78 = request39.proxy(proxy76);
        request78.followRedirects = false;
        org.jsoup.parser.Parser parser81 = request78.parser();
        httpConnection0.req = request78;
        int int83 = request78.maxBodySizeBytes;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "null=Content-Encoding" + "'", str48.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1048576 + "'", int83 == 1048576);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        java.lang.String str6 = response1.charset;
        java.lang.String str7 = response1.statusMessage();
        response1.numRedirects = (byte) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        org.jsoup.Connection.Response response13 = response1.header("null=Content-Encoding", "null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        int int5 = request0.timeoutMilliseconds;
        int int6 = request0.maxBodySizeBytes;
        boolean boolean8 = request0.hasHeader("multipart/form-data");
        org.jsoup.helper.HttpConnection.Request request11 = request0.proxy("application/x-www-form-urlencoded", 0);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request11.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3000 + "'", int5 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.net.Proxy proxy3 = request0.proxy();
        boolean boolean4 = request0.validateTLSCertificates();
        org.jsoup.Connection.Request request7 = request0.header("hi!", "Content-Encoding=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection1 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str3 = keyVal2.key();
        keyVal2.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal10.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream14 = keyVal13.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream16 = keyVal15.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray17 = new org.jsoup.Connection.KeyVal[] { keyVal2, keyVal6, keyVal10, keyVal13, keyVal15 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList18 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18, keyValArray17);
        org.jsoup.Connection connection20 = httpConnection1.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18);
        request0.data = keyValList18;
        request0.ignoreHttpErrors = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=Content-Encoding" + "'", str9.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal1 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str2 = keyVal1.key();
        keyVal1.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal5.value = "Content-Encoding";
        java.lang.String str8 = keyVal5.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal9.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream13 = keyVal12.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream15 = keyVal14.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray16 = new org.jsoup.Connection.KeyVal[] { keyVal1, keyVal5, keyVal9, keyVal12, keyVal14 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList17 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17, keyValArray16);
        org.jsoup.Connection connection19 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17);
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean21 = request20.ignoreContentType;
        request20.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request25 = request20.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request27 = request20.data((org.jsoup.Connection.KeyVal) keyVal26);
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean29 = request28.ignoreContentType;
        request28.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request34 = request28.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy35 = request34.proxy;
        org.jsoup.helper.HttpConnection.Request request36 = request20.proxy(proxy35);
        org.jsoup.Connection.Method method37 = request36.method();
        org.jsoup.Connection connection38 = httpConnection0.method(method37);
        org.jsoup.Connection connection40 = httpConnection0.userAgent("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=Content-Encoding" + "'", str8.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection40);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        org.jsoup.Connection.Request request4 = request0.ignoreHttpErrors(false);
        java.lang.String str5 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request0);
        org.jsoup.Connection.Request request8 = request0.cookie("UTF-8", "multipart/form-data");
        org.jsoup.parser.Parser parser9 = request0.parser();
        boolean boolean10 = request0.ignoreContentType;
        request0.followRedirects = false;
        boolean boolean13 = request0.ignoreContentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        org.jsoup.Connection.Request request4 = request0.cookie("null=Content-Encoding", "hi!");
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser6 = null;
        org.jsoup.Connection connection7 = httpConnection5.parser(parser6);
        org.jsoup.Connection connection9 = httpConnection5.userAgent("hi!");
        org.jsoup.Connection connection11 = httpConnection5.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str13 = keyVal12.key();
        keyVal12.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal16.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray19 = new org.jsoup.Connection.KeyVal[] { keyVal12, keyVal16 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList20 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList20, keyValArray19);
        org.jsoup.Connection connection22 = httpConnection5.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList20);
        request0.data = keyValList20;
        request0.timeoutMilliseconds = 97;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection26 = null;
        request0.data = keyValCollection26;
        java.net.Proxy proxy28 = request0.proxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy28);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        java.util.Map<java.lang.String, java.lang.String> strMap5 = response1.cookies();
        org.jsoup.Connection.Request request6 = response1.req;
        java.lang.String str7 = response1.charset;
        java.util.Map<java.lang.String, java.lang.String> strMap8 = response1.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        java.net.Proxy proxy5 = request0.proxy();
        boolean boolean8 = request0.hasHeaderWithValue("Content-Encoding", "null=Content-Encoding");
        java.net.Proxy proxy9 = request0.proxy();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean11 = request10.ignoreContentType;
        request10.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request16 = request10.proxy("hi!", (int) (short) 0);
        request10.validateTSLCertificates = false;
        boolean boolean19 = request10.ignoreContentType;
        int int20 = request10.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean22 = request21.ignoreContentType;
        request21.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request27 = request21.proxy("hi!", (int) (short) 0);
        request21.validateTSLCertificates = false;
        boolean boolean30 = request21.ignoreContentType;
        org.jsoup.Connection.Request request32 = request21.followRedirects(true);
        org.jsoup.parser.Parser parser33 = request21.parser();
        int int34 = request21.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean36 = request35.ignoreContentType;
        request35.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request41 = request35.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy42 = request41.proxy;
        org.jsoup.helper.HttpConnection.Request request43 = request21.proxy(proxy42);
        request10.proxy = proxy42;
        org.jsoup.helper.HttpConnection.Request request45 = request0.proxy(proxy42);
        org.jsoup.helper.HttpConnection httpConnection46 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser47 = null;
        org.jsoup.Connection connection48 = httpConnection46.parser(parser47);
        org.jsoup.Connection connection50 = httpConnection46.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response51 = null;
        org.jsoup.helper.HttpConnection.Response response52 = new org.jsoup.helper.HttpConnection.Response(response51);
        boolean boolean53 = response52.executed;
        java.net.URL uRL54 = response52.url();
        boolean boolean55 = response52.executed;
        response52.executed = false;
        httpConnection46.res = response52;
        org.jsoup.helper.HttpConnection.Response response59 = null;
        org.jsoup.helper.HttpConnection.Response response60 = new org.jsoup.helper.HttpConnection.Response(response59);
        response60.numRedirects = '4';
        org.jsoup.Connection.Method method63 = response60.method();
        response60.statusCode = 1;
        org.jsoup.helper.HttpConnection.Request request66 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean67 = request66.ignoreContentType;
        request66.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request71 = request66.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal72 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request73 = request66.data((org.jsoup.Connection.KeyVal) keyVal72);
        org.jsoup.helper.HttpConnection.Request request74 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean75 = request74.ignoreContentType;
        request74.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request80 = request74.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy81 = request80.proxy;
        org.jsoup.helper.HttpConnection.Request request82 = request66.proxy(proxy81);
        org.jsoup.Connection.Method method83 = request82.method();
        org.jsoup.Connection.Response response84 = response60.method(method83);
        org.jsoup.Connection connection85 = httpConnection46.method(method83);
        org.jsoup.Connection.Request request86 = request45.method(method83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request82);
        org.junit.Assert.assertTrue("'" + method83 + "' != '" + org.jsoup.Connection.Method.GET + "'", method83.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request86);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request14 = request8.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy15 = request14.proxy;
        org.jsoup.helper.HttpConnection.Request request16 = request0.proxy(proxy15);
        org.jsoup.Connection.Request request18 = request16.removeCookie("hi!");
        java.net.URL uRL19 = request16.url();
        boolean boolean20 = request16.ignoreContentType;
        request16.validateTLSCertificates(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("null=Content-Encoding");
        keyVal4.key = "hi!=Content-Encoding";
        java.lang.String str7 = keyVal4.key();
        java.lang.String str8 = keyVal4.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!=Content-Encoding" + "'", str7.equals("hi!=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!=Content-Encoding" + "'", str8.equals("hi!=Content-Encoding"));
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        java.lang.String str6 = response1.charset;
        java.lang.String str7 = response1.statusMessage();
        response1.numRedirects = (byte) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        java.lang.Class<?> wildcardClass11 = response1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.helper.HttpConnection.Response response2 = null;
        org.jsoup.helper.HttpConnection.Response response3 = new org.jsoup.helper.HttpConnection.Response(response2);
        response3.numRedirects = '4';
        org.jsoup.Connection.Method method6 = response3.method();
        response3.statusCode = 1;
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean10 = request9.ignoreContentType;
        request9.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request14 = request9.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request16 = request9.data((org.jsoup.Connection.KeyVal) keyVal15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean18 = request17.ignoreContentType;
        request17.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request23 = request17.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy24 = request23.proxy;
        org.jsoup.helper.HttpConnection.Request request25 = request9.proxy(proxy24);
        org.jsoup.Connection.Method method26 = request25.method();
        org.jsoup.Connection.Response response27 = response3.method(method26);
        org.jsoup.Connection.Response response28 = response1.method(method26);
        int int29 = response1.statusCode;
        java.lang.String str31 = response1.header("hi!=Content-Encoding");
        org.jsoup.Connection.Response response33 = response1.removeHeader("UTF-8=multipart/form-data");
        java.net.URL uRL34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response35 = response1.url(uRL34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.toString();
        java.io.InputStream inputStream4 = null;
        keyVal0.stream = inputStream4;
        java.lang.String str6 = keyVal0.key;
        java.lang.String str7 = keyVal0.key;
        keyVal0.key = "hi!";
        keyVal0.value = "null=null";
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = keyVal0.value("application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        java.lang.String str14 = keyVal0.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=Content-Encoding" + "'", str3.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.userAgent("hi!");
        org.jsoup.Connection connection28 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str30 = keyVal29.key();
        keyVal29.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal33.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray36 = new org.jsoup.Connection.KeyVal[] { keyVal29, keyVal33 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList37 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList37, keyValArray36);
        org.jsoup.Connection connection39 = httpConnection22.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser41 = request40.parser();
        org.jsoup.Connection connection42 = httpConnection22.parser(parser41);
        org.jsoup.Connection connection43 = httpConnection0.parser(parser41);
        org.jsoup.Connection.Request request44 = null;
        httpConnection0.req = request44;
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean47 = request46.ignoreContentType;
        request46.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request52 = request46.proxy("hi!", (int) (short) 0);
        boolean boolean53 = request46.validateTSLCertificates;
        org.jsoup.parser.Parser parser54 = null;
        org.jsoup.helper.HttpConnection.Request request55 = request46.parser(parser54);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection56 = request55.data;
        httpConnection0.req = request55;
        org.jsoup.Connection connection60 = httpConnection0.cookie("hi!", "application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        org.jsoup.Connection.Response response6 = response1.removeHeader("null=multipart/form-data");
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.Connection connection9 = httpConnection7.parser(parser8);
        org.jsoup.Connection connection11 = httpConnection7.userAgent("hi!");
        org.jsoup.Connection connection13 = httpConnection7.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response14 = null;
        org.jsoup.helper.HttpConnection.Response response15 = new org.jsoup.helper.HttpConnection.Response(response14);
        boolean boolean16 = response15.executed;
        java.net.URL uRL17 = response15.url();
        boolean boolean18 = response15.executed;
        httpConnection7.res = response15;
        org.jsoup.Connection.Method method20 = response15.method();
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        request21.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request25 = request21.ignoreContentType(true);
        java.net.Proxy proxy26 = request21.proxy();
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean28 = request27.ignoreContentType;
        java.lang.String str29 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request27);
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        org.jsoup.Connection.Response response34 = response31.cookie("null=Content-Encoding", "multipart/form-data");
        int int35 = response31.statusCode();
        boolean boolean38 = response31.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response39 = null;
        org.jsoup.helper.HttpConnection.Response response40 = new org.jsoup.helper.HttpConnection.Response(response39);
        boolean boolean41 = response40.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = response40.cookies();
        org.jsoup.helper.HttpConnection httpConnection43 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str45 = keyVal44.key();
        keyVal44.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal48.value = "Content-Encoding";
        java.lang.String str51 = keyVal48.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal52 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal52.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal55 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream56 = keyVal55.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal57 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream58 = keyVal57.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray59 = new org.jsoup.Connection.KeyVal[] { keyVal44, keyVal48, keyVal52, keyVal55, keyVal57 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList60 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList60, keyValArray59);
        org.jsoup.Connection connection62 = httpConnection43.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList60);
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean64 = request63.ignoreContentType;
        request63.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request68 = request63.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal69 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request70 = request63.data((org.jsoup.Connection.KeyVal) keyVal69);
        org.jsoup.helper.HttpConnection.Request request71 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean72 = request71.ignoreContentType;
        request71.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request77 = request71.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy78 = request77.proxy;
        org.jsoup.helper.HttpConnection.Request request79 = request63.proxy(proxy78);
        org.jsoup.Connection.Method method80 = request79.method();
        org.jsoup.Connection connection81 = httpConnection43.method(method80);
        org.jsoup.Connection.Response response82 = response40.method(method80);
        org.jsoup.Connection.Response response83 = response31.method(method80);
        org.jsoup.Connection.Request request84 = request27.method(method80);
        org.jsoup.Connection.Request request85 = request21.method(method80);
        org.jsoup.Connection.Response response86 = response15.method(method80);
        org.jsoup.Connection.Response response87 = response1.method(method80);
        org.jsoup.Connection.Response response90 = response1.header("application/x-www-form-urlencoded", "Content-Encoding=hi!");
        boolean boolean91 = response1.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null=Content-Encoding" + "'", str51.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request79);
        org.junit.Assert.assertTrue("'" + method80 + "' != '" + org.jsoup.Connection.Method.GET + "'", method80.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        org.jsoup.Connection.Response response6 = response1.header("null=Content-Encoding", "multipart/form-data");
        java.lang.String str7 = response1.statusMessage;
        response1.statusMessage = "UTF-8";
        boolean boolean11 = response1.hasHeader("hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = response1.hasHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection7 = null;
        request0.data = keyValCollection7;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request11 = request7.data((org.jsoup.Connection.KeyVal) keyVal10);
        java.lang.String str12 = keyVal10.value();
        boolean boolean13 = keyVal10.hasInputStream();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.Connection connection29 = httpConnection22.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        response31.numRedirects = '4';
        org.jsoup.Connection.Method method34 = response31.method();
        response31.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = response31.cookies();
        org.jsoup.Connection connection38 = httpConnection22.cookies(strMap37);
        org.jsoup.Connection connection39 = httpConnection0.data(strMap37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean41 = request40.ignoreContentType;
        request40.ignoreContentType = true;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection44 = request40.data();
        org.jsoup.Connection connection45 = httpConnection0.data(keyValCollection44);
        org.jsoup.helper.HttpConnection.Response response46 = null;
        org.jsoup.helper.HttpConnection.Response response47 = new org.jsoup.helper.HttpConnection.Response(response46);
        org.jsoup.Connection.Response response50 = response47.cookie("null=Content-Encoding", "multipart/form-data");
        org.jsoup.Connection.Response response52 = response47.removeHeader("multipart/form-data");
        response47.statusCode = 0;
        org.jsoup.helper.HttpConnection.Response response55 = new org.jsoup.helper.HttpConnection.Response(response47);
        java.nio.ByteBuffer byteBuffer56 = response47.byteData;
        boolean boolean58 = response47.hasCookie("application/x-www-form-urlencoded");
        org.jsoup.Connection connection59 = httpConnection0.response((org.jsoup.Connection.Response) response47);
        org.jsoup.Connection connection61 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request62 = new org.jsoup.helper.HttpConnection.Request();
        int int63 = request62.timeout();
        boolean boolean64 = request62.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request66 = request62.timeout(0);
        java.net.Proxy proxy67 = request62.proxy;
        java.lang.String str69 = request62.header("hi!");
        boolean boolean70 = request62.parserDefined;
        org.jsoup.Connection.Request request73 = request62.header("null=application/x-www-form-urlencoded", "null=application/x-www-form-urlencoded");
        java.lang.String str75 = request62.getHeaderCaseInsensitive("Content-Encoding=hi!");
        httpConnection0.req = request62;
        org.jsoup.Connection connection79 = httpConnection0.data("null=application/x-www-form-urlencoded", "null=multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 3000 + "'", int63 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection79);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request0.validateTSLCertificates = false;
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal9.value = "Content-Encoding";
        java.lang.String str12 = keyVal9.key();
        java.io.InputStream inputStream13 = keyVal9.stream;
        org.jsoup.helper.HttpConnection.Request request14 = request0.data((org.jsoup.Connection.KeyVal) keyVal9);
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal9.value("multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        java.net.Proxy proxy5 = request0.proxy();
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean7 = request6.ignoreContentType;
        java.lang.String str8 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request6);
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        org.jsoup.Connection.Response response13 = response10.cookie("null=Content-Encoding", "multipart/form-data");
        int int14 = response10.statusCode();
        boolean boolean17 = response10.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response18 = null;
        org.jsoup.helper.HttpConnection.Response response19 = new org.jsoup.helper.HttpConnection.Response(response18);
        boolean boolean20 = response19.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap21 = response19.cookies();
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str24 = keyVal23.key();
        keyVal23.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal27.value = "Content-Encoding";
        java.lang.String str30 = keyVal27.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal31.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream35 = keyVal34.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal36 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream37 = keyVal36.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray38 = new org.jsoup.Connection.KeyVal[] { keyVal23, keyVal27, keyVal31, keyVal34, keyVal36 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList39 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList39, keyValArray38);
        org.jsoup.Connection connection41 = httpConnection22.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList39);
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean43 = request42.ignoreContentType;
        request42.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request47 = request42.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request49 = request42.data((org.jsoup.Connection.KeyVal) keyVal48);
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean51 = request50.ignoreContentType;
        request50.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request56 = request50.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy57 = request56.proxy;
        org.jsoup.helper.HttpConnection.Request request58 = request42.proxy(proxy57);
        org.jsoup.Connection.Method method59 = request58.method();
        org.jsoup.Connection connection60 = httpConnection22.method(method59);
        org.jsoup.Connection.Response response61 = response19.method(method59);
        org.jsoup.Connection.Response response62 = response10.method(method59);
        org.jsoup.Connection.Request request63 = request6.method(method59);
        org.jsoup.Connection.Request request64 = request0.method(method59);
        org.jsoup.Connection.Request request66 = request0.removeCookie("multipart/form-data");
        java.lang.String str68 = request0.cookie("null=null");
        org.jsoup.Connection.Request request71 = request0.header("null=application/x-www-form-urlencoded", "application/x-www-form-urlencoded=null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null=Content-Encoding" + "'", str30.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("multipart/form-data", "application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeUrl("application/x-www-form-urlencoded=null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "application/x-www-form-urlencoded=null=Content-Encoding" + "'", str1.equals("application/x-www-form-urlencoded=null=Content-Encoding"));
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection.Response response24 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        int int26 = request25.timeout();
        boolean boolean27 = request25.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request29 = request25.timeout(0);
        boolean boolean31 = request29.hasCookie("application/x-www-form-urlencoded");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection32 = request29.data();
        org.jsoup.Connection connection33 = httpConnection0.data(keyValCollection32);
        org.jsoup.Connection connection35 = httpConnection0.timeout((int) (byte) 100);
        org.jsoup.Connection.Response response36 = httpConnection0.response();
        org.jsoup.helper.HttpConnection httpConnection37 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser38 = null;
        org.jsoup.Connection connection39 = httpConnection37.parser(parser38);
        org.jsoup.Connection connection41 = httpConnection37.referrer("multipart/form-data");
        org.jsoup.Connection connection44 = httpConnection37.cookie("Content-Encoding", "");
        org.jsoup.Connection connection46 = httpConnection37.userAgent("application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.Response response47 = null;
        org.jsoup.helper.HttpConnection.Response response48 = new org.jsoup.helper.HttpConnection.Response(response47);
        response48.numRedirects = '4';
        org.jsoup.Connection.Method method51 = response48.method();
        org.jsoup.Connection.Response response53 = response48.removeHeader("hi!");
        org.jsoup.Connection connection54 = httpConnection37.response((org.jsoup.Connection.Response) response48);
        org.jsoup.Connection connection55 = httpConnection0.response((org.jsoup.Connection.Response) response48);
        java.lang.String str56 = response48.statusMessage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3000 + "'", int26 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.value();
        keyVal0.value = "application/x-www-form-urlencoded=null=Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal0.value("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.key("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Content-Encoding" + "'", str3.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request0.validateTSLCertificates = false;
        boolean boolean9 = request0.ignoreContentType;
        int int10 = request0.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean12 = request11.ignoreContentType;
        request11.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request17 = request11.proxy("hi!", (int) (short) 0);
        request11.validateTSLCertificates = false;
        boolean boolean20 = request11.ignoreContentType;
        org.jsoup.Connection.Request request22 = request11.followRedirects(true);
        org.jsoup.parser.Parser parser23 = request11.parser();
        int int24 = request11.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean26 = request25.ignoreContentType;
        request25.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request31 = request25.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy32 = request31.proxy;
        org.jsoup.helper.HttpConnection.Request request33 = request11.proxy(proxy32);
        request0.proxy = proxy32;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection35 = request0.data();
        request0.postDataCharset = "null=Content-Encoding";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection35);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean8 = response1.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response10 = response1.removeCookie("Content-Encoding");
        java.lang.String str11 = response1.contentType();
        org.jsoup.Connection.Response response13 = response1.removeCookie("hi!=Content-Encoding=UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        org.jsoup.Connection.Response response6 = response1.removeHeader("null=multipart/form-data");
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.Connection connection9 = httpConnection7.parser(parser8);
        org.jsoup.Connection connection11 = httpConnection7.userAgent("hi!");
        org.jsoup.Connection connection13 = httpConnection7.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response14 = null;
        org.jsoup.helper.HttpConnection.Response response15 = new org.jsoup.helper.HttpConnection.Response(response14);
        boolean boolean16 = response15.executed;
        java.net.URL uRL17 = response15.url();
        boolean boolean18 = response15.executed;
        httpConnection7.res = response15;
        org.jsoup.Connection.Method method20 = response15.method();
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        request21.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request25 = request21.ignoreContentType(true);
        java.net.Proxy proxy26 = request21.proxy();
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean28 = request27.ignoreContentType;
        java.lang.String str29 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request27);
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        org.jsoup.Connection.Response response34 = response31.cookie("null=Content-Encoding", "multipart/form-data");
        int int35 = response31.statusCode();
        boolean boolean38 = response31.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response39 = null;
        org.jsoup.helper.HttpConnection.Response response40 = new org.jsoup.helper.HttpConnection.Response(response39);
        boolean boolean41 = response40.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = response40.cookies();
        org.jsoup.helper.HttpConnection httpConnection43 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str45 = keyVal44.key();
        keyVal44.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal48.value = "Content-Encoding";
        java.lang.String str51 = keyVal48.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal52 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal52.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal55 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream56 = keyVal55.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal57 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream58 = keyVal57.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray59 = new org.jsoup.Connection.KeyVal[] { keyVal44, keyVal48, keyVal52, keyVal55, keyVal57 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList60 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList60, keyValArray59);
        org.jsoup.Connection connection62 = httpConnection43.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList60);
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean64 = request63.ignoreContentType;
        request63.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request68 = request63.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal69 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request70 = request63.data((org.jsoup.Connection.KeyVal) keyVal69);
        org.jsoup.helper.HttpConnection.Request request71 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean72 = request71.ignoreContentType;
        request71.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request77 = request71.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy78 = request77.proxy;
        org.jsoup.helper.HttpConnection.Request request79 = request63.proxy(proxy78);
        org.jsoup.Connection.Method method80 = request79.method();
        org.jsoup.Connection connection81 = httpConnection43.method(method80);
        org.jsoup.Connection.Response response82 = response40.method(method80);
        org.jsoup.Connection.Response response83 = response31.method(method80);
        org.jsoup.Connection.Request request84 = request27.method(method80);
        org.jsoup.Connection.Request request85 = request21.method(method80);
        org.jsoup.Connection.Response response86 = response15.method(method80);
        org.jsoup.Connection.Response response87 = response1.method(method80);
        boolean boolean90 = response1.hasHeaderWithValue("hi!=Content-Encoding", "hi!=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null=Content-Encoding" + "'", str51.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request79);
        org.junit.Assert.assertTrue("'" + method80 + "' != '" + org.jsoup.Connection.Method.GET + "'", method80.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        org.jsoup.Connection.Response response10 = response1.removeHeader("multipart/form-data");
        org.jsoup.Connection.Response response12 = response1.removeHeader("UTF-8");
        org.jsoup.Connection.Request request13 = response1.req;
        response1.statusMessage = "application/x-www-form-urlencoded";
        org.jsoup.Connection.Response response17 = response1.removeHeader("application/x-www-form-urlencoded");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = response1.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = response1.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) (byte) 10);
        request7.followRedirects = false;
        request7.parserDefined = true;
        boolean boolean12 = request7.ignoreContentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        java.net.Proxy proxy5 = request0.proxy();
        boolean boolean8 = request0.hasHeaderWithValue("multipart/form-data", "null=Content-Encoding");
        request0.ignoreHttpErrors = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = response1.scanHeaders("null=Content-Encoding");
        org.jsoup.Connection.Response response11 = response1.removeCookie("Content-Encoding");
        org.jsoup.Connection.Request request12 = response1.req;
        boolean boolean14 = response1.hasCookie("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        org.jsoup.Connection.Method method4 = response1.method();
        boolean boolean6 = response1.hasHeader("hi!");
        org.jsoup.Connection.Method method7 = response1.method();
        java.lang.String str8 = response1.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.lang.String str2 = request0.cookie("Content-Encoding");
        java.lang.String str3 = request0.postDataCharset();
        org.jsoup.helper.HttpConnection.Request request5 = request0.timeout((int) (short) 0);
        boolean boolean6 = request5.ignoreContentType;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection7 = request5.data;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "UTF-8" + "'", str3.equals("UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection7);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        org.jsoup.Connection.Request request4 = request0.cookie("null=Content-Encoding", "hi!");
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser6 = null;
        org.jsoup.Connection connection7 = httpConnection5.parser(parser6);
        org.jsoup.Connection connection9 = httpConnection5.userAgent("hi!");
        org.jsoup.Connection connection11 = httpConnection5.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str13 = keyVal12.key();
        keyVal12.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal16.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray19 = new org.jsoup.Connection.KeyVal[] { keyVal12, keyVal16 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList20 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList20, keyValArray19);
        org.jsoup.Connection connection22 = httpConnection5.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList20);
        request0.data = keyValList20;
        request0.timeoutMilliseconds = 97;
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request0.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(0);
        boolean boolean6 = request4.hasCookie("application/x-www-form-urlencoded");
        int int7 = request4.maxBodySize();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request4.scanHeaders("UTF-8=multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1048576 + "'", int7 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.key();
        java.io.InputStream inputStream4 = keyVal0.stream;
        java.io.InputStream inputStream5 = null;
        keyVal0.stream = inputStream5;
        keyVal0.value = "multipart/form-data";
        boolean boolean9 = keyVal0.hasInputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = keyVal0.key("Content-Encoding");
        java.io.InputStream inputStream12 = null;
        keyVal11.stream = inputStream12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal11);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        java.net.URL uRL5 = response1.url();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray6 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(0);
        int int5 = request0.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = keyVal6.value("null=Content-Encoding");
        boolean boolean12 = keyVal11.hasInputStream();
        org.jsoup.helper.HttpConnection.Request request13 = request0.data((org.jsoup.Connection.KeyVal) keyVal11);
        int int14 = request13.timeout();
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean16 = request15.ignoreContentType;
        request15.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request20 = request15.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request22 = request15.data((org.jsoup.Connection.KeyVal) keyVal21);
        request22.followRedirects = false;
        java.net.Proxy proxy25 = request22.proxy();
        org.jsoup.Connection.Request request27 = request22.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser29 = request28.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request28.headers();
        org.jsoup.helper.HttpConnection httpConnection31 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser32 = null;
        org.jsoup.Connection connection33 = httpConnection31.parser(parser32);
        org.jsoup.Connection connection35 = httpConnection31.referrer("multipart/form-data");
        org.jsoup.Connection connection38 = httpConnection31.cookie("Content-Encoding", "");
        org.jsoup.Connection connection41 = httpConnection31.header("multipart/form-data", "multipart/form-data");
        org.jsoup.Connection connection43 = httpConnection31.maxBodySize(1048576);
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser45 = request44.parser();
        org.jsoup.Connection connection46 = httpConnection31.parser(parser45);
        org.jsoup.helper.HttpConnection.Request request47 = request28.parser(parser45);
        org.jsoup.helper.HttpConnection.Request request48 = request22.parser(parser45);
        request13.parser = parser45;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1048576 + "'", int5 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Content-Encoding" + "'", str9.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.Connection connection7 = httpConnection0.cookie("Content-Encoding", "");
        org.jsoup.Connection connection9 = httpConnection0.maxBodySize(0);
        org.jsoup.helper.HttpConnection.Response response10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        response11.numRedirects = '4';
        org.jsoup.Connection.Method method14 = response11.method();
        response11.statusCode = 1;
        java.net.URL uRL17 = response11.url();
        org.jsoup.Connection.Request request18 = response11.req;
        org.jsoup.Connection.Response response20 = response11.removeCookie("multipart/form-data");
        org.jsoup.Connection connection21 = httpConnection0.response((org.jsoup.Connection.Response) response11);
        java.lang.String str22 = response11.statusMessage;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry24 = response11.scanHeaders("null=null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry24);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        org.jsoup.Connection.Response response12 = response1.header("multipart/form-data", "Content-Encoding");
        boolean boolean14 = response1.hasHeader("null=application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        java.net.Proxy proxy5 = request0.proxy();
        org.jsoup.Connection.Request request7 = request0.ignoreHttpErrors(false);
        java.lang.String str8 = org.jsoup.helper.HttpConnection.Response.setOutputContentType(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = response1.scanHeaders("null=Content-Encoding");
        java.lang.String str11 = response1.getHeaderCaseInsensitive("Content-Encoding");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = response1.headers();
        java.net.URL uRL13 = response1.url();
        response1.statusCode = 1;
        org.jsoup.helper.HttpConnection.Response response16 = new org.jsoup.helper.HttpConnection.Response(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL13);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        boolean boolean7 = request0.validateTLSCertificates();
        java.lang.String str9 = request0.cookie("null=null");
        boolean boolean12 = request0.hasHeaderWithValue("hi!=Content-Encoding=UTF-8", "null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.Connection connection29 = httpConnection22.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        response31.numRedirects = '4';
        org.jsoup.Connection.Method method34 = response31.method();
        response31.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = response31.cookies();
        org.jsoup.Connection connection38 = httpConnection22.cookies(strMap37);
        org.jsoup.Connection connection39 = httpConnection0.data(strMap37);
        org.jsoup.Connection.Response response40 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean42 = request41.ignoreContentType;
        request41.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request47 = request41.proxy("hi!", (int) (short) 0);
        boolean boolean48 = request41.validateTLSCertificates();
        java.lang.String str49 = request41.postDataCharset();
        request41.validateTLSCertificates(false);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = request41.cookies();
        org.jsoup.Connection connection53 = httpConnection0.cookies(strMap52);
        org.jsoup.Connection.Request request54 = httpConnection0.req;
        org.jsoup.Connection connection57 = httpConnection0.cookie("null=Content-Encoding", "null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "UTF-8" + "'", str49.equals("UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        java.net.Proxy proxy5 = request0.proxy();
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean7 = request6.ignoreContentType;
        java.lang.String str8 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request6);
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        org.jsoup.Connection.Response response13 = response10.cookie("null=Content-Encoding", "multipart/form-data");
        int int14 = response10.statusCode();
        boolean boolean17 = response10.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response18 = null;
        org.jsoup.helper.HttpConnection.Response response19 = new org.jsoup.helper.HttpConnection.Response(response18);
        boolean boolean20 = response19.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap21 = response19.cookies();
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str24 = keyVal23.key();
        keyVal23.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal27.value = "Content-Encoding";
        java.lang.String str30 = keyVal27.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal31.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream35 = keyVal34.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal36 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream37 = keyVal36.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray38 = new org.jsoup.Connection.KeyVal[] { keyVal23, keyVal27, keyVal31, keyVal34, keyVal36 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList39 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList39, keyValArray38);
        org.jsoup.Connection connection41 = httpConnection22.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList39);
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean43 = request42.ignoreContentType;
        request42.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request47 = request42.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request49 = request42.data((org.jsoup.Connection.KeyVal) keyVal48);
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean51 = request50.ignoreContentType;
        request50.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request56 = request50.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy57 = request56.proxy;
        org.jsoup.helper.HttpConnection.Request request58 = request42.proxy(proxy57);
        org.jsoup.Connection.Method method59 = request58.method();
        org.jsoup.Connection connection60 = httpConnection22.method(method59);
        org.jsoup.Connection.Response response61 = response19.method(method59);
        org.jsoup.Connection.Response response62 = response10.method(method59);
        org.jsoup.Connection.Request request63 = request6.method(method59);
        org.jsoup.Connection.Request request64 = request0.method(method59);
        org.jsoup.Connection.Request request66 = request0.removeCookie("multipart/form-data");
        java.lang.String str67 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        boolean boolean68 = request0.validateTLSCertificates();
        org.jsoup.helper.HttpConnection.Request request69 = new org.jsoup.helper.HttpConnection.Request();
        request69.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request73 = request69.ignoreContentType(true);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection74 = request69.data();
        request0.data = keyValCollection74;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null=Content-Encoding" + "'", str30.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "" + "'", str67.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection74);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser19 = request18.parser();
        org.jsoup.Connection connection20 = httpConnection0.parser(parser19);
        java.io.InputStream inputStream23 = null;
        org.jsoup.Connection connection24 = httpConnection0.data("hi!", "application/x-www-form-urlencoded", inputStream23);
        org.jsoup.Connection connection26 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection.Request request27 = httpConnection0.request();
        org.jsoup.Connection.Response response28 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean30 = request29.ignoreContentType;
        request29.maxBodySizeBytes = (byte) -1;
        java.lang.String str33 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request29);
        request29.parserDefined = true;
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean37 = request36.ignoreContentType;
        request36.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request42 = request36.proxy("hi!", (int) (short) 0);
        request36.validateTSLCertificates = false;
        boolean boolean45 = request36.ignoreContentType;
        org.jsoup.Connection.Request request47 = request36.followRedirects(true);
        org.jsoup.parser.Parser parser48 = request36.parser();
        int int49 = request36.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean51 = request50.ignoreContentType;
        request50.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request56 = request50.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy57 = request56.proxy;
        org.jsoup.helper.HttpConnection.Request request58 = request36.proxy(proxy57);
        org.jsoup.helper.HttpConnection.Request request59 = request29.proxy(proxy57);
        org.jsoup.Connection connection60 = httpConnection0.proxy(proxy57);
        org.jsoup.Connection connection62 = httpConnection0.ignoreHttpErrors(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.Connection connection8 = httpConnection0.validateTLSCertificates(true);
        org.jsoup.Connection connection10 = httpConnection0.maxBodySize(10);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str13 = keyVal12.key();
        keyVal12.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal16.value = "Content-Encoding";
        java.lang.String str19 = keyVal16.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal20.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream24 = keyVal23.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream26 = keyVal25.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray27 = new org.jsoup.Connection.KeyVal[] { keyVal12, keyVal16, keyVal20, keyVal23, keyVal25 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList28 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList28, keyValArray27);
        org.jsoup.Connection connection30 = httpConnection11.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList28);
        org.jsoup.Connection connection32 = httpConnection11.ignoreContentType(true);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection35 = httpConnection33.userAgent("");
        org.jsoup.helper.HttpConnection httpConnection36 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser37 = null;
        org.jsoup.Connection connection38 = httpConnection36.parser(parser37);
        org.jsoup.Connection connection40 = httpConnection36.referrer("multipart/form-data");
        org.jsoup.Connection connection43 = httpConnection36.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection httpConnection44 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser45 = null;
        org.jsoup.Connection connection46 = httpConnection44.parser(parser45);
        org.jsoup.helper.HttpConnection.Response response47 = null;
        org.jsoup.helper.HttpConnection.Response response48 = new org.jsoup.helper.HttpConnection.Response(response47);
        boolean boolean49 = response48.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = response48.headers();
        org.jsoup.Connection connection51 = httpConnection44.data(strMap50);
        org.jsoup.Connection connection52 = httpConnection36.cookies(strMap50);
        org.jsoup.Connection connection53 = httpConnection33.cookies(strMap50);
        org.jsoup.Connection connection54 = httpConnection11.data(strMap50);
        org.jsoup.Connection.Response response55 = httpConnection11.res;
        org.jsoup.Connection connection56 = httpConnection0.response(response55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null=Content-Encoding" + "'", str19.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser19 = request18.parser();
        org.jsoup.Connection connection20 = httpConnection0.parser(parser19);
        java.io.InputStream inputStream23 = null;
        org.jsoup.Connection connection24 = httpConnection0.data("hi!", "application/x-www-form-urlencoded", inputStream23);
        org.jsoup.Connection connection26 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection29 = httpConnection0.cookie("application/x-www-form-urlencoded=application/x-www-form-urlencoded", "hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) (byte) 10);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str11 = keyVal10.key();
        keyVal10.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal14.value = "Content-Encoding";
        java.lang.String str17 = keyVal14.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal18.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream22 = keyVal21.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream24 = keyVal23.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray25 = new org.jsoup.Connection.KeyVal[] { keyVal10, keyVal14, keyVal18, keyVal21, keyVal23 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList26 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList26, keyValArray25);
        org.jsoup.Connection connection28 = httpConnection9.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList26);
        request8.data = keyValList26;
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request35 = request30.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal36 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request37 = request30.data((org.jsoup.Connection.KeyVal) keyVal36);
        org.jsoup.helper.HttpConnection.Request request38 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean39 = request38.ignoreContentType;
        request38.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request44 = request38.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy45 = request44.proxy;
        org.jsoup.helper.HttpConnection.Request request46 = request30.proxy(proxy45);
        org.jsoup.helper.HttpConnection.Request request47 = request8.proxy(proxy45);
        org.jsoup.helper.HttpConnection.Request request48 = request0.proxy(proxy45);
        java.lang.String str50 = request0.getHeaderCaseInsensitive("Content-Encoding");
        org.jsoup.helper.HttpConnection.KeyVal keyVal53 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal55 = keyVal53.key("null=Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request56 = request0.data((org.jsoup.Connection.KeyVal) keyVal55);
        java.lang.String str57 = keyVal55.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null=Content-Encoding" + "'", str17.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "hi!" + "'", str57.equals("hi!"));
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.Connection connection29 = httpConnection22.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        response31.numRedirects = '4';
        org.jsoup.Connection.Method method34 = response31.method();
        response31.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = response31.cookies();
        org.jsoup.Connection connection38 = httpConnection22.cookies(strMap37);
        org.jsoup.Connection connection39 = httpConnection0.data(strMap37);
        org.jsoup.Connection.Response response40 = httpConnection0.response();
        org.jsoup.Connection connection42 = httpConnection0.referrer("Content-Encoding");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection45 = httpConnection0.proxy("", (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = response1.cookies();
        org.jsoup.Connection.Response response6 = response1.removeHeader("hi!=Content-Encoding");
        java.lang.String str8 = response1.header("hi!=Content-Encoding");
        boolean boolean10 = response1.hasCookie("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        org.jsoup.Connection.Method method4 = response1.method();
        java.lang.String str5 = response1.statusMessage();
        boolean boolean8 = response1.hasHeaderWithValue("UTF-8", "");
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        org.jsoup.Connection.Method method13 = response8.method();
        response8.statusCode = '4';
        boolean boolean18 = response8.hasHeaderWithValue("Content-Encoding=hi!", "Content-Encoding");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = response8.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap3 = response1.headers();
        int int4 = response1.statusCode();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response7 = response1.header("", "UTF-8=multipart/form-data");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        org.jsoup.Connection.Response response12 = response1.header("hi!", "");
        java.lang.String str13 = response1.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str3 = response1.getHeaderCaseInsensitive("Content-Encoding");
        java.lang.String str5 = response1.header("");
        response1.charset = "";
        java.net.URL uRL8 = response1.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        boolean boolean7 = request0.validateTSLCertificates;
        java.lang.String str9 = request0.header("UTF-8");
        org.jsoup.Connection.Request request11 = request0.maxBodySize((int) (byte) 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser19 = request18.parser();
        org.jsoup.Connection connection20 = httpConnection0.parser(parser19);
        java.io.InputStream inputStream23 = null;
        org.jsoup.Connection connection24 = httpConnection0.data("hi!", "application/x-www-form-urlencoded", inputStream23);
        org.jsoup.Connection connection26 = httpConnection0.userAgent("hi!");
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        int int28 = request27.timeout();
        request27.parserDefined = true;
        request27.maxBodySizeBytes = (-1);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean34 = request33.ignoreContentType;
        request33.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request38 = request33.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request40 = request33.data((org.jsoup.Connection.KeyVal) keyVal39);
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean42 = request41.ignoreContentType;
        request41.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request47 = request41.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy48 = request47.proxy;
        org.jsoup.helper.HttpConnection.Request request49 = request33.proxy(proxy48);
        request27.proxy = proxy48;
        org.jsoup.Connection connection51 = httpConnection0.proxy(proxy48);
        java.io.InputStream inputStream54 = null;
        org.jsoup.Connection connection55 = httpConnection0.data("null=null", "null=Content-Encoding", inputStream54);
        org.jsoup.Connection connection58 = httpConnection0.proxy("null=Content-Encoding", (int) ' ');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3000 + "'", int28 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection58);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        response1.contentType = "";
        java.util.Map<java.lang.String, java.lang.String> strMap11 = response1.headers();
        org.jsoup.Connection.Response response13 = response1.removeHeader("multipart/form-data");
        boolean boolean15 = response1.hasHeader("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = response1.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = response1.cookies();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry19 = response1.scanHeaders("multipart/form-data");
        org.jsoup.Connection.Response response22 = response1.cookie("null=multipart/form-data", "hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.Connection connection8 = httpConnection0.validateTLSCertificates(true);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection10 = httpConnection0.postDataCharset("null=multipart/form-data");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: null=multipart/form-data");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.value("null=Content-Encoding");
        boolean boolean6 = keyVal5.hasInputStream();
        java.lang.String str7 = keyVal5.value;
        java.io.InputStream inputStream8 = keyVal5.inputStream();
        java.io.InputStream inputStream9 = null;
        keyVal5.stream = inputStream9;
        java.lang.String str11 = keyVal5.value();
        java.lang.String str12 = keyVal5.value();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Content-Encoding" + "'", str3.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=Content-Encoding" + "'", str7.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null=Content-Encoding" + "'", str11.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null=Content-Encoding" + "'", str12.equals("null=Content-Encoding"));
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        keyVal0.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.value("");
        java.io.InputStream inputStream6 = null;
        keyVal0.stream = inputStream6;
        java.lang.String str8 = keyVal0.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        org.jsoup.Connection connection15 = httpConnection0.proxy("", 0);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean17 = request16.ignoreContentType;
        org.jsoup.Connection.Request request20 = request16.cookie("null=Content-Encoding", "hi!");
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser22 = null;
        org.jsoup.Connection connection23 = httpConnection21.parser(parser22);
        org.jsoup.Connection connection25 = httpConnection21.userAgent("hi!");
        org.jsoup.Connection connection27 = httpConnection21.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str29 = keyVal28.key();
        keyVal28.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal32 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal32.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray35 = new org.jsoup.Connection.KeyVal[] { keyVal28, keyVal32 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList36 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList36, keyValArray35);
        org.jsoup.Connection connection38 = httpConnection21.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList36);
        request16.data = keyValList36;
        boolean boolean40 = request16.ignoreContentType();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection41 = request16.data();
        request16.timeoutMilliseconds = '#';
        org.jsoup.Connection.Request request45 = request16.ignoreHttpErrors(true);
        org.jsoup.Connection connection46 = httpConnection0.request((org.jsoup.Connection.Request) request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(0);
        java.net.Proxy proxy5 = request0.proxy;
        boolean boolean7 = request0.hasHeader("null=Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        java.lang.String str10 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request8);
        org.jsoup.parser.Parser parser11 = request8.parser();
        org.jsoup.helper.HttpConnection.Request request12 = request0.parser(parser11);
        request0.timeoutMilliseconds = (short) 0;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        java.net.Proxy proxy5 = request0.proxy();
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean7 = request6.ignoreContentType;
        java.lang.String str8 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request6);
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        org.jsoup.Connection.Response response13 = response10.cookie("null=Content-Encoding", "multipart/form-data");
        int int14 = response10.statusCode();
        boolean boolean17 = response10.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response18 = null;
        org.jsoup.helper.HttpConnection.Response response19 = new org.jsoup.helper.HttpConnection.Response(response18);
        boolean boolean20 = response19.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap21 = response19.cookies();
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str24 = keyVal23.key();
        keyVal23.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal27.value = "Content-Encoding";
        java.lang.String str30 = keyVal27.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal31.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream35 = keyVal34.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal36 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream37 = keyVal36.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray38 = new org.jsoup.Connection.KeyVal[] { keyVal23, keyVal27, keyVal31, keyVal34, keyVal36 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList39 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList39, keyValArray38);
        org.jsoup.Connection connection41 = httpConnection22.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList39);
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean43 = request42.ignoreContentType;
        request42.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request47 = request42.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request49 = request42.data((org.jsoup.Connection.KeyVal) keyVal48);
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean51 = request50.ignoreContentType;
        request50.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request56 = request50.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy57 = request56.proxy;
        org.jsoup.helper.HttpConnection.Request request58 = request42.proxy(proxy57);
        org.jsoup.Connection.Method method59 = request58.method();
        org.jsoup.Connection connection60 = httpConnection22.method(method59);
        org.jsoup.Connection.Response response61 = response19.method(method59);
        org.jsoup.Connection.Response response62 = response10.method(method59);
        org.jsoup.Connection.Request request63 = request6.method(method59);
        org.jsoup.Connection.Request request64 = request0.method(method59);
        org.jsoup.Connection.Request request66 = request0.removeCookie("multipart/form-data");
        java.lang.String str67 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        java.lang.String str69 = request0.getHeaderCaseInsensitive("Content-Encoding=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null=Content-Encoding" + "'", str30.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "" + "'", str67.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection1 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str3 = keyVal2.key();
        keyVal2.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal10.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream14 = keyVal13.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream16 = keyVal15.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray17 = new org.jsoup.Connection.KeyVal[] { keyVal2, keyVal6, keyVal10, keyVal13, keyVal15 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList18 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18, keyValArray17);
        org.jsoup.Connection connection20 = httpConnection1.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18);
        request0.data = keyValList18;
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean23 = request22.ignoreContentType;
        request22.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request27 = request22.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request29 = request22.data((org.jsoup.Connection.KeyVal) keyVal28);
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request36 = request30.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy37 = request36.proxy;
        org.jsoup.helper.HttpConnection.Request request38 = request22.proxy(proxy37);
        org.jsoup.helper.HttpConnection.Request request39 = request0.proxy(proxy37);
        int int40 = request39.timeout();
        request39.parserDefined = false;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection43 = request39.data();
        request39.ignoreContentType = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=Content-Encoding" + "'", str9.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection43);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean6 = response1.executed;
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.Connection connection9 = httpConnection7.parser(parser8);
        org.jsoup.Connection connection11 = httpConnection7.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response12 = null;
        org.jsoup.helper.HttpConnection.Response response13 = new org.jsoup.helper.HttpConnection.Response(response12);
        boolean boolean14 = response13.executed;
        java.net.URL uRL15 = response13.url();
        boolean boolean16 = response13.executed;
        response13.executed = false;
        httpConnection7.res = response13;
        org.jsoup.helper.HttpConnection.Response response20 = null;
        org.jsoup.helper.HttpConnection.Response response21 = new org.jsoup.helper.HttpConnection.Response(response20);
        org.jsoup.Connection.Response response24 = response21.cookie("null=Content-Encoding", "multipart/form-data");
        int int25 = response21.statusCode();
        boolean boolean28 = response21.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response29 = null;
        org.jsoup.helper.HttpConnection.Response response30 = new org.jsoup.helper.HttpConnection.Response(response29);
        boolean boolean31 = response30.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = response30.cookies();
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str35 = keyVal34.key();
        keyVal34.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal38 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal38.value = "Content-Encoding";
        java.lang.String str41 = keyVal38.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal42 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal42.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream46 = keyVal45.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal47 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream48 = keyVal47.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray49 = new org.jsoup.Connection.KeyVal[] { keyVal34, keyVal38, keyVal42, keyVal45, keyVal47 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList50 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList50, keyValArray49);
        org.jsoup.Connection connection52 = httpConnection33.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList50);
        org.jsoup.helper.HttpConnection.Request request53 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean54 = request53.ignoreContentType;
        request53.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request58 = request53.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal59 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request60 = request53.data((org.jsoup.Connection.KeyVal) keyVal59);
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean62 = request61.ignoreContentType;
        request61.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request67 = request61.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy68 = request67.proxy;
        org.jsoup.helper.HttpConnection.Request request69 = request53.proxy(proxy68);
        org.jsoup.Connection.Method method70 = request69.method();
        org.jsoup.Connection connection71 = httpConnection33.method(method70);
        org.jsoup.Connection.Response response72 = response30.method(method70);
        org.jsoup.Connection.Response response73 = response21.method(method70);
        org.jsoup.Connection connection74 = httpConnection7.method(method70);
        org.jsoup.Connection.Response response75 = response1.method(method70);
        java.lang.String str76 = response1.contentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null=Content-Encoding" + "'", str41.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertTrue("'" + method70 + "' != '" + org.jsoup.Connection.Method.GET + "'", method70.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response5 = null;
        org.jsoup.helper.HttpConnection.Response response6 = new org.jsoup.helper.HttpConnection.Response(response5);
        boolean boolean7 = response6.executed;
        java.net.URL uRL8 = response6.url();
        boolean boolean9 = response6.executed;
        response6.executed = false;
        httpConnection0.res = response6;
        java.net.Proxy proxy13 = null;
        org.jsoup.Connection connection14 = httpConnection0.proxy(proxy13);
        org.jsoup.helper.HttpConnection.Response response15 = null;
        org.jsoup.helper.HttpConnection.Response response16 = new org.jsoup.helper.HttpConnection.Response(response15);
        response16.numRedirects = '4';
        org.jsoup.Connection.Method method19 = response16.method();
        boolean boolean21 = response16.hasHeader("hi!");
        org.jsoup.Connection.Response response23 = response16.removeHeader("null=Content-Encoding");
        org.jsoup.Connection connection24 = httpConnection0.response(response23);
        org.jsoup.Connection connection26 = httpConnection0.timeout((int) 'a');
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection28 = httpConnection0.data(strMap27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data map must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(0);
        int int5 = request0.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = keyVal6.value("null=Content-Encoding");
        boolean boolean12 = keyVal11.hasInputStream();
        org.jsoup.helper.HttpConnection.Request request13 = request0.data((org.jsoup.Connection.KeyVal) keyVal11);
        java.net.Proxy proxy14 = request13.proxy;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1048576 + "'", int5 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Content-Encoding" + "'", str9.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy14);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        response1.contentType = "";
        java.util.Map<java.lang.String, java.lang.String> strMap11 = response1.headers();
        org.jsoup.Connection.Response response14 = response1.cookie("multipart/form-data", "null=null");
        org.jsoup.Connection.Method method15 = response1.method();
        response1.charset = "Content-Encoding";
        java.lang.String str19 = response1.cookie("multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null=null" + "'", str19.equals("null=null"));
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        response1.numRedirects = 0;
        response1.contentType = "null=Content-Encoding";
        int int10 = response1.numRedirects;
        response1.statusMessage = "null=null=Content-Encoding";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) (byte) 10);
        boolean boolean8 = request7.parserDefined;
        org.jsoup.Connection.Request request10 = request7.removeCookie("Content-Encoding=hi!");
        boolean boolean11 = request7.ignoreContentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        response1.contentType = "";
        java.util.Map<java.lang.String, java.lang.String> strMap11 = response1.headers();
        org.jsoup.helper.HttpConnection.Response response12 = null;
        org.jsoup.helper.HttpConnection.Response response13 = new org.jsoup.helper.HttpConnection.Response(response12);
        boolean boolean14 = response13.executed;
        java.net.URL uRL15 = response13.url();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = response13.cookies();
        org.jsoup.helper.HttpConnection httpConnection17 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection17.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection17.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response22 = null;
        org.jsoup.helper.HttpConnection.Response response23 = new org.jsoup.helper.HttpConnection.Response(response22);
        boolean boolean24 = response23.executed;
        java.net.URL uRL25 = response23.url();
        boolean boolean26 = response23.executed;
        response23.executed = false;
        httpConnection17.res = response23;
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        org.jsoup.Connection.Response response34 = response31.cookie("null=Content-Encoding", "multipart/form-data");
        int int35 = response31.statusCode();
        boolean boolean38 = response31.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response39 = null;
        org.jsoup.helper.HttpConnection.Response response40 = new org.jsoup.helper.HttpConnection.Response(response39);
        boolean boolean41 = response40.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = response40.cookies();
        org.jsoup.helper.HttpConnection httpConnection43 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str45 = keyVal44.key();
        keyVal44.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal48.value = "Content-Encoding";
        java.lang.String str51 = keyVal48.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal52 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal52.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal55 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream56 = keyVal55.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal57 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream58 = keyVal57.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray59 = new org.jsoup.Connection.KeyVal[] { keyVal44, keyVal48, keyVal52, keyVal55, keyVal57 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList60 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList60, keyValArray59);
        org.jsoup.Connection connection62 = httpConnection43.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList60);
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean64 = request63.ignoreContentType;
        request63.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request68 = request63.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal69 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request70 = request63.data((org.jsoup.Connection.KeyVal) keyVal69);
        org.jsoup.helper.HttpConnection.Request request71 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean72 = request71.ignoreContentType;
        request71.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request77 = request71.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy78 = request77.proxy;
        org.jsoup.helper.HttpConnection.Request request79 = request63.proxy(proxy78);
        org.jsoup.Connection.Method method80 = request79.method();
        org.jsoup.Connection connection81 = httpConnection43.method(method80);
        org.jsoup.Connection.Response response82 = response40.method(method80);
        org.jsoup.Connection.Response response83 = response31.method(method80);
        org.jsoup.Connection connection84 = httpConnection17.method(method80);
        org.jsoup.Connection.Response response85 = response13.method(method80);
        org.jsoup.Connection.Response response86 = response1.method(method80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null=Content-Encoding" + "'", str51.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request79);
        org.junit.Assert.assertTrue("'" + method80 + "' != '" + org.jsoup.Connection.Method.GET + "'", method80.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response86);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        org.jsoup.Connection.Response response12 = response1.header("multipart/form-data", "Content-Encoding");
        org.jsoup.Connection.Response response15 = response1.cookie("null=Content-Encoding", "UTF-8");
        response1.statusCode = (byte) 10;
        response1.numRedirects = (byte) 0;
        org.jsoup.Connection.Response response22 = response1.header("UTF-8", "application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean6 = response1.executed;
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.Connection connection9 = httpConnection7.parser(parser8);
        org.jsoup.Connection connection11 = httpConnection7.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response12 = null;
        org.jsoup.helper.HttpConnection.Response response13 = new org.jsoup.helper.HttpConnection.Response(response12);
        boolean boolean14 = response13.executed;
        java.net.URL uRL15 = response13.url();
        boolean boolean16 = response13.executed;
        response13.executed = false;
        httpConnection7.res = response13;
        org.jsoup.helper.HttpConnection.Response response20 = null;
        org.jsoup.helper.HttpConnection.Response response21 = new org.jsoup.helper.HttpConnection.Response(response20);
        org.jsoup.Connection.Response response24 = response21.cookie("null=Content-Encoding", "multipart/form-data");
        int int25 = response21.statusCode();
        boolean boolean28 = response21.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response29 = null;
        org.jsoup.helper.HttpConnection.Response response30 = new org.jsoup.helper.HttpConnection.Response(response29);
        boolean boolean31 = response30.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = response30.cookies();
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str35 = keyVal34.key();
        keyVal34.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal38 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal38.value = "Content-Encoding";
        java.lang.String str41 = keyVal38.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal42 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal42.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream46 = keyVal45.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal47 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream48 = keyVal47.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray49 = new org.jsoup.Connection.KeyVal[] { keyVal34, keyVal38, keyVal42, keyVal45, keyVal47 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList50 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList50, keyValArray49);
        org.jsoup.Connection connection52 = httpConnection33.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList50);
        org.jsoup.helper.HttpConnection.Request request53 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean54 = request53.ignoreContentType;
        request53.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request58 = request53.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal59 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request60 = request53.data((org.jsoup.Connection.KeyVal) keyVal59);
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean62 = request61.ignoreContentType;
        request61.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request67 = request61.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy68 = request67.proxy;
        org.jsoup.helper.HttpConnection.Request request69 = request53.proxy(proxy68);
        org.jsoup.Connection.Method method70 = request69.method();
        org.jsoup.Connection connection71 = httpConnection33.method(method70);
        org.jsoup.Connection.Response response72 = response30.method(method70);
        org.jsoup.Connection.Response response73 = response21.method(method70);
        org.jsoup.Connection connection74 = httpConnection7.method(method70);
        org.jsoup.Connection.Response response75 = response1.method(method70);
        response1.charset = "null=null";
        org.jsoup.Connection.Request request78 = response1.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null=Content-Encoding" + "'", str41.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertTrue("'" + method70 + "' != '" + org.jsoup.Connection.Method.GET + "'", method70.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request78);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        boolean boolean5 = request0.validateTLSCertificates();
        java.net.Proxy proxy6 = request0.proxy();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request0.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request0.validateTSLCertificates = false;
        boolean boolean9 = request0.ignoreContentType;
        int int10 = request0.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean12 = request11.ignoreContentType;
        request11.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request17 = request11.proxy("hi!", (int) (short) 0);
        request11.validateTSLCertificates = false;
        boolean boolean20 = request11.ignoreContentType;
        org.jsoup.Connection.Request request22 = request11.followRedirects(true);
        org.jsoup.parser.Parser parser23 = request11.parser();
        int int24 = request11.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean26 = request25.ignoreContentType;
        request25.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request31 = request25.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy32 = request31.proxy;
        org.jsoup.helper.HttpConnection.Request request33 = request11.proxy(proxy32);
        request0.proxy = proxy32;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection35 = request0.data();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request37 = request0.postDataCharset("Content-Encoding=hi!");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: Content-Encoding=hi!");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection35);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean8 = response1.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response10 = response1.removeCookie("Content-Encoding");
        org.jsoup.Connection.Response response13 = response1.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        java.lang.String str15 = response1.cookie("application/x-www-form-urlencoded");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = response1.cookies();
        boolean boolean18 = response1.hasCookie("Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "multipart/form-data" + "'", str15.equals("multipart/form-data"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        org.jsoup.helper.HttpConnection.Request request4 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean5 = request4.ignoreContentType;
        request4.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request9 = request4.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request11 = request4.timeout((int) (byte) 10);
        response1.req = request11;
        boolean boolean15 = response1.hasHeaderWithValue("application/x-www-form-urlencoded=application/x-www-form-urlencoded", "UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.userAgent("hi!");
        org.jsoup.Connection connection28 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str30 = keyVal29.key();
        keyVal29.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal33.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray36 = new org.jsoup.Connection.KeyVal[] { keyVal29, keyVal33 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList37 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList37, keyValArray36);
        org.jsoup.Connection connection39 = httpConnection22.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser41 = request40.parser();
        org.jsoup.Connection connection42 = httpConnection22.parser(parser41);
        org.jsoup.Connection connection43 = httpConnection0.parser(parser41);
        org.jsoup.Connection.Request request44 = null;
        httpConnection0.req = request44;
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean47 = request46.ignoreContentType;
        request46.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request51 = request46.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal52 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request53 = request46.data((org.jsoup.Connection.KeyVal) keyVal52);
        request53.followRedirects = false;
        java.net.Proxy proxy56 = request53.proxy();
        org.jsoup.Connection.Request request58 = request53.ignoreContentType(true);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection59 = request53.data();
        org.jsoup.Connection.Request request62 = request53.cookie("Content-Encoding", "application/x-www-form-urlencoded=null=Content-Encoding");
        org.jsoup.Connection.Method method63 = request53.method();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection64 = httpConnection0.method(method63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertTrue("'" + method63 + "' != '" + org.jsoup.Connection.Method.GET + "'", method63.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request14 = request8.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy15 = request14.proxy;
        org.jsoup.helper.HttpConnection.Request request16 = request0.proxy(proxy15);
        boolean boolean19 = request0.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.Connection.Request request21 = request0.ignoreContentType(true);
        java.lang.String str22 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        java.lang.String str6 = response1.header("null=Content-Encoding");
        org.jsoup.Connection.Response response9 = response1.header("UTF-8=multipart/form-data", "UTF-8=multipart/form-data");
        java.net.URL uRL10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response11 = response1.url(uRL10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection.Response response24 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        int int26 = request25.timeout();
        boolean boolean27 = request25.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request29 = request25.timeout(0);
        boolean boolean31 = request29.hasCookie("application/x-www-form-urlencoded");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection32 = request29.data();
        org.jsoup.Connection connection33 = httpConnection0.data(keyValCollection32);
        org.jsoup.Connection.Request request34 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3000 + "'", int26 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        java.lang.String str7 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request6);
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request11 = request6.timeout((int) (byte) 0);
        org.jsoup.Connection.Method method12 = request6.method();
        org.jsoup.helper.HttpConnection httpConnection13 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser14 = null;
        org.jsoup.Connection connection15 = httpConnection13.parser(parser14);
        org.jsoup.Connection connection17 = httpConnection13.userAgent("hi!");
        org.jsoup.Connection connection19 = httpConnection13.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str21 = keyVal20.key();
        keyVal20.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal24 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal24.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray27 = new org.jsoup.Connection.KeyVal[] { keyVal20, keyVal24 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList28 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList28, keyValArray27);
        org.jsoup.Connection connection30 = httpConnection13.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList28);
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser32 = request31.parser();
        org.jsoup.Connection connection33 = httpConnection13.parser(parser32);
        java.io.InputStream inputStream36 = null;
        org.jsoup.Connection connection37 = httpConnection13.data("hi!", "application/x-www-form-urlencoded", inputStream36);
        org.jsoup.Connection connection39 = httpConnection13.ignoreHttpErrors(false);
        org.jsoup.Connection.Request request40 = httpConnection13.request();
        org.jsoup.Connection.Response response41 = httpConnection13.res;
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean43 = request42.ignoreContentType;
        request42.maxBodySizeBytes = (byte) -1;
        java.lang.String str46 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request42);
        request42.parserDefined = true;
        org.jsoup.helper.HttpConnection.Request request49 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean50 = request49.ignoreContentType;
        request49.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request55 = request49.proxy("hi!", (int) (short) 0);
        request49.validateTSLCertificates = false;
        boolean boolean58 = request49.ignoreContentType;
        org.jsoup.Connection.Request request60 = request49.followRedirects(true);
        org.jsoup.parser.Parser parser61 = request49.parser();
        int int62 = request49.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean64 = request63.ignoreContentType;
        request63.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request69 = request63.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy70 = request69.proxy;
        org.jsoup.helper.HttpConnection.Request request71 = request49.proxy(proxy70);
        org.jsoup.helper.HttpConnection.Request request72 = request42.proxy(proxy70);
        org.jsoup.Connection connection73 = httpConnection13.proxy(proxy70);
        request6.proxy = proxy70;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "" + "'", str46.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection73);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap3 = response1.headers();
        boolean boolean6 = response1.hasHeaderWithValue("hi!", "Content-Encoding");
        java.nio.ByteBuffer byteBuffer7 = null;
        response1.byteData = byteBuffer7;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray9 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request11 = request7.data((org.jsoup.Connection.KeyVal) keyVal10);
        boolean boolean12 = request7.validateTLSCertificates();
        org.jsoup.helper.HttpConnection.Request request14 = request7.timeout((int) 'a');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry16 = request14.scanHeaders("hi!");
        boolean boolean17 = request14.ignoreContentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        org.jsoup.Connection.Method method13 = response8.method();
        java.net.URL uRL14 = response8.url();
        response8.numRedirects = 97;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL14);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        java.lang.String str2 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request0);
        org.jsoup.helper.HttpConnection.Response response3 = null;
        org.jsoup.helper.HttpConnection.Response response4 = new org.jsoup.helper.HttpConnection.Response(response3);
        org.jsoup.Connection.Response response7 = response4.cookie("null=Content-Encoding", "multipart/form-data");
        int int8 = response4.statusCode();
        boolean boolean11 = response4.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response12 = null;
        org.jsoup.helper.HttpConnection.Response response13 = new org.jsoup.helper.HttpConnection.Response(response12);
        boolean boolean14 = response13.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap15 = response13.cookies();
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str18 = keyVal17.key();
        keyVal17.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal21.value = "Content-Encoding";
        java.lang.String str24 = keyVal21.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal25.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream29 = keyVal28.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal30 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream31 = keyVal30.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray32 = new org.jsoup.Connection.KeyVal[] { keyVal17, keyVal21, keyVal25, keyVal28, keyVal30 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList33 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList33, keyValArray32);
        org.jsoup.Connection connection35 = httpConnection16.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList33);
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean37 = request36.ignoreContentType;
        request36.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request41 = request36.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal42 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request43 = request36.data((org.jsoup.Connection.KeyVal) keyVal42);
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean45 = request44.ignoreContentType;
        request44.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request50 = request44.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy51 = request50.proxy;
        org.jsoup.helper.HttpConnection.Request request52 = request36.proxy(proxy51);
        org.jsoup.Connection.Method method53 = request52.method();
        org.jsoup.Connection connection54 = httpConnection16.method(method53);
        org.jsoup.Connection.Response response55 = response13.method(method53);
        org.jsoup.Connection.Response response56 = response4.method(method53);
        org.jsoup.Connection.Request request57 = request0.method(method53);
        java.lang.String str58 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = request0.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null=Content-Encoding" + "'", str24.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(0);
        java.net.Proxy proxy5 = request0.proxy;
        java.lang.String str7 = request0.header("hi!");
        boolean boolean8 = request0.parserDefined;
        org.jsoup.parser.Parser parser9 = request0.parser();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request0.data;
        boolean boolean11 = request0.ignoreContentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser19 = request18.parser();
        org.jsoup.Connection connection20 = httpConnection0.parser(parser19);
        java.io.InputStream inputStream23 = null;
        org.jsoup.Connection connection24 = httpConnection0.data("hi!", "application/x-www-form-urlencoded", inputStream23);
        org.jsoup.Connection connection26 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection.Response response27 = httpConnection0.res;
        org.jsoup.Connection.Request request28 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Response response29 = null;
        org.jsoup.helper.HttpConnection.Response response30 = new org.jsoup.helper.HttpConnection.Response(response29);
        response30.numRedirects = '4';
        org.jsoup.Connection.Method method33 = response30.method();
        boolean boolean35 = response30.hasHeader("hi!");
        org.jsoup.Connection.Method method36 = response30.method();
        java.nio.ByteBuffer byteBuffer37 = response30.byteData;
        org.jsoup.Connection.Method method38 = response30.method();
        boolean boolean40 = response30.hasHeader("multipart/form-data");
        httpConnection0.res = response30;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        java.lang.String str13 = response8.charset();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = response8.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = response8.headers();
        org.jsoup.Connection.Response response18 = response8.cookie("Content-Encoding", "");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document19 = response8.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response18);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        java.io.InputStream inputStream2 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = org.jsoup.helper.HttpConnection.KeyVal.create("UTF-8", "Content-Encoding", inputStream2);
        keyVal3.value = "null=multipart/form-data";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request11 = request7.data((org.jsoup.Connection.KeyVal) keyVal10);
        boolean boolean12 = request7.validateTLSCertificates();
        org.jsoup.helper.HttpConnection.Request request14 = request7.timeout((int) 'a');
        int int15 = request7.timeout();
        request7.validateTSLCertificates = true;
        org.jsoup.Connection.Request request19 = request7.followRedirects(false);
        org.jsoup.Connection.Request request21 = request7.maxBodySize(100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 97 + "'", int15 == 97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        boolean boolean6 = request0.followRedirects();
        java.lang.String str8 = request0.header("UTF-8");
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.headers();
        org.jsoup.Connection.Request request12 = request0.cookie("application/x-www-form-urlencoded", "hi!=Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean14 = request13.ignoreContentType;
        request13.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request18 = request13.ignoreHttpErrors(true);
        org.jsoup.parser.Parser parser19 = request13.parser();
        org.jsoup.helper.HttpConnection.Request request20 = request0.parser(parser19);
        org.jsoup.helper.HttpConnection.Request request22 = request0.timeout((int) (short) 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request0.validateTSLCertificates = false;
        boolean boolean9 = request0.ignoreContentType;
        int int10 = request0.maxBodySize();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection11 = request0.data;
        org.jsoup.parser.Parser parser12 = request0.parser;
        boolean boolean13 = request0.validateTSLCertificates;
        java.lang.String str15 = request0.cookie("hi!=Content-Encoding=UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        org.jsoup.Connection.Response response6 = response1.header("null=Content-Encoding", "multipart/form-data");
        java.lang.String str7 = response1.statusMessage;
        org.jsoup.Connection.Response response9 = response1.removeHeader("UTF-8");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray11 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        org.jsoup.Connection.Request request4 = request0.ignoreHttpErrors(false);
        java.lang.String str5 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request0);
        org.jsoup.Connection.Request request8 = request0.cookie("UTF-8", "multipart/form-data");
        org.jsoup.parser.Parser parser9 = request0.parser();
        boolean boolean10 = request0.ignoreContentType;
        org.jsoup.Connection.Request request12 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean14 = request13.ignoreContentType;
        request13.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request18 = request13.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request20 = request13.data((org.jsoup.Connection.KeyVal) keyVal19);
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean22 = request21.ignoreContentType;
        request21.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request27 = request21.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy28 = request27.proxy;
        org.jsoup.helper.HttpConnection.Request request29 = request13.proxy(proxy28);
        request0.proxy = proxy28;
        java.lang.String str31 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        org.jsoup.parser.Parser parser32 = request0.parser();
        org.jsoup.Connection.Request request35 = request0.header("null=multipart/form-data", "UTF-8");
        java.io.OutputStream outputStream36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(request35, outputStream36, "hi!=Content-Encoding");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "UTF-8=multipart/form-data" + "'", str31.equals("UTF-8=multipart/form-data"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(0);
        java.net.Proxy proxy5 = request0.proxy;
        java.lang.String str6 = request0.postDataCharset;
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.Connection connection9 = httpConnection7.parser(parser8);
        org.jsoup.Connection connection11 = httpConnection7.userAgent("hi!");
        org.jsoup.Connection connection13 = httpConnection7.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response14 = null;
        org.jsoup.helper.HttpConnection.Response response15 = new org.jsoup.helper.HttpConnection.Response(response14);
        boolean boolean16 = response15.executed;
        java.net.URL uRL17 = response15.url();
        boolean boolean18 = response15.executed;
        httpConnection7.res = response15;
        java.lang.String str20 = response15.charset();
        java.lang.String str22 = response15.cookie("multipart/form-data");
        java.lang.String str23 = response15.charset;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response24 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "UTF-8" + "'", str6.equals("UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        org.jsoup.Connection.Response response6 = response1.header("null=Content-Encoding", "multipart/form-data");
        java.lang.String str7 = response1.contentType();
        java.lang.String str8 = response1.statusMessage;
        response1.charset = "UTF-8";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser19 = request18.parser();
        org.jsoup.Connection connection20 = httpConnection0.parser(parser19);
        java.io.InputStream inputStream23 = null;
        org.jsoup.Connection connection24 = httpConnection0.data("hi!", "application/x-www-form-urlencoded", inputStream23);
        org.jsoup.Connection connection26 = httpConnection0.userAgent("hi!");
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        int int28 = request27.timeout();
        request27.parserDefined = true;
        request27.maxBodySizeBytes = (-1);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean34 = request33.ignoreContentType;
        request33.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request38 = request33.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request40 = request33.data((org.jsoup.Connection.KeyVal) keyVal39);
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean42 = request41.ignoreContentType;
        request41.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request47 = request41.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy48 = request47.proxy;
        org.jsoup.helper.HttpConnection.Request request49 = request33.proxy(proxy48);
        request27.proxy = proxy48;
        org.jsoup.Connection connection51 = httpConnection0.proxy(proxy48);
        org.jsoup.helper.HttpConnection.Request request52 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean53 = request52.ignoreContentType;
        request52.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request57 = request52.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal58 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request59 = request52.data((org.jsoup.Connection.KeyVal) keyVal58);
        org.jsoup.helper.HttpConnection.Request request60 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean61 = request60.ignoreContentType;
        request60.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request66 = request60.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy67 = request66.proxy;
        org.jsoup.helper.HttpConnection.Request request68 = request52.proxy(proxy67);
        org.jsoup.Connection connection69 = httpConnection0.proxy(proxy67);
        org.jsoup.Connection.Response response70 = httpConnection0.response();
        org.jsoup.Connection connection73 = httpConnection0.proxy("Content-Encoding", (int) (byte) 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3000 + "'", int28 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection73);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser4 = null;
        org.jsoup.Connection connection5 = httpConnection3.parser(parser4);
        org.jsoup.Connection connection7 = httpConnection3.userAgent("hi!");
        org.jsoup.Connection connection9 = httpConnection3.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str11 = keyVal10.key();
        keyVal10.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal14.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray17 = new org.jsoup.Connection.KeyVal[] { keyVal10, keyVal14 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList18 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18, keyValArray17);
        org.jsoup.Connection connection20 = httpConnection3.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18);
        org.jsoup.parser.Parser parser21 = null;
        org.jsoup.Connection connection22 = httpConnection3.parser(parser21);
        org.jsoup.Connection connection24 = httpConnection3.userAgent("Content-Encoding");
        java.net.Proxy proxy25 = null;
        org.jsoup.Connection connection26 = httpConnection3.proxy(proxy25);
        org.jsoup.Connection.Response response27 = httpConnection3.response();
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        int int29 = request28.timeout();
        boolean boolean30 = request28.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request32 = request28.timeout(0);
        boolean boolean34 = request32.hasCookie("application/x-www-form-urlencoded");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection35 = request32.data();
        org.jsoup.Connection connection36 = httpConnection3.data(keyValCollection35);
        org.jsoup.Connection connection37 = httpConnection0.data(keyValCollection35);
        org.jsoup.helper.HttpConnection.Request request38 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean39 = request38.ignoreContentType;
        request38.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request44 = request38.proxy("hi!", (int) (short) 0);
        boolean boolean45 = request38.validateTSLCertificates;
        org.jsoup.parser.Parser parser46 = null;
        org.jsoup.helper.HttpConnection.Request request47 = request38.parser(parser46);
        request47.ignoreContentType = false;
        org.jsoup.Connection.Request request51 = request47.removeHeader("UTF-8");
        org.jsoup.Connection.Request request54 = request47.header("null=Content-Encoding", "UTF-8");
        org.jsoup.helper.HttpConnection.Request request55 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean56 = request55.ignoreContentType;
        request55.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request60 = request55.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal61 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request62 = request55.data((org.jsoup.Connection.KeyVal) keyVal61);
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean64 = request63.ignoreContentType;
        request63.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request69 = request63.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy70 = request69.proxy;
        org.jsoup.helper.HttpConnection.Request request71 = request55.proxy(proxy70);
        boolean boolean74 = request55.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal77 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request78 = request55.data((org.jsoup.Connection.KeyVal) keyVal77);
        boolean boolean79 = request55.followRedirects;
        java.net.Proxy proxy80 = request55.proxy;
        org.jsoup.helper.HttpConnection.Request request81 = request47.proxy(proxy80);
        org.jsoup.Connection connection82 = httpConnection0.proxy(proxy80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3000 + "'", int29 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection82);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        java.util.Map<java.lang.String, java.lang.String> strMap5 = response1.cookies();
        org.jsoup.Connection.Request request6 = response1.req;
        java.lang.String str8 = response1.cookie("application/x-www-form-urlencoded");
        boolean boolean11 = response1.hasHeaderWithValue("hi!=Content-Encoding", "application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        org.jsoup.Connection.Response response6 = response1.header("null=Content-Encoding", "multipart/form-data");
        java.lang.String str7 = response1.contentType();
        org.jsoup.Connection.Response response10 = response1.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        boolean boolean13 = response1.hasHeaderWithValue("hi!=Content-Encoding", "null=Content-Encoding");
        java.net.URL uRL14 = response1.url();
        org.jsoup.Connection.Response response16 = response1.removeHeader("hi!=Content-Encoding");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = response1.hasHeaderWithValue("", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) (byte) 10);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str11 = keyVal10.key();
        keyVal10.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal14.value = "Content-Encoding";
        java.lang.String str17 = keyVal14.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal18.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream22 = keyVal21.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream24 = keyVal23.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray25 = new org.jsoup.Connection.KeyVal[] { keyVal10, keyVal14, keyVal18, keyVal21, keyVal23 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList26 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList26, keyValArray25);
        org.jsoup.Connection connection28 = httpConnection9.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList26);
        request8.data = keyValList26;
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request35 = request30.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal36 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request37 = request30.data((org.jsoup.Connection.KeyVal) keyVal36);
        org.jsoup.helper.HttpConnection.Request request38 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean39 = request38.ignoreContentType;
        request38.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request44 = request38.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy45 = request44.proxy;
        org.jsoup.helper.HttpConnection.Request request46 = request30.proxy(proxy45);
        org.jsoup.helper.HttpConnection.Request request47 = request8.proxy(proxy45);
        org.jsoup.helper.HttpConnection.Request request48 = request0.proxy(proxy45);
        java.lang.String str50 = request0.getHeaderCaseInsensitive("Content-Encoding");
        org.jsoup.helper.HttpConnection.KeyVal keyVal53 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal55 = keyVal53.key("null=Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request56 = request0.data((org.jsoup.Connection.KeyVal) keyVal55);
        java.io.InputStream inputStream57 = null;
        keyVal55.stream = inputStream57;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null=Content-Encoding" + "'", str17.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal0.value("application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal4.value("null=Content-Encoding");
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = keyVal6.key("null=Content-Encoding");
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal8.value("null=Content-Encoding");
        boolean boolean11 = keyVal8.hasInputStream();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeMimeName("application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "application/x-www-form-urlencoded=application/x-www-form-urlencoded" + "'", str1.equals("application/x-www-form-urlencoded=application/x-www-form-urlencoded"));
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        org.jsoup.Connection.Response response12 = response1.header("hi!", "");
        response1.charset = "hi!";
        int int15 = response1.statusCode();
        org.jsoup.helper.HttpConnection.Response response16 = new org.jsoup.helper.HttpConnection.Response(response1);
        int int17 = response16.statusCode;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request13 = request8.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request15 = request8.data((org.jsoup.Connection.KeyVal) keyVal14);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean17 = request16.ignoreContentType;
        request16.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request22 = request16.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy23 = request22.proxy;
        org.jsoup.helper.HttpConnection.Request request24 = request8.proxy(proxy23);
        org.jsoup.Connection.Request request26 = request24.removeCookie("hi!");
        java.net.Proxy proxy27 = request24.proxy();
        org.jsoup.helper.HttpConnection.Request request28 = request7.proxy(proxy27);
        java.lang.String str30 = request28.getHeaderCaseInsensitive("hi!=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        response1.contentType = "";
        java.lang.String str11 = response1.charset();
        boolean boolean13 = response1.hasCookie("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry15 = response1.scanHeaders("Content-Encoding=hi!");
        response1.numRedirects = 1;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry15);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection connection25 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean27 = request26.ignoreContentType;
        request26.ignoreContentType = true;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection30 = request26.data();
        org.jsoup.parser.Parser parser31 = request26.parser;
        httpConnection0.req = request26;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.value("null=Content-Encoding");
        boolean boolean6 = keyVal5.hasInputStream();
        java.lang.String str7 = keyVal5.value;
        java.io.InputStream inputStream8 = keyVal5.inputStream();
        java.io.InputStream inputStream9 = null;
        keyVal5.stream = inputStream9;
        java.lang.String str11 = keyVal5.key;
        java.io.InputStream inputStream12 = keyVal5.inputStream();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Content-Encoding" + "'", str3.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=Content-Encoding" + "'", str7.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream12);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        java.lang.String str12 = response1.contentType();
        response1.charset = "hi!";
        org.jsoup.Connection.Response response16 = response1.removeCookie("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        response1.statusMessage = "hi!";
        java.lang.String str7 = response1.contentType;
        java.lang.String str9 = response1.header("multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(0);
        java.net.Proxy proxy5 = request0.proxy;
        java.lang.String str7 = request0.header("hi!");
        boolean boolean8 = request0.parserDefined;
        org.jsoup.parser.Parser parser9 = request0.parser();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean11 = request10.ignoreContentType;
        request10.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request15 = request10.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request17 = request10.data((org.jsoup.Connection.KeyVal) keyVal16);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean19 = request18.ignoreContentType;
        request18.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request24 = request18.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy25 = request24.proxy;
        org.jsoup.helper.HttpConnection.Request request26 = request10.proxy(proxy25);
        request26.ignoreHttpErrors = true;
        java.net.Proxy proxy29 = request26.proxy;
        org.jsoup.helper.HttpConnection.Request request30 = request0.proxy(proxy29);
        org.jsoup.helper.HttpConnection.Request request32 = request0.timeout(0);
        java.net.Proxy proxy33 = request0.proxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy33);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean8 = response1.hasHeaderWithValue("multipart/form-data", "");
        java.lang.String str9 = response1.contentType;
        response1.executed = false;
        java.lang.String str13 = response1.cookie("hi!=Content-Encoding");
        int int14 = response1.numRedirects;
        org.jsoup.Connection.Response response16 = response1.removeHeader("application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        org.jsoup.Connection.Response response18 = response1.removeCookie("null=null=Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection19 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser20 = null;
        org.jsoup.Connection connection21 = httpConnection19.parser(parser20);
        org.jsoup.Connection connection23 = httpConnection19.userAgent("hi!");
        org.jsoup.Connection connection25 = httpConnection19.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response26 = null;
        org.jsoup.helper.HttpConnection.Response response27 = new org.jsoup.helper.HttpConnection.Response(response26);
        boolean boolean28 = response27.executed;
        java.net.URL uRL29 = response27.url();
        boolean boolean30 = response27.executed;
        httpConnection19.res = response27;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean33 = request32.ignoreContentType;
        java.lang.String str34 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request32);
        org.jsoup.helper.HttpConnection.Response response35 = null;
        org.jsoup.helper.HttpConnection.Response response36 = new org.jsoup.helper.HttpConnection.Response(response35);
        org.jsoup.Connection.Response response39 = response36.cookie("null=Content-Encoding", "multipart/form-data");
        int int40 = response36.statusCode();
        boolean boolean43 = response36.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response44 = null;
        org.jsoup.helper.HttpConnection.Response response45 = new org.jsoup.helper.HttpConnection.Response(response44);
        boolean boolean46 = response45.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap47 = response45.cookies();
        org.jsoup.helper.HttpConnection httpConnection48 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal49 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str50 = keyVal49.key();
        keyVal49.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal53 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal53.value = "Content-Encoding";
        java.lang.String str56 = keyVal53.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal57 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal57.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal60 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream61 = keyVal60.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal62 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream63 = keyVal62.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray64 = new org.jsoup.Connection.KeyVal[] { keyVal49, keyVal53, keyVal57, keyVal60, keyVal62 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList65 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList65, keyValArray64);
        org.jsoup.Connection connection67 = httpConnection48.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList65);
        org.jsoup.helper.HttpConnection.Request request68 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean69 = request68.ignoreContentType;
        request68.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request73 = request68.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal74 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request75 = request68.data((org.jsoup.Connection.KeyVal) keyVal74);
        org.jsoup.helper.HttpConnection.Request request76 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean77 = request76.ignoreContentType;
        request76.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request82 = request76.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy83 = request82.proxy;
        org.jsoup.helper.HttpConnection.Request request84 = request68.proxy(proxy83);
        org.jsoup.Connection.Method method85 = request84.method();
        org.jsoup.Connection connection86 = httpConnection48.method(method85);
        org.jsoup.Connection.Response response87 = response45.method(method85);
        org.jsoup.Connection.Response response88 = response36.method(method85);
        org.jsoup.Connection.Request request89 = request32.method(method85);
        org.jsoup.Connection.Response response90 = response27.method(method85);
        boolean boolean92 = response27.hasHeader("hi!");
        org.jsoup.Connection.Method method93 = response27.method();
        org.jsoup.Connection.Response response94 = response1.method(method93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null=Content-Encoding" + "'", str56.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request84);
        org.junit.Assert.assertTrue("'" + method85 + "' != '" + org.jsoup.Connection.Method.GET + "'", method85.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + method93 + "' != '" + org.jsoup.Connection.Method.GET + "'", method93.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response94);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.Connection connection29 = httpConnection22.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        response31.numRedirects = '4';
        org.jsoup.Connection.Method method34 = response31.method();
        response31.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = response31.cookies();
        org.jsoup.Connection connection38 = httpConnection22.cookies(strMap37);
        org.jsoup.Connection connection39 = httpConnection0.data(strMap37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean41 = request40.ignoreContentType;
        request40.ignoreContentType = true;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection44 = request40.data();
        org.jsoup.Connection connection45 = httpConnection0.data(keyValCollection44);
        org.jsoup.Connection connection47 = httpConnection0.validateTLSCertificates(true);
        org.jsoup.helper.HttpConnection.Request request48 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean49 = request48.ignoreContentType;
        request48.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request53 = request48.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal54 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request55 = request48.data((org.jsoup.Connection.KeyVal) keyVal54);
        org.jsoup.Connection.Request request57 = request55.postDataCharset("UTF-8");
        httpConnection0.req = request57;
        org.jsoup.Connection connection60 = httpConnection0.userAgent("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        org.jsoup.Connection.Method method4 = response1.method();
        response1.statusCode = 1;
        java.net.URL uRL7 = response1.url();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request13 = request8.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request15 = request8.data((org.jsoup.Connection.KeyVal) keyVal14);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean17 = request16.ignoreContentType;
        request16.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request22 = request16.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy23 = request22.proxy;
        org.jsoup.helper.HttpConnection.Request request24 = request8.proxy(proxy23);
        boolean boolean25 = request24.ignoreContentType;
        response1.req = request24;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document27 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        org.jsoup.Connection.Response response6 = response1.header("null=Content-Encoding", "multipart/form-data");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = response1.hasHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response5 = null;
        org.jsoup.helper.HttpConnection.Response response6 = new org.jsoup.helper.HttpConnection.Response(response5);
        boolean boolean7 = response6.executed;
        java.net.URL uRL8 = response6.url();
        boolean boolean9 = response6.executed;
        response6.executed = false;
        httpConnection0.res = response6;
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        int int14 = request13.timeout();
        request13.parserDefined = true;
        request13.maxBodySizeBytes = (-1);
        httpConnection0.req = request13;
        java.net.URL uRL20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection21 = httpConnection0.url(uRL20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3000 + "'", int14 == 3000);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        java.io.InputStream inputStream2 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = org.jsoup.helper.HttpConnection.KeyVal.create("UTF-8", "Content-Encoding", inputStream2);
        java.lang.String str4 = keyVal3.key;
        java.lang.String str5 = keyVal3.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "UTF-8" + "'", str4.equals("UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Content-Encoding" + "'", str5.equals("Content-Encoding"));
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean8 = response1.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response10 = response1.removeCookie("Content-Encoding");
        org.jsoup.Connection.Response response13 = response1.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        response1.statusCode = (short) 10;
        org.jsoup.helper.HttpConnection.Response response16 = new org.jsoup.helper.HttpConnection.Response(response1);
        org.jsoup.helper.HttpConnection httpConnection17 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str19 = keyVal18.key();
        keyVal18.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal22.value = "Content-Encoding";
        java.lang.String str25 = keyVal22.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal26.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream30 = keyVal29.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream32 = keyVal31.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray33 = new org.jsoup.Connection.KeyVal[] { keyVal18, keyVal22, keyVal26, keyVal29, keyVal31 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList34 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList34, keyValArray33);
        org.jsoup.Connection connection36 = httpConnection17.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList34);
        org.jsoup.Connection connection39 = httpConnection17.header("hi!", "multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response40 = null;
        org.jsoup.helper.HttpConnection.Response response41 = new org.jsoup.helper.HttpConnection.Response(response40);
        response41.numRedirects = '4';
        org.jsoup.Connection.Method method44 = response41.method();
        response41.statusCode = 1;
        java.net.URL uRL47 = response41.url();
        org.jsoup.helper.HttpConnection httpConnection48 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal49 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str50 = keyVal49.key();
        keyVal49.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal53 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal53.value = "Content-Encoding";
        java.lang.String str56 = keyVal53.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal57 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal57.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal60 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream61 = keyVal60.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal62 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream63 = keyVal62.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray64 = new org.jsoup.Connection.KeyVal[] { keyVal49, keyVal53, keyVal57, keyVal60, keyVal62 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList65 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList65, keyValArray64);
        org.jsoup.Connection connection67 = httpConnection48.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList65);
        org.jsoup.helper.HttpConnection.Request request68 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean69 = request68.ignoreContentType;
        request68.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request73 = request68.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal74 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request75 = request68.data((org.jsoup.Connection.KeyVal) keyVal74);
        org.jsoup.helper.HttpConnection.Request request76 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean77 = request76.ignoreContentType;
        request76.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request82 = request76.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy83 = request82.proxy;
        org.jsoup.helper.HttpConnection.Request request84 = request68.proxy(proxy83);
        org.jsoup.Connection.Method method85 = request84.method();
        org.jsoup.Connection connection86 = httpConnection48.method(method85);
        org.jsoup.Connection.Response response87 = response41.method(method85);
        org.jsoup.Connection connection88 = httpConnection17.method(method85);
        org.jsoup.Connection.Response response89 = response1.method(method85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null=Content-Encoding" + "'", str25.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null=Content-Encoding" + "'", str56.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request84);
        org.junit.Assert.assertTrue("'" + method85 + "' != '" + org.jsoup.Connection.Method.GET + "'", method85.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response89);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        java.lang.String str13 = response8.charset();
        boolean boolean14 = response8.executed;
        org.jsoup.Connection.Response response17 = response8.cookie("hi!", "hi!=Content-Encoding");
        org.jsoup.Connection.Request request18 = response8.req;
        java.lang.Class<?> wildcardClass19 = response8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection.Response response24 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        int int26 = request25.timeout();
        boolean boolean27 = request25.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request29 = request25.timeout(0);
        boolean boolean31 = request29.hasCookie("application/x-www-form-urlencoded");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection32 = request29.data();
        org.jsoup.Connection connection33 = httpConnection0.data(keyValCollection32);
        org.jsoup.Connection connection35 = httpConnection0.timeout((int) (byte) 100);
        org.jsoup.helper.HttpConnection.Response response36 = null;
        org.jsoup.helper.HttpConnection.Response response37 = new org.jsoup.helper.HttpConnection.Response(response36);
        org.jsoup.Connection.Response response40 = response37.cookie("null=Content-Encoding", "multipart/form-data");
        int int41 = response37.statusCode();
        boolean boolean44 = response37.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response46 = response37.removeCookie("Content-Encoding");
        org.jsoup.Connection.Response response49 = response37.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        java.lang.String str51 = response37.cookie("application/x-www-form-urlencoded");
        java.util.Map<java.lang.String, java.lang.String> strMap52 = response37.cookies();
        org.jsoup.Connection connection53 = httpConnection0.response((org.jsoup.Connection.Response) response37);
        org.jsoup.Connection connection55 = httpConnection0.maxBodySize(100);
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        int int57 = request56.timeout();
        boolean boolean58 = request56.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request60 = request56.timeout(0);
        java.net.Proxy proxy61 = request56.proxy;
        org.jsoup.Connection connection62 = httpConnection0.request((org.jsoup.Connection.Request) request56);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document63 = httpConnection0.post();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3000 + "'", int26 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "multipart/form-data" + "'", str51.equals("multipart/form-data"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 3000 + "'", int57 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        org.jsoup.Connection.Response response6 = response1.header("null=Content-Encoding", "multipart/form-data");
        java.lang.String str7 = response1.contentType();
        java.lang.String str9 = response1.cookie("application/x-www-form-urlencoded");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        request7.followRedirects = false;
        java.net.Proxy proxy10 = request7.proxy();
        org.jsoup.Connection.Request request12 = request7.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser14 = request13.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request13.headers();
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser17 = null;
        org.jsoup.Connection connection18 = httpConnection16.parser(parser17);
        org.jsoup.Connection connection20 = httpConnection16.referrer("multipart/form-data");
        org.jsoup.Connection connection23 = httpConnection16.cookie("Content-Encoding", "");
        org.jsoup.Connection connection26 = httpConnection16.header("multipart/form-data", "multipart/form-data");
        org.jsoup.Connection connection28 = httpConnection16.maxBodySize(1048576);
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser30 = request29.parser();
        org.jsoup.Connection connection31 = httpConnection16.parser(parser30);
        org.jsoup.helper.HttpConnection.Request request32 = request13.parser(parser30);
        org.jsoup.helper.HttpConnection.Request request33 = request7.parser(parser30);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection34 = request33.data;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection35 = null;
        request33.data = keyValCollection35;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection34);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.Connection connection7 = httpConnection0.cookie("Content-Encoding", "");
        org.jsoup.Connection connection9 = httpConnection0.maxBodySize(0);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean11 = request10.ignoreContentType;
        request10.ignoreContentType = true;
        httpConnection0.req = request10;
        java.lang.String str16 = request10.getHeaderCaseInsensitive("null=multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response18 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request10, response17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.value("null=Content-Encoding");
        boolean boolean6 = keyVal5.hasInputStream();
        java.lang.String str7 = keyVal5.value;
        java.io.InputStream inputStream8 = keyVal5.inputStream();
        java.io.InputStream inputStream9 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal5.inputStream(inputStream9);
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal5.value("Content-Encoding=hi!");
        java.io.InputStream inputStream13 = null;
        keyVal12.stream = inputStream13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Content-Encoding" + "'", str3.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=Content-Encoding" + "'", str7.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        boolean boolean7 = request0.validateTLSCertificates();
        request0.timeoutMilliseconds = (short) -1;
        boolean boolean10 = request0.followRedirects;
        org.jsoup.Connection.Method method11 = request0.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        boolean boolean5 = request0.ignoreHttpErrors;
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request0.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.Connection connection8 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection11 = httpConnection0.header("null=null", "multipart/form-data");
        org.jsoup.Connection connection14 = httpConnection0.header("application/x-www-form-urlencoded=null=Content-Encoding", "application/x-www-form-urlencoded");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document15 = httpConnection0.post();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection.Response response20 = httpConnection0.res;
        java.io.InputStream inputStream23 = null;
        org.jsoup.Connection connection24 = httpConnection0.data("hi!", "null=null", inputStream23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser19 = request18.parser();
        org.jsoup.Connection connection20 = httpConnection0.parser(parser19);
        org.jsoup.Connection.Request request21 = httpConnection0.request();
        org.jsoup.Connection.Response response22 = httpConnection0.response();
        org.jsoup.Connection.Request request23 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) (byte) 10);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str11 = keyVal10.key();
        keyVal10.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal14.value = "Content-Encoding";
        java.lang.String str17 = keyVal14.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal18.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream22 = keyVal21.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream24 = keyVal23.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray25 = new org.jsoup.Connection.KeyVal[] { keyVal10, keyVal14, keyVal18, keyVal21, keyVal23 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList26 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList26, keyValArray25);
        org.jsoup.Connection connection28 = httpConnection9.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList26);
        request8.data = keyValList26;
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request35 = request30.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal36 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request37 = request30.data((org.jsoup.Connection.KeyVal) keyVal36);
        org.jsoup.helper.HttpConnection.Request request38 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean39 = request38.ignoreContentType;
        request38.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request44 = request38.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy45 = request44.proxy;
        org.jsoup.helper.HttpConnection.Request request46 = request30.proxy(proxy45);
        org.jsoup.helper.HttpConnection.Request request47 = request8.proxy(proxy45);
        org.jsoup.helper.HttpConnection.Request request48 = request0.proxy(proxy45);
        java.lang.String str50 = request0.getHeaderCaseInsensitive("Content-Encoding");
        org.jsoup.helper.HttpConnection.KeyVal keyVal53 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal55 = keyVal53.key("null=Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request56 = request0.data((org.jsoup.Connection.KeyVal) keyVal55);
        int int57 = request0.timeout();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null=Content-Encoding" + "'", str17.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        response1.statusMessage = "hi!";
        java.lang.String str7 = response1.contentType;
        response1.contentType = "null=application/x-www-form-urlencoded";
        java.lang.String str11 = response1.getHeaderCaseInsensitive("null=multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        int int13 = response8.statusCode();
        java.lang.String str14 = response8.contentType;
        boolean boolean17 = response8.hasHeaderWithValue("Content-Encoding", "null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry19 = response8.scanHeaders("hi!=Content-Encoding=UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry19);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream1 = keyVal0.inputStream();
        java.lang.String str2 = keyVal0.key();
        java.io.InputStream inputStream3 = keyVal0.inputStream();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream3);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request0.validateTSLCertificates = false;
        boolean boolean9 = request0.ignoreContentType;
        org.jsoup.Connection.Request request11 = request0.followRedirects(true);
        org.jsoup.parser.Parser parser12 = request0.parser();
        int int13 = request0.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean15 = request14.ignoreContentType;
        request14.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request20 = request14.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy21 = request20.proxy;
        org.jsoup.helper.HttpConnection.Request request22 = request0.proxy(proxy21);
        org.jsoup.parser.Parser parser23 = request0.parser();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser23);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser5 = null;
        org.jsoup.Connection connection6 = httpConnection4.parser(parser5);
        org.jsoup.Connection connection8 = httpConnection4.userAgent("hi!");
        org.jsoup.Connection connection10 = httpConnection4.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response11 = null;
        org.jsoup.helper.HttpConnection.Response response12 = new org.jsoup.helper.HttpConnection.Response(response11);
        boolean boolean13 = response12.executed;
        java.net.URL uRL14 = response12.url();
        boolean boolean15 = response12.executed;
        httpConnection4.res = response12;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean18 = request17.ignoreContentType;
        java.lang.String str19 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request17);
        org.jsoup.helper.HttpConnection.Response response20 = null;
        org.jsoup.helper.HttpConnection.Response response21 = new org.jsoup.helper.HttpConnection.Response(response20);
        org.jsoup.Connection.Response response24 = response21.cookie("null=Content-Encoding", "multipart/form-data");
        int int25 = response21.statusCode();
        boolean boolean28 = response21.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response29 = null;
        org.jsoup.helper.HttpConnection.Response response30 = new org.jsoup.helper.HttpConnection.Response(response29);
        boolean boolean31 = response30.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = response30.cookies();
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str35 = keyVal34.key();
        keyVal34.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal38 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal38.value = "Content-Encoding";
        java.lang.String str41 = keyVal38.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal42 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal42.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream46 = keyVal45.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal47 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream48 = keyVal47.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray49 = new org.jsoup.Connection.KeyVal[] { keyVal34, keyVal38, keyVal42, keyVal45, keyVal47 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList50 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList50, keyValArray49);
        org.jsoup.Connection connection52 = httpConnection33.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList50);
        org.jsoup.helper.HttpConnection.Request request53 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean54 = request53.ignoreContentType;
        request53.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request58 = request53.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal59 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request60 = request53.data((org.jsoup.Connection.KeyVal) keyVal59);
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean62 = request61.ignoreContentType;
        request61.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request67 = request61.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy68 = request67.proxy;
        org.jsoup.helper.HttpConnection.Request request69 = request53.proxy(proxy68);
        org.jsoup.Connection.Method method70 = request69.method();
        org.jsoup.Connection connection71 = httpConnection33.method(method70);
        org.jsoup.Connection.Response response72 = response30.method(method70);
        org.jsoup.Connection.Response response73 = response21.method(method70);
        org.jsoup.Connection.Request request74 = request17.method(method70);
        org.jsoup.Connection.Response response75 = response12.method(method70);
        org.jsoup.Connection.Response response76 = response1.method(method70);
        response1.charset = "application/x-www-form-urlencoded";
        java.lang.String str80 = response1.header("null=application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.Request request81 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean82 = request81.ignoreContentType;
        request81.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request87 = request81.proxy("hi!", (int) (short) 0);
        boolean boolean88 = request81.validateTSLCertificates;
        org.jsoup.parser.Parser parser89 = null;
        org.jsoup.helper.HttpConnection.Request request90 = request81.parser(parser89);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection91 = request90.data;
        boolean boolean92 = request90.ignoreContentType;
        java.lang.String str94 = request90.header("null=null");
        response1.req = request90;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response98 = response1.header("", "null=Content-Encoding");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null=Content-Encoding" + "'", str41.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertTrue("'" + method70 + "' != '" + org.jsoup.Connection.Method.GET + "'", method70.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        org.jsoup.Connection.Response response6 = response1.removeHeader("multipart/form-data");
        response1.statusCode = 0;
        java.lang.String str9 = response1.statusMessage;
        response1.statusMessage = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("null=Content-Encoding");
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal2.key("Content-Encoding");
        boolean boolean7 = keyVal2.hasInputStream();
        java.lang.String str8 = keyVal2.toString();
        java.io.InputStream inputStream9 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal2.inputStream(inputStream9);
        java.io.InputStream inputStream11 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal10.inputStream(inputStream11);
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal10.value("application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Content-Encoding=hi!" + "'", str8.equals("Content-Encoding=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.helper.HttpConnection.Response response2 = null;
        org.jsoup.helper.HttpConnection.Response response3 = new org.jsoup.helper.HttpConnection.Response(response2);
        response3.numRedirects = '4';
        org.jsoup.Connection.Method method6 = response3.method();
        response3.statusCode = 1;
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean10 = request9.ignoreContentType;
        request9.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request14 = request9.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request16 = request9.data((org.jsoup.Connection.KeyVal) keyVal15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean18 = request17.ignoreContentType;
        request17.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request23 = request17.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy24 = request23.proxy;
        org.jsoup.helper.HttpConnection.Request request25 = request9.proxy(proxy24);
        org.jsoup.Connection.Method method26 = request25.method();
        org.jsoup.Connection.Response response27 = response3.method(method26);
        org.jsoup.Connection.Response response28 = response1.method(method26);
        int int29 = response1.statusCode;
        java.lang.String str31 = response1.header("hi!=Content-Encoding");
        org.jsoup.Connection.Response response33 = response1.removeCookie("hi!=Content-Encoding");
        org.jsoup.Connection.Method method34 = response1.method();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        java.lang.String str5 = request0.cookie("UTF-8");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry7 = request0.scanHeaders("Content-Encoding");
        org.jsoup.Connection.Request request9 = request0.removeHeader("multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        org.jsoup.Connection.Method method4 = response1.method();
        response1.statusCode = 1;
        java.net.URL uRL7 = response1.url();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request13 = request8.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request15 = request8.data((org.jsoup.Connection.KeyVal) keyVal14);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean17 = request16.ignoreContentType;
        request16.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request22 = request16.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy23 = request22.proxy;
        org.jsoup.helper.HttpConnection.Request request24 = request8.proxy(proxy23);
        boolean boolean25 = request24.ignoreContentType;
        response1.req = request24;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response27 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = response1.scanHeaders("null=Content-Encoding");
        boolean boolean10 = response1.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        org.jsoup.Connection.Response response6 = response1.header("null=Content-Encoding", "multipart/form-data");
        java.lang.String str7 = response1.contentType();
        java.lang.String str8 = response1.statusMessage;
        org.jsoup.Connection.Response response10 = response1.removeCookie("hi!=Content-Encoding");
        org.jsoup.Connection.Response response12 = response1.removeCookie("Content-Encoding");
        org.jsoup.Connection.Method method13 = response1.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method13);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        java.lang.String str5 = response1.getHeaderCaseInsensitive("multipart/form-data");
        response1.contentType = "";
        org.jsoup.Connection.Response response9 = response1.removeHeader("application/x-www-form-urlencoded=null=Content-Encoding");
        boolean boolean11 = response1.hasCookie("null=null");
        response1.contentType = "application/x-www-form-urlencoded=null=Content-Encoding";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal1 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str2 = keyVal1.key();
        keyVal1.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal5.value = "Content-Encoding";
        java.lang.String str8 = keyVal5.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal9.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream13 = keyVal12.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream15 = keyVal14.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray16 = new org.jsoup.Connection.KeyVal[] { keyVal1, keyVal5, keyVal9, keyVal12, keyVal14 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList17 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17, keyValArray16);
        org.jsoup.Connection connection19 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17);
        org.jsoup.Connection connection22 = httpConnection0.header("hi!", "multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response23 = null;
        org.jsoup.helper.HttpConnection.Response response24 = new org.jsoup.helper.HttpConnection.Response(response23);
        org.jsoup.helper.HttpConnection.Response response25 = null;
        org.jsoup.helper.HttpConnection.Response response26 = new org.jsoup.helper.HttpConnection.Response(response25);
        response26.numRedirects = '4';
        org.jsoup.Connection.Method method29 = response26.method();
        response26.statusCode = 1;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean33 = request32.ignoreContentType;
        request32.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request37 = request32.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal38 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request39 = request32.data((org.jsoup.Connection.KeyVal) keyVal38);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean41 = request40.ignoreContentType;
        request40.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request46 = request40.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy47 = request46.proxy;
        org.jsoup.helper.HttpConnection.Request request48 = request32.proxy(proxy47);
        org.jsoup.Connection.Method method49 = request48.method();
        org.jsoup.Connection.Response response50 = response26.method(method49);
        org.jsoup.Connection.Response response51 = response24.method(method49);
        int int52 = response24.statusCode;
        java.lang.String str53 = response24.statusMessage;
        org.jsoup.Connection.Response response56 = response24.header("hi!", "UTF-8");
        java.util.Map<java.lang.String, java.lang.String> strMap57 = response24.headers();
        org.jsoup.Connection connection58 = httpConnection0.cookies(strMap57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=Content-Encoding" + "'", str8.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection58);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        boolean boolean7 = request0.validateTSLCertificates;
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.helper.HttpConnection.Request request9 = request0.parser(parser8);
        request9.ignoreContentType = false;
        org.jsoup.Connection.Request request13 = request9.removeHeader("UTF-8");
        org.jsoup.Connection.Request request16 = request9.header("null=Content-Encoding", "UTF-8");
        java.lang.String str17 = org.jsoup.helper.HttpConnection.Response.setOutputContentType(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        java.lang.String str12 = response1.contentType();
        java.nio.ByteBuffer byteBuffer13 = response1.byteData;
        int int14 = response1.statusCode();
        java.lang.String str16 = response1.cookie("null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.validateTLSCertificates(true);
        org.jsoup.Connection.Response response7 = httpConnection0.res;
        org.jsoup.Connection connection10 = httpConnection0.proxy("", (int) (byte) 10);
        org.jsoup.Connection connection13 = httpConnection0.data("application/x-www-form-urlencoded=null=Content-Encoding", "null=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection15 = httpConnection0.postDataCharset("null=null=Content-Encoding");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: null=null=Content-Encoding");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection1 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str3 = keyVal2.key();
        keyVal2.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal10.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream14 = keyVal13.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream16 = keyVal15.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray17 = new org.jsoup.Connection.KeyVal[] { keyVal2, keyVal6, keyVal10, keyVal13, keyVal15 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList18 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18, keyValArray17);
        org.jsoup.Connection connection20 = httpConnection1.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18);
        request0.data = keyValList18;
        java.net.URL uRL22 = request0.url();
        org.jsoup.Connection.Request request24 = request0.removeHeader("UTF-8=multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=Content-Encoding" + "'", str9.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser19 = request18.parser();
        org.jsoup.Connection connection20 = httpConnection0.parser(parser19);
        org.jsoup.Connection.Request request21 = httpConnection0.request();
        org.jsoup.Connection connection23 = httpConnection0.validateTLSCertificates(false);
        org.jsoup.Connection connection25 = httpConnection0.followRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        org.jsoup.Connection.Request request4 = request0.maxBodySize(52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection1 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str3 = keyVal2.key();
        keyVal2.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal10.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream14 = keyVal13.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream16 = keyVal15.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray17 = new org.jsoup.Connection.KeyVal[] { keyVal2, keyVal6, keyVal10, keyVal13, keyVal15 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList18 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18, keyValArray17);
        org.jsoup.Connection connection20 = httpConnection1.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18);
        request0.data = keyValList18;
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean23 = request22.ignoreContentType;
        request22.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request27 = request22.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request29 = request22.data((org.jsoup.Connection.KeyVal) keyVal28);
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request36 = request30.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy37 = request36.proxy;
        org.jsoup.helper.HttpConnection.Request request38 = request22.proxy(proxy37);
        org.jsoup.helper.HttpConnection.Request request39 = request0.proxy(proxy37);
        int int40 = request39.timeoutMilliseconds;
        int int41 = request39.maxBodySizeBytes;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = request39.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = request39.headers();
        request39.validateTSLCertificates = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=Content-Encoding" + "'", str9.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1048576 + "'", int41 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request11 = request7.data((org.jsoup.Connection.KeyVal) keyVal10);
        boolean boolean12 = request7.validateTLSCertificates();
        org.jsoup.helper.HttpConnection.Request request14 = request7.timeout((int) 'a');
        boolean boolean15 = request14.followRedirects;
        org.jsoup.parser.Parser parser16 = request14.parser();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser16);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request11 = request7.data((org.jsoup.Connection.KeyVal) keyVal10);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.headers();
        org.jsoup.Connection.Request request14 = request7.ignoreContentType(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        boolean boolean4 = request0.validateTLSCertificates();
        org.jsoup.helper.HttpConnection.Request request6 = request0.timeout((int) (byte) 1);
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean8 = request7.ignoreContentType;
        request7.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request12 = request7.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request14 = request7.data((org.jsoup.Connection.KeyVal) keyVal13);
        org.jsoup.Connection.Request request16 = request14.followRedirects(true);
        org.jsoup.parser.Parser parser17 = request14.parser;
        org.jsoup.helper.HttpConnection.Request request18 = request0.parser(parser17);
        org.jsoup.Connection.Request request20 = request0.maxBodySize((int) '#');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        java.lang.String str7 = response1.statusMessage;
        response1.statusCode = (byte) -1;
        java.lang.String str10 = response1.contentType;
        response1.statusMessage = "null=application/x-www-form-urlencoded";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        request12.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request16 = request12.ignoreContentType(true);
        java.net.Proxy proxy17 = request12.proxy();
        response1.req = request12;
        int int19 = request12.maxBodySize();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1048576 + "'", int19 == 1048576);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.key();
        java.io.InputStream inputStream4 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.inputStream(inputStream4);
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal5.key("hi!=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(0);
        boolean boolean6 = request4.hasCookie("application/x-www-form-urlencoded");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection7 = request4.data();
        request4.ignoreHttpErrors = false;
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean11 = request10.ignoreContentType;
        request10.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request15 = request10.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request17 = request10.data((org.jsoup.Connection.KeyVal) keyVal16);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean19 = request18.ignoreContentType;
        request18.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request24 = request18.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy25 = request24.proxy;
        org.jsoup.helper.HttpConnection.Request request26 = request10.proxy(proxy25);
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        int int28 = request27.timeout();
        boolean boolean29 = request27.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request31 = request27.timeout(0);
        java.net.Proxy proxy32 = request27.proxy;
        java.lang.String str34 = request27.header("hi!");
        java.lang.String str35 = request27.postDataCharset;
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean37 = request36.ignoreContentType;
        request36.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request41 = request36.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request43 = request36.timeout((int) (byte) 10);
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection45 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal46 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str47 = keyVal46.key();
        keyVal46.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal50 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal50.value = "Content-Encoding";
        java.lang.String str53 = keyVal50.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal54 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal54.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal57 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream58 = keyVal57.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal59 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream60 = keyVal59.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray61 = new org.jsoup.Connection.KeyVal[] { keyVal46, keyVal50, keyVal54, keyVal57, keyVal59 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList62 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList62, keyValArray61);
        org.jsoup.Connection connection64 = httpConnection45.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList62);
        request44.data = keyValList62;
        org.jsoup.helper.HttpConnection.Request request66 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean67 = request66.ignoreContentType;
        request66.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request71 = request66.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal72 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request73 = request66.data((org.jsoup.Connection.KeyVal) keyVal72);
        org.jsoup.helper.HttpConnection.Request request74 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean75 = request74.ignoreContentType;
        request74.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request80 = request74.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy81 = request80.proxy;
        org.jsoup.helper.HttpConnection.Request request82 = request66.proxy(proxy81);
        org.jsoup.helper.HttpConnection.Request request83 = request44.proxy(proxy81);
        org.jsoup.helper.HttpConnection.Request request84 = request36.proxy(proxy81);
        request27.proxy = proxy81;
        request10.proxy = proxy81;
        org.jsoup.helper.HttpConnection.Request request87 = request4.proxy(proxy81);
        request4.followRedirects = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3000 + "'", int28 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "UTF-8" + "'", str35.equals("UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null=Content-Encoding" + "'", str53.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request87);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        java.lang.String str13 = response1.header("multipart/form-data");
        response1.contentType = "UTF-8";
        response1.contentType = "hi!=Content-Encoding";
        boolean boolean20 = response1.hasHeaderWithValue("UTF-8", "UTF-8");
        java.net.URL uRL21 = response1.url();
        org.jsoup.Connection.Response response23 = response1.removeCookie("application/x-www-form-urlencoded");
        org.jsoup.Connection.Method method24 = response1.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method24);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        boolean boolean7 = request0.validateTSLCertificates;
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.helper.HttpConnection.Request request9 = request0.parser(parser8);
        boolean boolean10 = request0.validateTSLCertificates;
        java.net.URL uRL11 = request0.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL11);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.helper.HttpConnection.Response response18 = null;
        org.jsoup.helper.HttpConnection.Response response19 = new org.jsoup.helper.HttpConnection.Response(response18);
        org.jsoup.Connection.Response response22 = response19.cookie("null=Content-Encoding", "multipart/form-data");
        int int23 = response19.statusCode();
        boolean boolean26 = response19.hasHeaderWithValue("multipart/form-data", "");
        java.lang.String str27 = response19.contentType;
        response19.statusMessage = "";
        org.jsoup.Connection connection30 = httpConnection0.response((org.jsoup.Connection.Response) response19);
        java.lang.String str32 = response19.cookie("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        java.net.Proxy proxy3 = request0.proxy;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy3);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        int int5 = request0.timeoutMilliseconds;
        int int6 = request0.maxBodySizeBytes;
        boolean boolean8 = request0.hasHeader("multipart/form-data");
        boolean boolean10 = request0.hasHeader("multipart/form-data");
        boolean boolean11 = request0.validateTSLCertificates;
        org.jsoup.helper.HttpConnection httpConnection12 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser13 = null;
        org.jsoup.Connection connection14 = httpConnection12.parser(parser13);
        org.jsoup.Connection connection16 = httpConnection12.referrer("multipart/form-data");
        org.jsoup.Connection connection19 = httpConnection12.cookie("Content-Encoding", "");
        org.jsoup.Connection connection22 = httpConnection12.header("multipart/form-data", "multipart/form-data");
        org.jsoup.Connection connection24 = httpConnection12.maxBodySize(1048576);
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser26 = request25.parser();
        org.jsoup.Connection connection27 = httpConnection12.parser(parser26);
        org.jsoup.helper.HttpConnection.Request request28 = request0.parser(parser26);
        request0.ignoreContentType = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3000 + "'", int5 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        java.net.Proxy proxy5 = request0.proxy();
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean7 = request6.ignoreContentType;
        java.lang.String str8 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request6);
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        org.jsoup.Connection.Response response13 = response10.cookie("null=Content-Encoding", "multipart/form-data");
        int int14 = response10.statusCode();
        boolean boolean17 = response10.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response18 = null;
        org.jsoup.helper.HttpConnection.Response response19 = new org.jsoup.helper.HttpConnection.Response(response18);
        boolean boolean20 = response19.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap21 = response19.cookies();
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str24 = keyVal23.key();
        keyVal23.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal27.value = "Content-Encoding";
        java.lang.String str30 = keyVal27.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal31.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream35 = keyVal34.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal36 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream37 = keyVal36.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray38 = new org.jsoup.Connection.KeyVal[] { keyVal23, keyVal27, keyVal31, keyVal34, keyVal36 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList39 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList39, keyValArray38);
        org.jsoup.Connection connection41 = httpConnection22.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList39);
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean43 = request42.ignoreContentType;
        request42.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request47 = request42.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request49 = request42.data((org.jsoup.Connection.KeyVal) keyVal48);
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean51 = request50.ignoreContentType;
        request50.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request56 = request50.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy57 = request56.proxy;
        org.jsoup.helper.HttpConnection.Request request58 = request42.proxy(proxy57);
        org.jsoup.Connection.Method method59 = request58.method();
        org.jsoup.Connection connection60 = httpConnection22.method(method59);
        org.jsoup.Connection.Response response61 = response19.method(method59);
        org.jsoup.Connection.Response response62 = response10.method(method59);
        org.jsoup.Connection.Request request63 = request6.method(method59);
        org.jsoup.Connection.Request request64 = request0.method(method59);
        boolean boolean65 = request0.validateTSLCertificates;
        boolean boolean66 = request0.validateTLSCertificates();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null=Content-Encoding" + "'", str30.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        org.jsoup.Connection.Response response12 = response1.header("hi!", "");
        response1.charset = "hi!";
        java.lang.String str15 = response1.charset();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.Connection connection8 = httpConnection0.timeout(100);
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str12 = keyVal11.key();
        keyVal11.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal15.value = "Content-Encoding";
        java.lang.String str18 = keyVal15.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal19.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream23 = keyVal22.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal24 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream25 = keyVal24.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray26 = new org.jsoup.Connection.KeyVal[] { keyVal11, keyVal15, keyVal19, keyVal22, keyVal24 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList27 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList27, keyValArray26);
        org.jsoup.Connection connection29 = httpConnection10.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList27);
        request9.data = keyValList27;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean32 = request31.ignoreContentType;
        request31.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request36 = request31.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal37 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request38 = request31.data((org.jsoup.Connection.KeyVal) keyVal37);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean40 = request39.ignoreContentType;
        request39.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request45 = request39.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy46 = request45.proxy;
        org.jsoup.helper.HttpConnection.Request request47 = request31.proxy(proxy46);
        org.jsoup.helper.HttpConnection.Request request48 = request9.proxy(proxy46);
        org.jsoup.Connection connection49 = httpConnection0.proxy(proxy46);
        org.jsoup.Connection.Request request50 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null=Content-Encoding" + "'", str18.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser19 = request18.parser();
        org.jsoup.Connection connection20 = httpConnection0.parser(parser19);
        org.jsoup.Connection.Request request21 = httpConnection0.request();
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean23 = request22.ignoreContentType;
        request22.maxBodySizeBytes = (byte) -1;
        int int26 = request22.timeout();
        boolean boolean27 = request22.ignoreHttpErrors;
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request22.headers();
        org.jsoup.Connection connection29 = httpConnection0.cookies(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3000 + "'", int26 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        request7.followRedirects = false;
        request7.maxBodySizeBytes = (short) -1;
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean13 = request12.ignoreContentType;
        request12.ignoreContentType = true;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection16 = request12.data();
        request7.data = keyValCollection16;
        boolean boolean18 = request7.followRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        java.lang.String str6 = response1.header("null=Content-Encoding");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        boolean boolean9 = response1.hasHeader("application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        org.jsoup.Connection.Method method3 = response1.method();
        java.lang.String str5 = response1.cookie("null=multipart/form-data");
        java.lang.String str6 = response1.statusMessage;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        java.lang.String str4 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        request0.parserDefined = true;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean8 = request7.ignoreContentType;
        request7.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request13 = request7.proxy("hi!", (int) (short) 0);
        request7.validateTSLCertificates = false;
        boolean boolean16 = request7.ignoreContentType;
        org.jsoup.Connection.Request request18 = request7.followRedirects(true);
        org.jsoup.parser.Parser parser19 = request7.parser();
        int int20 = request7.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean22 = request21.ignoreContentType;
        request21.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request27 = request21.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy28 = request27.proxy;
        org.jsoup.helper.HttpConnection.Request request29 = request7.proxy(proxy28);
        org.jsoup.helper.HttpConnection.Request request30 = request0.proxy(proxy28);
        org.jsoup.helper.HttpConnection.Request request32 = request30.timeout((int) (short) 100);
        int int33 = request30.maxBodySize();
        boolean boolean36 = request30.hasHeaderWithValue("hi!", "null=multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean8 = response1.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response10 = response1.removeCookie("Content-Encoding");
        org.jsoup.Connection.Response response13 = response1.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        response1.statusCode = (short) 10;
        java.lang.String str17 = response1.header("null=null");
        boolean boolean18 = response1.executed;
        java.nio.ByteBuffer byteBuffer19 = response1.byteData;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer19);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.jsoup.helper.HttpConnection.CONTENT_TYPE = "null=application/x-www-form-urlencoded";
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.Connection connection7 = httpConnection0.cookie("Content-Encoding", "");
        org.jsoup.Connection connection9 = httpConnection0.maxBodySize(0);
        org.jsoup.helper.HttpConnection.Response response10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        response11.numRedirects = '4';
        org.jsoup.Connection.Method method14 = response11.method();
        response11.statusCode = 1;
        java.net.URL uRL17 = response11.url();
        org.jsoup.Connection.Request request18 = response11.req;
        org.jsoup.Connection.Response response20 = response11.removeCookie("multipart/form-data");
        org.jsoup.Connection connection21 = httpConnection0.response((org.jsoup.Connection.Response) response11);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection23 = httpConnection0.maxBodySize((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxSize must be 0 (unlimited) or larger");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser5 = null;
        org.jsoup.Connection connection6 = httpConnection4.parser(parser5);
        org.jsoup.Connection connection8 = httpConnection4.userAgent("hi!");
        org.jsoup.Connection connection10 = httpConnection4.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response11 = null;
        org.jsoup.helper.HttpConnection.Response response12 = new org.jsoup.helper.HttpConnection.Response(response11);
        boolean boolean13 = response12.executed;
        java.net.URL uRL14 = response12.url();
        boolean boolean15 = response12.executed;
        httpConnection4.res = response12;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean18 = request17.ignoreContentType;
        java.lang.String str19 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request17);
        org.jsoup.helper.HttpConnection.Response response20 = null;
        org.jsoup.helper.HttpConnection.Response response21 = new org.jsoup.helper.HttpConnection.Response(response20);
        org.jsoup.Connection.Response response24 = response21.cookie("null=Content-Encoding", "multipart/form-data");
        int int25 = response21.statusCode();
        boolean boolean28 = response21.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response29 = null;
        org.jsoup.helper.HttpConnection.Response response30 = new org.jsoup.helper.HttpConnection.Response(response29);
        boolean boolean31 = response30.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = response30.cookies();
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str35 = keyVal34.key();
        keyVal34.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal38 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal38.value = "Content-Encoding";
        java.lang.String str41 = keyVal38.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal42 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal42.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream46 = keyVal45.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal47 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream48 = keyVal47.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray49 = new org.jsoup.Connection.KeyVal[] { keyVal34, keyVal38, keyVal42, keyVal45, keyVal47 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList50 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList50, keyValArray49);
        org.jsoup.Connection connection52 = httpConnection33.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList50);
        org.jsoup.helper.HttpConnection.Request request53 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean54 = request53.ignoreContentType;
        request53.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request58 = request53.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal59 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request60 = request53.data((org.jsoup.Connection.KeyVal) keyVal59);
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean62 = request61.ignoreContentType;
        request61.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request67 = request61.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy68 = request67.proxy;
        org.jsoup.helper.HttpConnection.Request request69 = request53.proxy(proxy68);
        org.jsoup.Connection.Method method70 = request69.method();
        org.jsoup.Connection connection71 = httpConnection33.method(method70);
        org.jsoup.Connection.Response response72 = response30.method(method70);
        org.jsoup.Connection.Response response73 = response21.method(method70);
        org.jsoup.Connection.Request request74 = request17.method(method70);
        org.jsoup.Connection.Response response75 = response12.method(method70);
        org.jsoup.Connection.Response response76 = response1.method(method70);
        int int77 = response1.statusCode;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null=Content-Encoding" + "'", str41.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertTrue("'" + method70 + "' != '" + org.jsoup.Connection.Method.GET + "'", method70.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request0.validateTSLCertificates = false;
        boolean boolean9 = request0.ignoreContentType;
        int int10 = request0.maxBodySize();
        boolean boolean11 = request0.followRedirects;
        java.net.Proxy proxy12 = null;
        org.jsoup.helper.HttpConnection.Request request13 = request0.proxy(proxy12);
        org.jsoup.parser.Parser parser14 = request13.parser;
        org.jsoup.Connection.Method method15 = request13.method();
        boolean boolean16 = request13.ignoreHttpErrors();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser1 = request0.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        boolean boolean3 = request0.followRedirects();
        boolean boolean4 = request0.ignoreHttpErrors;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request14 = request8.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy15 = request14.proxy;
        org.jsoup.helper.HttpConnection.Request request16 = request0.proxy(proxy15);
        boolean boolean19 = request0.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request23 = request0.data((org.jsoup.Connection.KeyVal) keyVal22);
        boolean boolean24 = request0.followRedirects;
        java.net.Proxy proxy25 = request0.proxy;
        java.lang.String str26 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        int int27 = request0.timeout();
        org.jsoup.Connection.Request request30 = request0.cookie("null=null", "null=application/x-www-form-urlencoded");
        boolean boolean31 = request0.followRedirects();
        boolean boolean33 = request0.hasHeader("null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3000 + "'", int27 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.Connection connection29 = httpConnection22.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        response31.numRedirects = '4';
        org.jsoup.Connection.Method method34 = response31.method();
        response31.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = response31.cookies();
        org.jsoup.Connection connection38 = httpConnection22.cookies(strMap37);
        org.jsoup.Connection connection39 = httpConnection0.data(strMap37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean41 = request40.ignoreContentType;
        request40.ignoreContentType = true;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection44 = request40.data();
        org.jsoup.Connection connection45 = httpConnection0.data(keyValCollection44);
        org.jsoup.helper.HttpConnection.Response response46 = null;
        org.jsoup.helper.HttpConnection.Response response47 = new org.jsoup.helper.HttpConnection.Response(response46);
        org.jsoup.Connection.Response response50 = response47.cookie("null=Content-Encoding", "multipart/form-data");
        org.jsoup.Connection.Response response52 = response47.removeHeader("multipart/form-data");
        response47.statusCode = 0;
        org.jsoup.helper.HttpConnection.Response response55 = new org.jsoup.helper.HttpConnection.Response(response47);
        java.nio.ByteBuffer byteBuffer56 = response47.byteData;
        boolean boolean58 = response47.hasCookie("application/x-www-form-urlencoded");
        org.jsoup.Connection connection59 = httpConnection0.response((org.jsoup.Connection.Response) response47);
        org.jsoup.Connection.Method method60 = response47.method();
        org.jsoup.Connection.Request request61 = response47.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request61);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        response1.contentType = "";
        java.lang.String str11 = response1.charset();
        boolean boolean13 = response1.hasCookie("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry15 = response1.scanHeaders("Content-Encoding=hi!");
        boolean boolean17 = response1.hasHeader("null=Content-Encoding");
        java.lang.String str18 = response1.statusMessage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = response1.headers();
        java.net.URL uRL9 = response1.url();
        org.jsoup.Connection.Response response12 = response1.cookie("Content-Encoding", "null=null");
        java.lang.String str14 = response1.cookie("hi!");
        java.lang.String str16 = response1.cookie("UTF-8=multipart/form-data");
        response1.statusMessage = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.toString();
        java.io.InputStream inputStream4 = null;
        keyVal0.stream = inputStream4;
        java.lang.String str6 = keyVal0.key;
        java.lang.String str7 = keyVal0.key;
        keyVal0.key = "hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = keyVal0.value("null=application/x-www-form-urlencoded");
        keyVal0.key = "hi!=Content-Encoding=UTF-8";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=Content-Encoding" + "'", str3.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal11);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection.Response response24 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        int int26 = request25.timeout();
        boolean boolean27 = request25.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request29 = request25.timeout(0);
        boolean boolean31 = request29.hasCookie("application/x-www-form-urlencoded");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection32 = request29.data();
        org.jsoup.Connection connection33 = httpConnection0.data(keyValCollection32);
        org.jsoup.Connection connection35 = httpConnection0.timeout((int) (byte) 100);
        org.jsoup.helper.HttpConnection.Response response36 = null;
        org.jsoup.helper.HttpConnection.Response response37 = new org.jsoup.helper.HttpConnection.Response(response36);
        org.jsoup.Connection.Response response40 = response37.cookie("null=Content-Encoding", "multipart/form-data");
        int int41 = response37.statusCode();
        boolean boolean44 = response37.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response46 = response37.removeCookie("Content-Encoding");
        org.jsoup.Connection.Response response49 = response37.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        java.lang.String str51 = response37.cookie("application/x-www-form-urlencoded");
        java.util.Map<java.lang.String, java.lang.String> strMap52 = response37.cookies();
        org.jsoup.Connection connection53 = httpConnection0.response((org.jsoup.Connection.Response) response37);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document54 = httpConnection0.post();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3000 + "'", int26 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "multipart/form-data" + "'", str51.equals("multipart/form-data"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        org.jsoup.Connection.Response response7 = response1.header("null=Content-Encoding", "null=Content-Encoding");
        java.lang.String str9 = response1.getHeaderCaseInsensitive("");
        response1.executed = false;
        java.lang.String str12 = response1.contentType;
        response1.numRedirects = 100;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        java.lang.String str13 = response8.charset();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = response8.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = response8.headers();
        java.lang.String str17 = response8.header("application/x-www-form-urlencoded");
        java.lang.String str18 = response8.statusMessage();
        java.net.URL uRL19 = response8.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL19);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean8 = response1.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response10 = response1.removeCookie("Content-Encoding");
        org.jsoup.Connection.Response response13 = response1.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        response1.statusCode = (short) 10;
        java.lang.String str17 = response1.getHeaderCaseInsensitive("hi!=Content-Encoding");
        boolean boolean20 = response1.hasHeaderWithValue("Content-Encoding", "");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry22 = response1.scanHeaders("application/x-www-form-urlencoded=null=Content-Encoding");
        java.util.Map<java.lang.String, java.lang.String> strMap23 = response1.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = response1.headers();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = response1.hasHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap3 = response1.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = response1.cookies();
        org.jsoup.Connection.Response response6 = response1.removeCookie("null=Content-Encoding");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.Connection connection29 = httpConnection22.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        response31.numRedirects = '4';
        org.jsoup.Connection.Method method34 = response31.method();
        response31.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = response31.cookies();
        org.jsoup.Connection connection38 = httpConnection22.cookies(strMap37);
        org.jsoup.Connection connection39 = httpConnection0.data(strMap37);
        org.jsoup.helper.HttpConnection.Response response40 = null;
        org.jsoup.helper.HttpConnection.Response response41 = new org.jsoup.helper.HttpConnection.Response(response40);
        org.jsoup.Connection.Response response44 = response41.cookie("null=Content-Encoding", "multipart/form-data");
        int int45 = response41.statusCode();
        boolean boolean48 = response41.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response50 = response41.removeCookie("Content-Encoding");
        org.jsoup.Connection connection51 = httpConnection0.response(response50);
        org.jsoup.Connection connection53 = httpConnection0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean55 = request54.ignoreContentType;
        request54.maxBodySizeBytes = (byte) -1;
        java.lang.String str58 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request54);
        request54.parserDefined = true;
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean62 = request61.ignoreContentType;
        request61.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request67 = request61.proxy("hi!", (int) (short) 0);
        request61.validateTSLCertificates = false;
        boolean boolean70 = request61.ignoreContentType;
        org.jsoup.Connection.Request request72 = request61.followRedirects(true);
        org.jsoup.parser.Parser parser73 = request61.parser();
        int int74 = request61.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request75 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean76 = request75.ignoreContentType;
        request75.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request81 = request75.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy82 = request81.proxy;
        org.jsoup.helper.HttpConnection.Request request83 = request61.proxy(proxy82);
        org.jsoup.helper.HttpConnection.Request request84 = request54.proxy(proxy82);
        org.jsoup.Connection connection85 = httpConnection0.request((org.jsoup.Connection.Request) request84);
        java.io.InputStream inputStream88 = null;
        org.jsoup.Connection connection89 = httpConnection0.data("null=application/x-www-form-urlencoded", "multipart/form-data", inputStream88);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document90 = httpConnection0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection89);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        java.lang.String str5 = request0.cookie("application/x-www-form-urlencoded");
        boolean boolean6 = request0.followRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.Connection connection29 = httpConnection22.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        response31.numRedirects = '4';
        org.jsoup.Connection.Method method34 = response31.method();
        response31.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = response31.cookies();
        org.jsoup.Connection connection38 = httpConnection22.cookies(strMap37);
        org.jsoup.Connection connection39 = httpConnection0.data(strMap37);
        org.jsoup.Connection.Response response40 = httpConnection0.response();
        org.jsoup.Connection.Request request41 = httpConnection0.req;
        org.jsoup.Connection connection43 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection.Request request44 = httpConnection0.request();
        org.jsoup.Connection connection47 = httpConnection0.header("null=null", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection47);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection1 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str3 = keyVal2.key();
        keyVal2.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal10.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream14 = keyVal13.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream16 = keyVal15.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray17 = new org.jsoup.Connection.KeyVal[] { keyVal2, keyVal6, keyVal10, keyVal13, keyVal15 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList18 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18, keyValArray17);
        org.jsoup.Connection connection20 = httpConnection1.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18);
        request0.data = keyValList18;
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean23 = request22.ignoreContentType;
        request22.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request27 = request22.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request29 = request22.data((org.jsoup.Connection.KeyVal) keyVal28);
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request36 = request30.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy37 = request36.proxy;
        org.jsoup.helper.HttpConnection.Request request38 = request22.proxy(proxy37);
        org.jsoup.helper.HttpConnection.Request request39 = request0.proxy(proxy37);
        int int40 = request39.timeout();
        request39.parserDefined = false;
        boolean boolean43 = request39.validateTSLCertificates;
        org.jsoup.helper.HttpConnection.Request request45 = request39.timeout((int) (byte) 0);
        request45.postDataCharset = "null=Content-Encoding";
        int int48 = request45.timeoutMilliseconds;
        org.jsoup.helper.HttpConnection.Request request49 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean50 = request49.ignoreContentType;
        request49.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request54 = request49.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request56 = request49.timeout((int) (byte) 10);
        org.jsoup.helper.HttpConnection httpConnection57 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser58 = null;
        org.jsoup.Connection connection59 = httpConnection57.parser(parser58);
        org.jsoup.Connection connection61 = httpConnection57.userAgent("hi!");
        org.jsoup.Connection connection63 = httpConnection57.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal64 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str65 = keyVal64.key();
        keyVal64.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal68 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal68.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray71 = new org.jsoup.Connection.KeyVal[] { keyVal64, keyVal68 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList72 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList72, keyValArray71);
        org.jsoup.Connection connection74 = httpConnection57.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList72);
        org.jsoup.helper.HttpConnection.Request request75 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser76 = request75.parser();
        org.jsoup.Connection connection77 = httpConnection57.parser(parser76);
        org.jsoup.helper.HttpConnection.Request request78 = request56.parser(parser76);
        org.jsoup.helper.HttpConnection.Request request79 = request45.parser(parser76);
        java.net.URL uRL80 = request45.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=Content-Encoding" + "'", str9.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL80);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        org.jsoup.Connection.Method method4 = response1.method();
        response1.statusCode = 1;
        java.net.URL uRL7 = response1.url();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request13 = request8.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request15 = request8.data((org.jsoup.Connection.KeyVal) keyVal14);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean17 = request16.ignoreContentType;
        request16.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request22 = request16.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy23 = request22.proxy;
        org.jsoup.helper.HttpConnection.Request request24 = request8.proxy(proxy23);
        boolean boolean25 = request24.ignoreContentType;
        response1.req = request24;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.serialiseRequestUrl((org.jsoup.Connection.Request) request24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        java.lang.String str13 = response1.getHeaderCaseInsensitive("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry15 = response1.scanHeaders("null=Content-Encoding");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        request17.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request21 = request17.ignoreContentType(true);
        java.lang.String str22 = request17.postDataCharset;
        int int23 = request17.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean25 = request24.ignoreContentType;
        request24.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request29 = request24.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal30 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request31 = request24.data((org.jsoup.Connection.KeyVal) keyVal30);
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean33 = request32.ignoreContentType;
        request32.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request38 = request32.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy39 = request38.proxy;
        org.jsoup.helper.HttpConnection.Request request40 = request24.proxy(proxy39);
        boolean boolean43 = request24.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal46 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request47 = request24.data((org.jsoup.Connection.KeyVal) keyVal46);
        boolean boolean48 = request24.followRedirects;
        java.net.Proxy proxy49 = request24.proxy;
        org.jsoup.helper.HttpConnection.Request request50 = request17.proxy(proxy49);
        response1.req = request50;
        java.lang.String str53 = response1.getHeaderCaseInsensitive("null=multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "multipart/form-data" + "'", str22.equals("multipart/form-data"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1048576 + "'", int23 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.value("null=Content-Encoding");
        boolean boolean6 = keyVal5.hasInputStream();
        java.lang.String str7 = keyVal5.value;
        java.io.InputStream inputStream8 = keyVal5.inputStream();
        java.io.InputStream inputStream9 = null;
        keyVal5.stream = inputStream9;
        java.lang.String str11 = keyVal5.value();
        keyVal5.value = "multipart/form-data";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Content-Encoding" + "'", str3.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=Content-Encoding" + "'", str7.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null=Content-Encoding" + "'", str11.equals("null=Content-Encoding"));
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request14 = request8.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy15 = request14.proxy;
        org.jsoup.helper.HttpConnection.Request request16 = request0.proxy(proxy15);
        boolean boolean19 = request0.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request23 = request0.data((org.jsoup.Connection.KeyVal) keyVal22);
        boolean boolean24 = request0.followRedirects;
        java.net.Proxy proxy25 = request0.proxy;
        java.lang.String str26 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        boolean boolean6 = request0.followRedirects();
        java.lang.String str8 = request0.header("UTF-8");
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.headers();
        org.jsoup.Connection.Request request12 = request0.cookie("application/x-www-form-urlencoded", "hi!=Content-Encoding");
        int int13 = request0.timeout();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = request0.hasCookie("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.Connection connection8 = httpConnection0.timeout(100);
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str12 = keyVal11.key();
        keyVal11.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal15.value = "Content-Encoding";
        java.lang.String str18 = keyVal15.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal19.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream23 = keyVal22.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal24 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream25 = keyVal24.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray26 = new org.jsoup.Connection.KeyVal[] { keyVal11, keyVal15, keyVal19, keyVal22, keyVal24 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList27 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList27, keyValArray26);
        org.jsoup.Connection connection29 = httpConnection10.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList27);
        request9.data = keyValList27;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean32 = request31.ignoreContentType;
        request31.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request36 = request31.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal37 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request38 = request31.data((org.jsoup.Connection.KeyVal) keyVal37);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean40 = request39.ignoreContentType;
        request39.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request45 = request39.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy46 = request45.proxy;
        org.jsoup.helper.HttpConnection.Request request47 = request31.proxy(proxy46);
        org.jsoup.helper.HttpConnection.Request request48 = request9.proxy(proxy46);
        org.jsoup.Connection connection49 = httpConnection0.proxy(proxy46);
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean51 = request50.ignoreContentType;
        request50.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request56 = request50.proxy("hi!", (int) (short) 0);
        request50.validateTSLCertificates = false;
        boolean boolean59 = request50.ignoreContentType;
        int int60 = request50.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean62 = request61.ignoreContentType;
        request61.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request67 = request61.proxy("hi!", (int) (short) 0);
        request61.validateTSLCertificates = false;
        boolean boolean70 = request61.ignoreContentType;
        org.jsoup.Connection.Request request72 = request61.followRedirects(true);
        org.jsoup.parser.Parser parser73 = request61.parser();
        int int74 = request61.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request75 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean76 = request75.ignoreContentType;
        request75.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request81 = request75.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy82 = request81.proxy;
        org.jsoup.helper.HttpConnection.Request request83 = request61.proxy(proxy82);
        request50.proxy = proxy82;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection85 = request50.data();
        org.jsoup.Connection connection86 = httpConnection0.data(keyValCollection85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null=Content-Encoding" + "'", str18.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection86);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean4 = request3.ignoreContentType;
        request3.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request8 = request3.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request10 = request3.data((org.jsoup.Connection.KeyVal) keyVal9);
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean12 = request11.ignoreContentType;
        request11.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request17 = request11.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy18 = request17.proxy;
        org.jsoup.helper.HttpConnection.Request request19 = request3.proxy(proxy18);
        boolean boolean22 = request3.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request26 = request3.data((org.jsoup.Connection.KeyVal) keyVal25);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request26.cookies();
        org.jsoup.Connection connection28 = httpConnection0.request((org.jsoup.Connection.Request) request26);
        org.jsoup.helper.HttpConnection.Response response29 = null;
        org.jsoup.helper.HttpConnection.Response response30 = new org.jsoup.helper.HttpConnection.Response(response29);
        boolean boolean31 = response30.executed;
        java.net.URL uRL32 = response30.url();
        boolean boolean33 = response30.executed;
        org.jsoup.Connection.Response response35 = response30.removeCookie("multipart/form-data");
        java.util.Map<java.lang.String, java.lang.String> strMap36 = response30.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = response30.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = response30.headers();
        org.jsoup.Connection connection39 = httpConnection0.cookies(strMap38);
        org.jsoup.Connection.Request request40 = httpConnection0.request();
        org.jsoup.helper.HttpConnection.Response response41 = null;
        org.jsoup.helper.HttpConnection.Response response42 = new org.jsoup.helper.HttpConnection.Response(response41);
        org.jsoup.helper.HttpConnection.Response response43 = null;
        org.jsoup.helper.HttpConnection.Response response44 = new org.jsoup.helper.HttpConnection.Response(response43);
        response44.numRedirects = '4';
        org.jsoup.Connection.Method method47 = response44.method();
        response44.statusCode = 1;
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean51 = request50.ignoreContentType;
        request50.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request55 = request50.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal56 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request57 = request50.data((org.jsoup.Connection.KeyVal) keyVal56);
        org.jsoup.helper.HttpConnection.Request request58 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean59 = request58.ignoreContentType;
        request58.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request64 = request58.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy65 = request64.proxy;
        org.jsoup.helper.HttpConnection.Request request66 = request50.proxy(proxy65);
        org.jsoup.Connection.Method method67 = request66.method();
        org.jsoup.Connection.Response response68 = response44.method(method67);
        org.jsoup.Connection.Response response69 = response42.method(method67);
        int int70 = response42.statusCode;
        java.lang.String str72 = response42.header("hi!=Content-Encoding");
        org.jsoup.Connection.Response response74 = response42.removeCookie("hi!=Content-Encoding");
        org.jsoup.Connection.Method method75 = response42.method();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = response42.headers();
        org.jsoup.Connection connection77 = httpConnection0.data(strMap76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        org.junit.Assert.assertTrue("'" + method67 + "' != '" + org.jsoup.Connection.Method.GET + "'", method67.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response74);
        org.junit.Assert.assertTrue("'" + method75 + "' != '" + org.jsoup.Connection.Method.GET + "'", method75.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection77);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request0.validateTSLCertificates = false;
        boolean boolean9 = request0.ignoreContentType;
        int int10 = request0.maxBodySize();
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser12 = null;
        org.jsoup.Connection connection13 = httpConnection11.parser(parser12);
        org.jsoup.Connection connection15 = httpConnection11.referrer("multipart/form-data");
        org.jsoup.Connection connection18 = httpConnection11.cookie("Content-Encoding", "");
        org.jsoup.Connection connection21 = httpConnection11.header("multipart/form-data", "multipart/form-data");
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean23 = request22.ignoreContentType;
        request22.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request27 = request22.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request29 = request22.data((org.jsoup.Connection.KeyVal) keyVal28);
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request36 = request30.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy37 = request36.proxy;
        org.jsoup.helper.HttpConnection.Request request38 = request22.proxy(proxy37);
        boolean boolean41 = request22.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        request22.ignoreContentType = false;
        org.jsoup.helper.HttpConnection httpConnection44 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser45 = null;
        org.jsoup.Connection connection46 = httpConnection44.parser(parser45);
        org.jsoup.Connection connection48 = httpConnection44.userAgent("hi!");
        org.jsoup.Connection connection50 = httpConnection44.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal51 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str52 = keyVal51.key();
        keyVal51.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal55 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal55.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray58 = new org.jsoup.Connection.KeyVal[] { keyVal51, keyVal55 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList59 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList59, keyValArray58);
        org.jsoup.Connection connection61 = httpConnection44.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList59);
        org.jsoup.parser.Parser parser62 = null;
        org.jsoup.Connection connection63 = httpConnection44.parser(parser62);
        org.jsoup.Connection connection65 = httpConnection44.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection66 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser67 = null;
        org.jsoup.Connection connection68 = httpConnection66.parser(parser67);
        org.jsoup.Connection connection70 = httpConnection66.userAgent("hi!");
        org.jsoup.Connection connection72 = httpConnection66.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal73 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str74 = keyVal73.key();
        keyVal73.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal77 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal77.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray80 = new org.jsoup.Connection.KeyVal[] { keyVal73, keyVal77 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList81 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList81, keyValArray80);
        org.jsoup.Connection connection83 = httpConnection66.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList81);
        org.jsoup.helper.HttpConnection.Request request84 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser85 = request84.parser();
        org.jsoup.Connection connection86 = httpConnection66.parser(parser85);
        org.jsoup.Connection connection87 = httpConnection44.parser(parser85);
        request22.parser = parser85;
        org.jsoup.Connection connection89 = httpConnection11.parser(parser85);
        request0.parser = parser85;
        request0.timeoutMilliseconds = (byte) 0;
        org.jsoup.Connection.Method method93 = request0.method();
        request0.validateTSLCertificates = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection89);
        org.junit.Assert.assertTrue("'" + method93 + "' != '" + org.jsoup.Connection.Method.GET + "'", method93.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser19 = request18.parser();
        org.jsoup.Connection connection20 = httpConnection0.parser(parser19);
        java.io.InputStream inputStream23 = null;
        org.jsoup.Connection connection24 = httpConnection0.data("hi!", "application/x-www-form-urlencoded", inputStream23);
        org.jsoup.Connection connection26 = httpConnection0.userAgent("hi!");
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        int int28 = request27.timeout();
        request27.parserDefined = true;
        request27.maxBodySizeBytes = (-1);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean34 = request33.ignoreContentType;
        request33.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request38 = request33.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request40 = request33.data((org.jsoup.Connection.KeyVal) keyVal39);
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean42 = request41.ignoreContentType;
        request41.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request47 = request41.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy48 = request47.proxy;
        org.jsoup.helper.HttpConnection.Request request49 = request33.proxy(proxy48);
        request27.proxy = proxy48;
        org.jsoup.Connection connection51 = httpConnection0.proxy(proxy48);
        org.jsoup.helper.HttpConnection.Request request52 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean53 = request52.ignoreContentType;
        request52.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request57 = request52.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal58 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request59 = request52.data((org.jsoup.Connection.KeyVal) keyVal58);
        org.jsoup.helper.HttpConnection.Request request60 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean61 = request60.ignoreContentType;
        request60.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request66 = request60.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy67 = request66.proxy;
        org.jsoup.helper.HttpConnection.Request request68 = request52.proxy(proxy67);
        org.jsoup.Connection connection69 = httpConnection0.proxy(proxy67);
        org.jsoup.Connection connection71 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Request request72 = httpConnection0.request();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3000 + "'", int28 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        java.lang.String str4 = response1.contentType;
        org.jsoup.Connection.Response response7 = response1.cookie("application/x-www-form-urlencoded", "");
        int int8 = response1.statusCode;
        boolean boolean11 = response1.hasHeaderWithValue("null=null=Content-Encoding", "hi!=Content-Encoding=UTF-8");
        int int12 = response1.statusCode;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("", "application/x-www-form-urlencoded");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        java.lang.String str4 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        request0.parserDefined = true;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean8 = request7.ignoreContentType;
        request7.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request13 = request7.proxy("hi!", (int) (short) 0);
        request7.validateTSLCertificates = false;
        boolean boolean16 = request7.ignoreContentType;
        org.jsoup.Connection.Request request18 = request7.followRedirects(true);
        org.jsoup.parser.Parser parser19 = request7.parser();
        int int20 = request7.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean22 = request21.ignoreContentType;
        request21.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request27 = request21.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy28 = request27.proxy;
        org.jsoup.helper.HttpConnection.Request request29 = request7.proxy(proxy28);
        org.jsoup.helper.HttpConnection.Request request30 = request0.proxy(proxy28);
        org.jsoup.helper.HttpConnection.Request request32 = request30.timeout((int) (short) 100);
        java.lang.String str34 = request32.header("application/x-www-form-urlencoded=null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        org.jsoup.Connection.Method method4 = response1.method();
        boolean boolean6 = response1.hasHeader("hi!");
        org.jsoup.Connection.Response response8 = response1.removeCookie("null=Content-Encoding");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray9 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(0);
        int int5 = request0.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = keyVal6.value("null=Content-Encoding");
        boolean boolean12 = keyVal11.hasInputStream();
        org.jsoup.helper.HttpConnection.Request request13 = request0.data((org.jsoup.Connection.KeyVal) keyVal11);
        int int14 = request13.timeout();
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost((org.jsoup.Connection.Request) request13, outputStream15, "hi!=Content-Encoding=UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1048576 + "'", int5 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Content-Encoding" + "'", str9.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        org.jsoup.Connection.Method method13 = response8.method();
        response8.statusCode = '4';
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response8.scanHeaders("hi!");
        boolean boolean19 = response8.hasCookie("hi!=Content-Encoding");
        java.net.URL uRL20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response21 = response8.url(uRL20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        org.jsoup.Connection.Response response12 = response1.header("hi!", "");
        response1.charset = "hi!";
        int int15 = response1.statusCode();
        org.jsoup.helper.HttpConnection.Response response16 = new org.jsoup.helper.HttpConnection.Response(response1);
        response16.numRedirects = (byte) -1;
        org.jsoup.Connection.Response response21 = response16.cookie("Content-Encoding", "null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean14 = request13.ignoreContentType;
        java.lang.String str15 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request13);
        org.jsoup.helper.HttpConnection.Response response16 = null;
        org.jsoup.helper.HttpConnection.Response response17 = new org.jsoup.helper.HttpConnection.Response(response16);
        org.jsoup.Connection.Response response20 = response17.cookie("null=Content-Encoding", "multipart/form-data");
        int int21 = response17.statusCode();
        boolean boolean24 = response17.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response25 = null;
        org.jsoup.helper.HttpConnection.Response response26 = new org.jsoup.helper.HttpConnection.Response(response25);
        boolean boolean27 = response26.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap28 = response26.cookies();
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal30 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str31 = keyVal30.key();
        keyVal30.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal34.value = "Content-Encoding";
        java.lang.String str37 = keyVal34.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal38 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal38.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal41 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream42 = keyVal41.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream44 = keyVal43.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray45 = new org.jsoup.Connection.KeyVal[] { keyVal30, keyVal34, keyVal38, keyVal41, keyVal43 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList46 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList46, keyValArray45);
        org.jsoup.Connection connection48 = httpConnection29.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList46);
        org.jsoup.helper.HttpConnection.Request request49 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean50 = request49.ignoreContentType;
        request49.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request54 = request49.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal55 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request56 = request49.data((org.jsoup.Connection.KeyVal) keyVal55);
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean58 = request57.ignoreContentType;
        request57.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request63 = request57.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy64 = request63.proxy;
        org.jsoup.helper.HttpConnection.Request request65 = request49.proxy(proxy64);
        org.jsoup.Connection.Method method66 = request65.method();
        org.jsoup.Connection connection67 = httpConnection29.method(method66);
        org.jsoup.Connection.Response response68 = response26.method(method66);
        org.jsoup.Connection.Response response69 = response17.method(method66);
        org.jsoup.Connection.Request request70 = request13.method(method66);
        org.jsoup.Connection.Response response71 = response8.method(method66);
        org.jsoup.helper.HttpConnection.Request request72 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean73 = request72.ignoreContentType;
        request72.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request78 = request72.proxy("hi!", (int) (short) 0);
        boolean boolean79 = request72.validateTSLCertificates;
        org.jsoup.parser.Parser parser80 = null;
        org.jsoup.helper.HttpConnection.Request request81 = request72.parser(parser80);
        boolean boolean82 = request72.validateTSLCertificates;
        request72.ignoreHttpErrors = true;
        response8.req = request72;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null=Content-Encoding" + "'", str37.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request65);
        org.junit.Assert.assertTrue("'" + method66 + "' != '" + org.jsoup.Connection.Method.GET + "'", method66.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.ignoreContentType = true;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection4 = request0.data();
        org.jsoup.Connection.Request request7 = request0.cookie("hi!=Content-Encoding", "hi!");
        java.lang.String str9 = request0.getHeaderCaseInsensitive("UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.value("null=Content-Encoding");
        boolean boolean6 = keyVal5.hasInputStream();
        java.lang.String str7 = keyVal5.value;
        java.io.InputStream inputStream8 = keyVal5.inputStream();
        keyVal5.value = "Content-Encoding";
        java.lang.String str11 = keyVal5.toString();
        java.io.InputStream inputStream12 = keyVal5.stream;
        java.io.InputStream inputStream13 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal5.inputStream(inputStream13);
        java.lang.String str15 = keyVal14.key();
        java.lang.String str16 = keyVal14.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Content-Encoding" + "'", str3.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=Content-Encoding" + "'", str7.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null=Content-Encoding" + "'", str11.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Content-Encoding" + "'", str16.equals("Content-Encoding"));
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.ignoreContentType = true;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection4 = request0.data();
        org.jsoup.Connection.Request request7 = request0.cookie("hi!=Content-Encoding", "hi!");
        int int8 = request0.timeout();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3000 + "'", int8 == 3000);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        java.lang.String str13 = response1.getHeaderCaseInsensitive("null=Content-Encoding");
        org.jsoup.Connection.Method method14 = response1.method();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry16 = response1.scanHeaders("");
        java.lang.String str18 = response1.getHeaderCaseInsensitive("hi!=Content-Encoding");
        org.jsoup.helper.HttpConnection.Response response19 = null;
        org.jsoup.helper.HttpConnection.Response response20 = new org.jsoup.helper.HttpConnection.Response(response19);
        org.jsoup.Connection.Response response23 = response20.cookie("null=Content-Encoding", "multipart/form-data");
        int int24 = response20.statusCode();
        java.lang.String str25 = response20.charset;
        java.lang.String str26 = response20.statusMessage();
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean28 = request27.ignoreContentType;
        request27.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request33 = request27.proxy("hi!", (int) (short) 0);
        request27.validateTSLCertificates = false;
        boolean boolean36 = request27.ignoreContentType;
        int int37 = request27.maxBodySize();
        boolean boolean38 = request27.followRedirects;
        java.net.Proxy proxy39 = null;
        org.jsoup.helper.HttpConnection.Request request40 = request27.proxy(proxy39);
        org.jsoup.parser.Parser parser41 = request40.parser;
        org.jsoup.Connection.Method method42 = request40.method();
        org.jsoup.Connection.Response response43 = response20.method(method42);
        org.jsoup.Connection.Response response44 = response1.method(method42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response44);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        java.lang.String str13 = response8.charset();
        boolean boolean14 = response8.executed;
        org.jsoup.Connection.Response response17 = response8.cookie("hi!", "hi!=Content-Encoding");
        org.jsoup.Connection.Method method18 = response8.method();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = response8.cookie("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method18);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection.Response response24 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        int int26 = request25.timeout();
        boolean boolean27 = request25.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request29 = request25.timeout(0);
        boolean boolean31 = request29.hasCookie("application/x-www-form-urlencoded");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection32 = request29.data();
        org.jsoup.Connection connection33 = httpConnection0.data(keyValCollection32);
        org.jsoup.Connection connection35 = httpConnection0.timeout((int) (byte) 100);
        org.jsoup.helper.HttpConnection.Response response36 = null;
        org.jsoup.helper.HttpConnection.Response response37 = new org.jsoup.helper.HttpConnection.Response(response36);
        org.jsoup.Connection.Response response40 = response37.cookie("null=Content-Encoding", "multipart/form-data");
        int int41 = response37.statusCode();
        boolean boolean44 = response37.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response46 = response37.removeCookie("Content-Encoding");
        org.jsoup.Connection.Response response49 = response37.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        java.lang.String str51 = response37.cookie("application/x-www-form-urlencoded");
        java.util.Map<java.lang.String, java.lang.String> strMap52 = response37.cookies();
        org.jsoup.Connection connection53 = httpConnection0.response((org.jsoup.Connection.Response) response37);
        java.nio.ByteBuffer byteBuffer54 = response37.byteData;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document55 = response37.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3000 + "'", int26 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "multipart/form-data" + "'", str51.equals("multipart/form-data"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer54);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        org.jsoup.Connection.Method method4 = response1.method();
        boolean boolean6 = response1.hasHeader("hi!");
        org.jsoup.Connection.Method method7 = response1.method();
        java.nio.ByteBuffer byteBuffer8 = response1.byteData;
        org.jsoup.Connection.Method method9 = response1.method();
        java.net.URL uRL10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response11 = response1.url(uRL10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method9);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        java.net.Proxy proxy2 = request0.proxy();
        request0.timeoutMilliseconds = (byte) 10;
        request0.followRedirects = true;
        org.jsoup.Connection.Request request8 = request0.removeCookie("multipart/form-data");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request10 = request0.removeHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(0);
        org.jsoup.Connection.Request request6 = request0.removeHeader("hi!=Content-Encoding");
        request0.timeoutMilliseconds = 10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request6.parserDefined = false;
        java.lang.String str10 = request6.header("UTF-8");
        java.lang.String str11 = request6.postDataCharset();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "UTF-8" + "'", str11.equals("UTF-8"));
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection7 = httpConnection0.data("null=application/x-www-form-urlencoded", "hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean8 = response1.hasHeaderWithValue("multipart/form-data", "");
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        java.lang.String str11 = response1.getHeaderCaseInsensitive("null=Content-Encoding");
        java.net.HttpURLConnection httpURLConnection12 = null;
        org.jsoup.helper.HttpConnection.Response response13 = null;
        org.jsoup.helper.HttpConnection.Response response14 = new org.jsoup.helper.HttpConnection.Response(response13);
        boolean boolean15 = response14.executed;
        java.net.URL uRL16 = response14.url();
        org.jsoup.Connection.Response response19 = response14.header("null=Content-Encoding", "multipart/form-data");
        java.lang.String str20 = response14.contentType();
        java.lang.String str21 = response14.statusMessage;
        java.net.URL uRL22 = response14.url();
        org.jsoup.helper.HttpConnection.Response response23 = null;
        org.jsoup.helper.HttpConnection.Response response24 = new org.jsoup.helper.HttpConnection.Response(response23);
        org.jsoup.helper.HttpConnection.Response response25 = null;
        org.jsoup.helper.HttpConnection.Response response26 = new org.jsoup.helper.HttpConnection.Response(response25);
        response26.numRedirects = '4';
        org.jsoup.Connection.Method method29 = response26.method();
        response26.statusCode = 1;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean33 = request32.ignoreContentType;
        request32.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request37 = request32.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal38 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request39 = request32.data((org.jsoup.Connection.KeyVal) keyVal38);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean41 = request40.ignoreContentType;
        request40.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request46 = request40.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy47 = request46.proxy;
        org.jsoup.helper.HttpConnection.Request request48 = request32.proxy(proxy47);
        org.jsoup.Connection.Method method49 = request48.method();
        org.jsoup.Connection.Response response50 = response26.method(method49);
        org.jsoup.Connection.Response response51 = response24.method(method49);
        org.jsoup.Connection.Response response52 = response14.method(method49);
        java.nio.ByteBuffer byteBuffer53 = response14.byteData;
        int int54 = response14.numRedirects;
        int int55 = response14.statusCode;
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection12, (org.jsoup.Connection.Response) response14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        java.io.InputStream inputStream2 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = org.jsoup.helper.HttpConnection.KeyVal.create("null=null", "application/x-www-form-urlencoded", inputStream2);
        boolean boolean4 = keyVal3.hasInputStream();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        java.net.Proxy proxy5 = request0.proxy();
        boolean boolean8 = request0.hasHeaderWithValue("Content-Encoding", "null=Content-Encoding");
        boolean boolean9 = request0.validateTSLCertificates;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.Connection connection7 = httpConnection0.cookie("Content-Encoding", "");
        org.jsoup.Connection connection9 = httpConnection0.maxBodySize(0);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean11 = request10.ignoreContentType;
        request10.ignoreContentType = true;
        httpConnection0.req = request10;
        org.jsoup.Connection connection16 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection19 = httpConnection0.data("application/x-www-form-urlencoded=application/x-www-form-urlencoded", "application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request14 = request8.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy15 = request14.proxy;
        org.jsoup.helper.HttpConnection.Request request16 = request0.proxy(proxy15);
        boolean boolean19 = request0.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request23 = request0.data((org.jsoup.Connection.KeyVal) keyVal22);
        boolean boolean24 = request0.followRedirects;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection25 = request0.data();
        request0.postDataCharset = "null=Content-Encoding";
        java.lang.String str29 = request0.header("hi!=Content-Encoding=UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.jsoup.helper.HttpConnection.CONTENT_ENCODING = "application/x-www-form-urlencoded=null=Content-Encoding";
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("null=Content-Encoding");
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal2.key("Content-Encoding");
        boolean boolean7 = keyVal2.hasInputStream();
        java.lang.String str8 = keyVal2.toString();
        java.lang.String str9 = keyVal2.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Content-Encoding=hi!" + "'", str8.equals("Content-Encoding=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Content-Encoding" + "'", str9.equals("Content-Encoding"));
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream1 = keyVal0.inputStream();
        java.lang.String str2 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal0.key("hi!=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        boolean boolean3 = request0.validateTSLCertificates;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        java.net.URL uRL12 = response1.url();
        java.lang.String str13 = response1.charset;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request0.postDataCharset = "hi!";
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.headers();
        int int10 = request0.maxBodySize();
        org.jsoup.Connection.Request request12 = request0.removeCookie("multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.jsoup.helper.HttpConnection.Response.LOCATION = "null=null=Content-Encoding";
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        java.lang.String str3 = request0.cookie("application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode;
        response1.statusMessage = "hi!";
        response1.executed = false;
        org.jsoup.Connection.Response response9 = response1.header("null=application/x-www-form-urlencoded", "UTF-8");
        boolean boolean12 = response1.hasHeaderWithValue("null=multipart/form-data", "Content-Encoding=hi!");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray13 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        org.jsoup.Connection.Response response10 = response1.removeHeader("multipart/form-data");
        response1.contentType = "application/x-www-form-urlencoded";
        java.net.URL uRL13 = response1.url();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry15 = response1.scanHeaders("application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry15);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal1 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str2 = keyVal1.key();
        keyVal1.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal5.value = "Content-Encoding";
        java.lang.String str8 = keyVal5.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal9.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream13 = keyVal12.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream15 = keyVal14.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray16 = new org.jsoup.Connection.KeyVal[] { keyVal1, keyVal5, keyVal9, keyVal12, keyVal14 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList17 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17, keyValArray16);
        org.jsoup.Connection connection19 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17);
        org.jsoup.Connection connection21 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection connection23 = httpConnection0.maxBodySize((int) (short) 1);
        org.jsoup.Connection connection25 = httpConnection0.timeout(0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=Content-Encoding" + "'", str8.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.maxBodySize(0);
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str10 = keyVal9.key();
        keyVal9.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal13.value = "Content-Encoding";
        java.lang.String str16 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal17.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream21 = keyVal20.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream23 = keyVal22.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray24 = new org.jsoup.Connection.KeyVal[] { keyVal9, keyVal13, keyVal17, keyVal20, keyVal22 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList25 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList25, keyValArray24);
        org.jsoup.Connection connection27 = httpConnection8.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList25);
        request7.data = keyValList25;
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean30 = request29.ignoreContentType;
        request29.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request34 = request29.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request36 = request29.data((org.jsoup.Connection.KeyVal) keyVal35);
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean38 = request37.ignoreContentType;
        request37.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request43 = request37.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy44 = request43.proxy;
        org.jsoup.helper.HttpConnection.Request request45 = request29.proxy(proxy44);
        org.jsoup.helper.HttpConnection.Request request46 = request7.proxy(proxy44);
        int int47 = request46.timeout();
        request46.timeoutMilliseconds = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean51 = request50.ignoreContentType;
        request50.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request55 = request50.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal56 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request57 = request50.data((org.jsoup.Connection.KeyVal) keyVal56);
        org.jsoup.Connection.Request request60 = request50.header("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.parser.Parser parser61 = request50.parser();
        request46.parser = parser61;
        org.jsoup.Connection connection63 = httpConnection0.parser(parser61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null=Content-Encoding" + "'", str16.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3000 + "'", int47 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        org.jsoup.Connection.Response response9 = response1.header("hi!", "multipart/form-data");
        org.jsoup.Connection.Response response12 = response1.cookie("application/x-www-form-urlencoded=application/x-www-form-urlencoded", "Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.value("null=Content-Encoding");
        boolean boolean6 = keyVal5.hasInputStream();
        java.lang.String str7 = keyVal5.value;
        java.io.InputStream inputStream8 = keyVal5.inputStream();
        java.io.InputStream inputStream9 = null;
        keyVal5.stream = inputStream9;
        boolean boolean11 = keyVal5.hasInputStream();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Content-Encoding" + "'", str3.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=Content-Encoding" + "'", str7.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        request7.followRedirects = false;
        java.net.Proxy proxy10 = request7.proxy();
        org.jsoup.Connection.Request request12 = request7.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser14 = request13.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request13.headers();
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser17 = null;
        org.jsoup.Connection connection18 = httpConnection16.parser(parser17);
        org.jsoup.Connection connection20 = httpConnection16.referrer("multipart/form-data");
        org.jsoup.Connection connection23 = httpConnection16.cookie("Content-Encoding", "");
        org.jsoup.Connection connection26 = httpConnection16.header("multipart/form-data", "multipart/form-data");
        org.jsoup.Connection connection28 = httpConnection16.maxBodySize(1048576);
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser30 = request29.parser();
        org.jsoup.Connection connection31 = httpConnection16.parser(parser30);
        org.jsoup.helper.HttpConnection.Request request32 = request13.parser(parser30);
        org.jsoup.helper.HttpConnection.Request request33 = request7.parser(parser30);
        boolean boolean34 = request7.ignoreHttpErrors;
        java.net.URL uRL35 = request7.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL35);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        response1.statusMessage = "hi!";
        java.net.URL uRL7 = response1.url();
        org.jsoup.helper.HttpConnection.Response response8 = null;
        org.jsoup.helper.HttpConnection.Response response9 = new org.jsoup.helper.HttpConnection.Response(response8);
        boolean boolean10 = response9.executed;
        java.net.URL uRL11 = response9.url();
        boolean boolean12 = response9.executed;
        org.jsoup.Connection.Response response14 = response9.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request15 = response9.req;
        org.jsoup.Connection.Request request16 = null;
        response9.req = request16;
        java.lang.String str19 = response9.cookie("multipart/form-data");
        java.lang.String str21 = response9.header("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response22 = null;
        org.jsoup.helper.HttpConnection.Response response23 = new org.jsoup.helper.HttpConnection.Response(response22);
        boolean boolean24 = response23.executed;
        java.net.URL uRL25 = response23.url();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = response23.cookies();
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser28 = null;
        org.jsoup.Connection connection29 = httpConnection27.parser(parser28);
        org.jsoup.Connection connection31 = httpConnection27.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response32 = null;
        org.jsoup.helper.HttpConnection.Response response33 = new org.jsoup.helper.HttpConnection.Response(response32);
        boolean boolean34 = response33.executed;
        java.net.URL uRL35 = response33.url();
        boolean boolean36 = response33.executed;
        response33.executed = false;
        httpConnection27.res = response33;
        org.jsoup.helper.HttpConnection.Response response40 = null;
        org.jsoup.helper.HttpConnection.Response response41 = new org.jsoup.helper.HttpConnection.Response(response40);
        org.jsoup.Connection.Response response44 = response41.cookie("null=Content-Encoding", "multipart/form-data");
        int int45 = response41.statusCode();
        boolean boolean48 = response41.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response49 = null;
        org.jsoup.helper.HttpConnection.Response response50 = new org.jsoup.helper.HttpConnection.Response(response49);
        boolean boolean51 = response50.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = response50.cookies();
        org.jsoup.helper.HttpConnection httpConnection53 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal54 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str55 = keyVal54.key();
        keyVal54.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal58 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal58.value = "Content-Encoding";
        java.lang.String str61 = keyVal58.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal62 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal62.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal65 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream66 = keyVal65.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal67 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream68 = keyVal67.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray69 = new org.jsoup.Connection.KeyVal[] { keyVal54, keyVal58, keyVal62, keyVal65, keyVal67 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList70 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList70, keyValArray69);
        org.jsoup.Connection connection72 = httpConnection53.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList70);
        org.jsoup.helper.HttpConnection.Request request73 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean74 = request73.ignoreContentType;
        request73.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request78 = request73.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal79 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request80 = request73.data((org.jsoup.Connection.KeyVal) keyVal79);
        org.jsoup.helper.HttpConnection.Request request81 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean82 = request81.ignoreContentType;
        request81.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request87 = request81.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy88 = request87.proxy;
        org.jsoup.helper.HttpConnection.Request request89 = request73.proxy(proxy88);
        org.jsoup.Connection.Method method90 = request89.method();
        org.jsoup.Connection connection91 = httpConnection53.method(method90);
        org.jsoup.Connection.Response response92 = response50.method(method90);
        org.jsoup.Connection.Response response93 = response41.method(method90);
        org.jsoup.Connection connection94 = httpConnection27.method(method90);
        org.jsoup.Connection.Response response95 = response23.method(method90);
        org.jsoup.Connection.Response response96 = response9.method(method90);
        org.jsoup.Connection.Response response97 = response1.method(method90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "null=Content-Encoding" + "'", str61.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request89);
        org.junit.Assert.assertTrue("'" + method90 + "' != '" + org.jsoup.Connection.Method.GET + "'", method90.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response97);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        org.jsoup.Connection.Method method4 = response1.method();
        response1.statusCode = 1;
        java.net.URL uRL7 = response1.url();
        org.jsoup.Connection.Request request8 = response1.req;
        response1.charset = "";
        java.lang.String str11 = response1.statusMessage;
        boolean boolean14 = response1.hasHeaderWithValue("Content-Encoding", "hi!=Content-Encoding=UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request14 = request8.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy15 = request14.proxy;
        org.jsoup.helper.HttpConnection.Request request16 = request0.proxy(proxy15);
        boolean boolean19 = request0.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        boolean boolean20 = request0.ignoreHttpErrors();
        int int21 = request0.maxBodySize();
        boolean boolean24 = request0.hasHeaderWithValue("Content-Encoding", "null=Content-Encoding");
        boolean boolean25 = request0.validateTLSCertificates();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        request7.followRedirects = false;
        java.net.Proxy proxy10 = request7.proxy;
        request7.postDataCharset = "UTF-8";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy10);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        java.lang.String str12 = response1.contentType();
        java.nio.ByteBuffer byteBuffer13 = response1.byteData;
        org.jsoup.Connection.Response response16 = response1.cookie("hi!=Content-Encoding=UTF-8", "application/x-www-form-urlencoded=null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.Connection connection7 = httpConnection0.cookie("Content-Encoding", "");
        org.jsoup.Connection connection9 = httpConnection0.maxBodySize(0);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean11 = request10.ignoreContentType;
        request10.ignoreContentType = true;
        httpConnection0.req = request10;
        org.jsoup.helper.HttpConnection.Response response15 = null;
        org.jsoup.helper.HttpConnection.Response response16 = new org.jsoup.helper.HttpConnection.Response(response15);
        boolean boolean17 = response16.executed;
        java.net.URL uRL18 = response16.url();
        int int19 = response16.statusCode;
        boolean boolean21 = response16.hasHeader("null=Content-Encoding");
        org.jsoup.Connection.Response response24 = response16.header("hi!", "multipart/form-data");
        response16.statusCode = (short) 0;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response27 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request10, response16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.parser.Parser parser20 = null;
        org.jsoup.Connection connection21 = httpConnection0.parser(parser20);
        org.jsoup.Connection connection23 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection.Response response24 = null;
        org.jsoup.helper.HttpConnection.Response response25 = new org.jsoup.helper.HttpConnection.Response(response24);
        response25.numRedirects = '4';
        org.jsoup.Connection.Method method28 = response25.method();
        java.lang.String str29 = response25.statusMessage();
        boolean boolean32 = response25.hasHeaderWithValue("UTF-8", "");
        java.util.Map<java.lang.String, java.lang.String> strMap33 = response25.cookies();
        org.jsoup.Connection connection34 = httpConnection0.data(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.jsoup.helper.HttpConnection.CONTENT_TYPE = "null=null=Content-Encoding";
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        org.jsoup.Connection.Response response6 = response1.header("null=Content-Encoding", "multipart/form-data");
        java.lang.String str7 = response1.statusMessage;
        response1.statusMessage = "UTF-8";
        org.jsoup.Connection.Response response11 = response1.removeCookie("null=Content-Encoding");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = response1.headers();
        org.jsoup.Connection.Response response15 = response1.header("application/x-www-form-urlencoded=null=Content-Encoding", "hi!=Content-Encoding=UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        java.net.Proxy proxy5 = request0.proxy();
        boolean boolean8 = request0.hasHeaderWithValue("Content-Encoding", "null=Content-Encoding");
        java.net.URL uRL9 = request0.url();
        request0.validateTLSCertificates(false);
        boolean boolean12 = request0.ignoreContentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response5 = null;
        org.jsoup.helper.HttpConnection.Response response6 = new org.jsoup.helper.HttpConnection.Response(response5);
        boolean boolean7 = response6.executed;
        java.net.URL uRL8 = response6.url();
        boolean boolean9 = response6.executed;
        response6.executed = false;
        httpConnection0.res = response6;
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        int int14 = request13.timeout();
        request13.parserDefined = true;
        request13.maxBodySizeBytes = (-1);
        httpConnection0.req = request13;
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser21 = null;
        org.jsoup.Connection connection22 = httpConnection20.parser(parser21);
        org.jsoup.Connection connection24 = httpConnection20.userAgent("hi!");
        org.jsoup.Connection connection26 = httpConnection20.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response27 = null;
        org.jsoup.helper.HttpConnection.Response response28 = new org.jsoup.helper.HttpConnection.Response(response27);
        boolean boolean29 = response28.executed;
        java.net.URL uRL30 = response28.url();
        boolean boolean31 = response28.executed;
        httpConnection20.res = response28;
        java.lang.String str33 = response28.statusMessage;
        java.lang.String str35 = response28.header("hi!");
        httpConnection0.res = response28;
        java.lang.String str37 = response28.charset();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3000 + "'", int14 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        org.jsoup.Connection connection15 = httpConnection0.header("Content-Encoding", "multipart/form-data");
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str18 = keyVal17.key();
        keyVal17.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal21.value = "Content-Encoding";
        java.lang.String str24 = keyVal21.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal25.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream29 = keyVal28.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal30 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream31 = keyVal30.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray32 = new org.jsoup.Connection.KeyVal[] { keyVal17, keyVal21, keyVal25, keyVal28, keyVal30 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList33 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList33, keyValArray32);
        org.jsoup.Connection connection35 = httpConnection16.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList33);
        org.jsoup.Connection connection36 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList33);
        org.jsoup.Connection connection39 = httpConnection0.proxy("null=Content-Encoding", (int) (short) 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null=Content-Encoding" + "'", str24.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.key();
        java.io.InputStream inputStream4 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.inputStream(inputStream4);
        keyVal0.value = "hi!";
        boolean boolean8 = keyVal0.hasInputStream();
        java.lang.String str9 = keyVal0.toString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=hi!" + "'", str9.equals("null=hi!"));
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("application/x-www-form-urlencoded", "null=Content-Encoding");
        java.io.InputStream inputStream3 = null;
        keyVal2.stream = inputStream3;
        java.lang.String str5 = keyVal2.toString();
        java.lang.String str6 = keyVal2.toString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "application/x-www-form-urlencoded=null=Content-Encoding" + "'", str5.equals("application/x-www-form-urlencoded=null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "application/x-www-form-urlencoded=null=Content-Encoding" + "'", str6.equals("application/x-www-form-urlencoded=null=Content-Encoding"));
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.key();
        java.io.InputStream inputStream4 = keyVal0.stream;
        java.io.InputStream inputStream5 = null;
        keyVal0.stream = inputStream5;
        java.lang.String str7 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.key("null=null");
        java.io.InputStream inputStream10 = keyVal0.stream;
        java.lang.String str11 = keyVal0.key;
        java.lang.String str12 = keyVal0.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null=null" + "'", str11.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null=null" + "'", str12.equals("null=null"));
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request0.validateTSLCertificates = false;
        java.lang.String str10 = request0.header("application/x-www-form-urlencoded");
        request0.followRedirects = false;
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost((org.jsoup.Connection.Request) request0, outputStream13, "null=null");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        org.jsoup.Connection.Request request4 = request0.cookie("null=Content-Encoding", "hi!");
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser6 = null;
        org.jsoup.Connection connection7 = httpConnection5.parser(parser6);
        org.jsoup.Connection connection9 = httpConnection5.userAgent("hi!");
        org.jsoup.Connection connection11 = httpConnection5.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str13 = keyVal12.key();
        keyVal12.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal16.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray19 = new org.jsoup.Connection.KeyVal[] { keyVal12, keyVal16 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList20 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList20, keyValArray19);
        org.jsoup.Connection connection22 = httpConnection5.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList20);
        request0.data = keyValList20;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry25 = request0.scanHeaders("multipart/form-data");
        org.jsoup.Connection.Request request28 = request0.cookie("null=hi!", "hi!=Content-Encoding=UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.lang.String str2 = request0.cookie("Content-Encoding");
        org.jsoup.Connection.Request request4 = request0.maxBodySize((int) (byte) 0);
        boolean boolean7 = request0.hasHeaderWithValue("null=application/x-www-form-urlencoded", "Content-Encoding=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = response1.scanHeaders("null=Content-Encoding");
        response1.numRedirects = 0;
        response1.executed = true;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document14 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.Connection connection8 = httpConnection0.ignoreHttpErrors(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection1 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str3 = keyVal2.key();
        keyVal2.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal10.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream14 = keyVal13.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream16 = keyVal15.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray17 = new org.jsoup.Connection.KeyVal[] { keyVal2, keyVal6, keyVal10, keyVal13, keyVal15 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList18 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18, keyValArray17);
        org.jsoup.Connection connection20 = httpConnection1.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18);
        request0.data = keyValList18;
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean23 = request22.ignoreContentType;
        request22.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request27 = request22.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request29 = request22.data((org.jsoup.Connection.KeyVal) keyVal28);
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request36 = request30.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy37 = request36.proxy;
        org.jsoup.helper.HttpConnection.Request request38 = request22.proxy(proxy37);
        org.jsoup.helper.HttpConnection.Request request39 = request0.proxy(proxy37);
        int int40 = request39.timeout();
        request39.parserDefined = false;
        boolean boolean43 = request39.validateTSLCertificates;
        org.jsoup.helper.HttpConnection.Request request45 = request39.timeout((int) (byte) 0);
        request45.postDataCharset = "null=Content-Encoding";
        int int48 = request45.timeoutMilliseconds;
        org.jsoup.helper.HttpConnection.Request request49 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean50 = request49.ignoreContentType;
        request49.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request54 = request49.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request56 = request49.timeout((int) (byte) 10);
        org.jsoup.helper.HttpConnection httpConnection57 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser58 = null;
        org.jsoup.Connection connection59 = httpConnection57.parser(parser58);
        org.jsoup.Connection connection61 = httpConnection57.userAgent("hi!");
        org.jsoup.Connection connection63 = httpConnection57.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal64 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str65 = keyVal64.key();
        keyVal64.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal68 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal68.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray71 = new org.jsoup.Connection.KeyVal[] { keyVal64, keyVal68 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList72 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList72, keyValArray71);
        org.jsoup.Connection connection74 = httpConnection57.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList72);
        org.jsoup.helper.HttpConnection.Request request75 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser76 = request75.parser();
        org.jsoup.Connection connection77 = httpConnection57.parser(parser76);
        org.jsoup.helper.HttpConnection.Request request78 = request56.parser(parser76);
        org.jsoup.helper.HttpConnection.Request request79 = request45.parser(parser76);
        request79.followRedirects = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=Content-Encoding" + "'", str9.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request79);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        response1.contentType = "";
        java.util.Map<java.lang.String, java.lang.String> strMap11 = response1.headers();
        org.jsoup.Connection.Response response14 = response1.cookie("multipart/form-data", "null=null");
        boolean boolean16 = response1.hasHeader("multipart/form-data");
        org.jsoup.Connection.Response response18 = response1.removeHeader("Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response18);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        org.jsoup.Connection.Method method13 = response8.method();
        boolean boolean15 = response8.hasCookie("null=null=Content-Encoding");
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response17 = response8.url(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        int int5 = request0.timeoutMilliseconds;
        int int6 = request0.maxBodySizeBytes;
        boolean boolean8 = request0.hasHeader("multipart/form-data");
        boolean boolean10 = request0.hasHeader("multipart/form-data");
        boolean boolean11 = request0.validateTSLCertificates;
        int int12 = request0.timeout();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean14 = request13.ignoreContentType;
        request13.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request19 = request13.proxy("hi!", (int) (short) 0);
        request13.validateTSLCertificates = false;
        boolean boolean22 = request13.ignoreContentType;
        int int23 = request13.maxBodySize();
        boolean boolean24 = request13.followRedirects;
        java.net.Proxy proxy25 = null;
        org.jsoup.helper.HttpConnection.Request request26 = request13.proxy(proxy25);
        org.jsoup.parser.Parser parser27 = request26.parser;
        org.jsoup.Connection.Method method28 = request26.method();
        org.jsoup.Connection.Request request29 = request0.method(method28);
        org.jsoup.Connection.Request request32 = request0.cookie("hi!=Content-Encoding=UTF-8", "UTF-8");
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        int int34 = request33.timeout();
        boolean boolean35 = request33.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request37 = request33.timeout(0);
        java.net.Proxy proxy38 = request33.proxy;
        java.lang.String str40 = request33.header("hi!");
        java.lang.String str41 = request33.postDataCharset;
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean43 = request42.ignoreContentType;
        request42.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request47 = request42.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request49 = request42.timeout((int) (byte) 10);
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection51 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal52 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str53 = keyVal52.key();
        keyVal52.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal56 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal56.value = "Content-Encoding";
        java.lang.String str59 = keyVal56.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal60 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal60.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal63 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream64 = keyVal63.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal65 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream66 = keyVal65.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray67 = new org.jsoup.Connection.KeyVal[] { keyVal52, keyVal56, keyVal60, keyVal63, keyVal65 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList68 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList68, keyValArray67);
        org.jsoup.Connection connection70 = httpConnection51.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList68);
        request50.data = keyValList68;
        org.jsoup.helper.HttpConnection.Request request72 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean73 = request72.ignoreContentType;
        request72.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request77 = request72.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal78 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request79 = request72.data((org.jsoup.Connection.KeyVal) keyVal78);
        org.jsoup.helper.HttpConnection.Request request80 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean81 = request80.ignoreContentType;
        request80.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request86 = request80.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy87 = request86.proxy;
        org.jsoup.helper.HttpConnection.Request request88 = request72.proxy(proxy87);
        org.jsoup.helper.HttpConnection.Request request89 = request50.proxy(proxy87);
        org.jsoup.helper.HttpConnection.Request request90 = request42.proxy(proxy87);
        request33.proxy = proxy87;
        org.jsoup.helper.HttpConnection.Request request92 = request0.proxy(proxy87);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry94 = request0.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap95 = request0.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3000 + "'", int5 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3000 + "'", int12 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser27);
        org.junit.Assert.assertTrue("'" + method28 + "' != '" + org.jsoup.Connection.Method.GET + "'", method28.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 3000 + "'", int34 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "UTF-8" + "'", str41.equals("UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "null=Content-Encoding" + "'", str59.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap95);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.userAgent("hi!");
        org.jsoup.Connection connection28 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str30 = keyVal29.key();
        keyVal29.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal33.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray36 = new org.jsoup.Connection.KeyVal[] { keyVal29, keyVal33 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList37 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList37, keyValArray36);
        org.jsoup.Connection connection39 = httpConnection22.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser41 = request40.parser();
        org.jsoup.Connection connection42 = httpConnection22.parser(parser41);
        org.jsoup.Connection connection43 = httpConnection0.parser(parser41);
        org.jsoup.Connection.Request request44 = null;
        httpConnection0.req = request44;
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean47 = request46.ignoreContentType;
        request46.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request52 = request46.proxy("hi!", (int) (short) 0);
        boolean boolean53 = request46.validateTSLCertificates;
        org.jsoup.parser.Parser parser54 = null;
        org.jsoup.helper.HttpConnection.Request request55 = request46.parser(parser54);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection56 = request55.data;
        httpConnection0.req = request55;
        org.jsoup.Connection connection59 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection61 = httpConnection0.maxBodySize(10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection.Response response24 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Response response25 = null;
        org.jsoup.helper.HttpConnection.Response response26 = new org.jsoup.helper.HttpConnection.Response(response25);
        org.jsoup.helper.HttpConnection.Response response27 = null;
        org.jsoup.helper.HttpConnection.Response response28 = new org.jsoup.helper.HttpConnection.Response(response27);
        response28.numRedirects = '4';
        org.jsoup.Connection.Method method31 = response28.method();
        response28.statusCode = 1;
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean35 = request34.ignoreContentType;
        request34.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request39 = request34.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal40 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request41 = request34.data((org.jsoup.Connection.KeyVal) keyVal40);
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean43 = request42.ignoreContentType;
        request42.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request48 = request42.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy49 = request48.proxy;
        org.jsoup.helper.HttpConnection.Request request50 = request34.proxy(proxy49);
        org.jsoup.Connection.Method method51 = request50.method();
        org.jsoup.Connection.Response response52 = response28.method(method51);
        org.jsoup.Connection.Response response53 = response26.method(method51);
        int int54 = response26.statusCode;
        java.lang.String str56 = response26.header("hi!=Content-Encoding");
        java.lang.String str58 = response26.header("null=null");
        org.jsoup.Connection.Response response60 = response26.removeCookie("application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        java.util.Map<java.lang.String, java.lang.String> strMap61 = response26.cookies();
        httpConnection0.res = response26;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap61);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        boolean boolean7 = request0.validateTSLCertificates;
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.helper.HttpConnection.Request request9 = request0.parser(parser8);
        java.net.Proxy proxy10 = request9.proxy;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry12 = request9.scanHeaders("multipart/form-data");
        request9.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request9.headers();
        boolean boolean16 = request9.parserDefined;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.helper.HttpConnection.Response response3 = null;
        org.jsoup.helper.HttpConnection.Response response4 = new org.jsoup.helper.HttpConnection.Response(response3);
        boolean boolean5 = response4.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap6 = response4.headers();
        org.jsoup.Connection connection7 = httpConnection0.data(strMap6);
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection connection11 = httpConnection0.referrer("hi!=Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean13 = request12.ignoreContentType;
        java.lang.String str14 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request12);
        org.jsoup.helper.HttpConnection.Response response15 = null;
        org.jsoup.helper.HttpConnection.Response response16 = new org.jsoup.helper.HttpConnection.Response(response15);
        org.jsoup.Connection.Response response19 = response16.cookie("null=Content-Encoding", "multipart/form-data");
        int int20 = response16.statusCode();
        boolean boolean23 = response16.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response24 = null;
        org.jsoup.helper.HttpConnection.Response response25 = new org.jsoup.helper.HttpConnection.Response(response24);
        boolean boolean26 = response25.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap27 = response25.cookies();
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str30 = keyVal29.key();
        keyVal29.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal33.value = "Content-Encoding";
        java.lang.String str36 = keyVal33.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal37 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal37.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal40 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream41 = keyVal40.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal42 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream43 = keyVal42.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray44 = new org.jsoup.Connection.KeyVal[] { keyVal29, keyVal33, keyVal37, keyVal40, keyVal42 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList45 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList45, keyValArray44);
        org.jsoup.Connection connection47 = httpConnection28.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList45);
        org.jsoup.helper.HttpConnection.Request request48 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean49 = request48.ignoreContentType;
        request48.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request53 = request48.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal54 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request55 = request48.data((org.jsoup.Connection.KeyVal) keyVal54);
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean57 = request56.ignoreContentType;
        request56.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request62 = request56.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy63 = request62.proxy;
        org.jsoup.helper.HttpConnection.Request request64 = request48.proxy(proxy63);
        org.jsoup.Connection.Method method65 = request64.method();
        org.jsoup.Connection connection66 = httpConnection28.method(method65);
        org.jsoup.Connection.Response response67 = response25.method(method65);
        org.jsoup.Connection.Response response68 = response16.method(method65);
        org.jsoup.Connection.Request request69 = request12.method(method65);
        org.jsoup.Connection connection70 = httpConnection0.method(method65);
        org.jsoup.helper.HttpConnection.Response response71 = null;
        org.jsoup.helper.HttpConnection.Response response72 = new org.jsoup.helper.HttpConnection.Response(response71);
        java.lang.String str74 = response72.getHeaderCaseInsensitive("Content-Encoding");
        java.lang.String str76 = response72.header("multipart/form-data");
        int int77 = response72.statusCode;
        httpConnection0.res = response72;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null=Content-Encoding" + "'", str36.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertTrue("'" + method65 + "' != '" + org.jsoup.Connection.Method.GET + "'", method65.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request0.validateTSLCertificates = false;
        boolean boolean9 = request0.ignoreContentType;
        int int10 = request0.maxBodySize();
        boolean boolean11 = request0.followRedirects;
        java.net.Proxy proxy12 = null;
        org.jsoup.helper.HttpConnection.Request request13 = request0.proxy(proxy12);
        org.jsoup.parser.Parser parser14 = request13.parser;
        boolean boolean15 = request13.validateTSLCertificates;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request6.parserDefined = false;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request6.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        java.lang.String str5 = request0.postDataCharset;
        int int6 = request0.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean8 = request7.ignoreContentType;
        request7.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request12 = request7.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request14 = request7.data((org.jsoup.Connection.KeyVal) keyVal13);
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean16 = request15.ignoreContentType;
        request15.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request21 = request15.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy22 = request21.proxy;
        org.jsoup.helper.HttpConnection.Request request23 = request7.proxy(proxy22);
        boolean boolean26 = request7.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request30 = request7.data((org.jsoup.Connection.KeyVal) keyVal29);
        boolean boolean31 = request7.followRedirects;
        java.net.Proxy proxy32 = request7.proxy;
        org.jsoup.helper.HttpConnection.Request request33 = request0.proxy(proxy32);
        java.lang.String str34 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "multipart/form-data" + "'", str5.equals("multipart/form-data"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request0.validateTSLCertificates = false;
        boolean boolean9 = request0.ignoreContentType;
        org.jsoup.Connection.Request request11 = request0.maxBodySize(52);
        int int12 = request0.timeoutMilliseconds;
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost((org.jsoup.Connection.Request) request0, outputStream13, "application/x-www-form-urlencoded");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3000 + "'", int12 == 3000);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        java.util.Map<java.lang.String, java.lang.String> strMap5 = response1.cookies();
        org.jsoup.Connection.Request request6 = response1.req;
        java.lang.String str7 = response1.charset;
        org.jsoup.Connection.Response response10 = response1.header("Content-Encoding=hi!", "null=null=Content-Encoding");
        org.jsoup.Connection.Response response12 = response1.removeHeader("null=null=Content-Encoding");
        org.jsoup.Connection.Response response15 = response1.cookie("hi!=Content-Encoding", "application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.validateTLSCertificates(true);
        org.jsoup.Connection.Response response7 = httpConnection0.res;
        org.jsoup.Connection.Response response8 = httpConnection0.res;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        org.jsoup.Connection.Response response12 = response1.header("hi!", "");
        response1.charset = "hi!";
        java.nio.ByteBuffer byteBuffer15 = response1.byteData;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer15);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        java.lang.String str4 = response1.contentType;
        response1.charset = "null=Content-Encoding";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        java.lang.String str4 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        request0.parserDefined = true;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean8 = request7.ignoreContentType;
        request7.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request13 = request7.proxy("hi!", (int) (short) 0);
        request7.validateTSLCertificates = false;
        boolean boolean16 = request7.ignoreContentType;
        org.jsoup.Connection.Request request18 = request7.followRedirects(true);
        org.jsoup.parser.Parser parser19 = request7.parser();
        int int20 = request7.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean22 = request21.ignoreContentType;
        request21.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request27 = request21.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy28 = request27.proxy;
        org.jsoup.helper.HttpConnection.Request request29 = request7.proxy(proxy28);
        org.jsoup.helper.HttpConnection.Request request30 = request0.proxy(proxy28);
        org.jsoup.helper.HttpConnection.Request request32 = request30.timeout((int) (short) 100);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        int int34 = request33.timeout();
        boolean boolean35 = request33.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request37 = request33.timeout(0);
        boolean boolean39 = request37.hasCookie("application/x-www-form-urlencoded");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection40 = request37.data();
        request30.data = keyValCollection40;
        org.jsoup.Connection.Request request43 = request30.removeCookie("null=null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 3000 + "'", int34 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request14 = request8.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy15 = request14.proxy;
        org.jsoup.helper.HttpConnection.Request request16 = request0.proxy(proxy15);
        boolean boolean19 = request0.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        request0.ignoreContentType = false;
        org.jsoup.Connection.Request request23 = request0.removeCookie("null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection1 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str3 = keyVal2.key();
        keyVal2.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal10.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream14 = keyVal13.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream16 = keyVal15.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray17 = new org.jsoup.Connection.KeyVal[] { keyVal2, keyVal6, keyVal10, keyVal13, keyVal15 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList18 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18, keyValArray17);
        org.jsoup.Connection connection20 = httpConnection1.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18);
        request0.data = keyValList18;
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean23 = request22.ignoreContentType;
        request22.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request27 = request22.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request29 = request22.data((org.jsoup.Connection.KeyVal) keyVal28);
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request36 = request30.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy37 = request36.proxy;
        org.jsoup.helper.HttpConnection.Request request38 = request22.proxy(proxy37);
        org.jsoup.helper.HttpConnection.Request request39 = request0.proxy(proxy37);
        boolean boolean40 = request0.followRedirects();
        request0.maxBodySizeBytes = (short) 100;
        request0.ignoreHttpErrors = true;
        int int45 = request0.maxBodySizeBytes;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=Content-Encoding" + "'", str9.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.helper.HttpConnection.Response response3 = null;
        org.jsoup.helper.HttpConnection.Response response4 = new org.jsoup.helper.HttpConnection.Response(response3);
        boolean boolean5 = response4.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap6 = response4.headers();
        org.jsoup.Connection connection7 = httpConnection0.data(strMap6);
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Response response10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        boolean boolean12 = response11.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap13 = response11.cookies();
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str16 = keyVal15.key();
        keyVal15.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal19.value = "Content-Encoding";
        java.lang.String str22 = keyVal19.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal23.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream27 = keyVal26.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream29 = keyVal28.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray30 = new org.jsoup.Connection.KeyVal[] { keyVal15, keyVal19, keyVal23, keyVal26, keyVal28 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList31 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList31, keyValArray30);
        org.jsoup.Connection connection33 = httpConnection14.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList31);
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean35 = request34.ignoreContentType;
        request34.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request39 = request34.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal40 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request41 = request34.data((org.jsoup.Connection.KeyVal) keyVal40);
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean43 = request42.ignoreContentType;
        request42.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request48 = request42.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy49 = request48.proxy;
        org.jsoup.helper.HttpConnection.Request request50 = request34.proxy(proxy49);
        org.jsoup.Connection.Method method51 = request50.method();
        org.jsoup.Connection connection52 = httpConnection14.method(method51);
        org.jsoup.Connection.Response response53 = response11.method(method51);
        org.jsoup.Connection connection54 = httpConnection0.method(method51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null=Content-Encoding" + "'", str22.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection.Response response24 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        int int26 = request25.timeout();
        boolean boolean27 = request25.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request29 = request25.timeout(0);
        boolean boolean31 = request29.hasCookie("application/x-www-form-urlencoded");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection32 = request29.data();
        org.jsoup.Connection connection33 = httpConnection0.data(keyValCollection32);
        org.jsoup.Connection connection35 = httpConnection0.timeout((int) (byte) 100);
        org.jsoup.helper.HttpConnection.Response response36 = null;
        org.jsoup.helper.HttpConnection.Response response37 = new org.jsoup.helper.HttpConnection.Response(response36);
        org.jsoup.Connection.Response response40 = response37.cookie("null=Content-Encoding", "multipart/form-data");
        int int41 = response37.statusCode();
        boolean boolean44 = response37.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response46 = response37.removeCookie("Content-Encoding");
        org.jsoup.Connection.Response response49 = response37.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        java.lang.String str51 = response37.cookie("application/x-www-form-urlencoded");
        java.util.Map<java.lang.String, java.lang.String> strMap52 = response37.cookies();
        org.jsoup.Connection connection53 = httpConnection0.response((org.jsoup.Connection.Response) response37);
        boolean boolean55 = response37.hasHeader("application/x-www-form-urlencoded");
        java.lang.String str56 = response37.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3000 + "'", int26 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "multipart/form-data" + "'", str51.equals("multipart/form-data"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        java.util.Map<java.lang.String, java.lang.String> strMap5 = response1.cookies();
        org.jsoup.Connection.Request request6 = response1.req;
        java.lang.String str7 = response1.charset;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response9 = response1.removeHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        response1.contentType = "";
        java.lang.String str11 = response1.charset();
        boolean boolean13 = response1.hasCookie("null=Content-Encoding");
        response1.charset = "";
        java.lang.String str17 = response1.cookie("UTF-8");
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        int int19 = request18.timeout();
        request18.parserDefined = true;
        request18.maxBodySizeBytes = (-1);
        request18.parserDefined = true;
        response1.req = request18;
        boolean boolean27 = request18.followRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        boolean boolean7 = request0.validateTSLCertificates;
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.helper.HttpConnection.Request request9 = request0.parser(parser8);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request9.data;
        boolean boolean11 = request9.ignoreContentType;
        java.lang.String str13 = request9.header("null=null");
        boolean boolean14 = request9.ignoreHttpErrors();
        int int15 = request9.timeoutMilliseconds;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3000 + "'", int15 == 3000);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        org.jsoup.Connection.Response response10 = response1.removeHeader("multipart/form-data");
        org.jsoup.Connection.Response response12 = response1.removeHeader("UTF-8");
        org.jsoup.Connection.Response response15 = response1.cookie("hi!", "null=Content-Encoding");
        int int16 = response1.numRedirects;
        java.lang.String str18 = response1.cookie("null=multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection1 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str3 = keyVal2.key();
        keyVal2.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal10.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream14 = keyVal13.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream16 = keyVal15.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray17 = new org.jsoup.Connection.KeyVal[] { keyVal2, keyVal6, keyVal10, keyVal13, keyVal15 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList18 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18, keyValArray17);
        org.jsoup.Connection connection20 = httpConnection1.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18);
        request0.data = keyValList18;
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean23 = request22.ignoreContentType;
        request22.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request27 = request22.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request29 = request22.data((org.jsoup.Connection.KeyVal) keyVal28);
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request36 = request30.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy37 = request36.proxy;
        org.jsoup.helper.HttpConnection.Request request38 = request22.proxy(proxy37);
        org.jsoup.helper.HttpConnection.Request request39 = request0.proxy(proxy37);
        boolean boolean40 = request0.followRedirects();
        request0.maxBodySizeBytes = (short) 100;
        request0.followRedirects = true;
        boolean boolean45 = request0.ignoreContentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=Content-Encoding" + "'", str9.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request0.validateTSLCertificates = false;
        request0.ignoreContentType = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        int int8 = request7.timeout();
        boolean boolean9 = request7.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request11 = request7.timeout(0);
        boolean boolean13 = request11.hasCookie("application/x-www-form-urlencoded");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection14 = request11.data();
        request11.ignoreHttpErrors = false;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean18 = request17.ignoreContentType;
        request17.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request22 = request17.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request24 = request17.data((org.jsoup.Connection.KeyVal) keyVal23);
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean26 = request25.ignoreContentType;
        request25.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request31 = request25.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy32 = request31.proxy;
        org.jsoup.helper.HttpConnection.Request request33 = request17.proxy(proxy32);
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        int int35 = request34.timeout();
        boolean boolean36 = request34.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request38 = request34.timeout(0);
        java.net.Proxy proxy39 = request34.proxy;
        java.lang.String str41 = request34.header("hi!");
        java.lang.String str42 = request34.postDataCharset;
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean44 = request43.ignoreContentType;
        request43.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request48 = request43.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request50 = request43.timeout((int) (byte) 10);
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection52 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal53 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str54 = keyVal53.key();
        keyVal53.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal57 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal57.value = "Content-Encoding";
        java.lang.String str60 = keyVal57.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal61 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal61.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal64 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream65 = keyVal64.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal66 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream67 = keyVal66.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray68 = new org.jsoup.Connection.KeyVal[] { keyVal53, keyVal57, keyVal61, keyVal64, keyVal66 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList69 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList69, keyValArray68);
        org.jsoup.Connection connection71 = httpConnection52.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList69);
        request51.data = keyValList69;
        org.jsoup.helper.HttpConnection.Request request73 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean74 = request73.ignoreContentType;
        request73.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request78 = request73.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal79 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request80 = request73.data((org.jsoup.Connection.KeyVal) keyVal79);
        org.jsoup.helper.HttpConnection.Request request81 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean82 = request81.ignoreContentType;
        request81.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request87 = request81.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy88 = request87.proxy;
        org.jsoup.helper.HttpConnection.Request request89 = request73.proxy(proxy88);
        org.jsoup.helper.HttpConnection.Request request90 = request51.proxy(proxy88);
        org.jsoup.helper.HttpConnection.Request request91 = request43.proxy(proxy88);
        request34.proxy = proxy88;
        request17.proxy = proxy88;
        org.jsoup.helper.HttpConnection.Request request94 = request11.proxy(proxy88);
        request0.proxy = proxy88;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3000 + "'", int8 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3000 + "'", int35 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "UTF-8" + "'", str42.equals("UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "null=Content-Encoding" + "'", str60.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request94);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        request12.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request16 = request12.ignoreContentType(true);
        java.net.Proxy proxy17 = request12.proxy();
        response1.req = request12;
        org.jsoup.Connection.Method method19 = response1.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method19);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal1 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str2 = keyVal1.key();
        keyVal1.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal5.value = "Content-Encoding";
        java.lang.String str8 = keyVal5.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal9.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream13 = keyVal12.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream15 = keyVal14.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray16 = new org.jsoup.Connection.KeyVal[] { keyVal1, keyVal5, keyVal9, keyVal12, keyVal14 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList17 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17, keyValArray16);
        org.jsoup.Connection connection19 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17);
        org.jsoup.Connection connection22 = httpConnection0.header("hi!", "multipart/form-data");
        org.jsoup.Connection connection24 = httpConnection0.referrer("hi!");
        org.jsoup.Connection connection26 = httpConnection0.referrer("application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.Response response27 = null;
        org.jsoup.helper.HttpConnection.Response response28 = new org.jsoup.helper.HttpConnection.Response(response27);
        java.lang.String str30 = response28.getHeaderCaseInsensitive("Content-Encoding");
        java.lang.String str32 = response28.header("multipart/form-data");
        int int33 = response28.statusCode;
        org.jsoup.Connection.Response response36 = response28.cookie("Content-Encoding", "null=application/x-www-form-urlencoded");
        org.jsoup.Connection.Response response39 = response28.cookie("application/x-www-form-urlencoded=null=Content-Encoding", "application/x-www-form-urlencoded=null=Content-Encoding");
        java.lang.String str41 = response28.header("UTF-8=multipart/form-data");
        java.util.Map<java.lang.String, java.lang.String> strMap42 = response28.headers();
        org.jsoup.Connection connection43 = httpConnection0.cookies(strMap42);
        org.jsoup.Connection connection45 = httpConnection0.ignoreContentType(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=Content-Encoding" + "'", str8.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request14 = request8.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy15 = request14.proxy;
        org.jsoup.helper.HttpConnection.Request request16 = request0.proxy(proxy15);
        boolean boolean19 = request0.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request23 = request0.data((org.jsoup.Connection.KeyVal) keyVal22);
        int int24 = request0.timeoutMilliseconds;
        org.jsoup.helper.HttpConnection.Response response25 = null;
        org.jsoup.helper.HttpConnection.Response response26 = new org.jsoup.helper.HttpConnection.Response(response25);
        response26.numRedirects = '4';
        java.lang.String str30 = response26.getHeaderCaseInsensitive("multipart/form-data");
        response26.contentType = "";
        org.jsoup.Connection.Response response34 = response26.removeHeader("application/x-www-form-urlencoded=null=Content-Encoding");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response35 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3000 + "'", int24 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response34);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        keyVal6.key = "";
        java.io.InputStream inputStream10 = keyVal6.stream;
        java.lang.String str11 = keyVal6.key;
        boolean boolean12 = keyVal6.hasInputStream();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        response1.contentType = "";
        java.lang.String str12 = response1.header("null=null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        org.jsoup.Connection.Response response10 = response1.removeHeader("multipart/form-data");
        response1.contentType = "application/x-www-form-urlencoded";
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean14 = request13.ignoreContentType;
        request13.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request19 = request13.proxy("hi!", (int) (short) 0);
        org.jsoup.Connection.Request request21 = request19.followRedirects(true);
        response1.req = request19;
        java.net.HttpURLConnection httpURLConnection23 = null;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser25 = null;
        org.jsoup.Connection connection26 = httpConnection24.parser(parser25);
        org.jsoup.Connection connection28 = httpConnection24.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response29 = null;
        org.jsoup.helper.HttpConnection.Response response30 = new org.jsoup.helper.HttpConnection.Response(response29);
        boolean boolean31 = response30.executed;
        java.net.URL uRL32 = response30.url();
        boolean boolean33 = response30.executed;
        response30.executed = false;
        httpConnection24.res = response30;
        org.jsoup.Connection.Response response39 = response30.cookie("Content-Encoding", "");
        org.jsoup.Connection.Response response42 = response30.header("null=null", "application/x-www-form-urlencoded");
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection23, (org.jsoup.Connection.Response) response30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response42);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        java.lang.String str2 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request0);
        boolean boolean3 = request0.ignoreHttpErrors;
        boolean boolean4 = request0.ignoreContentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = response1.headers();
        org.jsoup.helper.HttpConnection.Response response9 = new org.jsoup.helper.HttpConnection.Response(response1);
        java.nio.ByteBuffer byteBuffer10 = response1.byteData;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer10);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        boolean boolean7 = request0.validateTSLCertificates;
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.helper.HttpConnection.Request request9 = request0.parser(parser8);
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection10 = org.jsoup.helper.HttpConnection.Response.createConnection((org.jsoup.Connection.Request) request0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        org.jsoup.Connection.Request request4 = request0.cookie("null=Content-Encoding", "hi!");
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser6 = null;
        org.jsoup.Connection connection7 = httpConnection5.parser(parser6);
        org.jsoup.Connection connection9 = httpConnection5.userAgent("hi!");
        org.jsoup.Connection connection11 = httpConnection5.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str13 = keyVal12.key();
        keyVal12.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal16.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray19 = new org.jsoup.Connection.KeyVal[] { keyVal12, keyVal16 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList20 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList20, keyValArray19);
        org.jsoup.Connection connection22 = httpConnection5.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList20);
        request0.data = keyValList20;
        boolean boolean24 = request0.ignoreContentType();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection25 = request0.data();
        java.lang.String str26 = request0.postDataCharset;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "UTF-8" + "'", str26.equals("UTF-8"));
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection5 = httpConnection0.data("null=application/x-www-form-urlencoded", "null=null");
        org.jsoup.Connection.Response response6 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean8 = request7.ignoreContentType;
        request7.maxBodySizeBytes = (byte) -1;
        java.lang.String str11 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request7);
        request7.parserDefined = true;
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean15 = request14.ignoreContentType;
        request14.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request20 = request14.proxy("hi!", (int) (short) 0);
        request14.validateTSLCertificates = false;
        boolean boolean23 = request14.ignoreContentType;
        org.jsoup.Connection.Request request25 = request14.followRedirects(true);
        org.jsoup.parser.Parser parser26 = request14.parser();
        int int27 = request14.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean29 = request28.ignoreContentType;
        request28.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request34 = request28.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy35 = request34.proxy;
        org.jsoup.helper.HttpConnection.Request request36 = request14.proxy(proxy35);
        org.jsoup.helper.HttpConnection.Request request37 = request7.proxy(proxy35);
        org.jsoup.Connection connection38 = httpConnection0.proxy(proxy35);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection40 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal41 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str42 = keyVal41.key();
        keyVal41.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal45.value = "Content-Encoding";
        java.lang.String str48 = keyVal45.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal49 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal49.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal52 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream53 = keyVal52.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal54 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream55 = keyVal54.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray56 = new org.jsoup.Connection.KeyVal[] { keyVal41, keyVal45, keyVal49, keyVal52, keyVal54 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList57 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList57, keyValArray56);
        org.jsoup.Connection connection59 = httpConnection40.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList57);
        request39.data = keyValList57;
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean62 = request61.ignoreContentType;
        request61.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request66 = request61.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal67 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request68 = request61.data((org.jsoup.Connection.KeyVal) keyVal67);
        org.jsoup.helper.HttpConnection.Request request69 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean70 = request69.ignoreContentType;
        request69.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request75 = request69.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy76 = request75.proxy;
        org.jsoup.helper.HttpConnection.Request request77 = request61.proxy(proxy76);
        org.jsoup.helper.HttpConnection.Request request78 = request39.proxy(proxy76);
        request78.followRedirects = false;
        org.jsoup.parser.Parser parser81 = request78.parser();
        httpConnection0.req = request78;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection85 = httpConnection0.data("", "Content-Encoding");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "null=Content-Encoding" + "'", str48.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser81);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.Connection connection29 = httpConnection22.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        response31.numRedirects = '4';
        org.jsoup.Connection.Method method34 = response31.method();
        response31.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = response31.cookies();
        org.jsoup.Connection connection38 = httpConnection22.cookies(strMap37);
        org.jsoup.Connection connection39 = httpConnection0.data(strMap37);
        org.jsoup.Connection.Response response40 = httpConnection0.response();
        org.jsoup.Connection.Request request41 = httpConnection0.req;
        org.jsoup.Connection connection43 = httpConnection0.ignoreHttpErrors(false);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document44 = httpConnection0.post();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.parser.Parser parser6 = request0.parser();
        java.net.URL uRL7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request8 = request0.url(uRL7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser6);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.Connection connection29 = httpConnection22.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        response31.numRedirects = '4';
        org.jsoup.Connection.Method method34 = response31.method();
        response31.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = response31.cookies();
        org.jsoup.Connection connection38 = httpConnection22.cookies(strMap37);
        org.jsoup.Connection connection39 = httpConnection0.data(strMap37);
        org.jsoup.helper.HttpConnection.Response response40 = null;
        org.jsoup.helper.HttpConnection.Response response41 = new org.jsoup.helper.HttpConnection.Response(response40);
        org.jsoup.Connection.Response response44 = response41.cookie("null=Content-Encoding", "multipart/form-data");
        int int45 = response41.statusCode();
        boolean boolean48 = response41.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response50 = response41.removeCookie("Content-Encoding");
        org.jsoup.Connection connection51 = httpConnection0.response(response50);
        org.jsoup.Connection connection53 = httpConnection0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean55 = request54.ignoreContentType;
        request54.maxBodySizeBytes = (byte) -1;
        java.lang.String str58 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request54);
        request54.parserDefined = true;
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean62 = request61.ignoreContentType;
        request61.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request67 = request61.proxy("hi!", (int) (short) 0);
        request61.validateTSLCertificates = false;
        boolean boolean70 = request61.ignoreContentType;
        org.jsoup.Connection.Request request72 = request61.followRedirects(true);
        org.jsoup.parser.Parser parser73 = request61.parser();
        int int74 = request61.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request75 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean76 = request75.ignoreContentType;
        request75.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request81 = request75.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy82 = request81.proxy;
        org.jsoup.helper.HttpConnection.Request request83 = request61.proxy(proxy82);
        org.jsoup.helper.HttpConnection.Request request84 = request54.proxy(proxy82);
        org.jsoup.Connection connection85 = httpConnection0.request((org.jsoup.Connection.Request) request84);
        org.jsoup.helper.HttpConnection.Request request86 = new org.jsoup.helper.HttpConnection.Request();
        int int87 = request86.timeout();
        boolean boolean88 = request86.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request90 = request86.timeout(0);
        boolean boolean91 = request86.ignoreHttpErrors;
        java.net.Proxy proxy92 = request86.proxy();
        httpConnection0.req = request86;
        boolean boolean94 = request86.ignoreHttpErrors();
        java.lang.String str95 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 3000 + "'", int87 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request11 = request7.data((org.jsoup.Connection.KeyVal) keyVal10);
        java.lang.String str12 = keyVal10.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal10.value("multipart/form-data");
        java.io.InputStream inputStream15 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal10.inputStream(inputStream15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal1 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str2 = keyVal1.key();
        keyVal1.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal5.value = "Content-Encoding";
        java.lang.String str8 = keyVal5.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal9.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream13 = keyVal12.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream15 = keyVal14.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray16 = new org.jsoup.Connection.KeyVal[] { keyVal1, keyVal5, keyVal9, keyVal12, keyVal14 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList17 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17, keyValArray16);
        org.jsoup.Connection connection19 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17);
        org.jsoup.Connection connection22 = httpConnection0.header("hi!", "multipart/form-data");
        org.jsoup.Connection connection24 = httpConnection0.referrer("hi!");
        org.jsoup.Connection connection26 = httpConnection0.maxBodySize((int) ' ');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=Content-Encoding" + "'", str8.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        org.jsoup.Connection.Response response12 = response1.header("hi!", "");
        response1.charset = "hi!";
        int int15 = response1.statusCode();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response1.scanHeaders("application/x-www-form-urlencoded");
        org.jsoup.Connection.Response response19 = response1.removeCookie("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        response1.contentType = "";
        java.util.Map<java.lang.String, java.lang.String> strMap11 = response1.headers();
        org.jsoup.Connection.Response response14 = response1.cookie("multipart/form-data", "null=null");
        org.jsoup.Connection.Method method15 = response1.method();
        org.jsoup.helper.HttpConnection.Response response16 = new org.jsoup.helper.HttpConnection.Response(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method15);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        int int13 = response8.statusCode();
        boolean boolean16 = response8.hasHeaderWithValue("null=null", "application/x-www-form-urlencoded");
        java.util.Map<java.lang.String, java.lang.String> strMap17 = response8.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        java.lang.String str4 = response1.contentType;
        org.jsoup.Connection.Response response7 = response1.cookie("application/x-www-form-urlencoded", "");
        java.lang.String str8 = response1.charset;
        org.jsoup.Connection.Response response10 = response1.removeHeader("null=multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeMimeName("null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=hi!" + "'", str1.equals("null=hi!"));
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        java.util.Map<java.lang.String, java.lang.String> strMap5 = response1.cookies();
        org.jsoup.Connection.Request request6 = response1.req;
        boolean boolean8 = response1.hasCookie("null=null");
        boolean boolean10 = response1.hasCookie("hi!=Content-Encoding");
        java.lang.String str12 = response1.getHeaderCaseInsensitive("multipart/form-data");
        boolean boolean14 = response1.hasHeader("multipart/form-data");
        org.jsoup.Connection.Response response17 = response1.header("application/x-www-form-urlencoded=null=Content-Encoding", "application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal1 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str2 = keyVal1.key();
        keyVal1.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal5.value = "Content-Encoding";
        java.lang.String str8 = keyVal5.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal9.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream13 = keyVal12.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream15 = keyVal14.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray16 = new org.jsoup.Connection.KeyVal[] { keyVal1, keyVal5, keyVal9, keyVal12, keyVal14 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList17 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17, keyValArray16);
        org.jsoup.Connection connection19 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17);
        org.jsoup.Connection connection22 = httpConnection0.header("hi!", "multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response23 = null;
        org.jsoup.helper.HttpConnection.Response response24 = new org.jsoup.helper.HttpConnection.Response(response23);
        response24.numRedirects = '4';
        org.jsoup.Connection.Method method27 = response24.method();
        response24.statusCode = 1;
        java.net.URL uRL30 = response24.url();
        org.jsoup.helper.HttpConnection httpConnection31 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal32 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str33 = keyVal32.key();
        keyVal32.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal36 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal36.value = "Content-Encoding";
        java.lang.String str39 = keyVal36.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal40 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal40.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream44 = keyVal43.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream46 = keyVal45.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray47 = new org.jsoup.Connection.KeyVal[] { keyVal32, keyVal36, keyVal40, keyVal43, keyVal45 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList48 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList48, keyValArray47);
        org.jsoup.Connection connection50 = httpConnection31.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList48);
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean52 = request51.ignoreContentType;
        request51.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request56 = request51.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal57 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request58 = request51.data((org.jsoup.Connection.KeyVal) keyVal57);
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean60 = request59.ignoreContentType;
        request59.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request65 = request59.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy66 = request65.proxy;
        org.jsoup.helper.HttpConnection.Request request67 = request51.proxy(proxy66);
        org.jsoup.Connection.Method method68 = request67.method();
        org.jsoup.Connection connection69 = httpConnection31.method(method68);
        org.jsoup.Connection.Response response70 = response24.method(method68);
        org.jsoup.Connection connection71 = httpConnection0.method(method68);
        org.jsoup.Connection connection73 = httpConnection0.ignoreContentType(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=Content-Encoding" + "'", str8.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "null=Content-Encoding" + "'", str39.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        org.junit.Assert.assertTrue("'" + method68 + "' != '" + org.jsoup.Connection.Method.GET + "'", method68.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection73);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        java.lang.String str12 = response1.contentType();
        java.nio.ByteBuffer byteBuffer13 = response1.byteData;
        org.jsoup.Connection.Response response16 = response1.cookie("Content-Encoding", "hi!=Content-Encoding");
        java.lang.String str18 = response1.getHeaderCaseInsensitive("null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        java.io.InputStream inputStream2 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!=Content-Encoding=UTF-8", "", inputStream2);
        java.lang.String str4 = keyVal3.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal3.key("hi!=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!=Content-Encoding=UTF-8" + "'", str4.equals("hi!=Content-Encoding=UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.Connection connection7 = httpConnection0.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser9 = null;
        org.jsoup.Connection connection10 = httpConnection8.parser(parser9);
        org.jsoup.helper.HttpConnection.Response response11 = null;
        org.jsoup.helper.HttpConnection.Response response12 = new org.jsoup.helper.HttpConnection.Response(response11);
        boolean boolean13 = response12.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap14 = response12.headers();
        org.jsoup.Connection connection15 = httpConnection8.data(strMap14);
        org.jsoup.Connection connection16 = httpConnection0.cookies(strMap14);
        org.jsoup.helper.HttpConnection httpConnection17 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection17.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection17.userAgent("hi!");
        org.jsoup.Connection connection23 = httpConnection17.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response24 = null;
        org.jsoup.helper.HttpConnection.Response response25 = new org.jsoup.helper.HttpConnection.Response(response24);
        boolean boolean26 = response25.executed;
        java.net.URL uRL27 = response25.url();
        boolean boolean28 = response25.executed;
        httpConnection17.res = response25;
        org.jsoup.Connection connection32 = httpConnection17.header("Content-Encoding", "multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response33 = null;
        org.jsoup.helper.HttpConnection.Response response34 = new org.jsoup.helper.HttpConnection.Response(response33);
        boolean boolean35 = response34.executed;
        java.net.URL uRL36 = response34.url();
        boolean boolean37 = response34.executed;
        org.jsoup.Connection.Response response39 = response34.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request40 = response34.req;
        org.jsoup.Connection.Request request41 = null;
        response34.req = request41;
        org.jsoup.Connection connection43 = httpConnection17.response((org.jsoup.Connection.Response) response34);
        org.jsoup.Connection.Response response45 = response34.removeCookie("application/x-www-form-urlencoded");
        org.jsoup.Connection.Response response47 = response34.removeHeader("application/x-www-form-urlencoded");
        java.util.Map<java.lang.String, java.lang.String> strMap48 = response34.headers();
        httpConnection0.res = response34;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection1 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str3 = keyVal2.key();
        keyVal2.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal10.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream14 = keyVal13.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream16 = keyVal15.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray17 = new org.jsoup.Connection.KeyVal[] { keyVal2, keyVal6, keyVal10, keyVal13, keyVal15 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList18 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18, keyValArray17);
        org.jsoup.Connection connection20 = httpConnection1.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18);
        request0.data = keyValList18;
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean23 = request22.ignoreContentType;
        request22.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request27 = request22.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request29 = request22.data((org.jsoup.Connection.KeyVal) keyVal28);
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request36 = request30.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy37 = request36.proxy;
        org.jsoup.helper.HttpConnection.Request request38 = request22.proxy(proxy37);
        org.jsoup.helper.HttpConnection.Request request39 = request0.proxy(proxy37);
        int int40 = request39.timeout();
        request39.parserDefined = false;
        boolean boolean43 = request39.validateTSLCertificates;
        org.jsoup.helper.HttpConnection.Request request45 = request39.timeout((int) (byte) 0);
        request45.postDataCharset = "null=Content-Encoding";
        int int48 = request45.maxBodySizeBytes;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection49 = request45.data();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection50 = request45.data;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=Content-Encoding" + "'", str9.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1048576 + "'", int48 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection50);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection1 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str3 = keyVal2.key();
        keyVal2.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal10.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream14 = keyVal13.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream16 = keyVal15.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray17 = new org.jsoup.Connection.KeyVal[] { keyVal2, keyVal6, keyVal10, keyVal13, keyVal15 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList18 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18, keyValArray17);
        org.jsoup.Connection connection20 = httpConnection1.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18);
        request0.data = keyValList18;
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean23 = request22.ignoreContentType;
        request22.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request27 = request22.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request29 = request22.data((org.jsoup.Connection.KeyVal) keyVal28);
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request36 = request30.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy37 = request36.proxy;
        org.jsoup.helper.HttpConnection.Request request38 = request22.proxy(proxy37);
        org.jsoup.helper.HttpConnection.Request request39 = request0.proxy(proxy37);
        boolean boolean40 = request0.followRedirects();
        request0.maxBodySizeBytes = (short) 100;
        request0.followRedirects = true;
        java.lang.String str45 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=Content-Encoding" + "'", str9.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "" + "'", str45.equals(""));
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request11 = request7.data((org.jsoup.Connection.KeyVal) keyVal10);
        boolean boolean12 = request7.validateTLSCertificates();
        org.jsoup.helper.HttpConnection.Request request14 = request7.timeout((int) 'a');
        int int15 = request7.timeout();
        request7.validateTSLCertificates = true;
        org.jsoup.Connection.Request request19 = request7.followRedirects(false);
        java.lang.String str20 = request7.postDataCharset();
        request7.ignoreContentType = false;
        boolean boolean23 = request7.followRedirects;
        org.jsoup.Connection.Request request25 = request7.ignoreHttpErrors(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 97 + "'", int15 == 97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "UTF-8" + "'", str20.equals("UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        java.lang.String str13 = response8.charset();
        org.jsoup.Connection.Response response15 = response8.removeHeader("null=application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean8 = response1.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response10 = response1.removeCookie("Content-Encoding");
        org.jsoup.Connection.Response response13 = response1.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        response1.statusCode = (short) 10;
        java.lang.String str17 = response1.getHeaderCaseInsensitive("hi!=Content-Encoding");
        response1.executed = true;
        java.util.Map<java.lang.String, java.lang.String> strMap20 = response1.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request0.validateTSLCertificates = false;
        java.lang.String str10 = request0.header("application/x-www-form-urlencoded");
        request0.validateTLSCertificates(false);
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout((int) (byte) 10);
        org.jsoup.parser.Parser parser15 = null;
        org.jsoup.helper.HttpConnection.Request request16 = request14.parser(parser15);
        request16.validateTLSCertificates(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal0.value("application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal4.value("null=Content-Encoding");
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = keyVal6.key("null=Content-Encoding");
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal8.value("null=Content-Encoding");
        keyVal8.key = "null=hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        int int5 = request0.timeoutMilliseconds;
        java.lang.String str6 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean8 = request7.ignoreContentType;
        request7.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request12 = request7.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request14 = request7.data((org.jsoup.Connection.KeyVal) keyVal13);
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request18 = request14.data((org.jsoup.Connection.KeyVal) keyVal17);
        boolean boolean19 = request14.validateTLSCertificates();
        org.jsoup.helper.HttpConnection.Request request21 = request14.timeout((int) 'a');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry23 = request21.scanHeaders("hi!");
        org.jsoup.parser.Parser parser24 = request21.parser;
        request0.parser = parser24;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3000 + "'", int5 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser24);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        java.lang.String str7 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request6);
        java.lang.String str8 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request14 = request8.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy15 = request14.proxy;
        org.jsoup.helper.HttpConnection.Request request16 = request0.proxy(proxy15);
        org.jsoup.Connection.Request request18 = request16.removeCookie("hi!");
        java.net.Proxy proxy19 = request16.proxy();
        org.jsoup.helper.HttpConnection.Response response20 = null;
        org.jsoup.helper.HttpConnection.Response response21 = new org.jsoup.helper.HttpConnection.Response(response20);
        org.jsoup.Connection.Response response24 = response21.cookie("null=Content-Encoding", "multipart/form-data");
        int int25 = response21.statusCode();
        response21.numRedirects = 0;
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser29 = null;
        org.jsoup.Connection connection30 = httpConnection28.parser(parser29);
        org.jsoup.Connection connection32 = httpConnection28.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response33 = null;
        org.jsoup.helper.HttpConnection.Response response34 = new org.jsoup.helper.HttpConnection.Response(response33);
        boolean boolean35 = response34.executed;
        java.net.URL uRL36 = response34.url();
        boolean boolean37 = response34.executed;
        response34.executed = false;
        httpConnection28.res = response34;
        org.jsoup.helper.HttpConnection.Response response41 = null;
        org.jsoup.helper.HttpConnection.Response response42 = new org.jsoup.helper.HttpConnection.Response(response41);
        org.jsoup.Connection.Response response45 = response42.cookie("null=Content-Encoding", "multipart/form-data");
        int int46 = response42.statusCode();
        boolean boolean49 = response42.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response50 = null;
        org.jsoup.helper.HttpConnection.Response response51 = new org.jsoup.helper.HttpConnection.Response(response50);
        boolean boolean52 = response51.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = response51.cookies();
        org.jsoup.helper.HttpConnection httpConnection54 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal55 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str56 = keyVal55.key();
        keyVal55.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal59 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal59.value = "Content-Encoding";
        java.lang.String str62 = keyVal59.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal63 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal63.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal66 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream67 = keyVal66.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal68 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream69 = keyVal68.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray70 = new org.jsoup.Connection.KeyVal[] { keyVal55, keyVal59, keyVal63, keyVal66, keyVal68 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList71 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList71, keyValArray70);
        org.jsoup.Connection connection73 = httpConnection54.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList71);
        org.jsoup.helper.HttpConnection.Request request74 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean75 = request74.ignoreContentType;
        request74.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request79 = request74.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal80 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request81 = request74.data((org.jsoup.Connection.KeyVal) keyVal80);
        org.jsoup.helper.HttpConnection.Request request82 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean83 = request82.ignoreContentType;
        request82.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request88 = request82.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy89 = request88.proxy;
        org.jsoup.helper.HttpConnection.Request request90 = request74.proxy(proxy89);
        org.jsoup.Connection.Method method91 = request90.method();
        org.jsoup.Connection connection92 = httpConnection54.method(method91);
        org.jsoup.Connection.Response response93 = response51.method(method91);
        org.jsoup.Connection.Response response94 = response42.method(method91);
        org.jsoup.Connection connection95 = httpConnection28.method(method91);
        org.jsoup.Connection.Response response96 = response21.method(method91);
        org.jsoup.Connection.Request request97 = request16.method(method91);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection98 = request16.data;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "null=Content-Encoding" + "'", str62.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request90);
        org.junit.Assert.assertTrue("'" + method91 + "' != '" + org.jsoup.Connection.Method.GET + "'", method91.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection98);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.jsoup.helper.HttpConnection.FORM_URL_ENCODED = "application/x-www-form-urlencoded";
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.key();
        java.lang.String str4 = keyVal0.value();
        keyVal0.key = "hi!=Content-Encoding=UTF-8";
        keyVal0.value = "hi!=Content-Encoding=UTF-8";
        keyVal0.key = "hi!=Content-Encoding=UTF-8";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Content-Encoding" + "'", str4.equals("Content-Encoding"));
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request14 = request8.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy15 = request14.proxy;
        org.jsoup.helper.HttpConnection.Request request16 = request0.proxy(proxy15);
        boolean boolean17 = request16.ignoreContentType;
        org.jsoup.parser.Parser parser18 = request16.parser();
        java.lang.String str19 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        boolean boolean6 = request0.followRedirects();
        java.lang.String str8 = request0.header("UTF-8");
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.headers();
        org.jsoup.Connection.Request request12 = request0.cookie("application/x-www-form-urlencoded", "hi!=Content-Encoding");
        int int13 = request0.timeout();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry15 = request0.scanHeaders("UTF-8");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection16 = request0.data;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection16);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        java.lang.String str4 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        int int5 = request0.timeoutMilliseconds;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3000 + "'", int5 == 3000);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request14 = request8.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy15 = request14.proxy;
        org.jsoup.helper.HttpConnection.Request request16 = request0.proxy(proxy15);
        boolean boolean19 = request0.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request23 = request0.data((org.jsoup.Connection.KeyVal) keyVal22);
        int int24 = request23.timeoutMilliseconds;
        boolean boolean25 = request23.ignoreHttpErrors();
        boolean boolean27 = request23.hasHeader("hi!=Content-Encoding");
        java.lang.String str28 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3000 + "'", int24 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        java.lang.String str5 = response1.getHeaderCaseInsensitive("multipart/form-data");
        response1.contentType = "";
        org.jsoup.Connection.Response response9 = response1.removeHeader("application/x-www-form-urlencoded=null=Content-Encoding");
        java.lang.String str11 = response1.header("null=multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!=Content-Encoding", "UTF-8");
        java.lang.String str3 = keyVal2.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal2.value("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!=Content-Encoding=UTF-8" + "'", str3.equals("hi!=Content-Encoding=UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal1 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str2 = keyVal1.key();
        keyVal1.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal5.value = "Content-Encoding";
        java.lang.String str8 = keyVal5.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal9.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream13 = keyVal12.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream15 = keyVal14.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray16 = new org.jsoup.Connection.KeyVal[] { keyVal1, keyVal5, keyVal9, keyVal12, keyVal14 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList17 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17, keyValArray16);
        org.jsoup.Connection connection19 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17);
        org.jsoup.Connection connection22 = httpConnection0.header("hi!", "multipart/form-data");
        org.jsoup.Connection connection24 = httpConnection0.referrer("hi!");
        org.jsoup.Connection connection26 = httpConnection0.referrer("application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean28 = request27.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request27.headers();
        java.net.Proxy proxy30 = request27.proxy();
        org.jsoup.Connection connection31 = httpConnection0.request((org.jsoup.Connection.Request) request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=Content-Encoding" + "'", str8.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response5 = null;
        org.jsoup.helper.HttpConnection.Response response6 = new org.jsoup.helper.HttpConnection.Response(response5);
        boolean boolean7 = response6.executed;
        java.net.URL uRL8 = response6.url();
        boolean boolean9 = response6.executed;
        response6.executed = false;
        httpConnection0.res = response6;
        java.net.Proxy proxy13 = null;
        org.jsoup.Connection connection14 = httpConnection0.proxy(proxy13);
        org.jsoup.helper.HttpConnection.Response response15 = null;
        org.jsoup.helper.HttpConnection.Response response16 = new org.jsoup.helper.HttpConnection.Response(response15);
        response16.numRedirects = '4';
        org.jsoup.Connection.Method method19 = response16.method();
        boolean boolean21 = response16.hasHeader("hi!");
        org.jsoup.Connection.Response response23 = response16.removeHeader("null=Content-Encoding");
        org.jsoup.Connection connection24 = httpConnection0.response(response23);
        org.jsoup.Connection connection26 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        int int28 = request27.timeout();
        boolean boolean29 = request27.ignoreContentType;
        org.jsoup.Connection.Request request31 = request27.ignoreHttpErrors(false);
        org.jsoup.Connection connection32 = httpConnection0.request((org.jsoup.Connection.Request) request27);
        org.jsoup.Connection connection35 = httpConnection0.proxy("Content-Encoding=hi!", 97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3000 + "'", int28 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.Connection connection29 = httpConnection22.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        response31.numRedirects = '4';
        org.jsoup.Connection.Method method34 = response31.method();
        response31.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = response31.cookies();
        org.jsoup.Connection connection38 = httpConnection22.cookies(strMap37);
        org.jsoup.Connection connection39 = httpConnection0.data(strMap37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean41 = request40.ignoreContentType;
        request40.ignoreContentType = true;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection44 = request40.data();
        org.jsoup.Connection connection45 = httpConnection0.data(keyValCollection44);
        org.jsoup.Connection connection47 = httpConnection0.validateTLSCertificates(true);
        org.jsoup.Connection connection50 = httpConnection0.cookie("null=null=Content-Encoding", "hi!=Content-Encoding=UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        java.lang.String str13 = response8.charset();
        boolean boolean14 = response8.executed;
        org.jsoup.Connection.Response response17 = response8.cookie("hi!", "hi!=Content-Encoding");
        org.jsoup.Connection.Request request18 = response8.req;
        org.jsoup.Connection.Request request19 = response8.req;
        java.lang.String str21 = response8.header("null=application/x-www-form-urlencoded");
        org.jsoup.Connection.Response response24 = response8.cookie("hi!=Content-Encoding=UTF-8", "null=Content-Encoding");
        response8.executed = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = response1.headers();
        java.net.URL uRL9 = response1.url();
        org.jsoup.Connection.Response response12 = response1.cookie("Content-Encoding", "null=null");
        java.lang.String str14 = response1.cookie("hi!");
        java.lang.String str16 = response1.cookie("UTF-8=multipart/form-data");
        java.lang.String str17 = response1.charset();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        java.lang.String str6 = response1.header("null=Content-Encoding");
        boolean boolean8 = response1.hasHeader("hi!=Content-Encoding=UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        java.nio.ByteBuffer byteBuffer12 = null;
        response1.byteData = byteBuffer12;
        org.jsoup.Connection.Response response16 = response1.header("hi!=Content-Encoding", "multipart/form-data");
        org.jsoup.Connection.Response response19 = response1.header("hi!=Content-Encoding", "");
        int int20 = response1.statusCode;
        response1.executed = false;
        java.util.Map<java.lang.String, java.lang.String> strMap23 = response1.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.helper.HttpConnection.Response response2 = null;
        org.jsoup.helper.HttpConnection.Response response3 = new org.jsoup.helper.HttpConnection.Response(response2);
        response3.numRedirects = '4';
        org.jsoup.Connection.Method method6 = response3.method();
        response3.statusCode = 1;
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean10 = request9.ignoreContentType;
        request9.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request14 = request9.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request16 = request9.data((org.jsoup.Connection.KeyVal) keyVal15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean18 = request17.ignoreContentType;
        request17.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request23 = request17.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy24 = request23.proxy;
        org.jsoup.helper.HttpConnection.Request request25 = request9.proxy(proxy24);
        org.jsoup.Connection.Method method26 = request25.method();
        org.jsoup.Connection.Response response27 = response3.method(method26);
        org.jsoup.Connection.Response response28 = response1.method(method26);
        int int29 = response1.statusCode;
        java.lang.String str31 = response1.header("hi!=Content-Encoding");
        org.jsoup.Connection.Response response33 = response1.removeCookie("hi!=Content-Encoding");
        java.nio.ByteBuffer byteBuffer34 = response1.byteData;
        int int35 = response1.statusCode();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = response1.cookies();
        int int37 = response1.statusCode;
        org.jsoup.Connection.Response response40 = response1.cookie("Content-Encoding", "null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response40);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.jsoup.helper.HttpConnection.MULTIPART_FORM_DATA = "UTF-8=multipart/form-data";
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean6 = response1.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        response1.contentType = "Content-Encoding=hi!";
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = response1.scanHeaders("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request11 = request7.data((org.jsoup.Connection.KeyVal) keyVal10);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean14 = request13.ignoreContentType;
        request13.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request18 = request13.ignoreHttpErrors(true);
        org.jsoup.parser.Parser parser19 = request13.parser();
        request7.parser = parser19;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection21 = request7.data;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection21);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        java.lang.String str13 = response8.charset();
        boolean boolean14 = response8.executed;
        org.jsoup.Connection.Response response17 = response8.cookie("hi!", "hi!=Content-Encoding");
        org.jsoup.Connection.Request request18 = response8.req;
        org.jsoup.Connection.Request request19 = response8.req;
        java.lang.String str21 = response8.header("null=application/x-www-form-urlencoded");
        boolean boolean22 = response8.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        java.lang.String str12 = response1.contentType();
        java.nio.ByteBuffer byteBuffer13 = response1.byteData;
        java.lang.String str15 = response1.getHeaderCaseInsensitive("hi!=Content-Encoding=UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        java.nio.ByteBuffer byteBuffer12 = null;
        response1.byteData = byteBuffer12;
        org.jsoup.Connection.Response response16 = response1.header("hi!=Content-Encoding", "multipart/form-data");
        boolean boolean19 = response1.hasHeaderWithValue("null=Content-Encoding", "application/x-www-form-urlencoded=null=Content-Encoding");
        org.jsoup.Connection.Request request20 = response1.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request20);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        boolean boolean7 = request0.validateTSLCertificates;
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.helper.HttpConnection.Request request9 = request0.parser(parser8);
        request9.ignoreContentType = false;
        org.jsoup.Connection.Request request13 = request9.removeHeader("UTF-8");
        org.jsoup.Connection.Request request16 = request9.header("null=Content-Encoding", "UTF-8");
        org.jsoup.Connection.Request request18 = request9.removeHeader("hi!=Content-Encoding");
        org.jsoup.Connection.Request request20 = request9.ignoreHttpErrors(false);
        java.lang.String str21 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request9);
        int int22 = request9.maxBodySize();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = request9.hasHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        boolean boolean7 = request0.validateTLSCertificates();
        request0.timeoutMilliseconds = (short) -1;
        boolean boolean10 = request0.followRedirects;
        boolean boolean11 = request0.ignoreHttpErrors();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        org.jsoup.Connection.Method method4 = response1.method();
        boolean boolean6 = response1.hasHeader("hi!");
        int int7 = response1.statusCode;
        boolean boolean8 = response1.executed;
        org.jsoup.Connection.Request request9 = response1.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request9);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        boolean boolean7 = request0.validateTSLCertificates;
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.helper.HttpConnection.Request request9 = request0.parser(parser8);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request9.data;
        org.jsoup.Connection.Request request12 = request9.removeCookie("null=Content-Encoding");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request14 = request9.removeHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        response1.contentType = "";
        java.util.Map<java.lang.String, java.lang.String> strMap11 = response1.headers();
        org.jsoup.Connection.Response response13 = response1.removeHeader("multipart/form-data");
        boolean boolean15 = response1.hasHeader("hi!");
        java.net.URL uRL16 = response1.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL16);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("UTF-8", "hi!=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = response1.scanHeaders("null=Content-Encoding");
        java.lang.String str11 = response1.getHeaderCaseInsensitive("Content-Encoding");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = response1.headers();
        java.net.URL uRL13 = response1.url();
        response1.statusCode = 1;
        java.nio.ByteBuffer byteBuffer16 = response1.byteData;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer16);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) (byte) 10);
        request7.followRedirects = false;
        request7.parserDefined = true;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Request request14 = request7.proxy("application/x-www-form-urlencoded", 1048576);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:1048576");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        org.jsoup.Connection.Request request4 = request0.ignoreHttpErrors(false);
        java.lang.String str5 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request0);
        org.jsoup.Connection.Request request8 = request0.cookie("UTF-8", "multipart/form-data");
        org.jsoup.parser.Parser parser9 = request0.parser();
        boolean boolean10 = request0.ignoreContentType;
        org.jsoup.Connection.Request request12 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean14 = request13.ignoreContentType;
        request13.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request18 = request13.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request20 = request13.data((org.jsoup.Connection.KeyVal) keyVal19);
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean22 = request21.ignoreContentType;
        request21.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request27 = request21.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy28 = request27.proxy;
        org.jsoup.helper.HttpConnection.Request request29 = request13.proxy(proxy28);
        request0.proxy = proxy28;
        org.jsoup.Connection.Request request32 = request0.followRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        java.lang.String str6 = request0.postDataCharset;
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request0.cookies();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection8 = request0.data;
        request0.maxBodySizeBytes = ' ';
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "UTF-8" + "'", str6.equals("UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection8);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        org.jsoup.Connection.Response response7 = response1.header("null=Content-Encoding", "null=Content-Encoding");
        java.lang.String str9 = response1.getHeaderCaseInsensitive("");
        response1.executed = false;
        java.lang.String str12 = response1.contentType;
        boolean boolean14 = response1.hasHeader("application/x-www-form-urlencoded=null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        java.util.Map<java.lang.String, java.lang.String> strMap5 = response1.cookies();
        org.jsoup.Connection.Request request6 = response1.req;
        boolean boolean8 = response1.hasCookie("null=null");
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        org.jsoup.helper.HttpConnection.Response response11 = null;
        org.jsoup.helper.HttpConnection.Response response12 = new org.jsoup.helper.HttpConnection.Response(response11);
        response12.numRedirects = '4';
        org.jsoup.Connection.Method method15 = response12.method();
        response12.statusCode = 1;
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean19 = request18.ignoreContentType;
        request18.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request23 = request18.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal24 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request25 = request18.data((org.jsoup.Connection.KeyVal) keyVal24);
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean27 = request26.ignoreContentType;
        request26.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request32 = request26.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy33 = request32.proxy;
        org.jsoup.helper.HttpConnection.Request request34 = request18.proxy(proxy33);
        org.jsoup.Connection.Method method35 = request34.method();
        org.jsoup.Connection.Response response36 = response12.method(method35);
        org.jsoup.Connection.Response response37 = response10.method(method35);
        org.jsoup.Connection.Response response38 = response1.method(method35);
        org.jsoup.Connection.Response response41 = response1.cookie("Content-Encoding", "Content-Encoding");
        response1.charset = "hi!=Content-Encoding=UTF-8";
        java.lang.String str45 = response1.header("UTF-8");
        java.lang.String str46 = response1.statusMessage;
        response1.charset = "hi!=Content-Encoding";
        org.jsoup.helper.HttpConnection.Response response49 = null;
        org.jsoup.helper.HttpConnection.Response response50 = new org.jsoup.helper.HttpConnection.Response(response49);
        boolean boolean51 = response50.executed;
        java.net.URL uRL52 = response50.url();
        int int53 = response50.statusCode;
        java.util.Map<java.lang.String, java.lang.String> strMap54 = response50.cookies();
        org.jsoup.Connection.Request request55 = response50.req;
        boolean boolean57 = response50.hasCookie("null=null");
        org.jsoup.helper.HttpConnection.Response response58 = null;
        org.jsoup.helper.HttpConnection.Response response59 = new org.jsoup.helper.HttpConnection.Response(response58);
        org.jsoup.helper.HttpConnection.Response response60 = null;
        org.jsoup.helper.HttpConnection.Response response61 = new org.jsoup.helper.HttpConnection.Response(response60);
        response61.numRedirects = '4';
        org.jsoup.Connection.Method method64 = response61.method();
        response61.statusCode = 1;
        org.jsoup.helper.HttpConnection.Request request67 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean68 = request67.ignoreContentType;
        request67.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request72 = request67.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal73 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request74 = request67.data((org.jsoup.Connection.KeyVal) keyVal73);
        org.jsoup.helper.HttpConnection.Request request75 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean76 = request75.ignoreContentType;
        request75.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request81 = request75.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy82 = request81.proxy;
        org.jsoup.helper.HttpConnection.Request request83 = request67.proxy(proxy82);
        org.jsoup.Connection.Method method84 = request83.method();
        org.jsoup.Connection.Response response85 = response61.method(method84);
        org.jsoup.Connection.Response response86 = response59.method(method84);
        org.jsoup.Connection.Response response87 = response50.method(method84);
        org.jsoup.Connection.Response response88 = response1.method(method84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request83);
        org.junit.Assert.assertTrue("'" + method84 + "' != '" + org.jsoup.Connection.Method.GET + "'", method84.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response88);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        boolean boolean7 = request0.validateTLSCertificates();
        java.lang.String str8 = request0.postDataCharset();
        request0.validateTLSCertificates(false);
        boolean boolean11 = request0.followRedirects;
        boolean boolean12 = request0.parserDefined;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "UTF-8" + "'", str8.equals("UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response5 = null;
        org.jsoup.helper.HttpConnection.Response response6 = new org.jsoup.helper.HttpConnection.Response(response5);
        boolean boolean7 = response6.executed;
        java.net.URL uRL8 = response6.url();
        boolean boolean9 = response6.executed;
        response6.executed = false;
        httpConnection0.res = response6;
        org.jsoup.helper.HttpConnection.Response response13 = null;
        org.jsoup.helper.HttpConnection.Response response14 = new org.jsoup.helper.HttpConnection.Response(response13);
        response14.numRedirects = '4';
        org.jsoup.Connection.Method method17 = response14.method();
        response14.statusCode = 1;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean21 = request20.ignoreContentType;
        request20.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request25 = request20.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request27 = request20.data((org.jsoup.Connection.KeyVal) keyVal26);
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean29 = request28.ignoreContentType;
        request28.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request34 = request28.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy35 = request34.proxy;
        org.jsoup.helper.HttpConnection.Request request36 = request20.proxy(proxy35);
        org.jsoup.Connection.Method method37 = request36.method();
        org.jsoup.Connection.Response response38 = response14.method(method37);
        org.jsoup.Connection connection39 = httpConnection0.method(method37);
        org.jsoup.helper.HttpConnection.Response response40 = null;
        org.jsoup.helper.HttpConnection.Response response41 = new org.jsoup.helper.HttpConnection.Response(response40);
        boolean boolean42 = response41.executed;
        java.net.URL uRL43 = response41.url();
        int int44 = response41.statusCode;
        boolean boolean46 = response41.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry48 = response41.scanHeaders("Content-Encoding");
        response41.contentType = "";
        java.util.Map<java.lang.String, java.lang.String> strMap51 = response41.headers();
        org.jsoup.Connection.Response response53 = response41.removeHeader("multipart/form-data");
        httpConnection0.res = response41;
        org.jsoup.Connection connection56 = httpConnection0.maxBodySize(0);
        java.net.URL uRL57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection58 = httpConnection0.url(uRL57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        org.jsoup.Connection.Response response6 = response1.header("null=Content-Encoding", "multipart/form-data");
        java.lang.String str7 = response1.contentType();
        org.jsoup.Connection.Response response10 = response1.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        boolean boolean13 = response1.hasHeaderWithValue("hi!=Content-Encoding", "null=Content-Encoding");
        java.lang.String str14 = response1.statusMessage;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request14 = request8.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy15 = request14.proxy;
        org.jsoup.helper.HttpConnection.Request request16 = request0.proxy(proxy15);
        boolean boolean19 = request0.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request23 = request0.data((org.jsoup.Connection.KeyVal) keyVal22);
        int int24 = request0.timeoutMilliseconds;
        request0.followRedirects = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3000 + "'", int24 == 3000);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request11 = request7.data((org.jsoup.Connection.KeyVal) keyVal10);
        boolean boolean12 = request7.validateTLSCertificates();
        org.jsoup.helper.HttpConnection.Request request14 = request7.timeout((int) 'a');
        int int15 = request7.timeout();
        request7.validateTSLCertificates = true;
        boolean boolean18 = request7.validateTLSCertificates();
        org.jsoup.Connection.Method method19 = request7.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 97 + "'", int15 == 97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        int int13 = response8.statusCode();
        response8.statusCode = (short) 0;
        java.lang.String str17 = response8.cookie("null=null=Content-Encoding");
        java.lang.String str19 = response8.header("null=multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.parser.Parser parser20 = null;
        org.jsoup.Connection connection21 = httpConnection0.parser(parser20);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection24 = httpConnection0.data("", "application/x-www-form-urlencoded=null=Content-Encoding");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection connection7 = httpConnection0.cookie("multipart/form-data", "application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean6 = response1.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        java.lang.String str8 = response1.contentType;
        java.lang.String str10 = response1.header("hi!=Content-Encoding=UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection.Response response24 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean26 = request25.ignoreContentType;
        request25.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request30 = request25.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request32 = request25.data((org.jsoup.Connection.KeyVal) keyVal31);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean34 = request33.ignoreContentType;
        request33.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request39 = request33.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy40 = request39.proxy;
        org.jsoup.helper.HttpConnection.Request request41 = request25.proxy(proxy40);
        org.jsoup.Connection.Request request43 = request41.removeCookie("hi!");
        httpConnection0.req = request43;
        org.jsoup.helper.HttpConnection httpConnection45 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser46 = null;
        org.jsoup.Connection connection47 = httpConnection45.parser(parser46);
        org.jsoup.Connection connection49 = httpConnection45.userAgent("hi!");
        org.jsoup.Connection connection51 = httpConnection45.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response52 = null;
        org.jsoup.helper.HttpConnection.Response response53 = new org.jsoup.helper.HttpConnection.Response(response52);
        boolean boolean54 = response53.executed;
        java.net.URL uRL55 = response53.url();
        boolean boolean56 = response53.executed;
        httpConnection45.res = response53;
        int int58 = response53.statusCode();
        boolean boolean61 = response53.hasHeaderWithValue("null=null", "application/x-www-form-urlencoded");
        java.util.Map<java.lang.String, java.lang.String> strMap62 = response53.headers();
        org.jsoup.Connection connection63 = httpConnection0.cookies(strMap62);
        org.jsoup.Connection connection65 = httpConnection0.timeout(10);
        org.jsoup.helper.HttpConnection.Response response66 = null;
        org.jsoup.helper.HttpConnection.Response response67 = new org.jsoup.helper.HttpConnection.Response(response66);
        boolean boolean68 = response67.executed;
        java.net.URL uRL69 = response67.url();
        boolean boolean70 = response67.executed;
        org.jsoup.Connection.Response response72 = response67.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request73 = response67.req;
        org.jsoup.Connection.Request request74 = null;
        response67.req = request74;
        org.jsoup.Connection.Response response78 = response67.header("multipart/form-data", "Content-Encoding");
        httpConnection0.res = response67;
        java.util.Map<java.lang.String, java.lang.String> strMap80 = response67.headers();
        response67.contentType = "null=null=Content-Encoding";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap80);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.lang.String str2 = request0.cookie("Content-Encoding");
        java.lang.String str3 = request0.postDataCharset();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection4 = request0.data();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "UTF-8" + "'", str3.equals("UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection4);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        org.jsoup.Connection.Method method4 = response1.method();
        response1.statusCode = 1;
        java.net.URL uRL7 = response1.url();
        org.jsoup.Connection.Request request8 = response1.req;
        response1.charset = "";
        java.lang.String str11 = response1.statusMessage;
        java.net.HttpURLConnection httpURLConnection12 = null;
        org.jsoup.helper.HttpConnection.Response response13 = null;
        org.jsoup.helper.HttpConnection.Response response14 = new org.jsoup.helper.HttpConnection.Response(response13);
        response14.numRedirects = '4';
        boolean boolean19 = response14.hasHeaderWithValue("Content-Encoding", "");
        boolean boolean21 = response14.hasCookie("hi!=Content-Encoding=UTF-8");
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection12, (org.jsoup.Connection.Response) response14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        response1.numRedirects = 0;
        response1.contentType = "null=Content-Encoding";
        java.lang.String str10 = response1.charset();
        java.lang.String str12 = response1.header("null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        java.lang.String str6 = response1.header("null=Content-Encoding");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        java.net.URL uRL8 = response1.url();
        org.jsoup.Connection.Response response11 = response1.cookie("null=application/x-www-form-urlencoded", "null=application/x-www-form-urlencoded");
        response1.statusMessage = "null=null=Content-Encoding";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        java.lang.String str13 = response1.header("multipart/form-data");
        response1.contentType = "UTF-8";
        response1.contentType = "hi!=Content-Encoding";
        boolean boolean20 = response1.hasHeaderWithValue("UTF-8", "UTF-8");
        java.net.URL uRL21 = response1.url();
        org.jsoup.Connection.Response response23 = response1.removeCookie("application/x-www-form-urlencoded");
        java.lang.String str24 = response1.statusMessage();
        java.net.URL uRL25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response26 = response1.url(uRL25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        org.jsoup.Connection connection15 = httpConnection0.header("Content-Encoding", "multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response16 = null;
        org.jsoup.helper.HttpConnection.Response response17 = new org.jsoup.helper.HttpConnection.Response(response16);
        boolean boolean18 = response17.executed;
        java.net.URL uRL19 = response17.url();
        boolean boolean20 = response17.executed;
        org.jsoup.Connection.Response response22 = response17.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request23 = response17.req;
        org.jsoup.Connection.Request request24 = null;
        response17.req = request24;
        org.jsoup.Connection connection26 = httpConnection0.response((org.jsoup.Connection.Response) response17);
        org.jsoup.Connection connection28 = httpConnection0.referrer("null=Content-Encoding");
        org.jsoup.helper.HttpConnection.Response response29 = null;
        org.jsoup.helper.HttpConnection.Response response30 = new org.jsoup.helper.HttpConnection.Response(response29);
        boolean boolean31 = response30.executed;
        java.net.URL uRL32 = response30.url();
        org.jsoup.Connection.Response response35 = response30.header("null=Content-Encoding", "multipart/form-data");
        java.lang.String str36 = response30.contentType();
        org.jsoup.Connection.Response response39 = response30.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        org.jsoup.Connection connection40 = httpConnection0.response(response39);
        org.jsoup.Connection connection42 = httpConnection0.userAgent("");
        org.jsoup.Connection connection44 = httpConnection0.validateTLSCertificates(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.value("null=Content-Encoding");
        boolean boolean6 = keyVal5.hasInputStream();
        java.lang.String str7 = keyVal5.value;
        java.io.InputStream inputStream8 = keyVal5.inputStream();
        java.io.InputStream inputStream9 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal5.inputStream(inputStream9);
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal5.value("Content-Encoding=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal12.value("hi!=Content-Encoding=UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Content-Encoding" + "'", str3.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=Content-Encoding" + "'", str7.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        java.net.Proxy proxy5 = request0.proxy();
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean7 = request6.ignoreContentType;
        java.lang.String str8 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request6);
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        org.jsoup.Connection.Response response13 = response10.cookie("null=Content-Encoding", "multipart/form-data");
        int int14 = response10.statusCode();
        boolean boolean17 = response10.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response18 = null;
        org.jsoup.helper.HttpConnection.Response response19 = new org.jsoup.helper.HttpConnection.Response(response18);
        boolean boolean20 = response19.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap21 = response19.cookies();
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str24 = keyVal23.key();
        keyVal23.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal27.value = "Content-Encoding";
        java.lang.String str30 = keyVal27.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal31.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream35 = keyVal34.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal36 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream37 = keyVal36.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray38 = new org.jsoup.Connection.KeyVal[] { keyVal23, keyVal27, keyVal31, keyVal34, keyVal36 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList39 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList39, keyValArray38);
        org.jsoup.Connection connection41 = httpConnection22.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList39);
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean43 = request42.ignoreContentType;
        request42.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request47 = request42.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request49 = request42.data((org.jsoup.Connection.KeyVal) keyVal48);
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean51 = request50.ignoreContentType;
        request50.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request56 = request50.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy57 = request56.proxy;
        org.jsoup.helper.HttpConnection.Request request58 = request42.proxy(proxy57);
        org.jsoup.Connection.Method method59 = request58.method();
        org.jsoup.Connection connection60 = httpConnection22.method(method59);
        org.jsoup.Connection.Response response61 = response19.method(method59);
        org.jsoup.Connection.Response response62 = response10.method(method59);
        org.jsoup.Connection.Request request63 = request6.method(method59);
        org.jsoup.Connection.Request request64 = request0.method(method59);
        java.lang.String str65 = request0.postDataCharset();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null=Content-Encoding" + "'", str30.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "multipart/form-data" + "'", str65.equals("multipart/form-data"));
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        org.jsoup.Connection.Response response12 = response1.header("hi!", "");
        response1.numRedirects = (short) -1;
        java.net.URL uRL15 = response1.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL15);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.lang.String str2 = request0.cookie("Content-Encoding");
        org.jsoup.Connection.Request request4 = request0.maxBodySize((int) (byte) 0);
        org.jsoup.parser.Parser parser5 = request0.parser();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser5);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        java.lang.String str7 = response1.statusMessage;
        response1.statusCode = (byte) -1;
        java.lang.String str10 = response1.contentType;
        boolean boolean11 = response1.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request14 = request8.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy15 = request14.proxy;
        org.jsoup.helper.HttpConnection.Request request16 = request0.proxy(proxy15);
        boolean boolean19 = request0.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request23 = request0.data((org.jsoup.Connection.KeyVal) keyVal22);
        java.lang.String str24 = keyVal22.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = keyVal22.key("null=multipart/form-data");
        boolean boolean27 = keyVal22.hasInputStream();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "hi!" + "'", str24.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request11 = request7.data((org.jsoup.Connection.KeyVal) keyVal10);
        boolean boolean12 = request7.validateTLSCertificates();
        org.jsoup.helper.HttpConnection.Request request14 = request7.timeout((int) 'a');
        int int15 = request7.timeout();
        request7.validateTSLCertificates = true;
        boolean boolean18 = request7.validateTLSCertificates();
        java.lang.String str19 = request7.postDataCharset;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 97 + "'", int15 == 97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "UTF-8" + "'", str19.equals("UTF-8"));
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        boolean boolean7 = request0.validateTSLCertificates;
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.helper.HttpConnection.Request request9 = request0.parser(parser8);
        request9.ignoreContentType = false;
        org.jsoup.Connection.Request request13 = request9.removeHeader("UTF-8");
        org.jsoup.Connection.Request request16 = request9.header("null=Content-Encoding", "UTF-8");
        org.jsoup.Connection.Request request18 = request9.removeHeader("hi!=Content-Encoding");
        org.jsoup.Connection.Request request20 = request9.ignoreHttpErrors(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry22 = request9.scanHeaders("multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry22);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        boolean boolean2 = request0.followRedirects();
        boolean boolean3 = request0.ignoreHttpErrors;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal1 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str2 = keyVal1.key();
        keyVal1.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal5.value = "Content-Encoding";
        java.lang.String str8 = keyVal5.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal9.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream13 = keyVal12.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream15 = keyVal14.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray16 = new org.jsoup.Connection.KeyVal[] { keyVal1, keyVal5, keyVal9, keyVal12, keyVal14 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList17 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17, keyValArray16);
        org.jsoup.Connection connection19 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17);
        org.jsoup.Connection connection21 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection.Response response22 = httpConnection0.response();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=Content-Encoding" + "'", str8.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        org.jsoup.Connection.Request request3 = request0.removeHeader("hi!=Content-Encoding");
        java.net.URL uRL4 = request0.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL4);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser19 = request18.parser();
        org.jsoup.Connection connection20 = httpConnection0.parser(parser19);
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser22 = null;
        org.jsoup.Connection connection23 = httpConnection21.parser(parser22);
        org.jsoup.helper.HttpConnection.Response response24 = null;
        org.jsoup.helper.HttpConnection.Response response25 = new org.jsoup.helper.HttpConnection.Response(response24);
        boolean boolean26 = response25.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap27 = response25.headers();
        org.jsoup.Connection connection28 = httpConnection21.data(strMap27);
        org.jsoup.Connection connection30 = httpConnection21.ignoreContentType(false);
        org.jsoup.Connection connection32 = httpConnection21.referrer("hi!=Content-Encoding");
        org.jsoup.helper.HttpConnection.Response response33 = null;
        org.jsoup.helper.HttpConnection.Response response34 = new org.jsoup.helper.HttpConnection.Response(response33);
        boolean boolean35 = response34.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = response34.headers();
        response34.executed = true;
        java.util.Map<java.lang.String, java.lang.String> strMap39 = response34.cookies();
        org.jsoup.Connection connection40 = httpConnection21.cookies(strMap39);
        org.jsoup.helper.HttpConnection httpConnection41 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser42 = null;
        org.jsoup.Connection connection43 = httpConnection41.parser(parser42);
        org.jsoup.Connection connection45 = httpConnection41.userAgent("hi!");
        org.jsoup.Connection connection47 = httpConnection41.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str49 = keyVal48.key();
        keyVal48.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal52 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal52.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray55 = new org.jsoup.Connection.KeyVal[] { keyVal48, keyVal52 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList56 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList56, keyValArray55);
        org.jsoup.Connection connection58 = httpConnection41.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList56);
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser60 = request59.parser();
        org.jsoup.Connection connection61 = httpConnection41.parser(parser60);
        java.io.InputStream inputStream64 = null;
        org.jsoup.Connection connection65 = httpConnection41.data("hi!", "application/x-www-form-urlencoded", inputStream64);
        org.jsoup.Connection connection67 = httpConnection41.userAgent("hi!");
        org.jsoup.Connection connection70 = httpConnection41.header("application/x-www-form-urlencoded=null=Content-Encoding", "Content-Encoding=hi!");
        org.jsoup.helper.HttpConnection httpConnection71 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser72 = null;
        org.jsoup.Connection connection73 = httpConnection71.parser(parser72);
        org.jsoup.helper.HttpConnection.Response response74 = null;
        org.jsoup.helper.HttpConnection.Response response75 = new org.jsoup.helper.HttpConnection.Response(response74);
        boolean boolean76 = response75.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap77 = response75.headers();
        org.jsoup.Connection connection78 = httpConnection71.data(strMap77);
        org.jsoup.Connection connection80 = httpConnection71.ignoreContentType(false);
        org.jsoup.Connection connection82 = httpConnection71.referrer("hi!=Content-Encoding");
        java.lang.String[] strArray87 = new java.lang.String[] { "null=Content-Encoding", "", "UTF-8", "null=Content-Encoding" };
        org.jsoup.Connection connection88 = httpConnection71.data(strArray87);
        org.jsoup.Connection connection89 = httpConnection41.data(strArray87);
        org.jsoup.Connection connection90 = httpConnection21.data(strArray87);
        org.jsoup.Connection connection91 = httpConnection0.data(strArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection91);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request14 = request8.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy15 = request14.proxy;
        org.jsoup.helper.HttpConnection.Request request16 = request0.proxy(proxy15);
        boolean boolean19 = request0.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        boolean boolean20 = request0.ignoreHttpErrors();
        int int21 = request0.maxBodySize();
        request0.validateTSLCertificates = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        org.jsoup.Connection.Response response6 = response1.removeHeader("null=multipart/form-data");
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.Connection connection9 = httpConnection7.parser(parser8);
        org.jsoup.Connection connection11 = httpConnection7.userAgent("hi!");
        org.jsoup.Connection connection13 = httpConnection7.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response14 = null;
        org.jsoup.helper.HttpConnection.Response response15 = new org.jsoup.helper.HttpConnection.Response(response14);
        boolean boolean16 = response15.executed;
        java.net.URL uRL17 = response15.url();
        boolean boolean18 = response15.executed;
        httpConnection7.res = response15;
        org.jsoup.Connection.Method method20 = response15.method();
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        request21.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request25 = request21.ignoreContentType(true);
        java.net.Proxy proxy26 = request21.proxy();
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean28 = request27.ignoreContentType;
        java.lang.String str29 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request27);
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        org.jsoup.Connection.Response response34 = response31.cookie("null=Content-Encoding", "multipart/form-data");
        int int35 = response31.statusCode();
        boolean boolean38 = response31.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response39 = null;
        org.jsoup.helper.HttpConnection.Response response40 = new org.jsoup.helper.HttpConnection.Response(response39);
        boolean boolean41 = response40.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = response40.cookies();
        org.jsoup.helper.HttpConnection httpConnection43 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str45 = keyVal44.key();
        keyVal44.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal48.value = "Content-Encoding";
        java.lang.String str51 = keyVal48.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal52 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal52.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal55 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream56 = keyVal55.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal57 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream58 = keyVal57.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray59 = new org.jsoup.Connection.KeyVal[] { keyVal44, keyVal48, keyVal52, keyVal55, keyVal57 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList60 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList60, keyValArray59);
        org.jsoup.Connection connection62 = httpConnection43.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList60);
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean64 = request63.ignoreContentType;
        request63.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request68 = request63.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal69 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request70 = request63.data((org.jsoup.Connection.KeyVal) keyVal69);
        org.jsoup.helper.HttpConnection.Request request71 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean72 = request71.ignoreContentType;
        request71.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request77 = request71.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy78 = request77.proxy;
        org.jsoup.helper.HttpConnection.Request request79 = request63.proxy(proxy78);
        org.jsoup.Connection.Method method80 = request79.method();
        org.jsoup.Connection connection81 = httpConnection43.method(method80);
        org.jsoup.Connection.Response response82 = response40.method(method80);
        org.jsoup.Connection.Response response83 = response31.method(method80);
        org.jsoup.Connection.Request request84 = request27.method(method80);
        org.jsoup.Connection.Request request85 = request21.method(method80);
        org.jsoup.Connection.Response response86 = response15.method(method80);
        org.jsoup.Connection.Response response87 = response1.method(method80);
        org.jsoup.Connection.Response response90 = response1.header("application/x-www-form-urlencoded", "Content-Encoding=hi!");
        java.nio.ByteBuffer byteBuffer91 = null;
        response1.byteData = byteBuffer91;
        boolean boolean93 = response1.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null=Content-Encoding" + "'", str51.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request79);
        org.junit.Assert.assertTrue("'" + method80 + "' != '" + org.jsoup.Connection.Method.GET + "'", method80.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean8 = response1.hasHeaderWithValue("multipart/form-data", "");
        java.lang.String str9 = response1.contentType;
        response1.statusMessage = "";
        response1.numRedirects = (-1);
        org.jsoup.Connection.Response response15 = response1.removeHeader("null=application/x-www-form-urlencoded");
        boolean boolean17 = response1.hasCookie("application/x-www-form-urlencoded=null=Content-Encoding");
        org.jsoup.Connection.Response response20 = response1.header("application/x-www-form-urlencoded", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        java.lang.String str7 = response1.header("");
        org.jsoup.helper.HttpConnection.Response response8 = null;
        org.jsoup.helper.HttpConnection.Response response9 = new org.jsoup.helper.HttpConnection.Response(response8);
        boolean boolean10 = response9.executed;
        java.net.URL uRL11 = response9.url();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = response9.cookies();
        org.jsoup.helper.HttpConnection httpConnection13 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser14 = null;
        org.jsoup.Connection connection15 = httpConnection13.parser(parser14);
        org.jsoup.Connection connection17 = httpConnection13.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response18 = null;
        org.jsoup.helper.HttpConnection.Response response19 = new org.jsoup.helper.HttpConnection.Response(response18);
        boolean boolean20 = response19.executed;
        java.net.URL uRL21 = response19.url();
        boolean boolean22 = response19.executed;
        response19.executed = false;
        httpConnection13.res = response19;
        org.jsoup.helper.HttpConnection.Response response26 = null;
        org.jsoup.helper.HttpConnection.Response response27 = new org.jsoup.helper.HttpConnection.Response(response26);
        org.jsoup.Connection.Response response30 = response27.cookie("null=Content-Encoding", "multipart/form-data");
        int int31 = response27.statusCode();
        boolean boolean34 = response27.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response35 = null;
        org.jsoup.helper.HttpConnection.Response response36 = new org.jsoup.helper.HttpConnection.Response(response35);
        boolean boolean37 = response36.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = response36.cookies();
        org.jsoup.helper.HttpConnection httpConnection39 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal40 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str41 = keyVal40.key();
        keyVal40.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal44.value = "Content-Encoding";
        java.lang.String str47 = keyVal44.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal48.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal51 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream52 = keyVal51.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal53 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream54 = keyVal53.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray55 = new org.jsoup.Connection.KeyVal[] { keyVal40, keyVal44, keyVal48, keyVal51, keyVal53 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList56 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList56, keyValArray55);
        org.jsoup.Connection connection58 = httpConnection39.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList56);
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean60 = request59.ignoreContentType;
        request59.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request64 = request59.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal65 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request66 = request59.data((org.jsoup.Connection.KeyVal) keyVal65);
        org.jsoup.helper.HttpConnection.Request request67 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean68 = request67.ignoreContentType;
        request67.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request73 = request67.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy74 = request73.proxy;
        org.jsoup.helper.HttpConnection.Request request75 = request59.proxy(proxy74);
        org.jsoup.Connection.Method method76 = request75.method();
        org.jsoup.Connection connection77 = httpConnection39.method(method76);
        org.jsoup.Connection.Response response78 = response36.method(method76);
        org.jsoup.Connection.Response response79 = response27.method(method76);
        org.jsoup.Connection connection80 = httpConnection13.method(method76);
        org.jsoup.Connection.Response response81 = response9.method(method76);
        org.jsoup.Connection.Response response82 = response1.method(method76);
        org.jsoup.Connection.Response response84 = response1.removeHeader("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "null=Content-Encoding" + "'", str47.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request75);
        org.junit.Assert.assertTrue("'" + method76 + "' != '" + org.jsoup.Connection.Method.GET + "'", method76.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response84);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str10 = response1.contentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response5 = null;
        org.jsoup.helper.HttpConnection.Response response6 = new org.jsoup.helper.HttpConnection.Response(response5);
        boolean boolean7 = response6.executed;
        java.net.URL uRL8 = response6.url();
        boolean boolean9 = response6.executed;
        response6.executed = false;
        httpConnection0.res = response6;
        org.jsoup.helper.HttpConnection.Response response13 = null;
        org.jsoup.helper.HttpConnection.Response response14 = new org.jsoup.helper.HttpConnection.Response(response13);
        org.jsoup.Connection.Response response17 = response14.cookie("null=Content-Encoding", "multipart/form-data");
        int int18 = response14.statusCode();
        boolean boolean21 = response14.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response22 = null;
        org.jsoup.helper.HttpConnection.Response response23 = new org.jsoup.helper.HttpConnection.Response(response22);
        boolean boolean24 = response23.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = response23.cookies();
        org.jsoup.helper.HttpConnection httpConnection26 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str28 = keyVal27.key();
        keyVal27.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal31.value = "Content-Encoding";
        java.lang.String str34 = keyVal31.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal35.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal38 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream39 = keyVal38.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal40 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream41 = keyVal40.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray42 = new org.jsoup.Connection.KeyVal[] { keyVal27, keyVal31, keyVal35, keyVal38, keyVal40 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList43 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList43, keyValArray42);
        org.jsoup.Connection connection45 = httpConnection26.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList43);
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean47 = request46.ignoreContentType;
        request46.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request51 = request46.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal52 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request53 = request46.data((org.jsoup.Connection.KeyVal) keyVal52);
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean55 = request54.ignoreContentType;
        request54.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request60 = request54.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy61 = request60.proxy;
        org.jsoup.helper.HttpConnection.Request request62 = request46.proxy(proxy61);
        org.jsoup.Connection.Method method63 = request62.method();
        org.jsoup.Connection connection64 = httpConnection26.method(method63);
        org.jsoup.Connection.Response response65 = response23.method(method63);
        org.jsoup.Connection.Response response66 = response14.method(method63);
        org.jsoup.Connection connection67 = httpConnection0.method(method63);
        org.jsoup.helper.HttpConnection.Request request68 = new org.jsoup.helper.HttpConnection.Request();
        int int69 = request68.timeout();
        boolean boolean70 = request68.ignoreContentType;
        org.jsoup.Connection.Request request72 = request68.ignoreHttpErrors(false);
        boolean boolean73 = request68.ignoreContentType();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection74 = request68.data();
        org.jsoup.Connection connection75 = httpConnection0.data(keyValCollection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null=Content-Encoding" + "'", str34.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertTrue("'" + method63 + "' != '" + org.jsoup.Connection.Method.GET + "'", method63.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 3000 + "'", int69 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection75);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.Connection connection8 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser10 = null;
        org.jsoup.Connection connection11 = httpConnection9.parser(parser10);
        org.jsoup.Connection connection13 = httpConnection9.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response14 = null;
        org.jsoup.helper.HttpConnection.Response response15 = new org.jsoup.helper.HttpConnection.Response(response14);
        boolean boolean16 = response15.executed;
        java.net.URL uRL17 = response15.url();
        boolean boolean18 = response15.executed;
        response15.executed = false;
        httpConnection9.res = response15;
        org.jsoup.helper.HttpConnection.Response response22 = null;
        org.jsoup.helper.HttpConnection.Response response23 = new org.jsoup.helper.HttpConnection.Response(response22);
        response23.numRedirects = '4';
        org.jsoup.Connection.Method method26 = response23.method();
        response23.statusCode = 1;
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean30 = request29.ignoreContentType;
        request29.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request34 = request29.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request36 = request29.data((org.jsoup.Connection.KeyVal) keyVal35);
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean38 = request37.ignoreContentType;
        request37.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request43 = request37.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy44 = request43.proxy;
        org.jsoup.helper.HttpConnection.Request request45 = request29.proxy(proxy44);
        org.jsoup.Connection.Method method46 = request45.method();
        org.jsoup.Connection.Response response47 = response23.method(method46);
        org.jsoup.Connection connection48 = httpConnection9.method(method46);
        java.lang.String[] strArray55 = new java.lang.String[] { "application/x-www-form-urlencoded", "null=null", "null=multipart/form-data", "null=Content-Encoding", "null=null", "hi!=Content-Encoding" };
        org.jsoup.Connection connection56 = httpConnection9.data(strArray55);
        org.jsoup.Connection connection57 = httpConnection0.data(strArray55);
        org.jsoup.Connection connection59 = httpConnection0.followRedirects(true);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection61 = httpConnection0.postDataCharset("Content-Encoding");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: Content-Encoding");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection59);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        boolean boolean5 = request0.validateTLSCertificates();
        java.net.Proxy proxy6 = request0.proxy();
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean8 = request7.ignoreContentType;
        request7.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request12 = request7.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request14 = request7.timeout((int) (byte) 10);
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str18 = keyVal17.key();
        keyVal17.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal21.value = "Content-Encoding";
        java.lang.String str24 = keyVal21.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal25.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream29 = keyVal28.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal30 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream31 = keyVal30.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray32 = new org.jsoup.Connection.KeyVal[] { keyVal17, keyVal21, keyVal25, keyVal28, keyVal30 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList33 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList33, keyValArray32);
        org.jsoup.Connection connection35 = httpConnection16.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList33);
        request15.data = keyValList33;
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean38 = request37.ignoreContentType;
        request37.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request42 = request37.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request44 = request37.data((org.jsoup.Connection.KeyVal) keyVal43);
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean46 = request45.ignoreContentType;
        request45.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request51 = request45.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy52 = request51.proxy;
        org.jsoup.helper.HttpConnection.Request request53 = request37.proxy(proxy52);
        org.jsoup.helper.HttpConnection.Request request54 = request15.proxy(proxy52);
        org.jsoup.helper.HttpConnection.Request request55 = request7.proxy(proxy52);
        org.jsoup.helper.HttpConnection.Request request56 = request0.proxy(proxy52);
        java.net.Proxy proxy57 = request0.proxy;
        boolean boolean58 = request0.parserDefined;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null=Content-Encoding" + "'", str24.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.Connection connection29 = httpConnection22.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        response31.numRedirects = '4';
        org.jsoup.Connection.Method method34 = response31.method();
        response31.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = response31.cookies();
        org.jsoup.Connection connection38 = httpConnection22.cookies(strMap37);
        org.jsoup.Connection connection39 = httpConnection0.data(strMap37);
        org.jsoup.helper.HttpConnection.Response response40 = null;
        org.jsoup.helper.HttpConnection.Response response41 = new org.jsoup.helper.HttpConnection.Response(response40);
        org.jsoup.Connection.Response response44 = response41.cookie("null=Content-Encoding", "multipart/form-data");
        int int45 = response41.statusCode();
        boolean boolean48 = response41.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response50 = response41.removeCookie("Content-Encoding");
        org.jsoup.Connection connection51 = httpConnection0.response(response50);
        org.jsoup.Connection connection53 = httpConnection0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean55 = request54.ignoreContentType;
        request54.maxBodySizeBytes = (byte) -1;
        java.lang.String str58 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request54);
        request54.parserDefined = true;
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean62 = request61.ignoreContentType;
        request61.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request67 = request61.proxy("hi!", (int) (short) 0);
        request61.validateTSLCertificates = false;
        boolean boolean70 = request61.ignoreContentType;
        org.jsoup.Connection.Request request72 = request61.followRedirects(true);
        org.jsoup.parser.Parser parser73 = request61.parser();
        int int74 = request61.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request75 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean76 = request75.ignoreContentType;
        request75.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request81 = request75.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy82 = request81.proxy;
        org.jsoup.helper.HttpConnection.Request request83 = request61.proxy(proxy82);
        org.jsoup.helper.HttpConnection.Request request84 = request54.proxy(proxy82);
        org.jsoup.Connection connection85 = httpConnection0.request((org.jsoup.Connection.Request) request84);
        org.jsoup.helper.HttpConnection.Request request87 = request84.timeout((int) (byte) 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request87);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        org.jsoup.Connection.Response response12 = response1.header("hi!", "");
        response1.charset = "hi!";
        boolean boolean16 = response1.hasHeader("hi!");
        response1.contentType = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        java.lang.String str13 = response8.charset();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = response8.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = response8.headers();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = response8.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("UTF-8=multipart/form-data", "hi!=Content-Encoding");
        java.lang.String str3 = keyVal2.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!=Content-Encoding" + "'", str3.equals("hi!=Content-Encoding"));
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        java.lang.String str13 = response8.charset();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = response8.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = response8.headers();
        boolean boolean17 = response8.hasCookie("Content-Encoding=hi!");
        boolean boolean19 = response8.hasCookie("null=multipart/form-data");
        org.jsoup.Connection.Method method20 = response8.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method20);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) (byte) 10);
        boolean boolean8 = request7.parserDefined;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request10 = request7.postDataCharset("application/x-www-form-urlencoded=null=Content-Encoding");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: application/x-www-form-urlencoded=null=Content-Encoding");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean8 = response1.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response10 = response1.removeCookie("Content-Encoding");
        org.jsoup.Connection.Response response13 = response1.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        response1.statusCode = (short) 10;
        java.lang.String str17 = response1.getHeaderCaseInsensitive("hi!=Content-Encoding");
        boolean boolean20 = response1.hasHeaderWithValue("Content-Encoding", "");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry22 = response1.scanHeaders("application/x-www-form-urlencoded=null=Content-Encoding");
        org.jsoup.Connection.Response response25 = response1.cookie("null=multipart/form-data", "application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response25);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.userAgent("hi!");
        org.jsoup.Connection connection28 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str30 = keyVal29.key();
        keyVal29.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal33.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray36 = new org.jsoup.Connection.KeyVal[] { keyVal29, keyVal33 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList37 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList37, keyValArray36);
        org.jsoup.Connection connection39 = httpConnection22.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser41 = request40.parser();
        org.jsoup.Connection connection42 = httpConnection22.parser(parser41);
        org.jsoup.Connection connection43 = httpConnection0.parser(parser41);
        org.jsoup.Connection.Request request44 = null;
        httpConnection0.req = request44;
        org.jsoup.helper.HttpConnection.Response response46 = null;
        org.jsoup.helper.HttpConnection.Response response47 = new org.jsoup.helper.HttpConnection.Response(response46);
        org.jsoup.Connection.Response response50 = response47.cookie("null=Content-Encoding", "multipart/form-data");
        int int51 = response47.statusCode();
        boolean boolean54 = response47.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response56 = response47.removeCookie("Content-Encoding");
        java.lang.String str57 = response47.contentType();
        httpConnection0.res = response47;
        java.lang.String str60 = response47.getHeaderCaseInsensitive("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.key();
        java.io.InputStream inputStream4 = keyVal0.stream;
        java.io.InputStream inputStream5 = null;
        keyVal0.stream = inputStream5;
        java.lang.String str7 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.key("null=null");
        java.io.InputStream inputStream10 = keyVal0.stream;
        java.lang.String str11 = keyVal0.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Content-Encoding" + "'", str11.equals("Content-Encoding"));
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.numRedirects;
        java.util.Map<java.lang.String, java.lang.String> strMap5 = response1.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        org.jsoup.Connection.Response response6 = response1.removeHeader("multipart/form-data");
        response1.statusCode = 0;
        org.jsoup.helper.HttpConnection.Response response9 = new org.jsoup.helper.HttpConnection.Response(response1);
        java.nio.ByteBuffer byteBuffer10 = response1.byteData;
        boolean boolean12 = response1.hasCookie("application/x-www-form-urlencoded");
        java.util.Map<java.lang.String, java.lang.String> strMap13 = response1.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.key();
        java.io.InputStream inputStream4 = keyVal0.stream;
        java.io.InputStream inputStream5 = null;
        keyVal0.stream = inputStream5;
        java.lang.String str7 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.key("null=null");
        java.lang.String str10 = keyVal0.value;
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal0.value("null=multipart/form-data");
        java.io.InputStream inputStream13 = null;
        keyVal0.stream = inputStream13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Content-Encoding" + "'", str10.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = 3000;
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean8 = response1.hasHeaderWithValue("multipart/form-data", "");
        java.lang.String str9 = response1.contentType;
        response1.executed = false;
        java.lang.String str13 = response1.cookie("hi!=Content-Encoding");
        int int14 = response1.statusCode;
        boolean boolean16 = response1.hasHeader("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = response1.cookie("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.helper.HttpConnection.Response response2 = null;
        org.jsoup.helper.HttpConnection.Response response3 = new org.jsoup.helper.HttpConnection.Response(response2);
        response3.numRedirects = '4';
        org.jsoup.Connection.Method method6 = response3.method();
        response3.statusCode = 1;
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean10 = request9.ignoreContentType;
        request9.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request14 = request9.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request16 = request9.data((org.jsoup.Connection.KeyVal) keyVal15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean18 = request17.ignoreContentType;
        request17.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request23 = request17.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy24 = request23.proxy;
        org.jsoup.helper.HttpConnection.Request request25 = request9.proxy(proxy24);
        org.jsoup.Connection.Method method26 = request25.method();
        org.jsoup.Connection.Response response27 = response3.method(method26);
        org.jsoup.Connection.Response response28 = response1.method(method26);
        int int29 = response1.statusCode;
        java.lang.String str30 = response1.statusMessage;
        boolean boolean33 = response1.hasHeaderWithValue("hi!", "Content-Encoding");
        java.lang.String str34 = response1.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        java.lang.String str6 = response1.charset;
        java.lang.String str7 = response1.statusMessage();
        response1.numRedirects = (byte) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = response1.hasCookie("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        java.lang.String str6 = response1.header("null=Content-Encoding");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        org.jsoup.Connection.Response response9 = response1.removeHeader("multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        int int5 = request0.timeoutMilliseconds;
        java.lang.String str6 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request0);
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal7.value = "Content-Encoding";
        java.lang.String str10 = keyVal7.toString();
        java.io.InputStream inputStream11 = keyVal7.stream;
        java.io.InputStream inputStream12 = keyVal7.stream;
        org.jsoup.helper.HttpConnection.Request request13 = request0.data((org.jsoup.Connection.KeyVal) keyVal7);
        boolean boolean15 = request13.hasHeader("application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        org.jsoup.Connection.Request request17 = request13.maxBodySize((int) (byte) 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3000 + "'", int5 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null=Content-Encoding" + "'", str10.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.jsoup.Connection.Request request0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = null;
        org.jsoup.helper.HttpConnection.Response response2 = new org.jsoup.helper.HttpConnection.Response(response1);
        org.jsoup.Connection.Response response5 = response2.cookie("null=Content-Encoding", "multipart/form-data");
        int int6 = response2.statusCode();
        boolean boolean7 = response2.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap8 = response2.cookies();
        boolean boolean11 = response2.hasHeaderWithValue("application/x-www-form-urlencoded", "Content-Encoding=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response12 = org.jsoup.helper.HttpConnection.Response.execute(request0, response2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeMimeName("hi!=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi!=Content-Encoding" + "'", str1.equals("hi!=Content-Encoding"));
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        org.jsoup.Connection.Method method4 = response1.method();
        response1.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        java.lang.String str9 = response1.getHeaderCaseInsensitive("multipart/form-data");
        org.jsoup.Connection.Response response12 = response1.header("Content-Encoding=hi!", "null=null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection.Response response24 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        int int26 = request25.timeout();
        boolean boolean27 = request25.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request29 = request25.timeout(0);
        boolean boolean31 = request29.hasCookie("application/x-www-form-urlencoded");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection32 = request29.data();
        org.jsoup.Connection connection33 = httpConnection0.data(keyValCollection32);
        org.jsoup.Connection connection35 = httpConnection0.timeout((int) (byte) 100);
        org.jsoup.Connection.Response response36 = httpConnection0.response();
        org.jsoup.Connection.Response response37 = null;
        org.jsoup.Connection connection38 = httpConnection0.response(response37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3000 + "'", int26 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        java.net.Proxy proxy2 = request0.proxy();
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str6 = keyVal5.key();
        keyVal5.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal9.value = "Content-Encoding";
        java.lang.String str12 = keyVal9.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal13.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream17 = keyVal16.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream19 = keyVal18.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray20 = new org.jsoup.Connection.KeyVal[] { keyVal5, keyVal9, keyVal13, keyVal16, keyVal18 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList21 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList21, keyValArray20);
        org.jsoup.Connection connection23 = httpConnection4.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList21);
        request3.data = keyValList21;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean26 = request25.ignoreContentType;
        request25.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request30 = request25.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request32 = request25.data((org.jsoup.Connection.KeyVal) keyVal31);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean34 = request33.ignoreContentType;
        request33.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request39 = request33.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy40 = request39.proxy;
        org.jsoup.helper.HttpConnection.Request request41 = request25.proxy(proxy40);
        org.jsoup.helper.HttpConnection.Request request42 = request3.proxy(proxy40);
        request42.followRedirects = false;
        org.jsoup.parser.Parser parser45 = request42.parser();
        org.jsoup.helper.HttpConnection.Request request46 = request0.parser(parser45);
        org.jsoup.parser.Parser parser47 = request46.parser();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null=Content-Encoding" + "'", str12.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser47);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        org.jsoup.Connection.Response response6 = response1.header("null=Content-Encoding", "multipart/form-data");
        java.lang.String str7 = response1.contentType();
        java.lang.String str8 = response1.statusMessage;
        java.net.URL uRL9 = response1.url();
        org.jsoup.helper.HttpConnection.Response response10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        org.jsoup.helper.HttpConnection.Response response12 = null;
        org.jsoup.helper.HttpConnection.Response response13 = new org.jsoup.helper.HttpConnection.Response(response12);
        response13.numRedirects = '4';
        org.jsoup.Connection.Method method16 = response13.method();
        response13.statusCode = 1;
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean20 = request19.ignoreContentType;
        request19.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request24 = request19.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request26 = request19.data((org.jsoup.Connection.KeyVal) keyVal25);
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean28 = request27.ignoreContentType;
        request27.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request33 = request27.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy34 = request33.proxy;
        org.jsoup.helper.HttpConnection.Request request35 = request19.proxy(proxy34);
        org.jsoup.Connection.Method method36 = request35.method();
        org.jsoup.Connection.Response response37 = response13.method(method36);
        org.jsoup.Connection.Response response38 = response11.method(method36);
        org.jsoup.Connection.Response response39 = response1.method(method36);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        java.lang.String str42 = request40.cookie("Content-Encoding");
        java.lang.String str43 = request40.postDataCharset();
        org.jsoup.helper.HttpConnection.Request request45 = request40.timeout((int) (short) 0);
        boolean boolean46 = request45.ignoreContentType;
        response1.req = request45;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray48 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "UTF-8" + "'", str43.equals("UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        org.jsoup.Connection.Response response7 = response1.header("null=Content-Encoding", "null=Content-Encoding");
        java.lang.String str9 = response1.getHeaderCaseInsensitive("");
        response1.executed = false;
        java.lang.String str13 = response1.cookie("hi!=Content-Encoding");
        org.jsoup.Connection.Method method14 = response1.method();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = response1.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str3 = response1.getHeaderCaseInsensitive("Content-Encoding");
        java.lang.String str5 = response1.header("multipart/form-data");
        int int6 = response1.statusCode;
        org.jsoup.Connection.Response response8 = response1.removeCookie("UTF-8");
        boolean boolean10 = response1.hasHeader("multipart/form-data");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        int int5 = request0.timeoutMilliseconds;
        int int6 = request0.maxBodySizeBytes;
        boolean boolean8 = request0.hasHeader("multipart/form-data");
        boolean boolean10 = request0.hasHeader("multipart/form-data");
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser12 = null;
        org.jsoup.Connection connection13 = httpConnection11.parser(parser12);
        org.jsoup.Connection connection15 = httpConnection11.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response16 = null;
        org.jsoup.helper.HttpConnection.Response response17 = new org.jsoup.helper.HttpConnection.Response(response16);
        boolean boolean18 = response17.executed;
        java.net.URL uRL19 = response17.url();
        boolean boolean20 = response17.executed;
        response17.executed = false;
        httpConnection11.res = response17;
        org.jsoup.helper.HttpConnection.Response response24 = null;
        org.jsoup.helper.HttpConnection.Response response25 = new org.jsoup.helper.HttpConnection.Response(response24);
        org.jsoup.Connection.Response response28 = response25.cookie("null=Content-Encoding", "multipart/form-data");
        int int29 = response25.statusCode();
        boolean boolean32 = response25.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response33 = null;
        org.jsoup.helper.HttpConnection.Response response34 = new org.jsoup.helper.HttpConnection.Response(response33);
        boolean boolean35 = response34.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = response34.cookies();
        org.jsoup.helper.HttpConnection httpConnection37 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal38 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str39 = keyVal38.key();
        keyVal38.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal42 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal42.value = "Content-Encoding";
        java.lang.String str45 = keyVal42.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal46 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal46.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal49 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream50 = keyVal49.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal51 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream52 = keyVal51.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray53 = new org.jsoup.Connection.KeyVal[] { keyVal38, keyVal42, keyVal46, keyVal49, keyVal51 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList54 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList54, keyValArray53);
        org.jsoup.Connection connection56 = httpConnection37.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList54);
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean58 = request57.ignoreContentType;
        request57.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request62 = request57.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal63 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request64 = request57.data((org.jsoup.Connection.KeyVal) keyVal63);
        org.jsoup.helper.HttpConnection.Request request65 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean66 = request65.ignoreContentType;
        request65.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request71 = request65.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy72 = request71.proxy;
        org.jsoup.helper.HttpConnection.Request request73 = request57.proxy(proxy72);
        org.jsoup.Connection.Method method74 = request73.method();
        org.jsoup.Connection connection75 = httpConnection37.method(method74);
        org.jsoup.Connection.Response response76 = response34.method(method74);
        org.jsoup.Connection.Response response77 = response25.method(method74);
        org.jsoup.Connection connection78 = httpConnection11.method(method74);
        org.jsoup.Connection connection80 = httpConnection11.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request81 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean82 = request81.ignoreContentType;
        request81.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request86 = request81.ignoreHttpErrors(true);
        org.jsoup.parser.Parser parser87 = request81.parser();
        org.jsoup.Connection connection88 = httpConnection11.parser(parser87);
        request0.parser = parser87;
        org.jsoup.Connection.Request request92 = request0.cookie("Content-Encoding=hi!", "null=null=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3000 + "'", int5 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "null=Content-Encoding" + "'", str45.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        org.junit.Assert.assertTrue("'" + method74 + "' != '" + org.jsoup.Connection.Method.GET + "'", method74.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request92);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean6 = request5.ignoreContentType;
        request5.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request10 = request5.ignoreHttpErrors(true);
        org.jsoup.Connection connection11 = httpConnection0.request(request10);
        org.jsoup.Connection connection13 = httpConnection0.ignoreHttpErrors(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.parser.Parser parser6 = request0.parser();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection7 = request0.data;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection7);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.timeout((int) (short) 0);
        org.jsoup.helper.HttpConnection.Response response22 = null;
        org.jsoup.helper.HttpConnection.Response response23 = new org.jsoup.helper.HttpConnection.Response(response22);
        response23.numRedirects = '4';
        org.jsoup.helper.HttpConnection httpConnection26 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser27 = null;
        org.jsoup.Connection connection28 = httpConnection26.parser(parser27);
        org.jsoup.Connection connection30 = httpConnection26.userAgent("hi!");
        org.jsoup.Connection connection32 = httpConnection26.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response33 = null;
        org.jsoup.helper.HttpConnection.Response response34 = new org.jsoup.helper.HttpConnection.Response(response33);
        boolean boolean35 = response34.executed;
        java.net.URL uRL36 = response34.url();
        boolean boolean37 = response34.executed;
        httpConnection26.res = response34;
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean40 = request39.ignoreContentType;
        java.lang.String str41 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request39);
        org.jsoup.helper.HttpConnection.Response response42 = null;
        org.jsoup.helper.HttpConnection.Response response43 = new org.jsoup.helper.HttpConnection.Response(response42);
        org.jsoup.Connection.Response response46 = response43.cookie("null=Content-Encoding", "multipart/form-data");
        int int47 = response43.statusCode();
        boolean boolean50 = response43.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response51 = null;
        org.jsoup.helper.HttpConnection.Response response52 = new org.jsoup.helper.HttpConnection.Response(response51);
        boolean boolean53 = response52.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap54 = response52.cookies();
        org.jsoup.helper.HttpConnection httpConnection55 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal56 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str57 = keyVal56.key();
        keyVal56.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal60 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal60.value = "Content-Encoding";
        java.lang.String str63 = keyVal60.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal64 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal64.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal67 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream68 = keyVal67.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal69 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream70 = keyVal69.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray71 = new org.jsoup.Connection.KeyVal[] { keyVal56, keyVal60, keyVal64, keyVal67, keyVal69 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList72 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList72, keyValArray71);
        org.jsoup.Connection connection74 = httpConnection55.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList72);
        org.jsoup.helper.HttpConnection.Request request75 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean76 = request75.ignoreContentType;
        request75.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request80 = request75.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal81 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request82 = request75.data((org.jsoup.Connection.KeyVal) keyVal81);
        org.jsoup.helper.HttpConnection.Request request83 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean84 = request83.ignoreContentType;
        request83.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request89 = request83.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy90 = request89.proxy;
        org.jsoup.helper.HttpConnection.Request request91 = request75.proxy(proxy90);
        org.jsoup.Connection.Method method92 = request91.method();
        org.jsoup.Connection connection93 = httpConnection55.method(method92);
        org.jsoup.Connection.Response response94 = response52.method(method92);
        org.jsoup.Connection.Response response95 = response43.method(method92);
        org.jsoup.Connection.Request request96 = request39.method(method92);
        org.jsoup.Connection.Response response97 = response34.method(method92);
        org.jsoup.Connection.Response response98 = response23.method(method92);
        org.jsoup.Connection connection99 = httpConnection0.method(method92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "null=Content-Encoding" + "'", str63.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request91);
        org.junit.Assert.assertTrue("'" + method92 + "' != '" + org.jsoup.Connection.Method.GET + "'", method92.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection99);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection1 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str3 = keyVal2.key();
        keyVal2.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal10.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream14 = keyVal13.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream16 = keyVal15.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray17 = new org.jsoup.Connection.KeyVal[] { keyVal2, keyVal6, keyVal10, keyVal13, keyVal15 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList18 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18, keyValArray17);
        org.jsoup.Connection connection20 = httpConnection1.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18);
        request0.data = keyValList18;
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean23 = request22.ignoreContentType;
        request22.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request27 = request22.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request29 = request22.data((org.jsoup.Connection.KeyVal) keyVal28);
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request36 = request30.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy37 = request36.proxy;
        org.jsoup.helper.HttpConnection.Request request38 = request22.proxy(proxy37);
        org.jsoup.helper.HttpConnection.Request request39 = request0.proxy(proxy37);
        int int40 = request39.timeout();
        request39.parserDefined = false;
        boolean boolean43 = request39.validateTSLCertificates;
        org.jsoup.helper.HttpConnection.Request request45 = request39.timeout((int) (byte) 0);
        request45.postDataCharset = "null=Content-Encoding";
        boolean boolean48 = request45.validateTLSCertificates();
        org.jsoup.Connection.Request request50 = request45.ignoreHttpErrors(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=Content-Encoding" + "'", str9.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.value("null=Content-Encoding");
        java.io.InputStream inputStream6 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal0.inputStream(inputStream6);
        java.lang.String str8 = keyVal7.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Content-Encoding" + "'", str3.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=Content-Encoding" + "'", str8.equals("null=Content-Encoding"));
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("null=Content-Encoding");
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal2.key("Content-Encoding");
        boolean boolean7 = keyVal2.hasInputStream();
        java.lang.String str8 = keyVal2.toString();
        java.io.InputStream inputStream9 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal2.inputStream(inputStream9);
        java.io.InputStream inputStream11 = null;
        keyVal10.stream = inputStream11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Content-Encoding=hi!" + "'", str8.equals("Content-Encoding=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.numRedirects = '4';
        java.lang.String str5 = response1.getHeaderCaseInsensitive("multipart/form-data");
        response1.contentType = "";
        org.jsoup.Connection.Response response9 = response1.removeHeader("application/x-www-form-urlencoded=null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = response1.scanHeaders("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        response1.statusMessage = "hi!";
        int int7 = response1.statusCode;
        java.net.URL uRL8 = response1.url();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry10 = response1.scanHeaders("hi!");
        java.net.URL uRL11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response12 = response1.url(uRL11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry10);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.lang.String str2 = request0.cookie("Content-Encoding");
        java.lang.String str3 = request0.postDataCharset();
        org.jsoup.helper.HttpConnection.Request request5 = request0.timeout((int) (short) 0);
        org.jsoup.Connection.Method method6 = request5.method();
        java.lang.String str8 = request5.header("hi!=Content-Encoding=UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "UTF-8" + "'", str3.equals("UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(0);
        boolean boolean6 = request4.hasCookie("application/x-www-form-urlencoded");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection7 = request4.data();
        java.lang.String str8 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request4);
        boolean boolean9 = request4.validateTLSCertificates();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request4.cookies();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request12 = request4.postDataCharset("application/x-www-form-urlencoded=application/x-www-form-urlencoded");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection1 = org.jsoup.helper.HttpConnection.connect("UTF-8=multipart/form-data");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: UTF-8=multipart/form-data");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser23 = null;
        org.jsoup.Connection connection24 = httpConnection22.parser(parser23);
        org.jsoup.Connection connection26 = httpConnection22.referrer("multipart/form-data");
        org.jsoup.Connection connection29 = httpConnection22.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        response31.numRedirects = '4';
        org.jsoup.Connection.Method method34 = response31.method();
        response31.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = response31.cookies();
        org.jsoup.Connection connection38 = httpConnection22.cookies(strMap37);
        org.jsoup.Connection connection39 = httpConnection0.data(strMap37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean41 = request40.ignoreContentType;
        request40.ignoreContentType = true;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection44 = request40.data();
        org.jsoup.Connection connection45 = httpConnection0.data(keyValCollection44);
        java.lang.String[] strArray52 = new java.lang.String[] { "multipart/form-data", "hi!", "hi!=Content-Encoding", "null=null", "application/x-www-form-urlencoded", "hi!" };
        org.jsoup.Connection connection53 = httpConnection0.data(strArray52);
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean55 = request54.ignoreContentType;
        request54.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request59 = request54.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal60 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request61 = request54.data((org.jsoup.Connection.KeyVal) keyVal60);
        request61.followRedirects = false;
        java.net.Proxy proxy64 = request61.proxy();
        org.jsoup.Connection.Request request66 = request61.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request67 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser68 = request67.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = request67.headers();
        org.jsoup.helper.HttpConnection httpConnection70 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser71 = null;
        org.jsoup.Connection connection72 = httpConnection70.parser(parser71);
        org.jsoup.Connection connection74 = httpConnection70.referrer("multipart/form-data");
        org.jsoup.Connection connection77 = httpConnection70.cookie("Content-Encoding", "");
        org.jsoup.Connection connection80 = httpConnection70.header("multipart/form-data", "multipart/form-data");
        org.jsoup.Connection connection82 = httpConnection70.maxBodySize(1048576);
        org.jsoup.helper.HttpConnection.Request request83 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser84 = request83.parser();
        org.jsoup.Connection connection85 = httpConnection70.parser(parser84);
        org.jsoup.helper.HttpConnection.Request request86 = request67.parser(parser84);
        org.jsoup.helper.HttpConnection.Request request87 = request61.parser(parser84);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection88 = request87.data;
        org.jsoup.Connection connection89 = httpConnection0.data(keyValCollection88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection89);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser19 = request18.parser();
        org.jsoup.Connection connection20 = httpConnection0.parser(parser19);
        java.io.InputStream inputStream23 = null;
        org.jsoup.Connection connection24 = httpConnection0.data("hi!", "application/x-www-form-urlencoded", inputStream23);
        org.jsoup.Connection connection26 = httpConnection0.userAgent("hi!");
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        int int28 = request27.timeout();
        request27.parserDefined = true;
        request27.maxBodySizeBytes = (-1);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean34 = request33.ignoreContentType;
        request33.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request38 = request33.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request40 = request33.data((org.jsoup.Connection.KeyVal) keyVal39);
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean42 = request41.ignoreContentType;
        request41.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request47 = request41.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy48 = request47.proxy;
        org.jsoup.helper.HttpConnection.Request request49 = request33.proxy(proxy48);
        request27.proxy = proxy48;
        org.jsoup.Connection connection51 = httpConnection0.proxy(proxy48);
        org.jsoup.helper.HttpConnection.Request request52 = new org.jsoup.helper.HttpConnection.Request();
        request52.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request56 = request52.ignoreContentType(true);
        int int57 = request52.timeoutMilliseconds;
        int int58 = request52.maxBodySizeBytes;
        boolean boolean60 = request52.hasHeader("multipart/form-data");
        boolean boolean62 = request52.hasHeader("multipart/form-data");
        boolean boolean63 = request52.validateTSLCertificates;
        org.jsoup.helper.HttpConnection httpConnection64 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser65 = null;
        org.jsoup.Connection connection66 = httpConnection64.parser(parser65);
        org.jsoup.Connection connection68 = httpConnection64.referrer("multipart/form-data");
        org.jsoup.Connection connection71 = httpConnection64.cookie("Content-Encoding", "");
        org.jsoup.Connection connection74 = httpConnection64.header("multipart/form-data", "multipart/form-data");
        org.jsoup.Connection connection76 = httpConnection64.maxBodySize(1048576);
        org.jsoup.helper.HttpConnection.Request request77 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser78 = request77.parser();
        org.jsoup.Connection connection79 = httpConnection64.parser(parser78);
        org.jsoup.helper.HttpConnection.Request request80 = request52.parser(parser78);
        org.jsoup.Connection connection81 = httpConnection0.parser(parser78);
        org.jsoup.Connection.Response response82 = httpConnection0.response();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3000 + "'", int28 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 3000 + "'", int57 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1048576 + "'", int58 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response82);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection5 = httpConnection0.data("null=application/x-www-form-urlencoded", "null=null");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        request6.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request10 = request6.ignoreContentType(true);
        java.lang.String str11 = request6.postDataCharset;
        int int12 = request6.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean14 = request13.ignoreContentType;
        request13.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request18 = request13.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request20 = request13.data((org.jsoup.Connection.KeyVal) keyVal19);
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean22 = request21.ignoreContentType;
        request21.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request27 = request21.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy28 = request27.proxy;
        org.jsoup.helper.HttpConnection.Request request29 = request13.proxy(proxy28);
        boolean boolean32 = request13.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request36 = request13.data((org.jsoup.Connection.KeyVal) keyVal35);
        boolean boolean37 = request13.followRedirects;
        java.net.Proxy proxy38 = request13.proxy;
        org.jsoup.helper.HttpConnection.Request request39 = request6.proxy(proxy38);
        org.jsoup.Connection connection40 = httpConnection0.proxy(proxy38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "multipart/form-data" + "'", str11.equals("multipart/form-data"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection40);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection5 = httpConnection0.data("null=application/x-www-form-urlencoded", "null=null");
        org.jsoup.Connection.Response response6 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean8 = request7.ignoreContentType;
        request7.maxBodySizeBytes = (byte) -1;
        java.lang.String str11 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request7);
        request7.parserDefined = true;
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean15 = request14.ignoreContentType;
        request14.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request20 = request14.proxy("hi!", (int) (short) 0);
        request14.validateTSLCertificates = false;
        boolean boolean23 = request14.ignoreContentType;
        org.jsoup.Connection.Request request25 = request14.followRedirects(true);
        org.jsoup.parser.Parser parser26 = request14.parser();
        int int27 = request14.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean29 = request28.ignoreContentType;
        request28.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request34 = request28.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy35 = request34.proxy;
        org.jsoup.helper.HttpConnection.Request request36 = request14.proxy(proxy35);
        org.jsoup.helper.HttpConnection.Request request37 = request7.proxy(proxy35);
        org.jsoup.Connection connection38 = httpConnection0.proxy(proxy35);
        org.jsoup.Connection.Request request39 = httpConnection0.request();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeUrl("hi!=Content-Encoding=UTF-8");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi!=Content-Encoding=UTF-8" + "'", str1.equals("hi!=Content-Encoding=UTF-8"));
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection connection26 = httpConnection0.header("application/x-www-form-urlencoded", "");
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str30 = keyVal29.key();
        keyVal29.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal33.value = "Content-Encoding";
        java.lang.String str36 = keyVal33.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal37 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal37.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal40 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream41 = keyVal40.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal42 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream43 = keyVal42.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray44 = new org.jsoup.Connection.KeyVal[] { keyVal29, keyVal33, keyVal37, keyVal40, keyVal42 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList45 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList45, keyValArray44);
        org.jsoup.Connection connection47 = httpConnection28.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList45);
        request27.data = keyValList45;
        org.jsoup.helper.HttpConnection.Request request49 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean50 = request49.ignoreContentType;
        request49.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request54 = request49.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal55 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request56 = request49.data((org.jsoup.Connection.KeyVal) keyVal55);
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean58 = request57.ignoreContentType;
        request57.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request63 = request57.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy64 = request63.proxy;
        org.jsoup.helper.HttpConnection.Request request65 = request49.proxy(proxy64);
        org.jsoup.helper.HttpConnection.Request request66 = request27.proxy(proxy64);
        int int67 = request66.timeoutMilliseconds;
        int int68 = request66.maxBodySizeBytes;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = request66.headers();
        int int70 = request66.maxBodySize();
        httpConnection0.req = request66;
        request66.validateTLSCertificates(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null=Content-Encoding" + "'", str36.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 3000 + "'", int67 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1048576 + "'", int68 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1048576 + "'", int70 == 1048576);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection1 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str3 = keyVal2.key();
        keyVal2.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal10.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream14 = keyVal13.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream16 = keyVal15.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray17 = new org.jsoup.Connection.KeyVal[] { keyVal2, keyVal6, keyVal10, keyVal13, keyVal15 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList18 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18, keyValArray17);
        org.jsoup.Connection connection20 = httpConnection1.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18);
        request0.data = keyValList18;
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean23 = request22.ignoreContentType;
        request22.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request27 = request22.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request29 = request22.data((org.jsoup.Connection.KeyVal) keyVal28);
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request36 = request30.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy37 = request36.proxy;
        org.jsoup.helper.HttpConnection.Request request38 = request22.proxy(proxy37);
        org.jsoup.helper.HttpConnection.Request request39 = request0.proxy(proxy37);
        request39.followRedirects = false;
        org.jsoup.parser.Parser parser42 = request39.parser();
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean44 = request43.ignoreContentType;
        request43.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request49 = request43.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy50 = request49.proxy;
        request39.proxy = proxy50;
        org.jsoup.helper.HttpConnection.Request request52 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection53 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal54 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str55 = keyVal54.key();
        keyVal54.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal58 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal58.value = "Content-Encoding";
        java.lang.String str61 = keyVal58.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal62 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal62.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal65 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream66 = keyVal65.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal67 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream68 = keyVal67.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray69 = new org.jsoup.Connection.KeyVal[] { keyVal54, keyVal58, keyVal62, keyVal65, keyVal67 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList70 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList70, keyValArray69);
        org.jsoup.Connection connection72 = httpConnection53.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList70);
        request52.data = keyValList70;
        org.jsoup.helper.HttpConnection.Request request74 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean75 = request74.ignoreContentType;
        request74.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request79 = request74.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal80 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request81 = request74.data((org.jsoup.Connection.KeyVal) keyVal80);
        org.jsoup.helper.HttpConnection.Request request82 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean83 = request82.ignoreContentType;
        request82.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request88 = request82.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy89 = request88.proxy;
        org.jsoup.helper.HttpConnection.Request request90 = request74.proxy(proxy89);
        org.jsoup.helper.HttpConnection.Request request91 = request52.proxy(proxy89);
        request91.parserDefined = false;
        java.net.Proxy proxy94 = request91.proxy();
        org.jsoup.helper.HttpConnection.Request request95 = request39.proxy(proxy94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=Content-Encoding" + "'", str9.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "null=Content-Encoding" + "'", str61.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request95);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        java.io.InputStream inputStream2 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = org.jsoup.helper.HttpConnection.KeyVal.create("application/x-www-form-urlencoded", "application/x-www-form-urlencoded", inputStream2);
        java.lang.String str4 = keyVal3.toString();
        boolean boolean5 = keyVal3.hasInputStream();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "application/x-www-form-urlencoded=application/x-www-form-urlencoded" + "'", str4.equals("application/x-www-form-urlencoded=application/x-www-form-urlencoded"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        request0.validateTSLCertificates = false;
        boolean boolean9 = request0.ignoreContentType;
        int int10 = request0.maxBodySize();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection11 = request0.data;
        org.jsoup.parser.Parser parser12 = request0.parser;
        boolean boolean13 = request0.validateTSLCertificates;
        org.jsoup.Connection.Request request16 = request0.cookie("UTF-8=multipart/form-data", "application/x-www-form-urlencoded");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request19 = request0.header("", "hi!=Content-Encoding=UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response5 = null;
        org.jsoup.helper.HttpConnection.Response response6 = new org.jsoup.helper.HttpConnection.Response(response5);
        boolean boolean7 = response6.executed;
        java.net.URL uRL8 = response6.url();
        boolean boolean9 = response6.executed;
        response6.executed = false;
        httpConnection0.res = response6;
        org.jsoup.Connection.Response response15 = response6.cookie("application/x-www-form-urlencoded", "");
        org.jsoup.Connection.Response response17 = response6.removeHeader("application/x-www-form-urlencoded=null=Content-Encoding");
        response6.charset = "null=Content-Encoding";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.lang.String str2 = request0.cookie("Content-Encoding");
        java.lang.String str3 = request0.postDataCharset();
        org.jsoup.Connection.Request request6 = request0.header("null=application/x-www-form-urlencoded", "Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.Connection connection9 = httpConnection7.parser(parser8);
        org.jsoup.Connection connection11 = httpConnection7.userAgent("hi!");
        org.jsoup.Connection connection13 = httpConnection7.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response14 = null;
        org.jsoup.helper.HttpConnection.Response response15 = new org.jsoup.helper.HttpConnection.Response(response14);
        boolean boolean16 = response15.executed;
        java.net.URL uRL17 = response15.url();
        boolean boolean18 = response15.executed;
        httpConnection7.res = response15;
        org.jsoup.Connection connection22 = httpConnection7.header("Content-Encoding", "multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response23 = null;
        org.jsoup.helper.HttpConnection.Response response24 = new org.jsoup.helper.HttpConnection.Response(response23);
        boolean boolean25 = response24.executed;
        java.net.URL uRL26 = response24.url();
        boolean boolean27 = response24.executed;
        org.jsoup.Connection.Response response29 = response24.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request30 = response24.req;
        org.jsoup.Connection.Request request31 = null;
        response24.req = request31;
        org.jsoup.Connection connection33 = httpConnection7.response((org.jsoup.Connection.Response) response24);
        org.jsoup.Connection.Response response35 = response24.removeHeader("UTF-8=multipart/form-data");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response36 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "UTF-8" + "'", str3.equals("UTF-8"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response35);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request11 = request7.data((org.jsoup.Connection.KeyVal) keyVal10);
        boolean boolean12 = request7.validateTLSCertificates();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost((org.jsoup.Connection.Request) request7, outputStream13, "application/x-www-form-urlencoded");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.Connection connection6 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.Connection connection9 = httpConnection7.parser(parser8);
        org.jsoup.Connection connection11 = httpConnection7.userAgent("hi!");
        org.jsoup.Connection connection13 = httpConnection7.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str15 = keyVal14.key();
        keyVal14.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal18.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray21 = new org.jsoup.Connection.KeyVal[] { keyVal14, keyVal18 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList22 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList22, keyValArray21);
        org.jsoup.Connection connection24 = httpConnection7.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList22);
        org.jsoup.parser.Parser parser25 = null;
        org.jsoup.Connection connection26 = httpConnection7.parser(parser25);
        org.jsoup.Connection connection28 = httpConnection7.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser30 = null;
        org.jsoup.Connection connection31 = httpConnection29.parser(parser30);
        org.jsoup.Connection connection33 = httpConnection29.referrer("multipart/form-data");
        org.jsoup.Connection connection36 = httpConnection29.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection.Response response37 = null;
        org.jsoup.helper.HttpConnection.Response response38 = new org.jsoup.helper.HttpConnection.Response(response37);
        response38.numRedirects = '4';
        org.jsoup.Connection.Method method41 = response38.method();
        response38.statusCode = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = response38.cookies();
        org.jsoup.Connection connection45 = httpConnection29.cookies(strMap44);
        org.jsoup.Connection connection46 = httpConnection7.data(strMap44);
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean48 = request47.ignoreContentType;
        request47.ignoreContentType = true;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection51 = request47.data();
        org.jsoup.Connection connection52 = httpConnection7.data(keyValCollection51);
        java.lang.String[] strArray59 = new java.lang.String[] { "multipart/form-data", "hi!", "hi!=Content-Encoding", "null=null", "application/x-www-form-urlencoded", "hi!" };
        org.jsoup.Connection connection60 = httpConnection7.data(strArray59);
        org.jsoup.Connection connection61 = httpConnection0.data(strArray59);
        org.jsoup.helper.HttpConnection.Request request62 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean63 = request62.ignoreContentType;
        request62.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request68 = request62.proxy("hi!", (int) (short) 0);
        request62.validateTSLCertificates = false;
        org.jsoup.helper.HttpConnection.KeyVal keyVal71 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal71.value = "Content-Encoding";
        java.lang.String str74 = keyVal71.key();
        java.io.InputStream inputStream75 = keyVal71.stream;
        org.jsoup.helper.HttpConnection.Request request76 = request62.data((org.jsoup.Connection.KeyVal) keyVal71);
        boolean boolean79 = request62.hasHeaderWithValue("hi!=Content-Encoding", "application/x-www-form-urlencoded");
        java.util.Map<java.lang.String, java.lang.String> strMap80 = request62.headers();
        org.jsoup.Connection connection81 = httpConnection0.data(strMap80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection81);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.toString();
        java.io.InputStream inputStream4 = keyVal0.stream;
        java.io.InputStream inputStream5 = keyVal0.stream;
        java.io.InputStream inputStream6 = null;
        keyVal0.stream = inputStream6;
        java.io.InputStream inputStream8 = null;
        keyVal0.stream = inputStream8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=Content-Encoding" + "'", str3.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream5);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = response1.cookies();
        org.jsoup.Connection.Response response6 = response1.removeHeader("hi!=Content-Encoding");
        java.lang.String str8 = response1.header("hi!=Content-Encoding");
        java.lang.String str10 = response1.header("hi!=Content-Encoding");
        java.lang.String str12 = response1.getHeaderCaseInsensitive("hi!=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.userAgent("");
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser4 = null;
        org.jsoup.Connection connection5 = httpConnection3.parser(parser4);
        org.jsoup.Connection connection7 = httpConnection3.referrer("multipart/form-data");
        org.jsoup.Connection connection10 = httpConnection3.cookie("Content-Encoding", "");
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser12 = null;
        org.jsoup.Connection connection13 = httpConnection11.parser(parser12);
        org.jsoup.helper.HttpConnection.Response response14 = null;
        org.jsoup.helper.HttpConnection.Response response15 = new org.jsoup.helper.HttpConnection.Response(response14);
        boolean boolean16 = response15.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = response15.headers();
        org.jsoup.Connection connection18 = httpConnection11.data(strMap17);
        org.jsoup.Connection connection19 = httpConnection3.cookies(strMap17);
        org.jsoup.Connection connection20 = httpConnection0.cookies(strMap17);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection22 = httpConnection0.postDataCharset("");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: ");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        org.jsoup.helper.HttpConnection.Response response22 = null;
        org.jsoup.helper.HttpConnection.Response response23 = new org.jsoup.helper.HttpConnection.Response(response22);
        boolean boolean24 = response23.executed;
        java.net.URL uRL25 = response23.url();
        boolean boolean26 = response23.executed;
        org.jsoup.Connection.Response response28 = response23.removeCookie("multipart/form-data");
        java.util.Map<java.lang.String, java.lang.String> strMap29 = response23.headers();
        org.jsoup.Connection connection30 = httpConnection0.cookies(strMap29);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection32 = httpConnection0.postDataCharset("application/x-www-form-urlencoded=null=Content-Encoding");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: application/x-www-form-urlencoded=null=Content-Encoding");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.value("null=Content-Encoding");
        boolean boolean6 = keyVal5.hasInputStream();
        java.lang.String str7 = keyVal5.value;
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal5.value("application/x-www-form-urlencoded");
        java.lang.String str10 = keyVal5.key;
        java.lang.String str11 = keyVal5.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "Content-Encoding" + "'", str3.equals("Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=Content-Encoding" + "'", str7.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.postDataCharset = "multipart/form-data";
        org.jsoup.Connection.Request request4 = request0.ignoreContentType(true);
        boolean boolean5 = request0.validateTLSCertificates();
        java.net.Proxy proxy6 = request0.proxy();
        int int7 = request0.timeoutMilliseconds;
        boolean boolean8 = request0.followRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3000 + "'", int7 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.parser.Parser parser1 = request0.parser();
        org.jsoup.parser.Parser parser2 = request0.parser();
        java.lang.String str4 = request0.header("Content-Encoding");
        request0.parserDefined = false;
        boolean boolean8 = request0.hasCookie("Content-Encoding=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        boolean boolean6 = response1.hasHeader("null=Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("Content-Encoding");
        org.jsoup.Connection.Response response10 = response1.removeHeader("multipart/form-data");
        response1.contentType = "application/x-www-form-urlencoded";
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean14 = request13.ignoreContentType;
        request13.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request19 = request13.proxy("hi!", (int) (short) 0);
        org.jsoup.Connection.Request request21 = request19.followRedirects(true);
        response1.req = request19;
        org.jsoup.Connection.Response response24 = response1.removeCookie("null=null");
        java.net.HttpURLConnection httpURLConnection25 = null;
        org.jsoup.Connection.Response response26 = null;
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection25, response26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        org.jsoup.Connection.Response response6 = response1.removeHeader("multipart/form-data");
        response1.statusCode = 0;
        org.jsoup.helper.HttpConnection.Response response9 = new org.jsoup.helper.HttpConnection.Response(response1);
        java.lang.String str11 = response9.getHeaderCaseInsensitive("hi!=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.validateTLSCertificates(true);
        org.jsoup.Connection.Response response7 = httpConnection0.res;
        org.jsoup.Connection connection10 = httpConnection0.proxy("", (int) (byte) 10);
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean12 = request11.ignoreContentType;
        request11.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request16 = request11.ignoreHttpErrors(true);
        boolean boolean17 = request11.followRedirects();
        java.lang.String str19 = request11.header("UTF-8");
        org.jsoup.Connection connection20 = httpConnection0.request((org.jsoup.Connection.Request) request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        org.jsoup.Connection.Response response6 = response1.header("null=Content-Encoding", "multipart/form-data");
        java.lang.String str7 = response1.statusMessage;
        org.jsoup.Connection.Response response9 = response1.removeHeader("UTF-8");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        org.jsoup.Connection.Response response12 = response1.removeHeader("hi!");
        java.lang.String str14 = response1.cookie("null=null=Content-Encoding");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document15 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        java.util.Map<java.lang.String, java.lang.String> strMap5 = response1.cookies();
        org.jsoup.Connection.Request request6 = response1.req;
        java.lang.String str7 = response1.charset;
        java.lang.String str9 = response1.cookie("null=application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection.Response response24 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        int int26 = request25.timeout();
        boolean boolean27 = request25.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request29 = request25.timeout(0);
        boolean boolean31 = request29.hasCookie("application/x-www-form-urlencoded");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection32 = request29.data();
        org.jsoup.Connection connection33 = httpConnection0.data(keyValCollection32);
        org.jsoup.Connection connection35 = httpConnection0.timeout((int) (byte) 100);
        org.jsoup.helper.HttpConnection.Response response36 = null;
        org.jsoup.helper.HttpConnection.Response response37 = new org.jsoup.helper.HttpConnection.Response(response36);
        org.jsoup.Connection.Response response40 = response37.cookie("null=Content-Encoding", "multipart/form-data");
        int int41 = response37.statusCode();
        boolean boolean44 = response37.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response46 = response37.removeCookie("Content-Encoding");
        org.jsoup.Connection.Response response49 = response37.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        java.lang.String str51 = response37.cookie("application/x-www-form-urlencoded");
        java.util.Map<java.lang.String, java.lang.String> strMap52 = response37.cookies();
        org.jsoup.Connection connection53 = httpConnection0.response((org.jsoup.Connection.Response) response37);
        org.jsoup.Connection connection55 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection connection57 = httpConnection0.userAgent("null=application/x-www-form-urlencoded");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection59 = httpConnection0.url("null=Content-Encoding");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=Content-Encoding");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3000 + "'", int26 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "multipart/form-data" + "'", str51.equals("multipart/form-data"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        java.lang.String str11 = response1.cookie("multipart/form-data");
        java.lang.String str12 = response1.contentType();
        response1.charset = "hi!";
        response1.statusCode = '4';
        org.jsoup.Connection.Request request17 = response1.req;
        org.jsoup.Connection.Response response19 = response1.removeCookie("hi!=Content-Encoding");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.helper.HttpConnection.Response response3 = null;
        org.jsoup.helper.HttpConnection.Response response4 = new org.jsoup.helper.HttpConnection.Response(response3);
        boolean boolean5 = response4.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap6 = response4.headers();
        org.jsoup.Connection connection7 = httpConnection0.data(strMap6);
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection connection11 = httpConnection0.referrer("hi!=Content-Encoding");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection13 = httpConnection0.postDataCharset("Content-Encoding");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: Content-Encoding");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection connection25 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        int int27 = request26.timeout();
        boolean boolean28 = request26.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request30 = request26.timeout(0);
        java.net.Proxy proxy31 = request26.proxy;
        java.lang.String str33 = request26.header("hi!");
        boolean boolean34 = request26.parserDefined;
        org.jsoup.parser.Parser parser35 = request26.parser();
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean37 = request36.ignoreContentType;
        request36.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request41 = request36.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal42 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request43 = request36.data((org.jsoup.Connection.KeyVal) keyVal42);
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean45 = request44.ignoreContentType;
        request44.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request50 = request44.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy51 = request50.proxy;
        org.jsoup.helper.HttpConnection.Request request52 = request36.proxy(proxy51);
        request52.ignoreHttpErrors = true;
        java.net.Proxy proxy55 = request52.proxy;
        org.jsoup.helper.HttpConnection.Request request56 = request26.proxy(proxy55);
        org.jsoup.Connection connection57 = httpConnection0.proxy(proxy55);
        org.jsoup.helper.HttpConnection httpConnection58 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser59 = null;
        org.jsoup.Connection connection60 = httpConnection58.parser(parser59);
        org.jsoup.Connection connection62 = httpConnection58.userAgent("hi!");
        org.jsoup.Connection connection64 = httpConnection58.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response65 = null;
        org.jsoup.helper.HttpConnection.Response response66 = new org.jsoup.helper.HttpConnection.Response(response65);
        boolean boolean67 = response66.executed;
        java.net.URL uRL68 = response66.url();
        boolean boolean69 = response66.executed;
        httpConnection58.res = response66;
        org.jsoup.Connection.Method method71 = response66.method();
        java.net.URL uRL72 = response66.url();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = response66.cookies();
        org.jsoup.Connection connection74 = httpConnection0.data(strMap73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3000 + "'", int27 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!");
        java.io.InputStream inputStream3 = keyVal2.inputStream();
        boolean boolean4 = keyVal2.hasInputStream();
        java.lang.String str5 = keyVal2.value();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        org.jsoup.Connection.Method method13 = response8.method();
        response8.statusCode = '4';
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response8.scanHeaders("hi!");
        boolean boolean19 = response8.hasCookie("hi!=Content-Encoding");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document20 = response8.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        response1.numRedirects = 0;
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser9 = null;
        org.jsoup.Connection connection10 = httpConnection8.parser(parser9);
        org.jsoup.Connection connection12 = httpConnection8.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response13 = null;
        org.jsoup.helper.HttpConnection.Response response14 = new org.jsoup.helper.HttpConnection.Response(response13);
        boolean boolean15 = response14.executed;
        java.net.URL uRL16 = response14.url();
        boolean boolean17 = response14.executed;
        response14.executed = false;
        httpConnection8.res = response14;
        org.jsoup.helper.HttpConnection.Response response21 = null;
        org.jsoup.helper.HttpConnection.Response response22 = new org.jsoup.helper.HttpConnection.Response(response21);
        org.jsoup.Connection.Response response25 = response22.cookie("null=Content-Encoding", "multipart/form-data");
        int int26 = response22.statusCode();
        boolean boolean29 = response22.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        boolean boolean32 = response31.executed;
        java.util.Map<java.lang.String, java.lang.String> strMap33 = response31.cookies();
        org.jsoup.helper.HttpConnection httpConnection34 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str36 = keyVal35.key();
        keyVal35.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal39.value = "Content-Encoding";
        java.lang.String str42 = keyVal39.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal43.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal46 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream47 = keyVal46.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream49 = keyVal48.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray50 = new org.jsoup.Connection.KeyVal[] { keyVal35, keyVal39, keyVal43, keyVal46, keyVal48 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList51 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList51, keyValArray50);
        org.jsoup.Connection connection53 = httpConnection34.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList51);
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean55 = request54.ignoreContentType;
        request54.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request59 = request54.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal60 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request61 = request54.data((org.jsoup.Connection.KeyVal) keyVal60);
        org.jsoup.helper.HttpConnection.Request request62 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean63 = request62.ignoreContentType;
        request62.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request68 = request62.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy69 = request68.proxy;
        org.jsoup.helper.HttpConnection.Request request70 = request54.proxy(proxy69);
        org.jsoup.Connection.Method method71 = request70.method();
        org.jsoup.Connection connection72 = httpConnection34.method(method71);
        org.jsoup.Connection.Response response73 = response31.method(method71);
        org.jsoup.Connection.Response response74 = response22.method(method71);
        org.jsoup.Connection connection75 = httpConnection8.method(method71);
        org.jsoup.Connection.Response response76 = response1.method(method71);
        org.jsoup.helper.HttpConnection.Request request77 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean78 = request77.ignoreContentType;
        request77.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request82 = request77.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal83 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request84 = request77.data((org.jsoup.Connection.KeyVal) keyVal83);
        request84.followRedirects = false;
        java.net.Proxy proxy87 = request84.proxy();
        org.jsoup.Connection.Request request89 = request84.ignoreContentType(true);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection90 = request84.data();
        org.jsoup.Connection.Request request93 = request84.cookie("Content-Encoding", "application/x-www-form-urlencoded=null=Content-Encoding");
        org.jsoup.Connection.Method method94 = request84.method();
        org.jsoup.Connection.Response response95 = response1.method(method94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "null=Content-Encoding" + "'", str42.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request70);
        org.junit.Assert.assertTrue("'" + method71 + "' != '" + org.jsoup.Connection.Method.GET + "'", method71.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request93);
        org.junit.Assert.assertTrue("'" + method94 + "' != '" + org.jsoup.Connection.Method.GET + "'", method94.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response95);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        request7.followRedirects = false;
        java.net.Proxy proxy10 = request7.proxy();
        org.jsoup.Connection.Request request12 = request7.ignoreContentType(true);
        org.jsoup.Connection.KeyVal keyVal13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Request request14 = request7.data(keyVal13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Key val must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Response response4 = response1.cookie("null=Content-Encoding", "multipart/form-data");
        int int5 = response1.statusCode();
        boolean boolean8 = response1.hasHeaderWithValue("multipart/form-data", "");
        java.lang.String str10 = response1.getHeaderCaseInsensitive("hi!");
        int int11 = response1.numRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        boolean boolean4 = response1.executed;
        org.jsoup.Connection.Response response6 = response1.removeCookie("multipart/form-data");
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = null;
        response1.req = request8;
        org.jsoup.Connection.Response response12 = response1.header("hi!", "");
        response1.charset = "hi!";
        java.lang.String str16 = response1.cookie("hi!=Content-Encoding");
        org.jsoup.Connection.Response response18 = response1.removeHeader("application/x-www-form-urlencoded");
        java.net.URL uRL19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response20 = response1.url(uRL19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response18);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request5 = request0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean9 = request8.ignoreContentType;
        request8.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request14 = request8.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy15 = request14.proxy;
        org.jsoup.helper.HttpConnection.Request request16 = request0.proxy(proxy15);
        boolean boolean19 = request0.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request23 = request0.data((org.jsoup.Connection.KeyVal) keyVal22);
        org.jsoup.helper.HttpConnection.Request request25 = request23.timeout((int) (byte) 0);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection26 = request25.data();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection26);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        int int1 = request0.timeout();
        boolean boolean2 = request0.ignoreContentType;
        org.jsoup.Connection.Request request4 = request0.ignoreHttpErrors(false);
        java.lang.String str5 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request0);
        org.jsoup.Connection.Request request8 = request0.cookie("UTF-8", "multipart/form-data");
        org.jsoup.parser.Parser parser9 = request0.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        boolean boolean11 = request0.validateTSLCertificates;
        boolean boolean12 = request0.followRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3000 + "'", int1 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection httpConnection1 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str3 = keyVal2.key();
        keyVal2.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal6.value = "Content-Encoding";
        java.lang.String str9 = keyVal6.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal10.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream14 = keyVal13.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream16 = keyVal15.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray17 = new org.jsoup.Connection.KeyVal[] { keyVal2, keyVal6, keyVal10, keyVal13, keyVal15 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList18 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18, keyValArray17);
        org.jsoup.Connection connection20 = httpConnection1.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList18);
        request0.data = keyValList18;
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean23 = request22.ignoreContentType;
        request22.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request27 = request22.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request29 = request22.data((org.jsoup.Connection.KeyVal) keyVal28);
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean31 = request30.ignoreContentType;
        request30.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request36 = request30.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy37 = request36.proxy;
        org.jsoup.helper.HttpConnection.Request request38 = request22.proxy(proxy37);
        org.jsoup.helper.HttpConnection.Request request39 = request0.proxy(proxy37);
        boolean boolean40 = request0.followRedirects();
        request0.maxBodySizeBytes = (short) 100;
        java.lang.String str44 = request0.header("Content-Encoding");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry46 = request0.scanHeaders("hi!=Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean48 = request47.ignoreContentType;
        request47.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request53 = request47.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy54 = request53.proxy;
        request0.proxy = proxy54;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=Content-Encoding" + "'", str9.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy54);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        boolean boolean7 = request0.validateTSLCertificates;
        org.jsoup.parser.Parser parser8 = null;
        org.jsoup.helper.HttpConnection.Request request9 = request0.parser(parser8);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request9.data;
        boolean boolean11 = request9.ignoreContentType;
        java.lang.String str13 = request9.header("null=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request16 = request9.cookie("", "hi!=Content-Encoding");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.helper.HttpConnection.KeyVal keyVal1 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str2 = keyVal1.key();
        keyVal1.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal5.value = "Content-Encoding";
        java.lang.String str8 = keyVal5.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal9.value = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream13 = keyVal12.inputStream();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.io.InputStream inputStream15 = keyVal14.inputStream();
        org.jsoup.Connection.KeyVal[] keyValArray16 = new org.jsoup.Connection.KeyVal[] { keyVal1, keyVal5, keyVal9, keyVal12, keyVal14 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList17 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17, keyValArray16);
        org.jsoup.Connection connection19 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList17);
        org.jsoup.Connection connection21 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection connection23 = httpConnection0.maxBodySize((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection25 = httpConnection0.postDataCharset("Content-Encoding");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: Content-Encoding");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=Content-Encoding" + "'", str8.equals("null=Content-Encoding"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inputStream15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean2 = response1.executed;
        java.net.URL uRL3 = response1.url();
        int int4 = response1.statusCode;
        org.jsoup.Connection.Response response7 = response1.header("null=Content-Encoding", "null=Content-Encoding");
        java.lang.String str9 = response1.getHeaderCaseInsensitive("");
        response1.executed = false;
        java.util.Map<java.lang.String, java.lang.String> strMap12 = response1.headers();
        org.jsoup.helper.HttpConnection.Response response13 = null;
        org.jsoup.helper.HttpConnection.Response response14 = new org.jsoup.helper.HttpConnection.Response(response13);
        boolean boolean15 = response14.executed;
        java.net.URL uRL16 = response14.url();
        int int17 = response14.statusCode;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = response14.cookies();
        org.jsoup.Connection.Request request19 = response14.req;
        boolean boolean21 = response14.hasCookie("null=null");
        org.jsoup.helper.HttpConnection.Response response22 = null;
        org.jsoup.helper.HttpConnection.Response response23 = new org.jsoup.helper.HttpConnection.Response(response22);
        org.jsoup.helper.HttpConnection.Response response24 = null;
        org.jsoup.helper.HttpConnection.Response response25 = new org.jsoup.helper.HttpConnection.Response(response24);
        response25.numRedirects = '4';
        org.jsoup.Connection.Method method28 = response25.method();
        response25.statusCode = 1;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean32 = request31.ignoreContentType;
        request31.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request36 = request31.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal37 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request38 = request31.data((org.jsoup.Connection.KeyVal) keyVal37);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean40 = request39.ignoreContentType;
        request39.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request45 = request39.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy46 = request45.proxy;
        org.jsoup.helper.HttpConnection.Request request47 = request31.proxy(proxy46);
        org.jsoup.Connection.Method method48 = request47.method();
        org.jsoup.Connection.Response response49 = response25.method(method48);
        org.jsoup.Connection.Response response50 = response23.method(method48);
        org.jsoup.Connection.Response response51 = response14.method(method48);
        org.jsoup.Connection.Response response52 = response1.method(method48);
        org.jsoup.Connection.Response response54 = response1.removeHeader("UTF-8");
        int int55 = response1.numRedirects;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray56 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        boolean boolean9 = response8.executed;
        java.net.URL uRL10 = response8.url();
        boolean boolean11 = response8.executed;
        httpConnection0.res = response8;
        org.jsoup.Connection.Method method13 = response8.method();
        response8.statusCode = '4';
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response8.scanHeaders("hi!");
        response8.statusMessage = "hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "Content-Encoding";
        java.lang.String str3 = keyVal0.key();
        java.io.InputStream inputStream4 = null;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.inputStream(inputStream4);
        java.io.InputStream inputStream6 = null;
        keyVal0.stream = inputStream6;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean4 = request3.ignoreContentType;
        request3.maxBodySizeBytes = (byte) -1;
        org.jsoup.Connection.Request request8 = request3.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.Request request10 = request3.data((org.jsoup.Connection.KeyVal) keyVal9);
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean12 = request11.ignoreContentType;
        request11.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request17 = request11.proxy("hi!", (int) (short) 0);
        java.net.Proxy proxy18 = request17.proxy;
        org.jsoup.helper.HttpConnection.Request request19 = request3.proxy(proxy18);
        boolean boolean22 = request3.hasHeaderWithValue("Content-Encoding", "application/x-www-form-urlencoded");
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "Content-Encoding");
        org.jsoup.helper.HttpConnection.Request request26 = request3.data((org.jsoup.Connection.KeyVal) keyVal25);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request26.cookies();
        org.jsoup.Connection connection28 = httpConnection0.request((org.jsoup.Connection.Request) request26);
        java.lang.String str29 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request26);
        java.lang.String str30 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(proxy18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.parser.Parser parser1 = null;
        org.jsoup.Connection connection2 = httpConnection0.parser(parser1);
        org.jsoup.Connection connection4 = httpConnection0.userAgent("hi!");
        org.jsoup.Connection connection6 = httpConnection0.referrer("multipart/form-data");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        keyVal7.key = "Content-Encoding";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal11.value = "Content-Encoding";
        org.jsoup.Connection.KeyVal[] keyValArray14 = new org.jsoup.Connection.KeyVal[] { keyVal7, keyVal11 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList15 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15, keyValArray14);
        org.jsoup.Connection connection17 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList15);
        org.jsoup.parser.Parser parser18 = null;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.Connection connection21 = httpConnection0.userAgent("Content-Encoding");
        java.net.Proxy proxy22 = null;
        org.jsoup.Connection connection23 = httpConnection0.proxy(proxy22);
        org.jsoup.Connection.Response response24 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        int int26 = request25.timeout();
        boolean boolean27 = request25.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request29 = request25.timeout(0);
        boolean boolean31 = request29.hasCookie("application/x-www-form-urlencoded");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection32 = request29.data();
        org.jsoup.Connection connection33 = httpConnection0.data(keyValCollection32);
        org.jsoup.Connection connection35 = httpConnection0.timeout((int) (byte) 100);
        org.jsoup.helper.HttpConnection.Response response36 = null;
        org.jsoup.helper.HttpConnection.Response response37 = new org.jsoup.helper.HttpConnection.Response(response36);
        org.jsoup.Connection.Response response40 = response37.cookie("null=Content-Encoding", "multipart/form-data");
        int int41 = response37.statusCode();
        boolean boolean44 = response37.hasHeaderWithValue("multipart/form-data", "");
        org.jsoup.Connection.Response response46 = response37.removeCookie("Content-Encoding");
        org.jsoup.Connection.Response response49 = response37.cookie("application/x-www-form-urlencoded", "multipart/form-data");
        java.lang.String str51 = response37.cookie("application/x-www-form-urlencoded");
        java.util.Map<java.lang.String, java.lang.String> strMap52 = response37.cookies();
        org.jsoup.Connection connection53 = httpConnection0.response((org.jsoup.Connection.Response) response37);
        org.jsoup.Connection connection55 = httpConnection0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean57 = request56.ignoreContentType;
        request56.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request62 = request56.proxy("hi!", (int) (short) 0);
        boolean boolean63 = request56.validateTSLCertificates;
        org.jsoup.parser.Parser parser64 = null;
        org.jsoup.helper.HttpConnection.Request request65 = request56.parser(parser64);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection66 = request65.data;
        httpConnection0.req = request65;
        org.jsoup.Connection connection69 = httpConnection0.userAgent("UTF-8");
        org.jsoup.Connection connection72 = httpConnection0.cookie("null=Content-Encoding", "application/x-www-form-urlencoded=application/x-www-form-urlencoded");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3000 + "'", int26 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "multipart/form-data" + "'", str51.equals("multipart/form-data"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection72);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (byte) -1;
        org.jsoup.helper.HttpConnection.Request request6 = request0.proxy("hi!", (int) (short) 0);
        java.lang.String str7 = org.jsoup.helper.HttpConnection.Response.setOutputContentType((org.jsoup.Connection.Request) request6);
        org.jsoup.Connection.Request request9 = request6.maxBodySize((int) (byte) 1);
        java.lang.String str11 = request6.cookie("hi!=Content-Encoding=UTF-8");
        int int12 = request6.maxBodySize();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }
}

