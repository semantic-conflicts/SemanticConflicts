import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.jsoup.Connection.Request request0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response1 = org.jsoup.helper.HttpConnection.Response.execute(request0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        int int0 = org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 307 + "'", int0 == 307);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection1 = org.jsoup.helper.HttpConnection.connect(uRL0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.Connection.KeyVal[] keyValArray1 = new org.jsoup.Connection.KeyVal[] { keyVal0 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList2 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList2, keyValArray1);
        java.io.OutputStream outputStream4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList2, outputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection1 = org.jsoup.helper.HttpConnection.connect("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.jsoup.Connection.Request request0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection1 = org.jsoup.helper.HttpConnection.Response.createConnection(request0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.Class<?> wildcardClass1 = keyVal0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.jsoup.Connection.Request request0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.serialiseRequestUrl(request0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection1 = org.jsoup.helper.HttpConnection.connect("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Must supply a valid URL");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.jsoup.Connection.Request request0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response2 = org.jsoup.helper.HttpConnection.Response.execute(request0, response1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        keyVal0.value = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        java.util.Map<java.lang.String, java.lang.String> strMap3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection4 = httpConnection0.cookies(strMap3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie map must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        java.net.URL uRL1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection2 = httpConnection0.url(uRL1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeUrl("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi!" + "'", str1.equals("hi!"));
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        java.lang.String str3 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        java.lang.String[] strArray2 = new java.lang.String[] { "null=null" };
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection3 = httpConnection0.data(strArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Must supply an even number of key value pairs");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.ignoreHttpErrors(false);
        java.net.URL uRL3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection4 = httpConnection0.url(uRL3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection5 = httpConnection0.data("", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.ignoreHttpErrors(false);
        java.util.Map<java.lang.String, java.lang.String> strMap3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection4 = httpConnection0.cookies(strMap3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie map must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.serialiseRequestUrl(request5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeUrl("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null" + "'", str1.equals("null=null"));
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response3 = httpConnection0.execute();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        java.lang.String str4 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        int int0 = org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 20 + "'", int0 == 20);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.value = "null=null";
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        java.lang.Class<?> wildcardClass5 = connection4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection6 = httpConnection0.data("", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection5 = httpConnection0.data(strMap4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data map must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.key;
        java.lang.Class<?> wildcardClass4 = keyVal0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection6 = httpConnection0.data(strMap5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data map must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = 0;
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        java.lang.String[] strArray7 = new java.lang.String[] { "null=null", "hi!", "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection8 = httpConnection0.data(strArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Must supply an even number of key value pairs");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeUrl("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "" + "'", str1.equals(""));
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection6 = httpConnection0.url("null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeUrl("null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=hi!" + "'", str1.equals("null=hi!"));
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection.Response response5 = httpConnection0.response();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection8 = httpConnection0.data(strArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Must supply an even number of key value pairs");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = (byte) 10;
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.net.URL uRL5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request6 = request0.url(uRL5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = request0.hasHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = request0.hasHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.ignoreHttpErrors(false);
        java.lang.Class<?> wildcardClass3 = httpConnection0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.cookies();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request6 = request0.cookie("", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request10 = request3.timeout((int) ' ');
        boolean boolean11 = request10.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal14.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = keyVal20.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal23.key = "hi!";
        java.lang.String str26 = keyVal23.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = keyVal23.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal32 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal32.key = "hi!";
        java.lang.String str35 = keyVal32.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal36 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str37 = keyVal36.toString();
        keyVal36.value = "";
        keyVal36.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal42 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal42.key = "hi!";
        java.lang.String str45 = keyVal42.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal47 = keyVal42.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str49 = keyVal48.key();
        org.jsoup.Connection.KeyVal[] keyValArray50 = new org.jsoup.Connection.KeyVal[] { keyVal14, keyVal17, keyVal22, keyVal23, keyVal31, keyVal32, keyVal36, keyVal42, keyVal48 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList51 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList51, keyValArray50);
        request10.data = keyValList51;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection54 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "hi!" + "'", str35.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null=null" + "'", str37.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "hi!" + "'", str45.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "null=null");
        java.lang.String str3 = keyVal2.value;
        java.lang.String str4 = keyVal2.value();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=null" + "'", str3.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null=null" + "'", str4.equals("null=null"));
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection5 = httpConnection0.data("", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        java.net.URL uRL13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request14 = request0.url(uRL13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.value();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection8 = httpConnection0.url("null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean9 = request3.hasCookie("null=null");
        java.lang.String str11 = request3.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.request((org.jsoup.Connection.Request) request3);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection14 = httpConnection0.url("null=null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.helper.HttpConnection.Response response4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response5 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.net.URL uRL5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request6 = request0.url(uRL5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response7 = org.jsoup.helper.HttpConnection.Response.execute(request5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        java.net.URL uRL6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request7 = request0.url(uRL6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = 10;
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request4 = request0.cookie("", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection5 = httpConnection0.ignoreContentType(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection7 = org.jsoup.helper.HttpConnection.Response.createConnection(request5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection1 = org.jsoup.helper.HttpConnection.connect("null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        org.jsoup.helper.HttpConnection.Response response8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response9 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        java.lang.String str6 = keyVal0.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.Connection.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request7 = request0.method(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Method must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.lang.Class<?> wildcardClass2 = method1.getClass();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection9 = httpConnection7.followRedirects(false);
        org.jsoup.Connection connection11 = httpConnection7.referrer("");
        org.jsoup.Connection.Response response12 = httpConnection7.response();
        org.jsoup.Connection connection13 = httpConnection0.response(response12);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response14 = httpConnection0.execute();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.parser.Parser parser3 = null;
        org.jsoup.Connection connection4 = httpConnection0.parser(parser3);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection7 = httpConnection0.data("", "null=null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str5 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal4.value("hi!");
        java.lang.String str8 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal4.value("hi!");
        java.lang.String str11 = keyVal4.key();
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal4);
        org.jsoup.helper.HttpConnection.Response response13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response14 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request12, response13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        org.jsoup.Connection connection7 = httpConnection4.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        httpConnection4.res = response9;
        httpConnection0.res = response9;
        java.lang.Class<?> wildcardClass12 = response9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.Connection.Response response4 = httpConnection0.res;
        java.lang.Class<?> wildcardClass5 = httpConnection0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = 10;
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.helper.HttpConnection httpConnection2 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response3 = httpConnection2.response();
        org.jsoup.Connection connection5 = httpConnection2.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection6 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response7 = httpConnection6.response();
        httpConnection2.res = response7;
        httpConnection0.res = response7;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection11 = httpConnection0.url("null=null=null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=null=null=hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = (byte) 1;
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        java.lang.String str5 = request0.getHeaderCaseInsensitive("null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request7 = request0.maxBodySize((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxSize must be 0 (unlimited) or larger");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.Class<?> wildcardClass11 = request0.getClass();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Response response7 = httpConnection0.response();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document8 = httpConnection0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection5 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        boolean boolean14 = request13.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal17.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = keyVal23.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal26.key = "hi!";
        java.lang.String str29 = keyVal26.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = keyVal26.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal35.key = "hi!";
        java.lang.String str38 = keyVal35.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str40 = keyVal39.toString();
        keyVal39.value = "";
        keyVal39.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal45.key = "hi!";
        java.lang.String str48 = keyVal45.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal50 = keyVal45.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal51 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str52 = keyVal51.key();
        org.jsoup.Connection.KeyVal[] keyValArray53 = new org.jsoup.Connection.KeyVal[] { keyVal17, keyVal20, keyVal25, keyVal26, keyVal34, keyVal35, keyVal39, keyVal45, keyVal51 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList54 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList54, keyValArray53);
        request13.data = keyValList54;
        org.jsoup.Connection connection57 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList54);
        org.jsoup.helper.HttpConnection.Request request58 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method59 = request58.method();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = request58.headers();
        request58.followRedirects = false;
        java.lang.String str64 = request58.cookie("");
        boolean boolean65 = request58.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request66 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method67 = request66.method();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = request66.headers();
        request66.followRedirects = false;
        boolean boolean71 = request66.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection72 = request66.data();
        request58.data = keyValCollection72;
        org.jsoup.Connection connection74 = httpConnection0.data(keyValCollection72);
        java.io.OutputStream outputStream75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection72, outputStream75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "null=null" + "'", str40.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "hi!" + "'", str48.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + method67 + "' != '" + org.jsoup.Connection.Method.GET + "'", method67.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        java.lang.String str6 = keyVal5.key;
        java.lang.String str7 = keyVal5.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!" + "'", str7.equals("hi!"));
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.ignoreContentType(true);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = request0.hasHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection6 = request0.data();
        org.jsoup.Connection.Request request8 = request0.removeCookie("");
        org.jsoup.helper.HttpConnection.Response response9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response10 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection7 = httpConnection0.cookie("", "null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser8 = request0.parser();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request10 = request0.removeHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser8);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = (byte) 0;
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("", "null=hi!");
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection8 = org.jsoup.helper.HttpConnection.Response.createConnection(request7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        boolean boolean9 = request0.hasHeader("null=hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=null");
        request0.ignoreHttpErrors = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        java.lang.String str3 = keyVal2.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.Connection connection19 = httpConnection0.header("null=null", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection21 = httpConnection0.url("null=null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Request request4 = null;
        httpConnection0.req = request4;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection7 = httpConnection0.ignoreHttpErrors(true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        int int12 = request7.maxBodySize();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.lang.String str19 = request13.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        org.jsoup.Connection.Request request22 = request13.method(method21);
        org.jsoup.Connection.Request request23 = request7.method(method21);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        org.jsoup.Connection.Request request17 = request15.ignoreContentType(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry13 = request0.scanHeaders("null=null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry13);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.parser.Parser parser3 = null;
        org.jsoup.Connection connection4 = httpConnection0.parser(parser3);
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.Connection connection8 = httpConnection0.header("null=null", "null=null");
        java.net.URL uRL9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection10 = httpConnection0.url(uRL9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("");
        java.lang.String str4 = keyVal0.value();
        java.lang.Class<?> wildcardClass5 = keyVal0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null" + "'", str1.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request17 = request15.url(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean7 = request0.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.followRedirects = false;
        boolean boolean13 = request8.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection14 = request8.data();
        request0.data = keyValCollection14;
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request16.headers();
        request16.followRedirects = false;
        java.lang.String str22 = request16.cookie("");
        boolean boolean23 = request16.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request24.headers();
        request24.followRedirects = false;
        boolean boolean29 = request24.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection30 = request24.data();
        request16.data = keyValCollection30;
        request0.data = keyValCollection30;
        java.net.URL uRL33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request34 = request0.url(uRL33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection14);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection30);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry5 = request0.scanHeaders("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request0.headers();
        org.jsoup.Connection.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request8 = request0.method(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Method must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = 20;
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.followRedirects;
        org.jsoup.Connection.Request request20 = request16.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request16.cookies();
        org.jsoup.Connection connection22 = httpConnection0.cookies(strMap21);
        java.lang.Class<?> wildcardClass23 = httpConnection0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        java.lang.String[] strArray10 = new java.lang.String[] { "null=null=null=hi!", "null=null=null=hi!", "", "", "hi!", "null=null" };
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection11 = httpConnection0.data(strArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = 'a';
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        java.lang.String[] strArray6 = new java.lang.String[] { "null=hi!" };
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection7 = httpConnection0.data(strArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Must supply an even number of key value pairs");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.jsoup.Connection.Request request0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString(request0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request7.data();
        boolean boolean11 = request7.ignoreHttpErrors();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request13 = request7.removeHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.Connection connection6 = httpConnection0.data("null=null", "null=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection8 = httpConnection0.url("null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("hi!");
        java.lang.String str7 = keyVal6.toString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=hi!" + "'", str7.equals("null=hi!"));
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key;
        java.lang.String str5 = keyVal0.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection6 = request0.data();
        boolean boolean7 = request0.ignoreHttpErrors;
        request0.ignoreContentType = true;
        java.lang.String str10 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection4 = httpConnection0.ignoreHttpErrors(false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry5 = request0.scanHeaders("hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = request0.hasHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry5);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = 3000;
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        boolean boolean9 = request7.followRedirects;
        org.jsoup.Connection.Request request11 = request7.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.headers();
        org.jsoup.Connection connection13 = httpConnection0.data(strMap12);
        org.jsoup.Connection.Response response14 = httpConnection0.res;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=hi!");
        request0.ignoreHttpErrors = true;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request15 = request0.removeHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        int int7 = request0.maxBodySizeBytes;
        org.jsoup.Connection.Method method8 = request0.method();
        java.net.URL uRL9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request10 = request0.url(uRL9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1048576 + "'", int7 == 1048576);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=hi!");
        request0.ignoreHttpErrors = true;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry15 = request0.scanHeaders("null=null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry15);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        java.lang.String str17 = request15.header("");
        int int18 = request15.maxBodySize();
        org.jsoup.Connection.Request request20 = request15.removeCookie("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1048576 + "'", int18 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.followRedirects();
        java.net.URL uRL9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request10 = request7.url(uRL9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request0.headers();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str5 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal4.value("hi!");
        java.lang.String str8 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal4.value("hi!");
        java.lang.String str11 = keyVal4.key();
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal4);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Request request14 = request0.timeout((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Timeout milliseconds must be 0 (infinite) or greater");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        java.net.URL uRL17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection18 = httpConnection0.url(uRL17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request9 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        java.lang.String str11 = request9.cookie("null=null=null=hi!");
        java.lang.String str13 = request9.header("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection9 = httpConnection0.data("", "null=null=null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean13 = request0.followRedirects;
        int int14 = request0.timeout();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3000 + "'", int14 == 3000);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = '#';
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        java.lang.String str6 = keyVal0.value();
        java.lang.String str7 = keyVal0.value();
        java.lang.String str8 = keyVal0.toString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!=null" + "'", str8.equals("hi!=null"));
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry5 = request0.scanHeaders("hi!");
        org.jsoup.Connection.Request request7 = request0.followRedirects(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response22 = httpConnection21.response();
        org.jsoup.Connection.Request request23 = httpConnection21.request();
        org.jsoup.parser.Parser parser24 = null;
        org.jsoup.Connection connection25 = httpConnection21.parser(parser24);
        org.jsoup.Connection.Response response26 = httpConnection21.res;
        httpConnection0.res = response26;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document28 = httpConnection0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Request request4 = null;
        httpConnection0.req = request4;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document6 = httpConnection0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        org.jsoup.Connection.Request request10 = request0.method(method9);
        boolean boolean11 = request0.followRedirects();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request0.cookies();
        org.jsoup.Connection.Request request14 = request0.removeCookie("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.Connection.Request request12 = request7.header("null=null=null=hi!", "null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Response response7 = httpConnection0.response();
        org.jsoup.Connection connection9 = httpConnection0.timeout(307);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.userAgent("null=hi!");
        org.jsoup.Connection connection8 = httpConnection0.timeout((int) (short) 0);
        java.net.URL uRL9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection10 = httpConnection0.url(uRL9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.net.URL uRL5 = request0.url();
        java.net.URL uRL6 = request0.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL6);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        java.lang.Class<?> wildcardClass4 = connection3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.parser.Parser parser3 = null;
        org.jsoup.Connection connection4 = httpConnection0.parser(parser3);
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.Connection.Response response6 = httpConnection0.res;
        java.net.URL uRL7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection8 = httpConnection0.url(uRL7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = 1048576;
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request7.data();
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection10, outputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        org.jsoup.parser.Parser parser6 = null;
        request0.parser = parser6;
        java.net.URL uRL8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request9 = request0.url(uRL8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        java.net.URL uRL7 = request0.url();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request9 = request0.maxBodySize((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxSize must be 0 (unlimited) or larger");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection9 = httpConnection7.followRedirects(false);
        org.jsoup.Connection connection11 = httpConnection7.referrer("");
        org.jsoup.Connection.Response response12 = httpConnection7.response();
        org.jsoup.Connection connection13 = httpConnection0.response(response12);
        org.jsoup.Connection connection15 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.ignoreHttpErrors();
        org.jsoup.Connection.Request request21 = request16.cookie("hi!", "");
        java.lang.String str23 = request16.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.lang.String str30 = request24.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request33 = request24.method(method32);
        org.jsoup.Connection.Request request34 = request16.method(method32);
        org.jsoup.Connection connection35 = httpConnection0.method(method32);
        java.lang.Class<?> wildcardClass36 = method32.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.followRedirects;
        org.jsoup.Connection.Request request16 = request12.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request12.cookies();
        org.jsoup.Connection connection18 = httpConnection0.data(strMap17);
        java.lang.Class<?> wildcardClass19 = connection18.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = 1;
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(1048576);
        request0.followRedirects = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.parser.Parser parser7 = request0.parser();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request8.headers();
        boolean boolean14 = request8.ignoreContentType;
        boolean boolean15 = request8.followRedirects();
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        org.jsoup.Connection.Request request18 = request8.method(method17);
        boolean boolean19 = request8.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection20 = request8.data();
        request0.data = keyValCollection20;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection20);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.Connection.Request request9 = httpConnection0.request();
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection.Request request12 = httpConnection10.request();
        org.jsoup.parser.Parser parser13 = null;
        org.jsoup.Connection connection14 = httpConnection10.parser(parser13);
        org.jsoup.Connection.Response response15 = httpConnection10.res;
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response17 = httpConnection16.response();
        org.jsoup.Connection.Request request18 = httpConnection16.request();
        org.jsoup.parser.Parser parser19 = null;
        org.jsoup.Connection connection20 = httpConnection16.parser(parser19);
        org.jsoup.Connection.Response response21 = httpConnection16.res;
        org.jsoup.Connection connection22 = httpConnection10.response(response21);
        org.jsoup.Connection connection23 = httpConnection0.response(response21);
        java.lang.Class<?> wildcardClass24 = connection23.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request9 = request0.timeout((int) (byte) 0);
        boolean boolean11 = request9.hasHeader("hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        java.net.URL uRL15 = request0.url();
        request0.ignoreHttpErrors = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL15);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean8 = request0.hasHeader("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.followRedirects;
        org.jsoup.Connection.Request request16 = request12.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request12.cookies();
        org.jsoup.Connection connection18 = httpConnection0.data(strMap17);
        java.net.URL uRL19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection20 = httpConnection0.url(uRL19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.headers();
        request17.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser25 = request17.parser();
        org.jsoup.Connection connection26 = httpConnection0.parser(parser25);
        org.jsoup.Connection connection28 = httpConnection0.userAgent("hi!=null");
        org.jsoup.Connection connection30 = httpConnection0.timeout((int) '#');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        java.lang.String str9 = request0.cookie("hi!=null");
        java.net.URL uRL10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request11 = request0.url(uRL10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        int int12 = request7.maxBodySize();
        request7.timeoutMilliseconds = 'a';
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser8 = request0.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        org.jsoup.Connection.Request request11 = request0.followRedirects(false);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection12 = null;
        request0.data = keyValCollection12;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request9 = request0.timeout((int) (byte) 0);
        java.net.URL uRL10 = request9.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry5 = request0.scanHeaders("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request0.headers();
        java.net.URL uRL7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request8 = request0.url(uRL7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.cookies();
        boolean boolean17 = request0.followRedirects();
        java.net.URL uRL18 = request0.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL18);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal11.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = keyVal17.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal20.key = "hi!";
        java.lang.String str23 = keyVal20.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = keyVal20.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal29.key = "hi!";
        java.lang.String str32 = keyVal29.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str34 = keyVal33.toString();
        keyVal33.value = "";
        keyVal33.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal39.key = "hi!";
        java.lang.String str42 = keyVal39.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = keyVal39.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str46 = keyVal45.key();
        org.jsoup.Connection.KeyVal[] keyValArray47 = new org.jsoup.Connection.KeyVal[] { keyVal11, keyVal14, keyVal19, keyVal20, keyVal28, keyVal29, keyVal33, keyVal39, keyVal45 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList48 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList48, keyValArray47);
        request7.data = keyValList48;
        int int51 = request7.maxBodySize();
        request7.ignoreHttpErrors = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null=null" + "'", str34.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "hi!" + "'", str42.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1048576 + "'", int51 == 1048576);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.toString();
        keyVal0.value = "";
        keyVal0.value = "null=hi!";
        java.lang.String str6 = keyVal0.toString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null" + "'", str1.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null=null=hi!" + "'", str6.equals("null=null=hi!"));
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        java.lang.String str17 = request15.header("");
        java.lang.String str19 = request15.getHeaderCaseInsensitive("");
        request15.ignoreContentType = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.parser.Parser parser3 = null;
        org.jsoup.Connection connection4 = httpConnection0.parser(parser3);
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.Connection connection8 = httpConnection0.header("null=null", "null=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection10 = httpConnection0.url("null=null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=null=hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int19 = request18.timeout();
        boolean boolean20 = request18.followRedirects;
        org.jsoup.Connection.Request request23 = request18.cookie("null=hi!", "hi!");
        org.jsoup.Connection.Request request25 = request18.removeCookie("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry20 = request18.scanHeaders("");
        boolean boolean21 = request18.followRedirects;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request18.cookies();
        int int23 = request18.timeoutMilliseconds;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3000 + "'", int23 == 3000);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        org.jsoup.Connection.Request request12 = request7.cookie("null=null", "null=null=null=hi!");
        boolean boolean14 = request7.hasCookie("null=null=null=hi!");
        org.jsoup.Connection.Request request16 = request7.ignoreHttpErrors(false);
        int int17 = request7.timeout();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request5.headers();
        httpConnection0.req = request5;
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request5.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.parser.Parser parser3 = null;
        org.jsoup.Connection connection4 = httpConnection0.parser(parser3);
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!=null", "null=hi!" };
        org.jsoup.Connection connection9 = httpConnection0.data(strArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = (short) 0;
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.followRedirects();
        java.lang.String str10 = request7.getHeaderCaseInsensitive("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry20 = request18.scanHeaders("");
        org.jsoup.Connection.Method method21 = request18.method();
        java.net.URL uRL22 = request18.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry20);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL22);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null", "");
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        org.jsoup.Connection.Request request12 = request0.ignoreContentType(true);
        java.net.URL uRL13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request14 = request0.url(uRL13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection19 = httpConnection0.url("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Must supply a valid URL");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        boolean boolean9 = request7.followRedirects();
        boolean boolean11 = request7.hasCookie("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request14 = request7.cookie("", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser5 = request0.parser;
        org.jsoup.Connection.Request request7 = request0.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        boolean boolean10 = request0.ignoreHttpErrors;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = 100;
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(1048576);
        boolean boolean5 = request0.ignoreContentType;
        java.net.URL uRL6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request7 = request0.url(uRL6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.timeout((int) (short) 100);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request6 = null;
        org.jsoup.Connection connection7 = httpConnection5.request(request6);
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        org.jsoup.Connection connection10 = httpConnection5.response(response9);
        httpConnection0.res = response9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection.Request request12 = httpConnection10.request();
        org.jsoup.Connection.Request request13 = httpConnection10.req;
        org.jsoup.Connection connection15 = httpConnection10.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.ignoreHttpErrors();
        org.jsoup.Connection.Request request21 = request16.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        request22.followRedirects = false;
        boolean boolean27 = request22.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request29 = request22.timeout((int) ' ');
        java.lang.String str31 = request29.cookie("hi!");
        java.lang.String str33 = request29.header("null=null");
        request29.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = request36.headers();
        request36.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser41 = request36.parser;
        request29.parser = parser41;
        org.jsoup.helper.HttpConnection.Request request43 = request16.parser(parser41);
        org.jsoup.Connection connection44 = httpConnection10.request((org.jsoup.Connection.Request) request43);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection45 = request43.data;
        java.util.Map<java.lang.String, java.lang.String> strMap46 = request43.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = request43.cookies();
        org.jsoup.Connection connection48 = httpConnection0.data(strMap47);
        org.jsoup.Connection.Response response49 = httpConnection0.res;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = 3000;
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null=hi!", "null=null=hi!");
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        java.net.URL uRL5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection6 = httpConnection0.url(uRL5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("null=hi!", "null=hi!");
        java.lang.String str3 = keyVal2.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal2.key("null=null");
        java.lang.String str6 = keyVal5.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=hi!" + "'", str3.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null=hi!" + "'", str6.equals("null=hi!"));
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = 1;
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray2 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=null");
        org.jsoup.Connection.Request request13 = request7.ignoreContentType(false);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection14 = request7.data;
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection14, outputStream15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection14);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null", "null=null");
        java.lang.String str3 = keyVal2.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal2.value("null=hi!");
        keyVal2.key = "null=null=hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=null" + "'", str3.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        java.net.URL uRL7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response8 = response1.url(uRL7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response3 = new org.jsoup.helper.HttpConnection.Response(response1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Too many redirects occurred trying to load URL null");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        boolean boolean28 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        org.jsoup.Connection connection32 = httpConnection29.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection36 = httpConnection33.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        int int40 = request37.timeout();
        org.jsoup.parser.Parser parser41 = request37.parser();
        org.jsoup.Connection connection42 = httpConnection33.parser(parser41);
        org.jsoup.Connection connection43 = httpConnection29.parser(parser41);
        org.jsoup.helper.HttpConnection.Request request44 = request0.parser(parser41);
        org.jsoup.Connection.Request request47 = request44.header("null=null=hi!", "null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request21 = request18.ignoreContentType(false);
        org.jsoup.Connection.Request request23 = request18.removeCookie("");
        int int24 = request18.maxBodySize();
        org.jsoup.Connection.Request request26 = request18.followRedirects(false);
        java.lang.String str28 = request18.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method30 = request29.method();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = request29.headers();
        request29.followRedirects = false;
        boolean boolean34 = request29.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request36 = request29.timeout((int) ' ');
        java.lang.String str38 = request36.cookie("hi!");
        java.lang.String str40 = request36.header("null=null");
        request36.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method44 = request43.method();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = request43.headers();
        request43.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser48 = request43.parser;
        request36.parser = parser48;
        request18.parser = parser48;
        int int51 = request18.timeoutMilliseconds;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = request18.headers();
        org.jsoup.Connection connection53 = httpConnection0.cookies(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1048576 + "'", int24 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3000 + "'", int51 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeUrl("null=null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null=null=hi!" + "'", str1.equals("null=null=null=hi!"));
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        boolean boolean9 = request0.hasHeader("null=hi!");
        org.jsoup.Connection.Request request11 = request0.ignoreHttpErrors(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("hi!");
        request0.timeoutMilliseconds = 10;
        java.lang.String str13 = request0.header("null=null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request17.cookies();
        httpConnection0.req = request17;
        java.net.URL uRL22 = request17.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL22);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = (short) 10;
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray3 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection8 = httpConnection0.ignoreContentType(true);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection11 = httpConnection0.header("", "null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        request11.maxBodySizeBytes = (short) 100;
        org.jsoup.parser.Parser parser20 = request11.parser;
        org.jsoup.helper.HttpConnection.Request request21 = request0.parser(parser20);
        int int22 = request21.maxBodySize();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry24 = request21.scanHeaders("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1048576 + "'", int22 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry24);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.helper.HttpConnection.Request request5 = request0.timeout((int) (short) 0);
        java.lang.String str7 = request0.getHeaderCaseInsensitive("null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("null=hi!", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.cookies();
        request0.ignoreContentType = true;
        java.lang.String str20 = request0.header("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean7 = request0.ignoreContentType();
        java.lang.String str9 = request0.header("hi!=null");
        org.jsoup.Connection.Request request12 = request0.cookie("null=null", "null=null=null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request15 = request0.cookie("", "null=null=null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.ignoreHttpErrors();
        org.jsoup.Connection.Request request21 = request16.cookie("hi!", "");
        boolean boolean22 = request16.ignoreContentType;
        org.jsoup.parser.Parser parser23 = request16.parser();
        org.jsoup.Connection.Method method24 = request16.method();
        org.jsoup.Connection connection25 = httpConnection0.method(method24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser23);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean6 = request0.hasCookie("null=null");
        java.lang.String str8 = request0.getHeaderCaseInsensitive("null=hi!");
        java.lang.String str10 = request0.header("");
        java.lang.String str12 = request0.header("null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        java.net.URL uRL3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response4 = response1.url(uRL3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection9 = request7.data;
        boolean boolean10 = request7.ignoreContentType;
        int int11 = request7.timeoutMilliseconds;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request9 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        org.jsoup.Connection.Method method10 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.followRedirects = false;
        java.lang.String str10 = request0.header("null=null=null=hi!");
        int int11 = request0.timeoutMilliseconds;
        org.jsoup.Connection.Request request14 = request0.header("null=null", "");
        java.net.URL uRL15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request16 = request0.url(uRL15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3000 + "'", int11 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection9 = request7.data;
        java.net.URL uRL10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request11 = request7.url(uRL10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection9);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection9 = httpConnection0.header("hi!", "");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.Connection.Method method23 = request17.method();
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.lang.String str30 = request24.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request33 = request24.method(method32);
        org.jsoup.Connection.Request request34 = request17.method(method32);
        org.jsoup.Connection.Request request35 = request10.method(method32);
        org.jsoup.Connection.Request request37 = request10.removeHeader("hi!=null");
        httpConnection0.req = request10;
        boolean boolean40 = request10.hasHeader("null=hi!");
        java.net.URL uRL41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request42 = request10.url(uRL41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request9 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection.Request request12 = httpConnection10.request();
        org.jsoup.Connection.Request request13 = httpConnection10.req;
        org.jsoup.Connection connection15 = httpConnection10.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.ignoreHttpErrors();
        org.jsoup.Connection.Request request21 = request16.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        request22.followRedirects = false;
        boolean boolean27 = request22.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request29 = request22.timeout((int) ' ');
        java.lang.String str31 = request29.cookie("hi!");
        java.lang.String str33 = request29.header("null=null");
        request29.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = request36.headers();
        request36.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser41 = request36.parser;
        request29.parser = parser41;
        org.jsoup.helper.HttpConnection.Request request43 = request16.parser(parser41);
        org.jsoup.Connection connection44 = httpConnection10.request((org.jsoup.Connection.Request) request43);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection45 = request43.data;
        request0.data = keyValCollection45;
        java.io.OutputStream outputStream47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection45, outputStream47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection45);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int19 = request18.timeout();
        org.jsoup.Connection.Request request21 = request18.followRedirects(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = 100;
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry7 = request0.scanHeaders("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry7);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        boolean boolean28 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        org.jsoup.Connection connection32 = httpConnection29.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection36 = httpConnection33.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        int int40 = request37.timeout();
        org.jsoup.parser.Parser parser41 = request37.parser();
        org.jsoup.Connection connection42 = httpConnection33.parser(parser41);
        org.jsoup.Connection connection43 = httpConnection29.parser(parser41);
        org.jsoup.helper.HttpConnection.Request request44 = request0.parser(parser41);
        int int45 = request44.timeout();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = request44.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3000 + "'", int45 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray6 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str5 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal4.value("hi!");
        java.lang.String str8 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal4.value("hi!");
        java.lang.String str11 = keyVal4.key();
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal4);
        request12.ignoreContentType = false;
        boolean boolean16 = request12.hasCookie("null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        boolean boolean4 = request0.hasCookie("null=hi!");
        request0.timeoutMilliseconds = (byte) -1;
        java.lang.String str8 = request0.cookie("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=hi!");
        org.jsoup.Connection.Request request13 = request0.maxBodySize(307);
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        boolean boolean16 = request14.followRedirects;
        org.jsoup.Connection.Request request18 = request14.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request14.cookies();
        boolean boolean21 = request14.hasCookie("null=null");
        org.jsoup.parser.Parser parser22 = request14.parser();
        request0.parser = parser22;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser22);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray16 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection21 = request10.data;
        org.jsoup.Connection.Request request24 = request10.cookie("null=null", "hi!");
        boolean boolean26 = request10.hasCookie("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        boolean boolean37 = request35.followRedirects;
        org.jsoup.Connection.Request request39 = request35.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = request35.headers();
        boolean boolean41 = request35.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request42.headers();
        request42.followRedirects = false;
        boolean boolean47 = request42.ignoreHttpErrors;
        org.jsoup.Connection.Method method48 = request42.method();
        org.jsoup.helper.HttpConnection.Request request49 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method50 = request49.method();
        boolean boolean51 = request49.followRedirects;
        org.jsoup.Connection.Request request53 = request49.followRedirects(true);
        java.lang.String str55 = request49.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method57 = request56.method();
        org.jsoup.Connection.Request request58 = request49.method(method57);
        org.jsoup.Connection.Request request59 = request42.method(method57);
        org.jsoup.Connection.Request request60 = request35.method(method57);
        org.jsoup.Connection connection61 = httpConnection0.method(method57);
        org.jsoup.Connection connection64 = httpConnection0.header("null=null=hi!", "hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method50 + "' != '" + org.jsoup.Connection.Method.GET + "'", method50.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + method57 + "' != '" + org.jsoup.Connection.Method.GET + "'", method57.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection64);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        java.net.URL uRL8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request9 = request0.url(uRL8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.net.URL uRL4 = response1.url();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request9 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request0.data();
        org.jsoup.helper.HttpConnection.Response response11 = null;
        org.jsoup.helper.HttpConnection.Response response12 = new org.jsoup.helper.HttpConnection.Response(response11);
        int int13 = response12.statusCode();
        int int14 = response12.numRedirects;
        java.lang.String str15 = response12.charset;
        java.net.URL uRL16 = response12.url();
        response12.charset = "hi!=null";
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response19 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL16);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser8 = request0.parser();
        org.jsoup.Connection.Method method9 = request0.method();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request11 = request0.maxBodySize((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxSize must be 0 (unlimited) or larger");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser8);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = 307;
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout((int) (short) 0);
        boolean boolean5 = request0.followRedirects;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = response1.cookies();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        java.lang.String str9 = request0.cookie("hi!=null");
        boolean boolean10 = request0.ignoreHttpErrors();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection6 = httpConnection0.url("null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.headers();
        java.lang.Class<?> wildcardClass9 = strMap8.getClass();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        request0.followRedirects = false;
        int int17 = request0.timeout();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3000 + "'", int17 == 3000);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        org.jsoup.Connection.Request request30 = request27.method(method29);
        java.lang.String str31 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request27);
        request27.timeoutMilliseconds = 0;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!=" + "'", str31.equals("hi!="));
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection8 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection connection11 = httpConnection0.cookie("hi!=null", "null=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection14 = httpConnection0.cookie("", "hi!=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = (short) 1;
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.followRedirects = false;
        int int9 = request0.timeout();
        java.net.URL uRL10 = request0.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3000 + "'", int9 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        boolean boolean28 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        org.jsoup.Connection connection32 = httpConnection29.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection36 = httpConnection33.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        int int40 = request37.timeout();
        org.jsoup.parser.Parser parser41 = request37.parser();
        org.jsoup.Connection connection42 = httpConnection33.parser(parser41);
        org.jsoup.Connection connection43 = httpConnection29.parser(parser41);
        org.jsoup.helper.HttpConnection.Request request44 = request0.parser(parser41);
        java.net.URL uRL45 = request0.url();
        java.net.URL uRL46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request47 = request0.url(uRL46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL45);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        boolean boolean9 = request0.hasHeader("null=hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=null");
        org.jsoup.Connection.Request request13 = request0.ignoreContentType(false);
        org.jsoup.Connection.Method method14 = request0.method();
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        boolean boolean17 = request15.followRedirects;
        org.jsoup.Connection.Request request19 = request15.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request15.headers();
        boolean boolean21 = request15.ignoreContentType;
        boolean boolean22 = request15.followRedirects();
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        org.jsoup.Connection.Request request25 = request15.method(method24);
        boolean boolean26 = request15.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection27 = request15.data();
        request0.data = keyValCollection27;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry30 = request0.scanHeaders("hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry30);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        request11.maxBodySizeBytes = (short) 100;
        org.jsoup.parser.Parser parser20 = request11.parser;
        org.jsoup.helper.HttpConnection.Request request21 = request0.parser(parser20);
        java.lang.Class<?> wildcardClass22 = request0.getClass();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.net.URL uRL10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection11 = httpConnection0.url(uRL10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        response1.numRedirects = (byte) 10;
        response1.numRedirects = 0;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        java.lang.String str6 = keyVal0.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection.Request request5 = httpConnection0.request();
        org.jsoup.Connection connection7 = httpConnection0.referrer("null=hi!");
        org.jsoup.Connection connection10 = httpConnection0.header("hi!", "");
        org.jsoup.Connection.Response response11 = httpConnection0.response();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean7 = request0.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.followRedirects = false;
        boolean boolean13 = request8.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection14 = request8.data();
        request0.data = keyValCollection14;
        java.io.OutputStream outputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection14, outputStream16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection14);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.net.URL uRL5 = request0.url();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = request0.hasHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("null=null=hi!", "hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry5 = request0.scanHeaders("hi!");
        boolean boolean7 = request0.hasHeader("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("hi!");
        java.lang.String str7 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.value("null=null");
        java.lang.String str10 = keyVal9.value();
        java.lang.String str11 = keyVal9.value();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null=null" + "'", str10.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null=null" + "'", str11.equals("null=null"));
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document3 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry20 = request18.scanHeaders("");
        boolean boolean21 = request18.ignoreContentType();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = 20;
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.maxBodySizeBytes = (-1);
        boolean boolean4 = request0.hasCookie("null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.statusMessage();
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.Connection.Method method9 = request3.method();
        int int10 = request3.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        boolean boolean18 = request11.followRedirects();
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        org.jsoup.Connection.Request request21 = request11.method(method20);
        org.jsoup.Connection.Request request22 = request3.method(method20);
        org.jsoup.Connection.Response response23 = response1.method(method20);
        boolean boolean24 = response1.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1048576 + "'", int10 == 1048576);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.Connection connection6 = httpConnection0.data("null=null", "null=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection8 = httpConnection0.url("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Must supply a valid URL");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        org.jsoup.Connection.Response response10 = response1.cookie("hi!=", "hi!");
        java.lang.String str11 = response1.charset;
        java.net.URL uRL12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response13 = response1.url(uRL12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = (byte) 10;
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        boolean boolean4 = request0.hasCookie("null=hi!");
        request0.timeoutMilliseconds = (byte) -1;
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal7.value("hi!");
        java.lang.String str11 = keyVal7.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = keyVal7.value("hi!");
        org.jsoup.helper.HttpConnection.Request request14 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        org.jsoup.Connection.Request request17 = request0.header("null=hi!", "null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        boolean boolean28 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        org.jsoup.Connection connection32 = httpConnection29.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection36 = httpConnection33.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        int int40 = request37.timeout();
        org.jsoup.parser.Parser parser41 = request37.parser();
        org.jsoup.Connection connection42 = httpConnection33.parser(parser41);
        org.jsoup.Connection connection43 = httpConnection29.parser(parser41);
        org.jsoup.helper.HttpConnection.Request request44 = request0.parser(parser41);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request47 = request0.header("", "null=null=null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = request0.headers();
        boolean boolean5 = request0.ignoreHttpErrors;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        org.jsoup.Connection.Response response21 = httpConnection0.response();
        java.lang.Class<?> wildcardClass22 = response21.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int19 = request18.timeout();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.cookies();
        boolean boolean21 = request18.ignoreHttpErrors;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection14 = httpConnection0.cookie("hi!=", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        boolean boolean15 = request14.ignoreContentType();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        boolean boolean5 = response1.executed;
        response1.executed = true;
        java.net.HttpURLConnection httpURLConnection8 = null;
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response10 = httpConnection9.response();
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection8, response10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request5.headers();
        httpConnection0.req = request5;
        java.net.URL uRL8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request9 = request5.url(uRL8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.followRedirects = false;
        int int9 = request0.timeout();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request0.data;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.cookies();
        boolean boolean18 = request11.hasCookie("null=null");
        org.jsoup.parser.Parser parser19 = request11.parser();
        request0.parser = parser19;
        java.net.URL uRL21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request22 = request0.url(uRL21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3000 + "'", int9 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        org.jsoup.Connection.Response response21 = httpConnection0.response();
        java.net.URL uRL22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection23 = httpConnection0.url(uRL22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        java.net.URL uRL8 = request0.url();
        java.net.URL uRL9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request10 = request0.url(uRL9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        request14.followRedirects = true;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request14.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request14.headers();
        boolean boolean19 = request14.followRedirects;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean9 = request3.hasCookie("null=null");
        java.lang.String str11 = request3.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.request((org.jsoup.Connection.Request) request3);
        org.jsoup.helper.HttpConnection httpConnection13 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response14 = httpConnection13.response();
        httpConnection0.res = response14;
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection.Response response18 = httpConnection0.response();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response18);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request5.headers();
        httpConnection0.req = request5;
        org.jsoup.Connection.Request request8 = httpConnection0.request();
        org.jsoup.Connection connection10 = httpConnection0.ignoreHttpErrors(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        org.jsoup.Connection.Request request21 = request0.cookie("null=hi!", "null=null=null=hi!");
        int int22 = request0.timeout();
        java.net.URL uRL23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request24 = request0.url(uRL23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3000 + "'", int22 == 3000);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = request6.scanHeaders("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!=");
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        org.jsoup.Connection.Request request10 = request0.method(method9);
        boolean boolean11 = request0.followRedirects();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request0.cookies();
        java.lang.Class<?> wildcardClass13 = strMap12.getClass();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.Connection connection19 = httpConnection0.header("null=null", "hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        boolean boolean24 = request22.followRedirects;
        org.jsoup.Connection.Request request26 = request22.followRedirects(true);
        java.lang.String str28 = request22.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method30 = request29.method();
        org.jsoup.Connection.Request request31 = request22.method(method30);
        org.jsoup.Connection.Request request32 = request20.method(method30);
        boolean boolean34 = request20.hasHeader("hi!");
        org.jsoup.Connection.Request request36 = request20.removeCookie("");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection37 = request20.data();
        org.jsoup.Connection connection38 = httpConnection0.data(keyValCollection37);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request39.headers();
        request39.followRedirects = false;
        java.lang.String str45 = request39.cookie("");
        boolean boolean46 = request39.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = request47.headers();
        request47.followRedirects = false;
        boolean boolean52 = request47.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection53 = request47.data();
        request39.data = keyValCollection53;
        org.jsoup.Connection connection55 = httpConnection0.data(keyValCollection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        java.net.URL uRL6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection7 = httpConnection0.url(uRL6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("hi!");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request10.cookies();
        java.lang.String str22 = request10.getHeaderCaseInsensitive("null=null");
        org.jsoup.parser.Parser parser23 = request10.parser;
        request0.parser = parser23;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser23);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        int int11 = response10.numRedirects;
        response10.charset = "hi!=null";
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response14 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        request7.followRedirects = false;
        boolean boolean12 = request7.ignoreHttpErrors;
        org.jsoup.Connection.Method method13 = request7.method();
        org.jsoup.Connection connection14 = httpConnection0.method(method13);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection16 = httpConnection0.url("null=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        boolean boolean4 = request0.hasCookie("null=hi!");
        request0.timeoutMilliseconds = (byte) -1;
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal7.value("hi!");
        java.lang.String str11 = keyVal7.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = keyVal7.value("hi!");
        org.jsoup.helper.HttpConnection.Request request14 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        org.jsoup.Connection.Request request16 = request0.ignoreContentType(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.followRedirects = false;
        int int9 = request0.timeout();
        org.jsoup.Connection.Request request11 = request0.ignoreContentType(false);
        java.lang.String str13 = request0.header("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3000 + "'", int9 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Response response12 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request13.headers();
        request13.followRedirects = false;
        java.lang.String str19 = request13.cookie("");
        boolean boolean20 = request13.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request21.headers();
        request21.followRedirects = false;
        boolean boolean26 = request21.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection27 = request21.data();
        request13.data = keyValCollection27;
        org.jsoup.Connection connection29 = httpConnection0.data(keyValCollection27);
        java.io.OutputStream outputStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection27, outputStream30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.maxBodySizeBytes = (-1);
        java.lang.String str4 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.Connection.Request request7 = request0.cookie("hi!=null", "null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection.Request request12 = httpConnection10.request();
        org.jsoup.Connection.Request request13 = httpConnection10.req;
        org.jsoup.Connection connection15 = httpConnection10.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.ignoreHttpErrors();
        org.jsoup.Connection.Request request21 = request16.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        request22.followRedirects = false;
        boolean boolean27 = request22.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request29 = request22.timeout((int) ' ');
        java.lang.String str31 = request29.cookie("hi!");
        java.lang.String str33 = request29.header("null=null");
        request29.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = request36.headers();
        request36.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser41 = request36.parser;
        request29.parser = parser41;
        org.jsoup.helper.HttpConnection.Request request43 = request16.parser(parser41);
        org.jsoup.Connection connection44 = httpConnection10.request((org.jsoup.Connection.Request) request43);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection45 = request43.data;
        java.util.Map<java.lang.String, java.lang.String> strMap46 = request43.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = request43.cookies();
        org.jsoup.Connection connection48 = httpConnection0.data(strMap47);
        org.jsoup.Connection connection50 = httpConnection0.userAgent("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        java.lang.String str3 = request0.cookie("null=null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection1 = org.jsoup.helper.HttpConnection.connect("null=null=null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=null=null=hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection10 = httpConnection0.header("null=null", "");
        java.net.URL uRL11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection12 = httpConnection0.url(uRL11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.lang.String str8 = response1.cookie("");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray9 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray6 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document10 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("");
        java.lang.String str4 = keyVal0.key;
        java.lang.String str5 = keyVal0.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null" + "'", str1.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        org.jsoup.Connection.Response response10 = response1.cookie("null=null=hi!", "hi!=null");
        java.net.HttpURLConnection httpURLConnection11 = null;
        org.jsoup.Connection.Response response12 = null;
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection11, response12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.Connection.Request request9 = httpConnection0.request();
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection.Request request12 = httpConnection10.request();
        org.jsoup.parser.Parser parser13 = null;
        org.jsoup.Connection connection14 = httpConnection10.parser(parser13);
        org.jsoup.Connection.Response response15 = httpConnection10.res;
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response17 = httpConnection16.response();
        org.jsoup.Connection.Request request18 = httpConnection16.request();
        org.jsoup.parser.Parser parser19 = null;
        org.jsoup.Connection connection20 = httpConnection16.parser(parser19);
        org.jsoup.Connection.Response response21 = httpConnection16.res;
        org.jsoup.Connection connection22 = httpConnection10.response(response21);
        org.jsoup.Connection connection23 = httpConnection0.response(response21);
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response25 = httpConnection24.response();
        httpConnection0.res = response25;
        org.jsoup.Connection connection28 = httpConnection0.ignoreHttpErrors(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        java.lang.String str6 = keyVal5.key;
        java.lang.String str7 = keyVal5.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.statusCode = (short) 0;
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.Connection.Request request12 = request0.ignoreHttpErrors(true);
        boolean boolean14 = request0.hasCookie("null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (short) 100;
        org.jsoup.parser.Parser parser9 = request0.parser;
        org.jsoup.Connection.Request request11 = request0.removeCookie("hi!=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        org.jsoup.Connection.Method method3 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = request0.cookies();
        boolean boolean5 = request0.ignoreContentType();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        org.jsoup.Connection.Request request9 = request0.ignoreContentType(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        java.lang.String str7 = response1.statusMessage;
        response1.contentType = "null=null=hi!";
        java.net.URL uRL10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response11 = response1.url(uRL10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        org.jsoup.Connection.Request request8 = request0.ignoreHttpErrors(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.followRedirects = false;
        java.lang.String str10 = request0.header("null=null=null=hi!");
        int int11 = request0.timeoutMilliseconds;
        java.net.URL uRL12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request13 = request0.url(uRL12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3000 + "'", int11 == 3000);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.Connection.Request request44 = response1.req;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request44);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeUrl("hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi!=" + "'", str1.equals("hi!="));
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document5 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        int int8 = response1.statusCode();
        int int9 = response1.statusCode;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = (short) 100;
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection9 = httpConnection0.header("hi!", "");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.Connection.Method method23 = request17.method();
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.lang.String str30 = request24.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request33 = request24.method(method32);
        org.jsoup.Connection.Request request34 = request17.method(method32);
        org.jsoup.Connection.Request request35 = request10.method(method32);
        org.jsoup.Connection.Request request37 = request10.removeHeader("hi!=null");
        httpConnection0.req = request10;
        boolean boolean40 = request10.hasHeader("null=hi!");
        boolean boolean41 = request10.followRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null=null=hi!", "hi!=null");
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = '4';
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        java.lang.String str17 = request15.header("");
        java.lang.String str19 = request15.getHeaderCaseInsensitive("");
        org.jsoup.Connection.Request request21 = request15.removeHeader("null=null");
        java.lang.String str23 = request15.getHeaderCaseInsensitive("null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.net.URL uRL5 = request0.url();
        org.jsoup.Connection.Request request7 = request0.removeCookie("hi!");
        java.net.URL uRL8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request9 = request0.url(uRL8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection5 = httpConnection0.header("null=null", "null=null");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = response1.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = response1.cookies();
        java.net.HttpURLConnection httpURLConnection46 = null;
        org.jsoup.helper.HttpConnection.Response response47 = null;
        org.jsoup.helper.HttpConnection.Response response48 = new org.jsoup.helper.HttpConnection.Response(response47);
        int int49 = response48.statusCode();
        int int50 = response48.numRedirects;
        java.lang.String str51 = response48.charset;
        java.net.URL uRL52 = response48.url();
        response48.charset = "hi!=null";
        response48.statusMessage = "hi!=null";
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection46, (org.jsoup.Connection.Response) response48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL52);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        int int8 = response1.statusCode();
        response1.contentType = "hi!=null";
        java.net.HttpURLConnection httpURLConnection11 = null;
        org.jsoup.Connection.Response response12 = null;
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection11, response12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        java.net.URL uRL15 = request0.url();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection16 = null;
        request0.data = keyValCollection16;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL15);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.Connection.Request request44 = response1.req;
        response1.statusCode = (byte) 10;
        java.net.URL uRL47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response48 = response1.url(uRL47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request44);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        boolean boolean7 = request5.ignoreHttpErrors();
        org.jsoup.Connection.Request request10 = request5.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        org.jsoup.helper.HttpConnection.Request request32 = request5.parser(parser30);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        org.jsoup.Connection.Request request35 = request32.method(method34);
        org.jsoup.Connection.Request request36 = request0.method(method34);
        boolean boolean37 = request0.ignoreHttpErrors();
        java.lang.String str38 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean9 = request3.hasCookie("null=null");
        java.lang.String str11 = request3.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.request((org.jsoup.Connection.Request) request3);
        org.jsoup.Connection connection15 = httpConnection0.data("null=hi!", "");
        org.jsoup.Connection connection17 = httpConnection0.userAgent("null=null=hi!");
        org.jsoup.Connection.Request request18 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.toString();
        java.lang.String str5 = keyVal0.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null=hi!" + "'", str4.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("");
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str9 = keyVal8.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = keyVal8.value("hi!");
        java.lang.String str12 = keyVal8.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal8.value("hi!");
        java.lang.String str15 = keyVal8.key();
        org.jsoup.helper.HttpConnection.Request request16 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        request16.ignoreContentType = true;
        boolean boolean19 = request16.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request21 = request16.timeout(32);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry23 = request16.scanHeaders("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal("null=null", "null=null");
        java.lang.String str27 = keyVal26.value;
        org.jsoup.helper.HttpConnection.Request request28 = request16.data((org.jsoup.Connection.KeyVal) keyVal26);
        java.lang.String str29 = keyVal26.key();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null=null" + "'", str27.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null=null" + "'", str29.equals("null=null"));
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        request11.maxBodySizeBytes = (short) 100;
        org.jsoup.parser.Parser parser20 = request11.parser;
        org.jsoup.helper.HttpConnection.Request request21 = request0.parser(parser20);
        int int22 = request21.maxBodySize();
        java.net.URL uRL23 = request21.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1048576 + "'", int22 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL23);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection6 = httpConnection0.header("null=null=null=hi!", "");
        org.jsoup.Connection.Response response7 = httpConnection0.res;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.headers();
        request17.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser25 = request17.parser();
        org.jsoup.Connection connection26 = httpConnection0.parser(parser25);
        org.jsoup.Connection connection29 = httpConnection0.data("null=null", "null=null");
        org.jsoup.Connection connection31 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection connection33 = httpConnection0.userAgent("hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.Connection.Response response4 = httpConnection0.res;
        org.jsoup.Connection.Response response5 = httpConnection0.response();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request10 = request3.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry12 = request3.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request3.headers();
        org.jsoup.Connection connection14 = httpConnection0.data(strMap13);
        org.jsoup.Connection connection16 = httpConnection0.timeout((int) (short) 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        org.jsoup.Connection.Response response10 = response1.cookie("hi!=", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = response1.hasHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        java.lang.String str17 = request15.header("");
        java.lang.String str19 = request15.getHeaderCaseInsensitive("");
        org.jsoup.helper.HttpConnection.Request request21 = request15.timeout(0);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection9 = httpConnection0.header("hi!", "");
        org.jsoup.Connection connection11 = httpConnection0.timeout(307);
        org.jsoup.Connection.Request request12 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        org.jsoup.Connection.Request request9 = response1.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request9);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request10 = request3.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry12 = request3.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request3.headers();
        org.jsoup.Connection connection14 = httpConnection0.data(strMap13);
        org.jsoup.Connection connection16 = httpConnection0.ignoreHttpErrors(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request10 = request3.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry12 = request3.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request3.headers();
        org.jsoup.Connection connection14 = httpConnection0.data(strMap13);
        org.jsoup.Connection connection16 = httpConnection0.maxBodySize(307);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection9 = httpConnection0.header("hi!", "");
        java.lang.String[] strArray16 = new java.lang.String[] { "null=null=null=hi!", "null=null=null=hi!", "null=null", "null=hi!", "null=null", "null=null" };
        org.jsoup.Connection connection17 = httpConnection0.data(strArray16);
        org.jsoup.Connection connection19 = httpConnection0.maxBodySize(1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        boolean boolean7 = request5.ignoreHttpErrors();
        org.jsoup.Connection.Request request10 = request5.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        org.jsoup.helper.HttpConnection.Request request32 = request5.parser(parser30);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        org.jsoup.Connection.Request request35 = request32.method(method34);
        org.jsoup.Connection.Request request36 = request0.method(method34);
        boolean boolean37 = request0.ignoreHttpErrors();
        java.lang.String str39 = request0.header("hi!=null");
        org.jsoup.Connection.Method method40 = request0.method();
        boolean boolean42 = request0.hasCookie("null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        java.lang.String str16 = request0.header("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request0.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection.Request request5 = httpConnection0.request();
        org.jsoup.Connection connection7 = httpConnection0.referrer("null=hi!");
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request9 = null;
        org.jsoup.Connection connection10 = httpConnection8.request(request9);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        org.jsoup.Connection.Request request13 = httpConnection11.request();
        org.jsoup.Connection connection14 = httpConnection8.request(request13);
        org.jsoup.helper.HttpConnection httpConnection15 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection17 = httpConnection15.followRedirects(false);
        org.jsoup.Connection connection19 = httpConnection15.referrer("");
        org.jsoup.Connection.Response response20 = httpConnection15.response();
        org.jsoup.Connection connection21 = httpConnection8.response(response20);
        org.jsoup.Connection connection23 = httpConnection8.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.ignoreHttpErrors();
        org.jsoup.Connection.Request request29 = request24.cookie("hi!", "");
        java.lang.String str31 = request24.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        boolean boolean34 = request32.followRedirects;
        org.jsoup.Connection.Request request36 = request32.followRedirects(true);
        java.lang.String str38 = request32.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request32.method(method40);
        org.jsoup.Connection.Request request42 = request24.method(method40);
        org.jsoup.Connection connection43 = httpConnection8.method(method40);
        org.jsoup.Connection connection45 = httpConnection8.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection46 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response47 = httpConnection46.response();
        org.jsoup.Connection connection49 = httpConnection46.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection50 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response51 = httpConnection50.response();
        httpConnection46.res = response51;
        java.lang.String[] strArray55 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection56 = httpConnection46.data(strArray55);
        org.jsoup.Connection connection57 = httpConnection8.data(strArray55);
        org.jsoup.Connection connection58 = httpConnection0.data(strArray55);
        org.jsoup.Connection.Request request59 = httpConnection0.request();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document60 = httpConnection0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection10 = httpConnection0.header("null=null", "");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        boolean boolean19 = request18.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.headers();
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request21.headers();
        int int24 = request21.timeout();
        org.jsoup.parser.Parser parser25 = request21.parser();
        org.jsoup.helper.HttpConnection.Request request26 = request18.parser(parser25);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request26.cookies();
        org.jsoup.Connection connection28 = httpConnection0.data(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3000 + "'", int24 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.maxBodySize((int) (short) 1);
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        boolean boolean7 = request5.ignoreHttpErrors();
        org.jsoup.Connection.Request request10 = request5.cookie("hi!", "");
        boolean boolean11 = request5.ignoreContentType;
        org.jsoup.Connection.Request request14 = request5.cookie("null=hi!", "hi!");
        java.lang.String str16 = request5.getHeaderCaseInsensitive("");
        java.lang.String str18 = request5.cookie("");
        request5.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request5.cookies();
        request5.ignoreContentType = true;
        org.jsoup.Connection connection24 = httpConnection0.request((org.jsoup.Connection.Request) request5);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection27 = httpConnection0.header("", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray7 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.userAgent("null=hi!");
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        boolean boolean9 = request7.followRedirects;
        org.jsoup.Connection.Request request11 = request7.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.headers();
        boolean boolean13 = request7.ignoreContentType;
        boolean boolean14 = request7.followRedirects();
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request7.method(method16);
        boolean boolean18 = request7.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection19 = request7.data();
        org.jsoup.Connection connection20 = httpConnection0.data(keyValCollection19);
        org.jsoup.Connection.Request request21 = httpConnection0.req;
        org.jsoup.Connection connection23 = httpConnection0.timeout((int) (short) 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.Connection connection19 = httpConnection0.header("null=null", "hi!");
        org.jsoup.Connection connection21 = httpConnection0.userAgent("");
        java.lang.Class<?> wildcardClass22 = httpConnection0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.contentType = "null=hi!";
        org.jsoup.Connection.Request request6 = response1.req;
        org.jsoup.Connection.Response response9 = response1.header("hi!=", "hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.parser.Parser parser13 = request0.parser;
        org.jsoup.Connection.Request request15 = request0.removeCookie("null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.Connection.Request request44 = response1.req;
        response1.statusCode = (byte) 10;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document47 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request44);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.net.URL uRL4 = response1.url();
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        org.jsoup.helper.HttpConnection.Request request9 = request5.timeout(1048576);
        java.lang.String str11 = request5.getHeaderCaseInsensitive("hi!=null");
        response1.req = request5;
        int int13 = response1.statusCode();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        org.jsoup.Connection.Request request13 = request0.ignoreHttpErrors(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        keyVal2.key = "";
        java.lang.String str5 = keyVal2.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null=null" + "'", str5.equals("null=null"));
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = request2.headers();
        request2.followRedirects = false;
        boolean boolean7 = request2.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request9 = request2.timeout((int) ' ');
        boolean boolean10 = request9.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal13.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = keyVal19.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal22.key = "hi!";
        java.lang.String str25 = keyVal22.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = keyVal22.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal30 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal31.key = "hi!";
        java.lang.String str34 = keyVal31.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str36 = keyVal35.toString();
        keyVal35.value = "";
        keyVal35.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal41 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal41.key = "hi!";
        java.lang.String str44 = keyVal41.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal46 = keyVal41.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal47 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str48 = keyVal47.key();
        org.jsoup.Connection.KeyVal[] keyValArray49 = new org.jsoup.Connection.KeyVal[] { keyVal13, keyVal16, keyVal21, keyVal22, keyVal30, keyVal31, keyVal35, keyVal41, keyVal47 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList50 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList50, keyValArray49);
        request9.data = keyValList50;
        org.jsoup.helper.HttpConnection.Request request53 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method54 = request53.method();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = request53.headers();
        request53.followRedirects = false;
        java.lang.String str59 = request53.cookie("");
        boolean boolean60 = request53.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method62 = request61.method();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = request61.headers();
        request61.followRedirects = false;
        boolean boolean66 = request61.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection67 = request61.data();
        request53.data = keyValCollection67;
        request9.data = keyValCollection67;
        org.jsoup.Connection connection70 = httpConnection0.data(keyValCollection67);
        org.jsoup.Connection connection72 = httpConnection0.timeout(0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "hi!" + "'", str34.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null=null" + "'", str36.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "hi!" + "'", str44.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + method54 + "' != '" + org.jsoup.Connection.Method.GET + "'", method54.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + method62 + "' != '" + org.jsoup.Connection.Method.GET + "'", method62.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection72);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean3 = request0.hasHeader("null=null");
        org.jsoup.Connection.Request request5 = request0.removeHeader("hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection6 = httpConnection0.cookie("null=null=null=hi!", "hi!=");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection8 = httpConnection0.url("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Must supply a valid URL");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean7 = request0.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.followRedirects = false;
        boolean boolean13 = request8.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection14 = request8.data();
        request0.data = keyValCollection14;
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = keyVal18.key("null=null");
        org.jsoup.helper.HttpConnection.Request request21 = request0.data((org.jsoup.Connection.KeyVal) keyVal20);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection22 = request21.data;
        java.io.OutputStream outputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection22, outputStream23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection22);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        boolean boolean9 = request7.followRedirects();
        java.lang.String str11 = request7.cookie("null=null");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.followRedirects;
        org.jsoup.Connection.Request request16 = request12.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request12.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request21 = request12.data((org.jsoup.Connection.KeyVal) keyVal20);
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response23 = httpConnection22.response();
        org.jsoup.Connection.Request request24 = httpConnection22.request();
        org.jsoup.Connection.Request request25 = httpConnection22.req;
        org.jsoup.Connection connection27 = httpConnection22.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        boolean boolean30 = request28.ignoreHttpErrors();
        org.jsoup.Connection.Request request33 = request28.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method35 = request34.method();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request34.headers();
        request34.followRedirects = false;
        boolean boolean39 = request34.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request41 = request34.timeout((int) ' ');
        java.lang.String str43 = request41.cookie("hi!");
        java.lang.String str45 = request41.header("null=null");
        request41.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request48 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method49 = request48.method();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = request48.headers();
        request48.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser53 = request48.parser;
        request41.parser = parser53;
        org.jsoup.helper.HttpConnection.Request request55 = request28.parser(parser53);
        org.jsoup.Connection connection56 = httpConnection22.request((org.jsoup.Connection.Request) request55);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection57 = request55.data;
        request12.data = keyValCollection57;
        request7.data = keyValCollection57;
        org.jsoup.Connection.Request request61 = request7.removeCookie("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = (-1);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = (byte) 100;
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Request request4 = null;
        httpConnection0.req = request4;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        boolean boolean10 = request6.hasCookie("null=null");
        org.jsoup.Connection connection11 = httpConnection0.request((org.jsoup.Connection.Request) request6);
        org.jsoup.Connection connection13 = httpConnection0.referrer("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str5 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal4.value("hi!");
        java.lang.String str8 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal4.value("hi!");
        java.lang.String str11 = keyVal4.key();
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal4);
        java.net.URL uRL13 = request12.url();
        boolean boolean14 = request12.ignoreContentType;
        org.jsoup.helper.HttpConnection httpConnection15 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response16 = httpConnection15.response();
        org.jsoup.Connection connection18 = httpConnection15.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection19 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response20 = httpConnection19.response();
        httpConnection15.res = response20;
        org.jsoup.Connection connection24 = httpConnection15.header("hi!", "");
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        boolean boolean27 = request25.followRedirects;
        org.jsoup.Connection.Request request29 = request25.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request25.headers();
        boolean boolean31 = request25.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.followRedirects = false;
        boolean boolean37 = request32.ignoreHttpErrors;
        org.jsoup.Connection.Method method38 = request32.method();
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        boolean boolean41 = request39.followRedirects;
        org.jsoup.Connection.Request request43 = request39.followRedirects(true);
        java.lang.String str45 = request39.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method47 = request46.method();
        org.jsoup.Connection.Request request48 = request39.method(method47);
        org.jsoup.Connection.Request request49 = request32.method(method47);
        org.jsoup.Connection.Request request50 = request25.method(method47);
        org.jsoup.Connection.Request request52 = request25.removeHeader("hi!=null");
        httpConnection15.req = request25;
        org.jsoup.parser.Parser parser54 = request25.parser;
        request12.parser = parser54;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + method47 + "' != '" + org.jsoup.Connection.Method.GET + "'", method47.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser54);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = response1.cookies();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response47 = response1.cookie("", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.Connection connection7 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request8.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = request8.data((org.jsoup.Connection.KeyVal) keyVal16);
        org.jsoup.helper.HttpConnection httpConnection18 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response19 = httpConnection18.response();
        org.jsoup.Connection.Request request20 = httpConnection18.request();
        org.jsoup.Connection.Request request21 = httpConnection18.req;
        org.jsoup.Connection connection23 = httpConnection18.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.ignoreHttpErrors();
        org.jsoup.Connection.Request request29 = request24.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method31 = request30.method();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = request30.headers();
        request30.followRedirects = false;
        boolean boolean35 = request30.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request37 = request30.timeout((int) ' ');
        java.lang.String str39 = request37.cookie("hi!");
        java.lang.String str41 = request37.header("null=null");
        request37.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method45 = request44.method();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = request44.headers();
        request44.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser49 = request44.parser;
        request37.parser = parser49;
        org.jsoup.helper.HttpConnection.Request request51 = request24.parser(parser49);
        org.jsoup.Connection connection52 = httpConnection18.request((org.jsoup.Connection.Request) request51);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection53 = request51.data;
        request8.data = keyValCollection53;
        org.jsoup.Connection connection55 = httpConnection0.data(keyValCollection53);
        java.net.URL uRL56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection57 = httpConnection0.url(uRL56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + method45 + "' != '" + org.jsoup.Connection.Method.GET + "'", method45.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.Connection connection7 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request8.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = request8.data((org.jsoup.Connection.KeyVal) keyVal16);
        org.jsoup.helper.HttpConnection httpConnection18 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response19 = httpConnection18.response();
        org.jsoup.Connection.Request request20 = httpConnection18.request();
        org.jsoup.Connection.Request request21 = httpConnection18.req;
        org.jsoup.Connection connection23 = httpConnection18.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.ignoreHttpErrors();
        org.jsoup.Connection.Request request29 = request24.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method31 = request30.method();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = request30.headers();
        request30.followRedirects = false;
        boolean boolean35 = request30.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request37 = request30.timeout((int) ' ');
        java.lang.String str39 = request37.cookie("hi!");
        java.lang.String str41 = request37.header("null=null");
        request37.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method45 = request44.method();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = request44.headers();
        request44.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser49 = request44.parser;
        request37.parser = parser49;
        org.jsoup.helper.HttpConnection.Request request51 = request24.parser(parser49);
        org.jsoup.Connection connection52 = httpConnection18.request((org.jsoup.Connection.Request) request51);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection53 = request51.data;
        request8.data = keyValCollection53;
        org.jsoup.Connection connection55 = httpConnection0.data(keyValCollection53);
        org.jsoup.Connection connection57 = httpConnection0.followRedirects(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + method45 + "' != '" + org.jsoup.Connection.Method.GET + "'", method45.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection9 = httpConnection0.header("hi!", "");
        java.lang.String[] strArray16 = new java.lang.String[] { "null=null=null=hi!", "null=null=null=hi!", "null=null", "null=hi!", "null=null", "null=null" };
        org.jsoup.Connection connection17 = httpConnection0.data(strArray16);
        org.jsoup.Connection connection19 = httpConnection0.ignoreContentType(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        response1.statusCode = 10;
        response1.numRedirects = (byte) 100;
        java.lang.String str12 = response1.contentType;
        int int13 = response1.numRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        org.jsoup.Connection.Request request10 = request0.removeCookie("null=hi!");
        java.lang.String str12 = request0.getHeaderCaseInsensitive("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Request request14 = request0.timeout((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Timeout milliseconds must be 0 (infinite) or greater");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        boolean boolean37 = request35.followRedirects;
        org.jsoup.Connection.Request request39 = request35.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = request35.headers();
        boolean boolean41 = request35.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request42.headers();
        request42.followRedirects = false;
        boolean boolean47 = request42.ignoreHttpErrors;
        org.jsoup.Connection.Method method48 = request42.method();
        org.jsoup.helper.HttpConnection.Request request49 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method50 = request49.method();
        boolean boolean51 = request49.followRedirects;
        org.jsoup.Connection.Request request53 = request49.followRedirects(true);
        java.lang.String str55 = request49.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method57 = request56.method();
        org.jsoup.Connection.Request request58 = request49.method(method57);
        org.jsoup.Connection.Request request59 = request42.method(method57);
        org.jsoup.Connection.Request request60 = request35.method(method57);
        org.jsoup.Connection connection61 = httpConnection0.method(method57);
        java.net.URL uRL62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection63 = httpConnection0.url(uRL62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method50 + "' != '" + org.jsoup.Connection.Method.GET + "'", method50.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + method57 + "' != '" + org.jsoup.Connection.Method.GET + "'", method57.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.followRedirects();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry10 = request7.scanHeaders("");
        java.lang.String str12 = request7.cookie("null=null=hi!");
        org.jsoup.Connection.Request request15 = request7.cookie("hi!=null", "null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        boolean boolean11 = request7.hasCookie("null=hi!");
        java.net.URL uRL12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request13 = request7.url(uRL12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = (short) 100;
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry13 = request7.scanHeaders("");
        boolean boolean15 = request7.hasCookie("hi!");
        boolean boolean16 = request7.ignoreHttpErrors();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        java.net.URL uRL14 = request0.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL14);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("hi!");
        java.lang.String str7 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.value("null=null");
        java.lang.String str10 = keyVal9.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal9.value("");
        java.lang.String str13 = keyVal12.toString();
        java.lang.String str14 = keyVal12.value();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null=null" + "'", str10.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null=" + "'", str13.equals("null="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int19 = request18.timeout();
        request18.maxBodySizeBytes = 3000;
        org.jsoup.Connection.Request request24 = request18.header("hi!", "hi!=null");
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request18.headers();
        java.lang.String str27 = request18.cookie("hi!=null");
        request18.timeoutMilliseconds = 32;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        boolean boolean7 = response1.hasCookie("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        response1.contentType = "null=hi!";
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document18 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean3 = request0.hasHeader("null=null");
        java.lang.String str5 = request0.cookie("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        java.lang.String str2 = keyVal0.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal0.key("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "null=null" + "'", str2.equals("null=null"));
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.toString();
        keyVal0.value = "";
        keyVal0.value = "null=hi!";
        keyVal0.key = "null=null";
        java.lang.String str8 = keyVal0.toString();
        java.lang.String str9 = keyVal0.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = keyVal0.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = keyVal0.value("hi!");
        java.lang.String str14 = keyVal0.key();
        java.lang.String str15 = keyVal0.value();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null" + "'", str1.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=null=null=hi!" + "'", str8.equals("null=null=null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=hi!" + "'", str9.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        int int22 = response1.numRedirects;
        org.jsoup.Connection.Response response24 = response1.removeCookie("null=null=hi!");
        java.net.HttpURLConnection httpURLConnection25 = null;
        org.jsoup.helper.HttpConnection.Response response26 = null;
        org.jsoup.helper.HttpConnection.Response response27 = new org.jsoup.helper.HttpConnection.Response(response26);
        int int28 = response27.numRedirects;
        response27.charset = "hi!=null";
        java.lang.String str31 = response27.contentType();
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection25, (org.jsoup.Connection.Response) response27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=null");
        org.jsoup.Connection.Request request13 = request7.ignoreContentType(false);
        org.jsoup.Connection.Request request15 = request7.removeHeader("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Response response16 = null;
        org.jsoup.helper.HttpConnection.Response response17 = new org.jsoup.helper.HttpConnection.Response(response16);
        int int18 = response17.statusCode();
        int int19 = response17.numRedirects;
        java.lang.String str20 = response17.charset;
        org.jsoup.helper.HttpConnection.Response response21 = new org.jsoup.helper.HttpConnection.Response(response17);
        java.lang.String str23 = response17.header("null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response24 = org.jsoup.helper.HttpConnection.Response.execute(request15, response17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreHttpErrors;
        org.jsoup.Connection.Method method9 = request7.method();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        keyVal3.value = "";
        keyVal3.value = "hi!";
        keyVal3.value = "null=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("null=null");
        org.jsoup.Connection.Request request11 = request0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.ignoreHttpErrors();
        org.jsoup.Connection.Request request17 = request12.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.headers();
        request18.followRedirects = false;
        boolean boolean23 = request18.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request25 = request18.timeout((int) ' ');
        java.lang.String str27 = request25.cookie("hi!");
        java.lang.String str29 = request25.header("null=null");
        request25.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser37 = request32.parser;
        request25.parser = parser37;
        org.jsoup.helper.HttpConnection.Request request39 = request12.parser(parser37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        org.jsoup.Connection.Request request42 = request39.method(method41);
        org.jsoup.Connection.Request request43 = request0.method(method41);
        org.jsoup.Connection.Request request45 = request0.maxBodySize(0);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.userAgent("null=hi!");
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        boolean boolean9 = request7.followRedirects;
        org.jsoup.Connection.Request request11 = request7.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.headers();
        boolean boolean13 = request7.ignoreContentType;
        boolean boolean14 = request7.followRedirects();
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request7.method(method16);
        boolean boolean18 = request7.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection19 = request7.data();
        org.jsoup.Connection connection20 = httpConnection0.data(keyValCollection19);
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection19, outputStream21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        boolean boolean11 = request7.hasCookie("null=hi!");
        java.lang.Class<?> wildcardClass12 = request7.getClass();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.parser.Parser parser13 = request0.parser;
        request0.timeoutMilliseconds = (byte) 100;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser13);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("");
        int int8 = request0.timeout();
        java.lang.String str10 = request0.cookie("null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3000 + "'", int8 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request7.data();
        java.lang.String str12 = request7.header("hi!");
        org.jsoup.Connection.Request request15 = request7.header("null=null=hi!", "");
        request7.ignoreHttpErrors = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        boolean boolean22 = request10.hasCookie("null=null=null=hi!");
        org.jsoup.Connection.Request request25 = request10.header("null=null=hi!", "null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection26 = org.jsoup.helper.HttpConnection.Response.createConnection(request25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request17.cookies();
        httpConnection0.req = request17;
        org.jsoup.helper.HttpConnection.Response response22 = null;
        org.jsoup.helper.HttpConnection.Response response23 = new org.jsoup.helper.HttpConnection.Response(response22);
        java.lang.String str24 = response23.contentType();
        java.lang.String str25 = response23.contentType();
        org.jsoup.Connection connection26 = httpConnection0.response((org.jsoup.Connection.Response) response23);
        org.jsoup.Connection connection28 = httpConnection0.followRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        boolean boolean5 = response1.executed;
        response1.executed = true;
        org.jsoup.Connection.Method method8 = response1.method();
        java.lang.String str9 = response1.statusMessage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.followRedirects();
        org.jsoup.helper.HttpConnection.Request request10 = request7.timeout((int) '4');
        org.jsoup.Connection.Request request12 = request10.removeHeader("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        int int8 = response1.statusCode();
        int int9 = response1.statusCode();
        org.jsoup.Connection.Response response12 = response1.header("null=null=hi!", "hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        int int8 = response1.statusCode();
        org.jsoup.Connection.Response response10 = response1.removeCookie("null=null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response12 = response1.removeHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.followRedirects = false;
        int int9 = request0.timeout();
        java.net.URL uRL10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request11 = request0.url(uRL10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3000 + "'", int9 == 3000);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.headers();
        request17.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser25 = request17.parser();
        org.jsoup.Connection connection26 = httpConnection0.parser(parser25);
        org.jsoup.Connection connection28 = httpConnection0.maxBodySize((int) 'a');
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method30 = request29.method();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = request29.headers();
        org.jsoup.Connection.Method method32 = request29.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request29.cookies();
        org.jsoup.Connection connection34 = httpConnection0.data(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        org.jsoup.Connection.Request request3 = request0.removeHeader("null=null=null=hi!");
        java.net.URL uRL4 = request0.url();
        java.lang.String str6 = request0.getHeaderCaseInsensitive("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        org.jsoup.Connection.Request request12 = request0.ignoreContentType(true);
        request0.ignoreHttpErrors = false;
        org.jsoup.Connection.Request request17 = request0.cookie("null=hi!", "null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        org.jsoup.Connection connection36 = httpConnection0.userAgent("");
        org.jsoup.helper.HttpConnection.Response response37 = null;
        org.jsoup.helper.HttpConnection.Response response38 = new org.jsoup.helper.HttpConnection.Response(response37);
        int int39 = response38.numRedirects;
        response38.charset = "hi!=null";
        org.jsoup.Connection.Response response43 = response38.removeCookie("null=null");
        org.jsoup.Connection connection44 = httpConnection0.response(response43);
        java.net.URL uRL45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection46 = httpConnection0.url(uRL45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.userAgent("null=hi!");
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        boolean boolean9 = request7.followRedirects;
        org.jsoup.Connection.Request request11 = request7.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.headers();
        boolean boolean13 = request7.ignoreContentType;
        boolean boolean14 = request7.followRedirects();
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request7.method(method16);
        boolean boolean18 = request7.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection19 = request7.data();
        org.jsoup.Connection connection20 = httpConnection0.data(keyValCollection19);
        org.jsoup.Connection connection22 = httpConnection0.maxBodySize((int) (short) 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        java.net.URL uRL8 = request0.url();
        java.lang.String str10 = request0.header("null=null=hi!");
        org.jsoup.Connection.Request request13 = request0.cookie("null=null", "null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int19 = request18.timeout();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.cookies();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry22 = request18.scanHeaders("");
        boolean boolean24 = request18.hasHeader("null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.Connection.Response response9 = httpConnection0.response();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection11 = httpConnection0.url("hi!=null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: hi!=null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser8 = request0.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        boolean boolean11 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request14 = request0.header("null=null=null=hi!", "null=null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean9 = request3.hasCookie("null=null");
        java.lang.String str11 = request3.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.request((org.jsoup.Connection.Request) request3);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        keyVal13.value = "";
        keyVal13.value = "null=hi!";
        keyVal13.key = "null=null";
        java.lang.String str21 = keyVal13.toString();
        java.lang.String str22 = keyVal13.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal24 = keyVal13.key("null=null");
        org.jsoup.helper.HttpConnection.Request request25 = request3.data((org.jsoup.Connection.KeyVal) keyVal24);
        org.jsoup.helper.HttpConnection.Request request27 = request3.timeout(1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null=null=null=hi!" + "'", str21.equals("null=null=null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null=hi!" + "'", str22.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.net.URL uRL8 = request7.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null=hi!", "");
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        boolean boolean22 = request10.hasCookie("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request23.headers();
        request23.followRedirects = false;
        boolean boolean28 = request23.ignoreHttpErrors;
        org.jsoup.Connection.Method method29 = request23.method();
        int int30 = request23.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        boolean boolean33 = request31.followRedirects;
        org.jsoup.Connection.Request request35 = request31.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request31.headers();
        boolean boolean37 = request31.ignoreContentType;
        boolean boolean38 = request31.followRedirects();
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request31.method(method40);
        org.jsoup.Connection.Request request42 = request23.method(method40);
        org.jsoup.Connection.Request request43 = request10.method(method40);
        boolean boolean45 = request10.hasHeader("null=null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1048576 + "'", int30 == 1048576);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response1);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document9 = response8.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Response response4 = httpConnection0.response();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        org.jsoup.parser.Parser parser19 = request6.parser;
        org.jsoup.Connection connection20 = httpConnection0.parser(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Response response2 = httpConnection0.res;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection4 = httpConnection0.url("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response2);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request9 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        org.jsoup.Connection.Request request12 = request9.header("null=hi!", "");
        java.lang.Class<?> wildcardClass13 = request12.getClass();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.helper.HttpConnection.Response response44 = new org.jsoup.helper.HttpConnection.Response(response1);
        boolean boolean46 = response1.hasCookie("null=hi!");
        response1.contentType = "null=null=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection1 = org.jsoup.helper.HttpConnection.connect("hi!=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: hi!=");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.maxBodySize((int) (short) 1);
        org.jsoup.Connection connection6 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection.Request request9 = httpConnection7.request();
        org.jsoup.Connection.Request request10 = httpConnection7.req;
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        org.jsoup.Connection connection14 = httpConnection11.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection15 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response16 = httpConnection15.response();
        httpConnection11.res = response16;
        org.jsoup.Connection connection19 = httpConnection11.userAgent("null=null");
        org.jsoup.Connection.Request request20 = httpConnection11.request();
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response22 = httpConnection21.response();
        org.jsoup.Connection.Request request23 = httpConnection21.request();
        org.jsoup.parser.Parser parser24 = null;
        org.jsoup.Connection connection25 = httpConnection21.parser(parser24);
        org.jsoup.Connection.Response response26 = httpConnection21.res;
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection.Request request29 = httpConnection27.request();
        org.jsoup.parser.Parser parser30 = null;
        org.jsoup.Connection connection31 = httpConnection27.parser(parser30);
        org.jsoup.Connection.Response response32 = httpConnection27.res;
        org.jsoup.Connection connection33 = httpConnection21.response(response32);
        org.jsoup.Connection connection34 = httpConnection11.response(response32);
        org.jsoup.helper.HttpConnection httpConnection35 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response36 = httpConnection35.response();
        httpConnection11.res = response36;
        org.jsoup.Connection connection38 = httpConnection7.response(response36);
        httpConnection0.res = response36;
        org.jsoup.Connection connection42 = httpConnection0.cookie("null=null=null=hi!", "null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        java.net.HttpURLConnection httpURLConnection5 = null;
        org.jsoup.helper.HttpConnection httpConnection6 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection8 = httpConnection6.followRedirects(false);
        org.jsoup.Connection connection10 = httpConnection6.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        org.jsoup.helper.HttpConnection httpConnection13 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response14 = httpConnection13.response();
        org.jsoup.Connection connection16 = httpConnection13.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection17 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response18 = httpConnection17.response();
        httpConnection13.res = response18;
        httpConnection11.res = response18;
        org.jsoup.Connection connection21 = httpConnection6.response(response18);
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection5, response18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "null=null");
        org.jsoup.helper.HttpConnection.Response response10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        int int12 = response11.statusCode();
        int int13 = response11.numRedirects;
        response11.charset = "";
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        org.jsoup.Connection.Request request19 = request16.ignoreContentType(false);
        org.jsoup.Connection.Request request21 = request16.removeCookie("");
        int int22 = request16.maxBodySize();
        org.jsoup.Connection.Request request24 = request16.followRedirects(false);
        response11.req = request16;
        java.lang.String str27 = response11.cookie("null=null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response28 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1048576 + "'", int22 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        java.lang.String str9 = response8.contentType();
        java.lang.String str10 = response8.contentType();
        int int11 = response8.statusCode();
        httpConnection0.res = response8;
        java.net.URL uRL13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response14 = response8.url(uRL13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        org.jsoup.Connection.Request request10 = request7.cookie("hi!=", "");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection21 = request10.data;
        java.io.OutputStream outputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection21, outputStream22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection21);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        org.jsoup.Connection.Response response21 = httpConnection0.response();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document22 = httpConnection0.post();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.followRedirects();
        org.jsoup.helper.HttpConnection.Request request10 = request7.timeout((int) '4');
        org.jsoup.Connection.Method method11 = request7.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.headers();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        org.jsoup.Connection.Request request8 = request0.maxBodySize((int) (short) 100);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry10 = request0.scanHeaders("hi!=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry10);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection7 = httpConnection4.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        int int11 = request8.timeout();
        org.jsoup.parser.Parser parser12 = request8.parser();
        org.jsoup.Connection connection13 = httpConnection4.parser(parser12);
        org.jsoup.Connection connection14 = httpConnection0.parser(parser12);
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        boolean boolean17 = request15.ignoreHttpErrors();
        org.jsoup.Connection.Request request20 = request15.cookie("hi!", "");
        boolean boolean21 = request15.ignoreContentType;
        org.jsoup.Connection.Request request24 = request15.cookie("null=hi!", "hi!");
        java.lang.String str26 = request15.getHeaderCaseInsensitive("");
        java.lang.String str28 = request15.cookie("");
        request15.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = request15.cookies();
        org.jsoup.Connection connection32 = httpConnection0.data(strMap31);
        org.jsoup.Connection connection35 = httpConnection0.data("hi!=", "null=null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3000 + "'", int11 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request9 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        java.lang.String str10 = keyVal8.key;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        request0.ignoreContentType = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        java.lang.String str3 = keyVal2.value();
        keyVal2.key = "null=null=null=hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=null");
        org.jsoup.Connection.Request request14 = request7.header("null=hi!", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.parser.Parser parser3 = null;
        org.jsoup.Connection connection4 = httpConnection0.parser(parser3);
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.Connection connection8 = httpConnection0.header("null=null", "null=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection11 = httpConnection0.header("", "hi!=null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = (short) 0;
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.parser.Parser parser4 = null;
        org.jsoup.Connection connection5 = httpConnection0.parser(parser4);
        org.jsoup.helper.HttpConnection httpConnection6 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response7 = httpConnection6.response();
        org.jsoup.Connection.Request request8 = httpConnection6.request();
        org.jsoup.Connection.Request request9 = httpConnection6.req;
        org.jsoup.Connection.Request request10 = httpConnection6.request();
        org.jsoup.Connection.Response response11 = httpConnection6.res;
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        boolean boolean16 = request14.followRedirects;
        org.jsoup.Connection.Request request18 = request14.followRedirects(true);
        java.lang.String str20 = request14.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        org.jsoup.Connection.Request request23 = request14.method(method22);
        org.jsoup.Connection.Request request24 = request12.method(method22);
        boolean boolean26 = request12.hasHeader("hi!");
        org.jsoup.Connection.Request request28 = request12.removeCookie("");
        httpConnection6.req = request28;
        org.jsoup.helper.HttpConnection httpConnection30 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request31 = null;
        org.jsoup.Connection connection32 = httpConnection30.request(request31);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response34 = httpConnection33.response();
        org.jsoup.Connection connection35 = httpConnection30.response(response34);
        httpConnection6.res = response34;
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = request37.cookies();
        org.jsoup.Connection connection41 = httpConnection6.data(strMap40);
        org.jsoup.Connection connection42 = httpConnection0.data(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (short) 100;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.headers();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.Connection connection21 = httpConnection0.referrer("null=null=null=hi!");
        org.jsoup.Connection connection24 = httpConnection0.cookie("null=hi!", "null=null=null=hi!");
        org.jsoup.Connection connection26 = httpConnection0.referrer("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        boolean boolean22 = request10.hasCookie("null=null=null=hi!");
        org.jsoup.Connection.Request request25 = request10.header("null=null=hi!", "null=hi!");
        org.jsoup.helper.HttpConnection.Response response26 = null;
        org.jsoup.helper.HttpConnection.Response response27 = new org.jsoup.helper.HttpConnection.Response(response26);
        int int28 = response27.statusCode();
        int int29 = response27.numRedirects;
        java.lang.String str30 = response27.charset;
        response27.contentType = "null=null=null=hi!";
        response27.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = response27.headers();
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        boolean boolean38 = request36.followRedirects;
        org.jsoup.Connection.Request request40 = request36.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request36.headers();
        boolean boolean42 = request36.ignoreContentType;
        boolean boolean43 = request36.followRedirects();
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method45 = request44.method();
        org.jsoup.Connection.Request request46 = request36.method(method45);
        org.jsoup.Connection.Response response47 = response27.method(method45);
        int int48 = response27.numRedirects;
        org.jsoup.Connection.Method method49 = response27.method();
        org.jsoup.Connection.Request request50 = request10.method(method49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + method45 + "' != '" + org.jsoup.Connection.Method.GET + "'", method45.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.lang.String str3 = response1.contentType();
        response1.numRedirects = 1;
        response1.numRedirects = 1048576;
        java.net.HttpURLConnection httpURLConnection8 = null;
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        int int11 = response10.statusCode();
        int int12 = response10.numRedirects;
        java.lang.String str13 = response10.charset;
        java.lang.String str14 = response10.contentType();
        java.lang.String str16 = response10.cookie("null=null");
        java.lang.String str17 = response10.charset;
        org.jsoup.Connection.Response response20 = response10.cookie("null=null", "null=");
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection8, response20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        org.jsoup.Connection.Request request8 = request0.removeCookie("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser5 = request0.parser;
        org.jsoup.Connection.Request request7 = request0.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.headers();
        java.net.URL uRL9 = request0.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        response1.contentType = "null=null=hi!";
        java.net.URL uRL12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response13 = response1.url(uRL12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null", "null=null");
        java.lang.String str3 = keyVal2.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal2.value("null=hi!");
        keyVal2.value = "hi!=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=null" + "'", str3.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.toString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!=null" + "'", str3.equals("hi!=null"));
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean7 = request0.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.followRedirects = false;
        boolean boolean13 = request8.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection14 = request8.data();
        request0.data = keyValCollection14;
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = keyVal18.key("null=null");
        org.jsoup.helper.HttpConnection.Request request21 = request0.data((org.jsoup.Connection.KeyVal) keyVal20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request0.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document44 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Request request4 = null;
        httpConnection0.req = request4;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        boolean boolean10 = request6.hasCookie("null=null");
        org.jsoup.Connection connection11 = httpConnection0.request((org.jsoup.Connection.Request) request6);
        java.net.URL uRL12 = request6.url();
        int int13 = request6.maxBodySize();
        boolean boolean15 = request6.hasHeader("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1048576 + "'", int13 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        int int8 = response1.statusCode();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response11 = response1.header("", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request14.headers();
        request14.followRedirects = false;
        boolean boolean19 = request14.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request21 = request14.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry23 = request14.scanHeaders("null=null");
        org.jsoup.Connection.Request request25 = request14.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        boolean boolean28 = request26.ignoreHttpErrors();
        org.jsoup.Connection.Request request31 = request26.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.followRedirects = false;
        boolean boolean37 = request32.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request39 = request32.timeout((int) ' ');
        java.lang.String str41 = request39.cookie("hi!");
        java.lang.String str43 = request39.header("null=null");
        request39.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method47 = request46.method();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = request46.headers();
        request46.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser51 = request46.parser;
        request39.parser = parser51;
        org.jsoup.helper.HttpConnection.Request request53 = request26.parser(parser51);
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method55 = request54.method();
        org.jsoup.Connection.Request request56 = request53.method(method55);
        org.jsoup.Connection.Request request57 = request14.method(method55);
        org.jsoup.Connection.Request request58 = request0.method(method55);
        org.jsoup.Connection.Request request60 = request0.removeHeader("hi!=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + method47 + "' != '" + org.jsoup.Connection.Method.GET + "'", method47.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertTrue("'" + method55 + "' != '" + org.jsoup.Connection.Method.GET + "'", method55.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.Connection.Response response7 = response1.removeHeader("hi!");
        java.lang.Class<?> wildcardClass8 = response1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.Connection.Request request9 = httpConnection0.request();
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection.Request request12 = httpConnection10.request();
        org.jsoup.Connection.Request request13 = httpConnection10.req;
        org.jsoup.Connection connection15 = httpConnection10.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.ignoreHttpErrors();
        org.jsoup.Connection.Request request21 = request16.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        request22.followRedirects = false;
        boolean boolean27 = request22.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request29 = request22.timeout((int) ' ');
        java.lang.String str31 = request29.cookie("hi!");
        java.lang.String str33 = request29.header("null=null");
        request29.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = request36.headers();
        request36.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser41 = request36.parser;
        request29.parser = parser41;
        org.jsoup.helper.HttpConnection.Request request43 = request16.parser(parser41);
        org.jsoup.Connection connection44 = httpConnection10.request((org.jsoup.Connection.Request) request43);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection45 = request43.data;
        org.jsoup.Connection connection46 = httpConnection0.data(keyValCollection45);
        org.jsoup.helper.HttpConnection httpConnection47 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response48 = httpConnection47.response();
        org.jsoup.Connection connection50 = httpConnection47.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection51 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response52 = httpConnection51.response();
        httpConnection47.res = response52;
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = request54.headers();
        org.jsoup.Connection connection56 = httpConnection47.request((org.jsoup.Connection.Request) request54);
        org.jsoup.Connection connection57 = httpConnection0.request((org.jsoup.Connection.Request) request54);
        org.jsoup.helper.HttpConnection.Response response58 = null;
        org.jsoup.helper.HttpConnection.Response response59 = new org.jsoup.helper.HttpConnection.Response(response58);
        int int60 = response59.statusCode();
        int int61 = response59.numRedirects;
        java.lang.String str62 = response59.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry64 = response59.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap65 = response59.cookies();
        org.jsoup.Connection.Response response68 = response59.cookie("hi!=", "hi!");
        org.jsoup.Connection connection69 = httpConnection0.response(response68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection69);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection.Response response1 = null;
        org.jsoup.helper.HttpConnection.Response response2 = new org.jsoup.helper.HttpConnection.Response(response1);
        int int3 = response2.statusCode();
        int int4 = response2.numRedirects;
        response2.charset = "";
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        request7.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.ignoreHttpErrors();
        org.jsoup.Connection.Request request17 = request12.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.headers();
        request18.followRedirects = false;
        boolean boolean23 = request18.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request25 = request18.timeout((int) ' ');
        java.lang.String str27 = request25.cookie("hi!");
        java.lang.String str29 = request25.header("null=null");
        request25.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser37 = request32.parser;
        request25.parser = parser37;
        org.jsoup.helper.HttpConnection.Request request39 = request12.parser(parser37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        org.jsoup.Connection.Request request42 = request39.method(method41);
        org.jsoup.Connection.Request request43 = request7.method(method41);
        org.jsoup.Connection.Response response44 = response2.method(method41);
        org.jsoup.Connection.Request request45 = request0.method(method41);
        org.jsoup.Connection.Request request47 = request0.ignoreContentType(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        request6.ignoreHttpErrors = true;
        request6.followRedirects = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        request0.parser = parser30;
        boolean boolean33 = request0.ignoreHttpErrors;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Response response12 = httpConnection0.response();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection14 = httpConnection0.url("null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        java.lang.String str5 = keyVal0.toString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null=hi!" + "'", str5.equals("null=hi!"));
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.contentType = "null=hi!";
        java.lang.String str6 = response1.contentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null=hi!" + "'", str6.equals("null=hi!"));
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.parser.Parser parser13 = request0.parser;
        int int14 = request0.maxBodySizeBytes;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1048576 + "'", int14 == 1048576);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        request7.followRedirects = false;
        boolean boolean12 = request7.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request14 = request7.timeout((int) ' ');
        java.lang.String str16 = request14.cookie("hi!");
        java.lang.String str18 = request14.header("null=null");
        request14.followRedirects = false;
        org.jsoup.parser.Parser parser21 = request14.parser;
        org.jsoup.Connection connection22 = httpConnection0.parser(parser21);
        org.jsoup.Connection connection24 = httpConnection0.maxBodySize(1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (short) 100;
        org.jsoup.parser.Parser parser9 = request0.parser;
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        request10.followRedirects = false;
        boolean boolean15 = request10.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request17 = request10.timeout((int) ' ');
        java.lang.String str19 = request17.cookie("hi!");
        java.lang.String str21 = request17.header("null=null");
        request17.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request24.headers();
        request24.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser29 = request24.parser;
        request17.parser = parser29;
        org.jsoup.helper.HttpConnection.Request request31 = request0.parser(parser29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = request31.headers();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap32);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request4 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method5 = request4.method();
        boolean boolean6 = request4.ignoreHttpErrors();
        org.jsoup.Connection.Request request9 = request4.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        request10.followRedirects = false;
        boolean boolean15 = request10.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request17 = request10.timeout((int) ' ');
        java.lang.String str19 = request17.cookie("hi!");
        java.lang.String str21 = request17.header("null=null");
        request17.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request24.headers();
        request24.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser29 = request24.parser;
        request17.parser = parser29;
        org.jsoup.helper.HttpConnection.Request request31 = request4.parser(parser29);
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        org.jsoup.Connection.Request request34 = request31.method(method33);
        org.jsoup.Connection connection35 = httpConnection0.method(method33);
        org.jsoup.Connection connection37 = httpConnection0.userAgent("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.lang.String str10 = request7.header("hi!");
        org.jsoup.Connection.Request request12 = request7.ignoreContentType(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection6 = httpConnection0.userAgent("null=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection8 = httpConnection0.url("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        java.net.URL uRL7 = request0.url();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("null=null");
        org.jsoup.Connection.Request request11 = request0.followRedirects(true);
        boolean boolean12 = request0.ignoreContentType();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection5 = httpConnection0.userAgent("null=hi!");
        org.jsoup.Connection connection7 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection9 = httpConnection0.userAgent("hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.Connection.Response response7 = response1.removeHeader("hi!");
        java.lang.String str8 = response1.charset();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        int int8 = response1.statusCode();
        org.jsoup.Connection.Response response10 = response1.removeCookie("null=null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Too many redirects occurred trying to load URL null");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        org.jsoup.Connection.Response response8 = response1.header("null=null=hi!", "null=null=hi!");
        response1.executed = false;
        int int11 = response1.numRedirects;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.lang.String str3 = response1.contentType();
        int int4 = response1.statusCode();
        java.lang.String str6 = response1.getHeaderCaseInsensitive("null=null=null=hi!");
        java.net.URL uRL7 = response1.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal4.value("hi!=null");
        java.lang.String str7 = keyVal4.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=null=null=hi!" + "'", str7.equals("null=null=null=hi!"));
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        org.jsoup.Connection connection11 = httpConnection8.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection12 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response13 = httpConnection12.response();
        httpConnection8.res = response13;
        java.lang.String[] strArray17 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection18 = httpConnection8.data(strArray17);
        org.jsoup.Connection connection19 = httpConnection0.data(strArray17);
        org.jsoup.Connection connection22 = httpConnection0.header("null=hi!", "null=hi!");
        org.jsoup.Connection.Response response23 = httpConnection0.res;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection17 = httpConnection0.url(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request14.headers();
        request14.followRedirects = false;
        boolean boolean19 = request14.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request21 = request14.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry23 = request14.scanHeaders("null=null");
        org.jsoup.Connection.Request request25 = request14.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        boolean boolean28 = request26.ignoreHttpErrors();
        org.jsoup.Connection.Request request31 = request26.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.followRedirects = false;
        boolean boolean37 = request32.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request39 = request32.timeout((int) ' ');
        java.lang.String str41 = request39.cookie("hi!");
        java.lang.String str43 = request39.header("null=null");
        request39.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method47 = request46.method();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = request46.headers();
        request46.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser51 = request46.parser;
        request39.parser = parser51;
        org.jsoup.helper.HttpConnection.Request request53 = request26.parser(parser51);
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method55 = request54.method();
        org.jsoup.Connection.Request request56 = request53.method(method55);
        org.jsoup.Connection.Request request57 = request14.method(method55);
        org.jsoup.Connection.Request request58 = request0.method(method55);
        request0.ignoreContentType = false;
        boolean boolean62 = request0.hasCookie("hi!=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + method47 + "' != '" + org.jsoup.Connection.Method.GET + "'", method47.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertTrue("'" + method55 + "' != '" + org.jsoup.Connection.Method.GET + "'", method55.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection9 = httpConnection7.followRedirects(false);
        org.jsoup.Connection connection11 = httpConnection7.referrer("");
        org.jsoup.Connection.Response response12 = httpConnection7.response();
        org.jsoup.Connection connection13 = httpConnection0.response(response12);
        org.jsoup.Connection connection15 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.ignoreHttpErrors();
        org.jsoup.Connection.Request request21 = request16.cookie("hi!", "");
        java.lang.String str23 = request16.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.lang.String str30 = request24.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request33 = request24.method(method32);
        org.jsoup.Connection.Request request34 = request16.method(method32);
        org.jsoup.Connection connection35 = httpConnection0.method(method32);
        java.net.URL uRL36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection37 = httpConnection0.url(uRL36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        boolean boolean9 = request7.followRedirects();
        org.jsoup.Connection.Request request11 = request7.ignoreHttpErrors(false);
        org.jsoup.Connection.Request request14 = request7.cookie("null=null=hi!", "null=null=null=hi!=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.maxBodySize((int) (short) 1);
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        boolean boolean7 = request5.ignoreHttpErrors();
        org.jsoup.Connection.Request request10 = request5.cookie("hi!", "");
        boolean boolean11 = request5.ignoreContentType;
        org.jsoup.Connection.Request request14 = request5.cookie("null=hi!", "hi!");
        java.lang.String str16 = request5.getHeaderCaseInsensitive("");
        java.lang.String str18 = request5.cookie("");
        request5.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request5.cookies();
        request5.ignoreContentType = true;
        org.jsoup.Connection connection24 = httpConnection0.request((org.jsoup.Connection.Request) request5);
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.followRedirects = false;
        boolean boolean30 = request25.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request32 = request25.timeout((int) ' ');
        boolean boolean33 = request32.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = request35.headers();
        int int38 = request35.timeout();
        org.jsoup.parser.Parser parser39 = request35.parser();
        org.jsoup.helper.HttpConnection.Request request40 = request32.parser(parser39);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request40.cookies();
        org.jsoup.Connection connection42 = httpConnection0.cookies(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3000 + "'", int38 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Response response7 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.followRedirects = false;
        java.net.URL uRL13 = request8.url();
        org.jsoup.Connection.Request request15 = request8.removeCookie("hi!");
        org.jsoup.Connection.Request request17 = request8.ignoreHttpErrors(true);
        httpConnection0.req = request17;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection5 = httpConnection0.ignoreContentType(true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request3);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("", "null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int19 = request18.timeout();
        boolean boolean20 = request18.followRedirects;
        org.jsoup.Connection.Method method21 = request18.method();
        org.jsoup.Connection.Method method22 = request18.method();
        java.lang.Class<?> wildcardClass23 = method22.getClass();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry20 = request18.scanHeaders("");
        boolean boolean21 = request18.followRedirects;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request18.cookies();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection23 = request18.data;
        boolean boolean25 = request18.hasCookie("null=null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        java.net.URL uRL7 = request0.url();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("null=null");
        org.jsoup.Connection.Request request11 = request0.followRedirects(true);
        int int12 = request0.maxBodySizeBytes;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.Connection connection32 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request33.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request33.headers();
        org.jsoup.Connection.Method method37 = request33.method();
        org.jsoup.Connection connection38 = httpConnection0.method(method37);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        boolean boolean41 = request39.followRedirects;
        org.jsoup.Connection.Request request43 = request39.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request39.headers();
        boolean boolean45 = request39.ignoreContentType;
        request39.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = request39.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = request39.cookies();
        java.lang.String str51 = request39.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request53 = request39.timeout(0);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection54 = request39.data();
        org.jsoup.Connection connection55 = httpConnection0.data(keyValCollection54);
        org.jsoup.Connection connection57 = httpConnection0.maxBodySize((int) (byte) 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        int int22 = response1.numRedirects;
        org.jsoup.Connection.Method method23 = response1.method();
        int int24 = response1.statusCode;
        java.lang.String str25 = response1.contentType();
        java.net.HttpURLConnection httpURLConnection26 = null;
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request28 = null;
        org.jsoup.Connection connection29 = httpConnection27.request(request28);
        org.jsoup.helper.HttpConnection httpConnection30 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response31 = httpConnection30.response();
        org.jsoup.Connection.Request request32 = httpConnection30.request();
        org.jsoup.Connection connection33 = httpConnection27.request(request32);
        org.jsoup.Connection.Response response34 = httpConnection27.response();
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection26, response34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null=null=null=hi!" + "'", str25.equals("null=null=null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response34);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("hi!");
        java.lang.String str7 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.value("null=null");
        java.lang.String str10 = keyVal9.value();
        java.lang.String str11 = keyVal9.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null=null" + "'", str10.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null=null" + "'", str11.equals("null=null"));
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!=", "null=null");
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Request request4 = null;
        httpConnection0.req = request4;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        boolean boolean10 = request6.hasCookie("null=null");
        org.jsoup.Connection connection11 = httpConnection0.request((org.jsoup.Connection.Request) request6);
        java.net.URL uRL12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection13 = httpConnection0.url(uRL12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = '#';
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.Connection.Request request12 = request7.cookie("null=null=null=hi!", "hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.toString();
        keyVal0.value = "";
        keyVal0.value = "null=hi!";
        keyVal0.key = "null=null";
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.key("hi!");
        java.lang.String str10 = keyVal0.value();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null" + "'", str1.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null=hi!" + "'", str10.equals("null=hi!"));
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection8 = httpConnection0.ignoreContentType(true);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document9 = httpConnection0.post();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("hi!");
        java.lang.String str7 = keyVal0.key();
        keyVal0.value = "hi!=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response18 = response1.cookie("", "null=null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.lang.String str3 = response1.contentType();
        response1.numRedirects = 1;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = response1.hasHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request7.data();
        java.lang.String str12 = request7.header("hi!");
        org.jsoup.Connection.Request request15 = request7.header("null=null=hi!", "");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = request7.scanHeaders("null=null=null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request7.headers();
        java.lang.Class<?> wildcardClass19 = request7.getClass();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        java.lang.String str22 = response1.charset();
        org.jsoup.Connection.Method method23 = response1.method();
        boolean boolean24 = response1.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        boolean boolean5 = response1.executed;
        response1.executed = true;
        org.jsoup.Connection.Method method8 = response1.method();
        org.jsoup.Connection.Request request9 = response1.req;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray10 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request9);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request7.data();
        boolean boolean12 = request7.hasCookie("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean9 = request3.hasCookie("null=null");
        java.lang.String str11 = request3.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.request((org.jsoup.Connection.Request) request3);
        org.jsoup.Connection connection15 = httpConnection0.data("null=hi!", "");
        org.jsoup.Connection connection17 = httpConnection0.maxBodySize(32);
        org.jsoup.Connection.Request request18 = httpConnection0.request();
        org.jsoup.Connection connection20 = httpConnection0.followRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        boolean boolean4 = response1.hasCookie("");
        java.net.HttpURLConnection httpURLConnection5 = null;
        org.jsoup.helper.HttpConnection.Response response6 = null;
        org.jsoup.helper.HttpConnection.Response response7 = new org.jsoup.helper.HttpConnection.Response(response6);
        int int8 = response7.statusCode();
        int int9 = response7.numRedirects;
        java.lang.String str10 = response7.charset;
        java.net.URL uRL11 = response7.url();
        response7.charset = "hi!=null";
        org.jsoup.Connection.Response response16 = response7.cookie("null=null=hi!", "hi!=null");
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection5, (org.jsoup.Connection.Response) response7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.maxBodySizeBytes = (-1);
        java.lang.String str4 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Response response5 = null;
        org.jsoup.helper.HttpConnection.Response response6 = new org.jsoup.helper.HttpConnection.Response(response5);
        int int7 = response6.statusCode();
        int int8 = response6.numRedirects;
        java.lang.String str9 = response6.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = response6.scanHeaders("");
        java.net.URL uRL12 = response6.url();
        response6.statusCode = 10;
        response6.executed = true;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = response6.cookies();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response18 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=", "null=null=null=hi!");
        java.lang.String str3 = keyVal2.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=" + "'", str3.equals("null="));
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        request0.followRedirects = false;
        boolean boolean17 = request0.ignoreContentType();
        org.jsoup.helper.HttpConnection httpConnection18 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response19 = httpConnection18.response();
        org.jsoup.Connection connection21 = httpConnection18.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection25 = httpConnection22.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        int int29 = request26.timeout();
        org.jsoup.parser.Parser parser30 = request26.parser();
        org.jsoup.Connection connection31 = httpConnection22.parser(parser30);
        org.jsoup.Connection connection32 = httpConnection18.parser(parser30);
        org.jsoup.helper.HttpConnection.Request request33 = request0.parser(parser30);
        boolean boolean34 = request0.followRedirects;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3000 + "'", int29 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }
}

