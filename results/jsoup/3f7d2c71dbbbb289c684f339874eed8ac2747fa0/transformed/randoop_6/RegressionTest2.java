import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        request6.ignoreHttpErrors = true;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry19 = request6.scanHeaders("null=null");
        java.lang.String str20 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.followRedirects();
        org.jsoup.helper.HttpConnection.Request request10 = request7.timeout((int) '4');
        int int11 = request7.timeout();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.followRedirects;
        org.jsoup.Connection.Request request20 = request16.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request16.cookies();
        boolean boolean23 = request16.hasCookie("null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry25 = request16.scanHeaders("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection26 = request16.data;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection27 = request16.data();
        request0.data = keyValCollection27;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry30 = request0.scanHeaders("null=null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry30);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        org.jsoup.Connection.Request request16 = request0.removeCookie("");
        java.net.URL uRL17 = request0.url();
        org.jsoup.Connection.Method method18 = request0.method();
        boolean boolean20 = request0.hasCookie("hi!=null=hi!=null");
        request0.maxBodySizeBytes = 100;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL17);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry13 = request7.scanHeaders("");
        boolean boolean15 = request7.hasCookie("hi!");
        boolean boolean16 = request7.ignoreContentType();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request0.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection9 = request0.data();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request0.scanHeaders("null=hi!");
        request0.timeoutMilliseconds = (byte) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request0.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        response1.statusCode = 10;
        response1.executed = true;
        java.util.Map<java.lang.String, java.lang.String> strMap12 = response1.cookies();
        response1.contentType = "null=null=";
        java.lang.String str15 = response1.statusMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response18 = response1.header("", "null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.statusMessage();
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.Connection.Method method9 = request3.method();
        int int10 = request3.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        boolean boolean18 = request11.followRedirects();
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        org.jsoup.Connection.Request request21 = request11.method(method20);
        org.jsoup.Connection.Request request22 = request3.method(method20);
        org.jsoup.Connection.Response response23 = response1.method(method20);
        java.nio.ByteBuffer byteBuffer24 = null;
        response1.byteData = byteBuffer24;
        org.jsoup.Connection.Response response27 = response1.removeHeader("null=");
        java.util.Map<java.lang.String, java.lang.String> strMap28 = response1.headers();
        org.jsoup.Connection.Response response30 = response1.removeCookie("null=hi!");
        boolean boolean31 = response1.executed;
        org.jsoup.Connection.Response response33 = response1.removeCookie("null=null=hi!");
        org.jsoup.Connection.Response response35 = response1.removeCookie("hi!=null=hi!=null");
        org.jsoup.Connection.Response response37 = response1.removeCookie("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1048576 + "'", int10 == 1048576);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response37);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        boolean boolean10 = request7.ignoreContentType;
        java.net.URL uRL11 = request7.url();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.cookies();
        java.lang.String str14 = request7.header("null=null=");
        request7.ignoreContentType = true;
        java.net.URL uRL17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request18 = request7.url(uRL17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        java.lang.String str9 = response8.contentType();
        java.lang.String str10 = response8.contentType();
        int int11 = response8.statusCode();
        httpConnection0.res = response8;
        boolean boolean14 = response8.hasCookie("");
        java.lang.String str15 = response8.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection35 = request33.data;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request33.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = request33.cookies();
        int int38 = request33.timeout();
        java.lang.String str40 = request33.cookie("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3000 + "'", int38 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Request request12 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser8 = request0.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        boolean boolean11 = request0.ignoreHttpErrors();
        request0.ignoreHttpErrors = true;
        boolean boolean14 = request0.followRedirects();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        int int3 = request0.timeout();
        boolean boolean4 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        boolean boolean7 = request5.followRedirects;
        org.jsoup.Connection.Request request9 = request5.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request5.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request14 = request5.data((org.jsoup.Connection.KeyVal) keyVal13);
        org.jsoup.helper.HttpConnection httpConnection15 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response16 = httpConnection15.response();
        org.jsoup.Connection.Request request17 = httpConnection15.request();
        org.jsoup.Connection.Request request18 = httpConnection15.req;
        org.jsoup.Connection connection20 = httpConnection15.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        boolean boolean23 = request21.ignoreHttpErrors();
        org.jsoup.Connection.Request request26 = request21.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method28 = request27.method();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request27.headers();
        request27.followRedirects = false;
        boolean boolean32 = request27.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request34 = request27.timeout((int) ' ');
        java.lang.String str36 = request34.cookie("hi!");
        java.lang.String str38 = request34.header("null=null");
        request34.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = request41.headers();
        request41.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser46 = request41.parser;
        request34.parser = parser46;
        org.jsoup.helper.HttpConnection.Request request48 = request21.parser(parser46);
        org.jsoup.Connection connection49 = httpConnection15.request((org.jsoup.Connection.Request) request48);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection50 = request48.data;
        request5.data = keyValCollection50;
        request0.data = keyValCollection50;
        org.jsoup.Connection.Method method53 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertTrue("'" + method28 + "' != '" + org.jsoup.Connection.Method.GET + "'", method28.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection50);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.lang.String str17 = response1.cookie("null=null=hi!");
        boolean boolean19 = response1.hasHeader("null=");
        java.lang.String str21 = response1.header("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = response1.headers();
        java.lang.String str23 = response1.statusMessage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        java.lang.String str6 = keyVal0.value();
        keyVal0.key = "null=";
        java.lang.String str9 = keyVal0.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=" + "'", str9.equals("null="));
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "null=null");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("hi!=");
        boolean boolean12 = request0.followRedirects();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request0.cookies();
        org.jsoup.Connection.Request request15 = request0.removeCookie("null=null=");
        java.lang.String str16 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null=hi!=null=null" + "'", str16.equals("null=hi!=null=null"));
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeUrl("null=hi!=null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=hi!=null=null" + "'", str1.equals("null=hi!=null=null"));
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.charset;
        org.jsoup.Connection.Response response8 = response1.header("null=", "hi!");
        response1.statusCode = 'a';
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser8 = request0.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        boolean boolean11 = request0.ignoreHttpErrors();
        request0.ignoreHttpErrors = true;
        org.jsoup.Connection.Request request16 = request0.header("null=hi!", "null=hi!=null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        java.lang.String str6 = response1.getHeaderCaseInsensitive("null=null");
        java.lang.String str7 = response1.contentType;
        int int8 = response1.numRedirects;
        java.net.URL uRL9 = response1.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.Connection.Response response4 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Response response5 = null;
        org.jsoup.helper.HttpConnection.Response response6 = new org.jsoup.helper.HttpConnection.Response(response5);
        int int7 = response6.statusCode();
        int int8 = response6.numRedirects;
        java.lang.String str9 = response6.charset;
        boolean boolean10 = response6.executed;
        response6.executed = true;
        response6.contentType = "hi!=";
        java.lang.String str16 = response6.cookie("hi!");
        httpConnection0.res = response6;
        org.jsoup.helper.HttpConnection.Response response18 = null;
        org.jsoup.helper.HttpConnection.Response response19 = new org.jsoup.helper.HttpConnection.Response(response18);
        int int20 = response19.numRedirects;
        response19.charset = "hi!";
        org.jsoup.Connection connection23 = httpConnection0.response((org.jsoup.Connection.Response) response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request9 = request0.timeout((int) (byte) 0);
        java.lang.String str11 = request0.header("");
        request0.maxBodySizeBytes = 100;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        org.jsoup.parser.Parser parser6 = null;
        request0.parser = parser6;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection.Response response1 = null;
        org.jsoup.helper.HttpConnection.Response response2 = new org.jsoup.helper.HttpConnection.Response(response1);
        int int3 = response2.statusCode();
        int int4 = response2.numRedirects;
        response2.charset = "";
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        request7.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.ignoreHttpErrors();
        org.jsoup.Connection.Request request17 = request12.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.headers();
        request18.followRedirects = false;
        boolean boolean23 = request18.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request25 = request18.timeout((int) ' ');
        java.lang.String str27 = request25.cookie("hi!");
        java.lang.String str29 = request25.header("null=null");
        request25.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser37 = request32.parser;
        request25.parser = parser37;
        org.jsoup.helper.HttpConnection.Request request39 = request12.parser(parser37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        org.jsoup.Connection.Request request42 = request39.method(method41);
        org.jsoup.Connection.Request request43 = request7.method(method41);
        org.jsoup.Connection.Response response44 = response2.method(method41);
        org.jsoup.Connection.Request request45 = request0.method(method41);
        request0.ignoreContentType = true;
        boolean boolean49 = request0.hasCookie("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.Connection connection7 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection10 = httpConnection0.cookie("null=null", "null=null=null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection connection15 = httpConnection0.cookie("hi!", "null=null=null=hi!=hi!");
        org.jsoup.Connection connection17 = httpConnection0.referrer("hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        org.jsoup.Connection.Request request6 = response1.req;
        response1.charset = "null=hi!=null=null";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request6);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        boolean boolean28 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        org.jsoup.Connection connection32 = httpConnection29.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection36 = httpConnection33.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        int int40 = request37.timeout();
        org.jsoup.parser.Parser parser41 = request37.parser();
        org.jsoup.Connection connection42 = httpConnection33.parser(parser41);
        org.jsoup.Connection connection43 = httpConnection29.parser(parser41);
        org.jsoup.helper.HttpConnection.Request request44 = request0.parser(parser41);
        boolean boolean46 = request44.hasCookie("hi!");
        java.lang.String str48 = request44.header("hi!=null");
        java.lang.String str49 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request44);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "hi!=" + "'", str49.equals("hi!="));
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection8 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response10 = httpConnection9.response();
        org.jsoup.Connection connection12 = httpConnection9.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection13 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection16 = httpConnection13.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        int int20 = request17.timeout();
        org.jsoup.parser.Parser parser21 = request17.parser();
        org.jsoup.Connection connection22 = httpConnection13.parser(parser21);
        org.jsoup.Connection connection23 = httpConnection9.parser(parser21);
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.ignoreHttpErrors();
        org.jsoup.Connection.Request request29 = request24.cookie("hi!", "");
        boolean boolean30 = request24.ignoreContentType;
        org.jsoup.Connection.Request request33 = request24.cookie("null=hi!", "hi!");
        java.lang.String str35 = request24.getHeaderCaseInsensitive("");
        java.lang.String str37 = request24.cookie("");
        request24.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap40 = request24.cookies();
        org.jsoup.Connection connection41 = httpConnection9.data(strMap40);
        org.jsoup.Connection connection42 = httpConnection0.data(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3000 + "'", int20 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        boolean boolean9 = request0.hasHeader("null=hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=null");
        org.jsoup.Connection.Request request13 = request0.ignoreContentType(false);
        request0.timeoutMilliseconds = (short) 0;
        org.jsoup.parser.Parser parser16 = request0.parser;
        org.jsoup.helper.HttpConnection httpConnection17 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response18 = httpConnection17.response();
        org.jsoup.Connection connection20 = httpConnection17.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response22 = httpConnection21.response();
        httpConnection17.res = response22;
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request24.headers();
        org.jsoup.Connection connection26 = httpConnection17.request((org.jsoup.Connection.Request) request24);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry28 = request24.scanHeaders("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal29.key = "hi!";
        java.lang.String str32 = keyVal29.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = keyVal29.key("hi!");
        java.lang.String str35 = keyVal29.value();
        keyVal29.key = "null=";
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = keyVal29.value("null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request40 = request24.data((org.jsoup.Connection.KeyVal) keyVal29);
        org.jsoup.helper.HttpConnection.Request request41 = request0.data((org.jsoup.Connection.KeyVal) keyVal29);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int19 = request18.timeout();
        boolean boolean20 = request18.followRedirects;
        org.jsoup.Connection.Method method21 = request18.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request18.headers();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection23 = request18.data();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection23);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(1048576);
        boolean boolean5 = request4.followRedirects;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request0.followRedirects();
        org.jsoup.Connection.Request request10 = request0.removeHeader("null=null=null=hi!");
        org.jsoup.Connection.Request request12 = request0.ignoreContentType(false);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection13 = request0.data;
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request0.headers();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry16 = request0.scanHeaders("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry16);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("null=null");
        boolean boolean10 = request0.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = request0.cookies();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection12 = request0.data();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection12);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response10 = httpConnection9.response();
        org.jsoup.Connection connection12 = httpConnection9.followRedirects(false);
        org.jsoup.Connection connection14 = httpConnection9.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request15.headers();
        request15.followRedirects = false;
        boolean boolean20 = request15.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request22 = request15.timeout((int) ' ');
        boolean boolean23 = request22.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal26.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal32 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = keyVal32.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal35.key = "hi!";
        java.lang.String str38 = keyVal35.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal40 = keyVal35.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal44.key = "hi!";
        java.lang.String str47 = keyVal44.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str49 = keyVal48.toString();
        keyVal48.value = "";
        keyVal48.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal54 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal54.key = "hi!";
        java.lang.String str57 = keyVal54.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal59 = keyVal54.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal60 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str61 = keyVal60.key();
        org.jsoup.Connection.KeyVal[] keyValArray62 = new org.jsoup.Connection.KeyVal[] { keyVal26, keyVal29, keyVal34, keyVal35, keyVal43, keyVal44, keyVal48, keyVal54, keyVal60 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList63 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList63, keyValArray62);
        request22.data = keyValList63;
        org.jsoup.Connection connection66 = httpConnection9.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList63);
        request0.data = keyValList63;
        org.jsoup.Connection.Request request69 = request0.removeCookie("hi!=null");
        org.jsoup.Connection.Request request71 = request0.followRedirects(false);
        boolean boolean72 = request0.ignoreHttpErrors();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "hi!" + "'", str47.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null=null" + "'", str49.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "hi!" + "'", str57.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!";
        java.lang.String str5 = response1.contentType();
        org.jsoup.Connection.Response response7 = response1.removeHeader("hi!=null");
        response1.executed = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("null=null=null=hi!", "hi!");
        java.lang.String str3 = keyVal2.toString();
        java.lang.String str4 = keyVal2.toString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=null=null=hi!=hi!" + "'", str3.equals("null=null=null=hi!=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null=null=null=hi!=hi!" + "'", str4.equals("null=null=null=hi!=hi!"));
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request7.data();
        java.lang.String str12 = request7.header("hi!");
        boolean boolean13 = request7.ignoreContentType;
        org.jsoup.Connection.Request request15 = request7.followRedirects(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request9 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        request9.timeoutMilliseconds = 0;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal5.key("null=hi!");
        java.lang.String str8 = keyVal5.value;
        java.lang.String str9 = keyVal5.key();
        java.lang.String str10 = keyVal5.value;
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal5.value("");
        java.lang.String str13 = keyVal5.toString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=hi!" + "'", str9.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null=hi!=" + "'", str13.equals("null=hi!="));
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection23 = httpConnection21.followRedirects(false);
        org.jsoup.Connection connection25 = httpConnection21.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection26 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response27 = httpConnection26.response();
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response29 = httpConnection28.response();
        org.jsoup.Connection connection31 = httpConnection28.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response33 = httpConnection32.response();
        httpConnection28.res = response33;
        httpConnection26.res = response33;
        org.jsoup.Connection connection36 = httpConnection21.response(response33);
        httpConnection0.res = response33;
        org.jsoup.helper.HttpConnection.Request request38 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method39 = request38.method();
        boolean boolean40 = request38.followRedirects;
        org.jsoup.Connection.Request request42 = request38.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = request38.headers();
        request38.timeoutMilliseconds = 307;
        request38.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = request38.cookies();
        org.jsoup.Connection connection49 = httpConnection0.cookies(strMap48);
        org.jsoup.Connection connection51 = httpConnection0.ignoreContentType(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method39 + "' != '" + org.jsoup.Connection.Method.GET + "'", method39.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal11.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = keyVal17.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal20.key = "hi!";
        java.lang.String str23 = keyVal20.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = keyVal20.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal29.key = "hi!";
        java.lang.String str32 = keyVal29.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str34 = keyVal33.toString();
        keyVal33.value = "";
        keyVal33.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal39.key = "hi!";
        java.lang.String str42 = keyVal39.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = keyVal39.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str46 = keyVal45.key();
        org.jsoup.Connection.KeyVal[] keyValArray47 = new org.jsoup.Connection.KeyVal[] { keyVal11, keyVal14, keyVal19, keyVal20, keyVal28, keyVal29, keyVal33, keyVal39, keyVal45 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList48 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList48, keyValArray47);
        request7.data = keyValList48;
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = request51.headers();
        request51.followRedirects = false;
        java.lang.String str57 = request51.cookie("");
        boolean boolean58 = request51.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method60 = request59.method();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = request59.headers();
        request59.followRedirects = false;
        boolean boolean64 = request59.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection65 = request59.data();
        request51.data = keyValCollection65;
        request7.data = keyValCollection65;
        org.jsoup.Connection.Request request70 = request7.cookie("hi!=null", "null=null=hi!");
        int int71 = request7.maxBodySize();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = request7.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null=null" + "'", str34.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "hi!" + "'", str42.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1048576 + "'", int71 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap72);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.net.URL uRL3 = response1.url();
        response1.contentType = "null=null";
        java.nio.ByteBuffer byteBuffer6 = null;
        response1.byteData = byteBuffer6;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        org.jsoup.Connection.Response response5 = response1.header("null=null=null=hi!", "hi!");
        response1.contentType = "null=hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.followRedirects();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry10 = request7.scanHeaders("");
        java.lang.String str12 = request7.cookie("null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal13.key = "hi!";
        java.lang.String str16 = keyVal13.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = keyVal13.key("hi!");
        java.lang.String str19 = keyVal13.value();
        keyVal13.key = "null=";
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = keyVal13.value("null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request24 = request7.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int25 = request24.timeout();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        org.jsoup.Connection.Request request16 = request0.removeCookie("");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection17 = request0.data();
        org.jsoup.Connection.Request request20 = request0.header("null=hi!", "");
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response22 = httpConnection21.response();
        org.jsoup.Connection connection24 = httpConnection21.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection25 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response26 = httpConnection25.response();
        httpConnection21.res = response26;
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request28.headers();
        request28.followRedirects = false;
        boolean boolean33 = request28.ignoreHttpErrors;
        org.jsoup.Connection.Method method34 = request28.method();
        org.jsoup.Connection connection35 = httpConnection21.method(method34);
        org.jsoup.Connection.Request request36 = request0.method(method34);
        boolean boolean37 = request0.ignoreHttpErrors;
        boolean boolean38 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection.KeyVal keyVal41 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!=", "hi!=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = keyVal41.key("null=null=hi!");
        java.lang.String str44 = keyVal41.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal46 = keyVal41.value("null=null");
        org.jsoup.helper.HttpConnection.Request request47 = request0.data((org.jsoup.Connection.KeyVal) keyVal46);
        org.jsoup.Connection.Request request50 = request47.cookie("hi!", "");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "hi!=null" + "'", str44.equals("hi!=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.followRedirects = false;
        java.lang.String str10 = request0.header("null=null=null=hi!");
        int int11 = request0.timeoutMilliseconds;
        java.lang.String str13 = request0.cookie("null=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3000 + "'", int11 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.net.URL uRL9 = request0.url();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request0.scanHeaders("hi!");
        java.lang.String str12 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        request0.ignoreContentType = true;
        org.jsoup.Connection.Request request17 = request0.cookie("null=hi!", "null=null=null=hi!");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry19 = request0.scanHeaders("null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry19);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        java.lang.String str3 = keyVal2.key();
        java.lang.String str4 = keyVal2.key();
        java.lang.String str5 = keyVal2.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!" + "'", str4.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request0.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection9 = request0.data();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request0.scanHeaders("null=hi!");
        request0.timeoutMilliseconds = (byte) -1;
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        org.jsoup.Connection connection17 = httpConnection14.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request18 = httpConnection14.req;
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request19.headers();
        request19.followRedirects = false;
        boolean boolean24 = request19.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request26 = request19.timeout((int) ' ');
        java.lang.String str28 = request26.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection29 = request26.data();
        org.jsoup.Connection connection30 = httpConnection14.data(keyValCollection29);
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        boolean boolean33 = request31.followRedirects;
        org.jsoup.Connection.Request request35 = request31.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request31.headers();
        request31.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser39 = request31.parser();
        org.jsoup.Connection connection40 = httpConnection14.parser(parser39);
        request0.parser = parser39;
        org.jsoup.parser.Parser parser42 = request0.parser();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser42);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection6 = httpConnection0.header("null=null=null=hi!", "");
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null=hi!", "null=hi!");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        org.jsoup.Connection.Request request13 = request10.ignoreContentType(false);
        org.jsoup.Connection.Request request15 = request10.removeCookie("");
        int int16 = request10.maxBodySize();
        org.jsoup.Connection.Request request18 = request10.followRedirects(false);
        java.lang.String str20 = request10.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request21.headers();
        request21.followRedirects = false;
        boolean boolean26 = request21.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request28 = request21.timeout((int) ' ');
        java.lang.String str30 = request28.cookie("hi!");
        java.lang.String str32 = request28.header("null=null");
        request28.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = request35.headers();
        request35.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser40 = request35.parser;
        request28.parser = parser40;
        request10.parser = parser40;
        int int43 = request10.timeoutMilliseconds;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request10.headers();
        org.jsoup.Connection connection45 = httpConnection0.cookies(strMap44);
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method47 = request46.method();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = request46.headers();
        request46.followRedirects = false;
        boolean boolean51 = request46.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request53 = request46.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry55 = request46.scanHeaders("null=null");
        org.jsoup.Connection.Request request57 = request46.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request58 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method59 = request58.method();
        boolean boolean60 = request58.ignoreHttpErrors();
        org.jsoup.Connection.Request request63 = request58.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request64 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method65 = request64.method();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = request64.headers();
        request64.followRedirects = false;
        boolean boolean69 = request64.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request71 = request64.timeout((int) ' ');
        java.lang.String str73 = request71.cookie("hi!");
        java.lang.String str75 = request71.header("null=null");
        request71.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request78 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method79 = request78.method();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = request78.headers();
        request78.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser83 = request78.parser;
        request71.parser = parser83;
        org.jsoup.helper.HttpConnection.Request request85 = request58.parser(parser83);
        org.jsoup.helper.HttpConnection.Request request86 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method87 = request86.method();
        org.jsoup.Connection.Request request88 = request85.method(method87);
        org.jsoup.Connection.Request request89 = request46.method(method87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = request46.cookies();
        org.jsoup.Connection connection91 = httpConnection0.cookies(strMap90);
        org.jsoup.Connection connection94 = httpConnection0.data("null=null=null=hi!=hi!", "null=null=null=hi!=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1048576 + "'", int16 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3000 + "'", int43 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        org.junit.Assert.assertTrue("'" + method47 + "' != '" + org.jsoup.Connection.Method.GET + "'", method47.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertTrue("'" + method65 + "' != '" + org.jsoup.Connection.Method.GET + "'", method65.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + method79 + "' != '" + org.jsoup.Connection.Method.GET + "'", method79.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request85);
        org.junit.Assert.assertTrue("'" + method87 + "' != '" + org.jsoup.Connection.Method.GET + "'", method87.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection94);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.headers();
        request17.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser25 = request17.parser();
        org.jsoup.Connection connection26 = httpConnection0.parser(parser25);
        org.jsoup.Connection connection29 = httpConnection0.data("null=null", "null=null");
        org.jsoup.Connection connection31 = httpConnection0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection35 = httpConnection32.data("hi!", "hi!");
        org.jsoup.Connection.Response response36 = httpConnection32.res;
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        boolean boolean41 = request39.followRedirects;
        org.jsoup.Connection.Request request43 = request39.followRedirects(true);
        java.lang.String str45 = request39.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method47 = request46.method();
        org.jsoup.Connection.Request request48 = request39.method(method47);
        org.jsoup.Connection.Request request49 = request37.method(method47);
        org.jsoup.parser.Parser parser50 = request37.parser;
        org.jsoup.Connection connection51 = httpConnection32.parser(parser50);
        org.jsoup.Connection connection52 = httpConnection0.parser(parser50);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection55 = httpConnection0.header("", "null=null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + method47 + "' != '" + org.jsoup.Connection.Method.GET + "'", method47.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        org.jsoup.helper.HttpConnection.Request request4 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method5 = request4.method();
        boolean boolean6 = request4.followRedirects;
        org.jsoup.Connection.Request request8 = request4.followRedirects(true);
        java.lang.String str10 = request4.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        org.jsoup.Connection.Request request13 = request4.method(method12);
        org.jsoup.Connection.Request request14 = request2.method(method12);
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str16 = keyVal15.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = keyVal15.value("");
        java.lang.String str19 = keyVal15.value();
        org.jsoup.helper.HttpConnection.Request request20 = request2.data((org.jsoup.Connection.KeyVal) keyVal15);
        int int21 = request20.timeout();
        response1.req = request20;
        int int23 = response1.statusCode;
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null=null" + "'", str16.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3000 + "'", int21 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.Connection.Method method12 = request6.method();
        java.net.URL uRL13 = request6.url();
        boolean boolean14 = request6.followRedirects;
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request6.headers();
        org.jsoup.Connection connection16 = httpConnection0.data(strMap15);
        org.jsoup.Connection connection18 = httpConnection0.ignoreHttpErrors(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        org.jsoup.Connection.Request request10 = request0.removeCookie("hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        org.jsoup.Connection.Response response8 = response1.header("null=null=hi!", "null=null=hi!");
        response1.executed = false;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response12 = response1.removeHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        boolean boolean6 = request0.hasHeader("hi!=null");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request0.headers();
        org.jsoup.Connection.Request request10 = request0.header("null=null", "hi!=");
        org.jsoup.Connection.Request request13 = request0.header("null=null=", "null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        boolean boolean11 = response1.hasCookie("hi!=");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.followRedirects;
        org.jsoup.Connection.Request request16 = request12.followRedirects(true);
        java.lang.String str18 = request12.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        org.jsoup.Connection.Request request21 = request12.method(method20);
        org.jsoup.Connection.Response response22 = response1.method(method20);
        response1.numRedirects = 100;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        org.jsoup.Connection.Request request10 = request0.method(method9);
        boolean boolean11 = request0.followRedirects();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request0.cookies();
        org.jsoup.Connection.Request request14 = request0.followRedirects(false);
        boolean boolean15 = request0.ignoreHttpErrors();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=null");
        org.jsoup.Connection.Request request13 = request7.ignoreContentType(false);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection14 = request7.data;
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        boolean boolean17 = request15.ignoreHttpErrors();
        org.jsoup.Connection.Request request20 = request15.cookie("hi!", "");
        boolean boolean21 = request15.ignoreContentType;
        org.jsoup.Connection.Request request24 = request15.cookie("null=hi!", "hi!");
        java.lang.String str26 = request15.getHeaderCaseInsensitive("");
        java.lang.String str28 = request15.cookie("");
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method30 = request29.method();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = request29.headers();
        request29.followRedirects = false;
        boolean boolean34 = request29.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request36 = request29.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry38 = request29.scanHeaders("null=null");
        org.jsoup.Connection.Request request40 = request29.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        boolean boolean43 = request41.ignoreHttpErrors();
        org.jsoup.Connection.Request request46 = request41.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = request47.headers();
        request47.followRedirects = false;
        boolean boolean52 = request47.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request54 = request47.timeout((int) ' ');
        java.lang.String str56 = request54.cookie("hi!");
        java.lang.String str58 = request54.header("null=null");
        request54.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method62 = request61.method();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = request61.headers();
        request61.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser66 = request61.parser;
        request54.parser = parser66;
        org.jsoup.helper.HttpConnection.Request request68 = request41.parser(parser66);
        org.jsoup.helper.HttpConnection.Request request69 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method70 = request69.method();
        org.jsoup.Connection.Request request71 = request68.method(method70);
        org.jsoup.Connection.Request request72 = request29.method(method70);
        org.jsoup.Connection.Request request73 = request15.method(method70);
        org.jsoup.Connection.Request request74 = request7.method(method70);
        java.net.URL uRL75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request76 = request7.url(uRL75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + method62 + "' != '" + org.jsoup.Connection.Method.GET + "'", method62.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertTrue("'" + method70 + "' != '" + org.jsoup.Connection.Method.GET + "'", method70.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request74);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection.Response response1 = null;
        org.jsoup.helper.HttpConnection.Response response2 = new org.jsoup.helper.HttpConnection.Response(response1);
        int int3 = response2.statusCode();
        int int4 = response2.numRedirects;
        response2.charset = "";
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        request7.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.ignoreHttpErrors();
        org.jsoup.Connection.Request request17 = request12.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.headers();
        request18.followRedirects = false;
        boolean boolean23 = request18.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request25 = request18.timeout((int) ' ');
        java.lang.String str27 = request25.cookie("hi!");
        java.lang.String str29 = request25.header("null=null");
        request25.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser37 = request32.parser;
        request25.parser = parser37;
        org.jsoup.helper.HttpConnection.Request request39 = request12.parser(parser37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        org.jsoup.Connection.Request request42 = request39.method(method41);
        org.jsoup.Connection.Request request43 = request7.method(method41);
        org.jsoup.Connection.Response response44 = response2.method(method41);
        org.jsoup.Connection.Request request45 = request0.method(method41);
        request0.ignoreContentType = true;
        org.jsoup.helper.HttpConnection.Request request48 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method49 = request48.method();
        org.jsoup.Connection.Request request51 = request48.ignoreContentType(false);
        org.jsoup.Connection.Request request53 = request48.removeCookie("");
        int int54 = request48.maxBodySize();
        org.jsoup.Connection.Request request56 = request48.followRedirects(false);
        java.lang.String str58 = request48.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.Connection.Method method59 = request48.method();
        org.jsoup.Connection.Request request60 = request0.method(method59);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = request0.cookies();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry63 = request0.scanHeaders("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1048576 + "'", int54 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry63);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        java.lang.String str22 = response1.statusMessage;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser5 = request0.parser;
        org.jsoup.Connection.Request request7 = request0.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        org.jsoup.parser.Parser parser10 = request0.parser();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser10);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection1 = org.jsoup.helper.HttpConnection.connect("null=hi!=null=null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=hi!=null=null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=hi!");
        org.jsoup.Connection.Request request13 = request0.maxBodySize(307);
        request0.ignoreContentType = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.parser.Parser parser3 = null;
        org.jsoup.Connection connection4 = httpConnection0.parser(parser3);
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request6.scanHeaders("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request6.headers();
        org.jsoup.Connection connection13 = httpConnection0.data(strMap12);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response14 = httpConnection0.execute();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry20 = request18.scanHeaders("");
        org.jsoup.parser.Parser parser21 = null;
        org.jsoup.helper.HttpConnection.Request request22 = request18.parser(parser21);
        java.lang.String str24 = request22.header("hi!=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!";
        response1.charset = "null=null=hi!";
        org.jsoup.Connection.Method method7 = response1.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method7);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request9 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        org.jsoup.Connection.Request request12 = request9.header("null=hi!", "");
        request9.timeoutMilliseconds = 'a';
        org.jsoup.Connection.Request request17 = request9.cookie("null=null=null=hi!", "");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        boolean boolean5 = response1.executed;
        boolean boolean7 = response1.hasCookie("null=null=");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = response1.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        java.net.URL uRL7 = request0.url();
        boolean boolean8 = request0.ignoreContentType();
        request0.maxBodySizeBytes = (-1);
        java.lang.String str12 = request0.header("null=null=hi!");
        java.lang.String str14 = request0.header("null=hi!=null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        org.jsoup.Connection.Method method11 = request8.method();
        org.jsoup.Connection.Response response12 = response1.method(method11);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray13 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.lang.String str19 = request13.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        org.jsoup.Connection.Request request22 = request13.method(method21);
        org.jsoup.Connection.Request request23 = request11.method(method21);
        org.jsoup.helper.HttpConnection.KeyVal keyVal24 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str25 = keyVal24.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = keyVal24.value("");
        java.lang.String str28 = keyVal24.value();
        org.jsoup.helper.HttpConnection.Request request29 = request11.data((org.jsoup.Connection.KeyVal) keyVal24);
        int int30 = request29.timeout();
        response10.req = request29;
        httpConnection0.res = response10;
        boolean boolean34 = response10.hasCookie("null=null=");
        int int35 = response10.statusCode;
        org.jsoup.Connection.Method method36 = response10.method();
        boolean boolean37 = response10.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null=null" + "'", str25.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3000 + "'", int30 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.helper.HttpConnection.Response response44 = new org.jsoup.helper.HttpConnection.Response(response1);
        boolean boolean46 = response1.hasCookie("null=hi!");
        response1.statusCode = 1048576;
        org.jsoup.Connection.Method method49 = response1.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.net.URL uRL5 = request0.url();
        boolean boolean6 = request0.ignoreContentType();
        org.jsoup.Connection.Method method7 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.toString();
        keyVal0.value = "";
        keyVal0.value = "null=hi!";
        keyVal0.key = "null=null";
        java.lang.String str8 = keyVal0.toString();
        keyVal0.key = "null=null";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null" + "'", str1.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=null=null=hi!" + "'", str8.equals("null=null=null=hi!"));
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection9 = httpConnection0.header("hi!", "");
        java.lang.String[] strArray16 = new java.lang.String[] { "null=null=null=hi!", "null=null=null=hi!", "null=null", "null=hi!", "null=null", "null=null" };
        org.jsoup.Connection connection17 = httpConnection0.data(strArray16);
        org.jsoup.Connection connection20 = httpConnection0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        boolean boolean23 = request21.followRedirects;
        org.jsoup.Connection.Request request25 = request21.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request21.headers();
        boolean boolean27 = request21.ignoreContentType;
        request21.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request21.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = request21.cookies();
        java.lang.String str33 = request21.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request35 = request21.timeout(0);
        request35.followRedirects = true;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = request35.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request35.headers();
        org.jsoup.Connection connection40 = httpConnection0.cookies(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection40);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        org.jsoup.Connection.Response response4 = response1.removeHeader("hi!");
        java.lang.String str5 = response1.contentType();
        org.jsoup.helper.HttpConnection httpConnection6 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response7 = httpConnection6.response();
        org.jsoup.Connection.Request request8 = httpConnection6.req;
        org.jsoup.Connection connection10 = httpConnection6.ignoreContentType(false);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection13 = httpConnection11.followRedirects(false);
        org.jsoup.Connection connection15 = httpConnection11.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response17 = httpConnection16.response();
        org.jsoup.helper.HttpConnection httpConnection18 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response19 = httpConnection18.response();
        org.jsoup.Connection connection21 = httpConnection18.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response23 = httpConnection22.response();
        httpConnection18.res = response23;
        httpConnection16.res = response23;
        org.jsoup.Connection connection26 = httpConnection11.response(response23);
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method28 = request27.method();
        boolean boolean29 = request27.followRedirects;
        org.jsoup.Connection.Request request31 = request27.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = request27.cookies();
        org.jsoup.Connection connection33 = httpConnection11.cookies(strMap32);
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method35 = request34.method();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request34.headers();
        request34.followRedirects = false;
        boolean boolean39 = request34.ignoreHttpErrors;
        org.jsoup.Connection.Method method40 = request34.method();
        int int41 = request34.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        boolean boolean44 = request42.followRedirects;
        org.jsoup.Connection.Request request46 = request42.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = request42.headers();
        boolean boolean48 = request42.ignoreContentType;
        boolean boolean49 = request42.followRedirects();
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        org.jsoup.Connection.Request request52 = request42.method(method51);
        org.jsoup.Connection.Request request53 = request34.method(method51);
        org.jsoup.Connection connection54 = httpConnection11.method(method51);
        org.jsoup.Connection connection55 = httpConnection6.method(method51);
        org.jsoup.Connection.Response response56 = response1.method(method51);
        int int57 = response1.statusCode;
        java.util.Map<java.lang.String, java.lang.String> strMap58 = response1.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        org.junit.Assert.assertTrue("'" + method28 + "' != '" + org.jsoup.Connection.Method.GET + "'", method28.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1048576 + "'", int41 == 1048576);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap58);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        org.jsoup.Connection.Method method15 = request14.method();
        org.jsoup.parser.Parser parser16 = null;
        org.jsoup.helper.HttpConnection.Request request17 = request14.parser(parser16);
        org.jsoup.Connection.Method method18 = request17.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser5 = request0.parser;
        org.jsoup.Connection.Request request7 = request0.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        org.jsoup.Connection.Request request11 = request0.ignoreContentType(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.helper.HttpConnection.Response response44 = new org.jsoup.helper.HttpConnection.Response(response1);
        response44.contentType = "hi!=null=hi!=null";
        response44.contentType = "null=null=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        response1.statusCode = 10;
        response1.executed = true;
        java.util.Map<java.lang.String, java.lang.String> strMap12 = response1.cookies();
        response1.contentType = "null=null=";
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry16 = response1.scanHeaders("");
        java.lang.String str17 = response1.charset();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        java.lang.String str9 = request0.header("null=null=null=hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request0.data();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.lang.String str2 = request0.header("hi!");
        int int3 = request0.maxBodySize();
        request0.followRedirects = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1048576 + "'", int3 == 1048576);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        int int10 = response1.numRedirects;
        org.jsoup.Connection.Method method11 = response1.method();
        java.net.URL uRL12 = response1.url();
        org.jsoup.Connection.Response response14 = response1.removeHeader("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        java.util.Map<java.lang.String, java.lang.String> strMap6 = response1.headers();
        boolean boolean8 = response1.hasHeader("null=null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document9 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        boolean boolean16 = request14.hasHeader("null=null");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.ignoreHttpErrors();
        org.jsoup.Connection.Request request22 = request17.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request23.headers();
        request23.followRedirects = false;
        boolean boolean28 = request23.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request30 = request23.timeout((int) ' ');
        java.lang.String str32 = request30.cookie("hi!");
        java.lang.String str34 = request30.header("null=null");
        request30.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        request37.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser42 = request37.parser;
        request30.parser = parser42;
        org.jsoup.helper.HttpConnection.Request request44 = request17.parser(parser42);
        org.jsoup.helper.HttpConnection httpConnection45 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response46 = httpConnection45.response();
        org.jsoup.Connection connection48 = httpConnection45.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection49 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection52 = httpConnection49.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request53 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method54 = request53.method();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = request53.headers();
        int int56 = request53.timeout();
        org.jsoup.parser.Parser parser57 = request53.parser();
        org.jsoup.Connection connection58 = httpConnection49.parser(parser57);
        org.jsoup.Connection connection59 = httpConnection45.parser(parser57);
        request44.parser = parser57;
        org.jsoup.parser.Parser parser61 = request44.parser;
        request14.parser = parser61;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        org.junit.Assert.assertTrue("'" + method54 + "' != '" + org.jsoup.Connection.Method.GET + "'", method54.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 3000 + "'", int56 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser61);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request0.followRedirects();
        org.jsoup.Connection.Request request10 = request0.removeHeader("null=null=null=hi!");
        org.jsoup.Connection.Request request12 = request0.ignoreContentType(false);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection13 = request0.data;
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request0.headers();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request0.data();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        org.jsoup.Connection connection36 = httpConnection0.userAgent("");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        request37.followRedirects = false;
        java.lang.String str43 = request37.cookie("");
        boolean boolean44 = request37.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method46 = request45.method();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = request45.headers();
        request45.followRedirects = false;
        boolean boolean50 = request45.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection51 = request45.data();
        request37.data = keyValCollection51;
        org.jsoup.Connection connection53 = httpConnection0.data(keyValCollection51);
        org.jsoup.Connection connection56 = httpConnection0.header("hi!", "null=");
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method58 = request57.method();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = request57.headers();
        request57.followRedirects = false;
        boolean boolean62 = request57.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request64 = request57.timeout((int) ' ');
        boolean boolean65 = request57.followRedirects();
        org.jsoup.Connection.Request request67 = request57.removeHeader("null=null=null=hi!");
        org.jsoup.Connection.Request request69 = request57.ignoreContentType(false);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection70 = request57.data;
        java.util.Map<java.lang.String, java.lang.String> strMap71 = request57.headers();
        org.jsoup.Connection connection72 = httpConnection0.data(strMap71);
        org.jsoup.helper.HttpConnection.Request request73 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method74 = request73.method();
        boolean boolean75 = request73.followRedirects;
        org.jsoup.Connection.Request request77 = request73.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = request73.headers();
        boolean boolean79 = request73.ignoreContentType;
        request73.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap82 = request73.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = request73.cookies();
        java.lang.String str85 = request73.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request87 = request73.timeout(0);
        request73.ignoreContentType = false;
        request73.ignoreContentType = false;
        org.jsoup.parser.Parser parser92 = request73.parser();
        org.jsoup.Connection connection93 = httpConnection0.parser(parser92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        org.junit.Assert.assertTrue("'" + method58 + "' != '" + org.jsoup.Connection.Method.GET + "'", method58.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection72);
        org.junit.Assert.assertTrue("'" + method74 + "' != '" + org.jsoup.Connection.Method.GET + "'", method74.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection93);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=null");
        org.jsoup.Connection.Request request13 = request7.ignoreContentType(false);
        org.jsoup.Connection.Request request15 = request7.removeHeader("null=null=null=hi!");
        org.jsoup.Connection.Request request17 = request7.followRedirects(false);
        boolean boolean18 = request7.ignoreHttpErrors();
        org.jsoup.Connection.Request request20 = request7.ignoreHttpErrors(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry22 = request7.scanHeaders("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry22);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        org.jsoup.Connection.Response response7 = response1.removeCookie("hi!");
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.followRedirects = false;
        boolean boolean13 = request8.ignoreHttpErrors;
        org.jsoup.Connection.Method method14 = request8.method();
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        boolean boolean17 = request15.followRedirects;
        org.jsoup.Connection.Request request19 = request15.followRedirects(true);
        java.lang.String str21 = request15.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        org.jsoup.Connection.Request request24 = request15.method(method23);
        org.jsoup.Connection.Request request25 = request8.method(method23);
        org.jsoup.Connection.Response response26 = response1.method(method23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        boolean boolean10 = request7.ignoreContentType;
        java.net.URL uRL11 = request7.url();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.cookies();
        java.lang.String str14 = request7.header("null=null=");
        java.lang.String str16 = request7.header("null=hi!=");
        boolean boolean17 = request7.followRedirects();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.Connection.Request request7 = httpConnection5.request();
        org.jsoup.Connection.Request request8 = httpConnection5.req;
        org.jsoup.Connection.Request request9 = httpConnection5.request();
        org.jsoup.Connection.Response response10 = httpConnection5.res;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.lang.String str19 = request13.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        org.jsoup.Connection.Request request22 = request13.method(method21);
        org.jsoup.Connection.Request request23 = request11.method(method21);
        boolean boolean25 = request11.hasHeader("hi!");
        org.jsoup.Connection.Request request27 = request11.removeCookie("");
        httpConnection5.req = request27;
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request30 = null;
        org.jsoup.Connection connection31 = httpConnection29.request(request30);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response33 = httpConnection32.response();
        org.jsoup.Connection connection34 = httpConnection29.response(response33);
        httpConnection5.res = response33;
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        boolean boolean38 = request36.ignoreHttpErrors();
        org.jsoup.Connection.Request request41 = request36.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request42.headers();
        request42.followRedirects = false;
        boolean boolean47 = request42.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request49 = request42.timeout((int) ' ');
        java.lang.String str51 = request49.cookie("hi!");
        java.lang.String str53 = request49.header("null=null");
        request49.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method57 = request56.method();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = request56.headers();
        request56.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser61 = request56.parser;
        request49.parser = parser61;
        org.jsoup.helper.HttpConnection.Request request63 = request36.parser(parser61);
        org.jsoup.helper.HttpConnection.Request request64 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method65 = request64.method();
        org.jsoup.Connection.Request request66 = request63.method(method65);
        org.jsoup.Connection connection67 = httpConnection5.method(method65);
        org.jsoup.Connection.Request request68 = request4.method(method65);
        boolean boolean69 = request4.followRedirects();
        org.jsoup.helper.HttpConnection.KeyVal keyVal70 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str71 = keyVal70.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal73 = keyVal70.value("hi!");
        keyVal73.value = "";
        keyVal73.value = "hi!";
        java.lang.String str78 = keyVal73.toString();
        java.lang.String str79 = keyVal73.key();
        org.jsoup.helper.HttpConnection.Request request80 = request4.data((org.jsoup.Connection.KeyVal) keyVal73);
        java.lang.String str82 = request4.getHeaderCaseInsensitive("null=null=null=hi!=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + method57 + "' != '" + org.jsoup.Connection.Method.GET + "'", method57.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertTrue("'" + method65 + "' != '" + org.jsoup.Connection.Method.GET + "'", method65.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null=hi!" + "'", str78.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=hi!");
        org.jsoup.Connection.Request request13 = request0.maxBodySize(307);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request0.cookies();
        int int15 = request0.maxBodySize();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = request0.scanHeaders("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 307 + "'", int15 == 307);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection.Request request8 = httpConnection0.req;
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request10 = null;
        org.jsoup.Connection connection11 = httpConnection9.request(request10);
        org.jsoup.helper.HttpConnection httpConnection12 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response13 = httpConnection12.response();
        org.jsoup.Connection.Request request14 = httpConnection12.request();
        org.jsoup.Connection connection15 = httpConnection9.request(request14);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request16.headers();
        request16.followRedirects = false;
        boolean boolean21 = request16.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request23 = request16.timeout((int) ' ');
        java.lang.String str25 = request23.cookie("hi!");
        java.lang.String str27 = request23.header("null=null");
        request23.followRedirects = false;
        org.jsoup.parser.Parser parser30 = request23.parser;
        org.jsoup.Connection connection31 = httpConnection9.parser(parser30);
        org.jsoup.Connection connection32 = httpConnection0.parser(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        org.jsoup.Connection.Response response10 = response1.cookie("hi!=", "hi!");
        java.net.URL uRL11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response12 = response1.url(uRL11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        response1.statusCode = 10;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.cookies();
        boolean boolean18 = request11.hasCookie("null=null");
        boolean boolean20 = request11.hasHeader("null=hi!");
        org.jsoup.Connection.Request request22 = request11.removeCookie("null=null");
        request11.maxBodySizeBytes = (short) -1;
        java.net.URL uRL25 = request11.url();
        response1.req = request11;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.serialiseRequestUrl((org.jsoup.Connection.Request) request11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL25);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Response response12 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request13.headers();
        request13.followRedirects = false;
        java.lang.String str19 = request13.cookie("");
        boolean boolean20 = request13.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request21.headers();
        request21.followRedirects = false;
        boolean boolean26 = request21.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection27 = request21.data();
        request13.data = keyValCollection27;
        org.jsoup.Connection connection29 = httpConnection0.data(keyValCollection27);
        org.jsoup.Connection connection31 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        boolean boolean34 = request32.followRedirects;
        org.jsoup.Connection.Request request36 = request32.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = request32.headers();
        boolean boolean38 = request32.ignoreContentType;
        request32.maxBodySizeBytes = (short) 100;
        org.jsoup.parser.Parser parser41 = request32.parser;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = request32.headers();
        org.jsoup.Connection connection43 = httpConnection0.data(strMap42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!=null", "hi!=null");
        java.lang.String str3 = keyVal2.value();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!=null" + "'", str3.equals("hi!=null"));
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        int int3 = request0.timeout();
        java.lang.String str5 = request0.header("null=null=null=hi!=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("null=null");
        java.lang.String str5 = keyVal2.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null=null" + "'", str5.equals("null=null"));
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        java.lang.String str5 = response1.charset;
        java.net.URL uRL6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response7 = response1.url(uRL6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!=null" + "'", str5.equals("hi!=null"));
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean6 = request0.hasCookie("null=null");
        java.lang.String str8 = request0.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = request9.headers();
        request9.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        boolean boolean16 = request14.ignoreHttpErrors();
        org.jsoup.Connection.Request request19 = request14.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.followRedirects = false;
        boolean boolean25 = request20.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request27 = request20.timeout((int) ' ');
        java.lang.String str29 = request27.cookie("hi!");
        java.lang.String str31 = request27.header("null=null");
        request27.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method35 = request34.method();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request34.headers();
        request34.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser39 = request34.parser;
        request27.parser = parser39;
        org.jsoup.helper.HttpConnection.Request request41 = request14.parser(parser39);
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        org.jsoup.Connection.Request request44 = request41.method(method43);
        org.jsoup.Connection.Request request45 = request9.method(method43);
        boolean boolean46 = request9.ignoreHttpErrors();
        java.lang.String str48 = request9.header("hi!=null");
        org.jsoup.Connection.Method method49 = request9.method();
        org.jsoup.Connection.Request request50 = request0.method(method49);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        int int3 = request0.timeout();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = request0.cookies();
        java.lang.String str6 = request0.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request8 = request0.timeout(3000);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        boolean boolean16 = request14.hasHeader("null=null");
        request14.ignoreContentType = true;
        int int19 = request14.maxBodySize();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1048576 + "'", int19 == 1048576);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response1);
        java.net.URL uRL9 = response1.url();
        response1.charset = "null=null=null=hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Request request18 = httpConnection0.request();
        org.jsoup.helper.HttpConnection.Response response19 = null;
        org.jsoup.helper.HttpConnection.Response response20 = new org.jsoup.helper.HttpConnection.Response(response19);
        org.jsoup.Connection.Method method21 = response20.method();
        boolean boolean23 = response20.hasCookie("");
        boolean boolean25 = response20.hasCookie("null=");
        httpConnection0.res = response20;
        java.lang.String str27 = response20.statusMessage;
        int int28 = response20.numRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("hi!");
        java.lang.String str7 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.value("null=null");
        java.lang.String str10 = keyVal9.value();
        keyVal9.key = "null=null";
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal9.value("null=null=");
        java.lang.String str15 = keyVal14.key;
        keyVal14.value = "null=null=hi!=null";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null=null" + "'", str10.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "null=null" + "'", str15.equals("null=null"));
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection connection5 = httpConnection0.response(response4);
        org.jsoup.helper.HttpConnection httpConnection6 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response7 = httpConnection6.response();
        org.jsoup.Connection.Request request8 = httpConnection6.request();
        org.jsoup.Connection connection10 = httpConnection6.ignoreContentType(true);
        org.jsoup.Connection.Request request11 = httpConnection6.request();
        org.jsoup.Connection connection13 = httpConnection6.referrer("null=hi!");
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request15 = null;
        org.jsoup.Connection connection16 = httpConnection14.request(request15);
        org.jsoup.helper.HttpConnection httpConnection17 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response18 = httpConnection17.response();
        org.jsoup.Connection.Request request19 = httpConnection17.request();
        org.jsoup.Connection connection20 = httpConnection14.request(request19);
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection23 = httpConnection21.followRedirects(false);
        org.jsoup.Connection connection25 = httpConnection21.referrer("");
        org.jsoup.Connection.Response response26 = httpConnection21.response();
        org.jsoup.Connection connection27 = httpConnection14.response(response26);
        org.jsoup.Connection connection29 = httpConnection14.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method31 = request30.method();
        boolean boolean32 = request30.ignoreHttpErrors();
        org.jsoup.Connection.Request request35 = request30.cookie("hi!", "");
        java.lang.String str37 = request30.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request38 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method39 = request38.method();
        boolean boolean40 = request38.followRedirects;
        org.jsoup.Connection.Request request42 = request38.followRedirects(true);
        java.lang.String str44 = request38.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method46 = request45.method();
        org.jsoup.Connection.Request request47 = request38.method(method46);
        org.jsoup.Connection.Request request48 = request30.method(method46);
        org.jsoup.Connection connection49 = httpConnection14.method(method46);
        org.jsoup.Connection connection51 = httpConnection14.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection52 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response53 = httpConnection52.response();
        org.jsoup.Connection connection55 = httpConnection52.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection56 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response57 = httpConnection56.response();
        httpConnection52.res = response57;
        java.lang.String[] strArray61 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection62 = httpConnection52.data(strArray61);
        org.jsoup.Connection connection63 = httpConnection14.data(strArray61);
        org.jsoup.Connection connection64 = httpConnection6.data(strArray61);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection65 = httpConnection0.data(strArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + method39 + "' != '" + org.jsoup.Connection.Method.GET + "'", method39.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection64);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=hi!");
        request0.ignoreHttpErrors = true;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection14 = request0.data;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection14);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.cookies();
        org.jsoup.Connection.Request request10 = request0.removeCookie("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        boolean boolean9 = request7.followRedirects;
        org.jsoup.Connection.Request request11 = request7.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.headers();
        org.jsoup.Connection connection13 = httpConnection0.data(strMap12);
        org.jsoup.Connection.Response response14 = httpConnection0.response();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int19 = request18.timeout();
        boolean boolean20 = request18.followRedirects;
        java.net.URL uRL21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request22 = request18.url(uRL21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        boolean boolean22 = request20.followRedirects;
        org.jsoup.Connection.Request request24 = request20.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request20.headers();
        request20.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser28 = request20.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request20.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request20.cookies();
        org.jsoup.Connection connection31 = httpConnection0.cookies(strMap30);
        org.jsoup.helper.HttpConnection.Response response32 = null;
        org.jsoup.helper.HttpConnection.Response response33 = new org.jsoup.helper.HttpConnection.Response(response32);
        int int34 = response33.statusCode();
        response33.charset = "hi!=null";
        org.jsoup.Connection.Response response38 = response33.removeHeader("hi!=");
        java.lang.String str39 = response33.contentType();
        httpConnection0.res = response33;
        java.lang.String str41 = response33.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry7 = response1.scanHeaders("null=hi!");
        java.lang.String str9 = response1.header("hi!");
        response1.executed = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        boolean boolean9 = request0.hasHeader("null=hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=null");
        org.jsoup.Connection.Request request13 = request0.ignoreContentType(false);
        org.jsoup.Connection.Method method14 = request0.method();
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        boolean boolean17 = request15.followRedirects;
        org.jsoup.Connection.Request request19 = request15.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request15.headers();
        boolean boolean21 = request15.ignoreContentType;
        boolean boolean22 = request15.followRedirects();
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        org.jsoup.Connection.Request request25 = request15.method(method24);
        boolean boolean26 = request15.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection27 = request15.data();
        request0.data = keyValCollection27;
        int int29 = request0.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method31 = request30.method();
        org.jsoup.Connection.Request request33 = request30.ignoreContentType(false);
        org.jsoup.Connection.Request request35 = request30.removeCookie("");
        int int36 = request30.maxBodySize();
        org.jsoup.Connection.Request request38 = request30.followRedirects(false);
        java.lang.String str40 = request30.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = request41.headers();
        request41.followRedirects = false;
        boolean boolean46 = request41.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request48 = request41.timeout((int) ' ');
        java.lang.String str50 = request48.cookie("hi!");
        java.lang.String str52 = request48.header("null=null");
        request48.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request55 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method56 = request55.method();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = request55.headers();
        request55.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser60 = request55.parser;
        request48.parser = parser60;
        request30.parser = parser60;
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method64 = request63.method();
        boolean boolean65 = request63.ignoreHttpErrors();
        org.jsoup.Connection.Request request68 = request63.cookie("hi!", "");
        boolean boolean69 = request63.ignoreContentType;
        org.jsoup.parser.Parser parser70 = request63.parser();
        request30.parser = parser70;
        org.jsoup.helper.HttpConnection.Request request72 = request0.parser(parser70);
        java.lang.String str73 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1048576 + "'", int29 == 1048576);
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1048576 + "'", int36 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + method56 + "' != '" + org.jsoup.Connection.Method.GET + "'", method56.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser60);
        org.junit.Assert.assertTrue("'" + method64 + "' != '" + org.jsoup.Connection.Method.GET + "'", method64.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response17 = httpConnection16.response();
        org.jsoup.Connection connection19 = httpConnection16.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection23 = httpConnection20.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request24.headers();
        int int27 = request24.timeout();
        org.jsoup.parser.Parser parser28 = request24.parser();
        org.jsoup.Connection connection29 = httpConnection20.parser(parser28);
        org.jsoup.Connection connection30 = httpConnection16.parser(parser28);
        request15.parser = parser28;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method35 = request34.method();
        boolean boolean36 = request34.followRedirects;
        org.jsoup.Connection.Request request38 = request34.followRedirects(true);
        java.lang.String str40 = request34.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        org.jsoup.Connection.Request request43 = request34.method(method42);
        org.jsoup.Connection.Request request44 = request32.method(method42);
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str46 = keyVal45.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = keyVal45.value("");
        java.lang.String str49 = keyVal45.value();
        org.jsoup.helper.HttpConnection.Request request50 = request32.data((org.jsoup.Connection.KeyVal) keyVal45);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry52 = request50.scanHeaders("");
        org.jsoup.Connection.Method method53 = request50.method();
        org.jsoup.Connection.Request request54 = request15.method(method53);
        java.lang.String str56 = request15.cookie("hi!=");
        java.net.URL uRL57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request58 = request15.url(uRL57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3000 + "'", int27 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null=null" + "'", str46.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "" + "'", str49.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry52);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = response1.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = response1.cookies();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!=null=hi!=null");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        java.lang.String str3 = response1.contentType();
        boolean boolean5 = response1.hasCookie("null=null=hi!");
        java.lang.String str7 = response1.getHeaderCaseInsensitive("null=hi!");
        response1.statusMessage = "hi!=null=hi!=null";
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        org.jsoup.Connection.Response response12 = response1.removeHeader("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.net.URL uRL7 = request0.url();
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request9 = null;
        org.jsoup.Connection connection10 = httpConnection8.request(request9);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        org.jsoup.Connection.Request request13 = httpConnection11.request();
        org.jsoup.Connection connection14 = httpConnection8.request(request13);
        org.jsoup.Connection connection17 = httpConnection8.cookie("null=null", "null=null");
        org.jsoup.Connection connection19 = httpConnection8.followRedirects(true);
        org.jsoup.Connection.Response response20 = httpConnection8.response();
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request21.headers();
        request21.followRedirects = false;
        java.lang.String str27 = request21.cookie("");
        boolean boolean28 = request21.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method30 = request29.method();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = request29.headers();
        request29.followRedirects = false;
        boolean boolean34 = request29.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection35 = request29.data();
        request21.data = keyValCollection35;
        org.jsoup.Connection connection37 = httpConnection8.data(keyValCollection35);
        request0.data = keyValCollection35;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        org.jsoup.Connection.Request request21 = request0.cookie("null=hi!", "null=null=null=hi!");
        int int22 = request0.timeout();
        boolean boolean24 = request0.hasCookie("null=null=null=hi!=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3000 + "'", int22 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!=", "null=null=null=hi!");
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.net.URL uRL4 = response1.url();
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        org.jsoup.helper.HttpConnection.Request request9 = request5.timeout(1048576);
        java.lang.String str11 = request5.getHeaderCaseInsensitive("hi!=null");
        response1.req = request5;
        response1.contentType = "hi!=";
        boolean boolean16 = response1.hasCookie("null=hi!");
        int int17 = response1.statusCode;
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.headers();
        request18.followRedirects = false;
        boolean boolean23 = request18.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request25 = request18.timeout((int) ' ');
        boolean boolean26 = request25.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        org.jsoup.Connection.Request request29 = request25.ignoreContentType(true);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request25.headers();
        int int31 = request25.timeout();
        response1.req = request25;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 32 + "'", int31 == 32);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        org.jsoup.Connection.Response response9 = response1.removeHeader("null=hi!");
        org.jsoup.Connection.Method method10 = response1.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method10);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        response1.charset = "null=null";
        java.lang.Class<?> wildcardClass9 = response1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry5 = request0.scanHeaders("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request0.headers();
        java.net.URL uRL7 = request0.url();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser13 = request8.parser;
        org.jsoup.Connection.Request request15 = request8.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request8.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request8.cookies();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        boolean boolean20 = request18.followRedirects;
        org.jsoup.Connection.Request request22 = request18.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request18.cookies();
        boolean boolean25 = request18.hasCookie("null=null");
        org.jsoup.parser.Parser parser26 = request18.parser();
        request8.parser = parser26;
        request0.parser = parser26;
        org.jsoup.helper.HttpConnection.Response response29 = null;
        org.jsoup.helper.HttpConnection.Response response30 = new org.jsoup.helper.HttpConnection.Response(response29);
        int int31 = response30.statusCode();
        int int32 = response30.numRedirects;
        java.lang.String str33 = response30.charset;
        java.net.URL uRL34 = response30.url();
        response30.charset = "hi!=null";
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response37 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL34);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection1 = org.jsoup.helper.HttpConnection.connect("null=hi!=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=hi!=");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        boolean boolean11 = request9.ignoreHttpErrors();
        org.jsoup.Connection.Request request14 = request9.cookie("hi!", "");
        boolean boolean15 = request9.ignoreContentType;
        org.jsoup.Connection.Request request18 = request9.cookie("null=hi!", "hi!");
        org.jsoup.Connection connection19 = httpConnection0.request((org.jsoup.Connection.Request) request9);
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str21 = keyVal20.toString();
        keyVal20.value = "";
        keyVal20.value = "null=hi!";
        org.jsoup.helper.HttpConnection.Request request26 = request9.data((org.jsoup.Connection.KeyVal) keyVal20);
        java.lang.String str27 = keyVal20.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null=null" + "'", str21.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        int int8 = response1.statusCode();
        int int9 = response1.statusCode();
        int int10 = response1.statusCode;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection8 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection connection11 = httpConnection0.cookie("hi!=null", "null=null");
        org.jsoup.Connection connection13 = httpConnection0.referrer("null=");
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        boolean boolean16 = request14.ignoreHttpErrors();
        org.jsoup.Connection.Request request19 = request14.cookie("hi!", "");
        boolean boolean20 = request14.ignoreContentType;
        org.jsoup.parser.Parser parser21 = request14.parser();
        org.jsoup.Connection connection22 = httpConnection0.parser(parser21);
        org.jsoup.Connection.Request request23 = httpConnection0.request();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response10 = httpConnection9.response();
        org.jsoup.Connection connection12 = httpConnection9.followRedirects(false);
        org.jsoup.Connection connection14 = httpConnection9.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request15.headers();
        request15.followRedirects = false;
        boolean boolean20 = request15.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request22 = request15.timeout((int) ' ');
        boolean boolean23 = request22.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal26.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal32 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = keyVal32.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal35.key = "hi!";
        java.lang.String str38 = keyVal35.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal40 = keyVal35.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal44.key = "hi!";
        java.lang.String str47 = keyVal44.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str49 = keyVal48.toString();
        keyVal48.value = "";
        keyVal48.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal54 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal54.key = "hi!";
        java.lang.String str57 = keyVal54.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal59 = keyVal54.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal60 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str61 = keyVal60.key();
        org.jsoup.Connection.KeyVal[] keyValArray62 = new org.jsoup.Connection.KeyVal[] { keyVal26, keyVal29, keyVal34, keyVal35, keyVal43, keyVal44, keyVal48, keyVal54, keyVal60 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList63 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList63, keyValArray62);
        request22.data = keyValList63;
        org.jsoup.Connection connection66 = httpConnection9.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList63);
        request0.data = keyValList63;
        org.jsoup.Connection.Request request69 = request0.removeCookie("hi!=null");
        request0.followRedirects = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "hi!" + "'", str47.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null=null" + "'", str49.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "hi!" + "'", str57.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request69);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        org.jsoup.Connection.Response response10 = response1.cookie("hi!=", "hi!");
        java.lang.String str11 = response1.charset;
        response1.charset = "hi!=null=hi!=null";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!=", "hi!=null=hi!=null");
        keyVal2.value = "null=hi!=null=null";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.followRedirects = false;
        java.lang.String str10 = request0.cookie("hi!=null");
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request12 = null;
        org.jsoup.Connection connection13 = httpConnection11.request(request12);
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        org.jsoup.Connection.Request request16 = httpConnection14.request();
        org.jsoup.Connection connection17 = httpConnection11.request(request16);
        org.jsoup.Connection.Request request18 = httpConnection11.req;
        org.jsoup.Connection connection20 = httpConnection11.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        boolean boolean23 = request21.followRedirects;
        org.jsoup.Connection.Request request25 = request21.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request21.headers();
        boolean boolean27 = request21.ignoreContentType;
        request21.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request21.cookies();
        httpConnection11.req = request21;
        org.jsoup.Connection.Response response32 = httpConnection11.response();
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response34 = httpConnection33.response();
        org.jsoup.Connection connection36 = httpConnection33.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection37 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response38 = httpConnection37.response();
        httpConnection33.res = response38;
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request40.headers();
        org.jsoup.Connection connection42 = httpConnection33.request((org.jsoup.Connection.Request) request40);
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method44 = request43.method();
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method46 = request45.method();
        boolean boolean47 = request45.followRedirects;
        org.jsoup.Connection.Request request49 = request45.followRedirects(true);
        java.lang.String str51 = request45.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request52 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method53 = request52.method();
        org.jsoup.Connection.Request request54 = request45.method(method53);
        org.jsoup.Connection.Request request55 = request43.method(method53);
        org.jsoup.Connection.Request request56 = request40.method(method53);
        org.jsoup.Connection connection57 = httpConnection11.method(method53);
        org.jsoup.Connection.Request request58 = request0.method(method53);
        org.jsoup.Connection.Method method59 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        org.jsoup.Connection.Request request12 = request7.cookie("null=null", "null=null=null=hi!");
        boolean boolean14 = request7.hasCookie("null=null=null=hi!");
        int int15 = request7.timeoutMilliseconds;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request7.cookies();
        org.jsoup.Connection.Request request18 = request7.removeCookie("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        org.jsoup.Connection.Request request10 = request0.removeCookie("null=hi!");
        request0.maxBodySizeBytes = 100;
        org.jsoup.Connection.Request request14 = request0.ignoreHttpErrors(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null=hi!=null", "hi!=null");
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection21 = request10.data;
        org.jsoup.Connection.Request request24 = request10.cookie("null=null", "hi!");
        int int25 = request10.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        boolean boolean28 = request26.followRedirects;
        org.jsoup.Connection.Request request30 = request26.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = request26.cookies();
        boolean boolean33 = request26.hasCookie("null=null");
        java.lang.String str35 = request26.cookie("hi!=null");
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        boolean boolean38 = request36.followRedirects;
        org.jsoup.Connection.Request request40 = request36.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request36.headers();
        boolean boolean42 = request36.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method44 = request43.method();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = request43.headers();
        request43.followRedirects = false;
        boolean boolean48 = request43.ignoreHttpErrors;
        org.jsoup.Connection.Method method49 = request43.method();
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        boolean boolean52 = request50.followRedirects;
        org.jsoup.Connection.Request request54 = request50.followRedirects(true);
        java.lang.String str56 = request50.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method58 = request57.method();
        org.jsoup.Connection.Request request59 = request50.method(method58);
        org.jsoup.Connection.Request request60 = request43.method(method58);
        org.jsoup.Connection.Request request61 = request36.method(method58);
        org.jsoup.Connection.Request request62 = request26.method(method58);
        org.jsoup.Connection.Request request63 = request10.method(method58);
        java.lang.String str64 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1048576 + "'", int25 == 1048576);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + method58 + "' != '" + org.jsoup.Connection.Method.GET + "'", method58.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null=null=hi!" + "'", str64.equals("null=null=hi!"));
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        java.lang.String str7 = request0.cookie("null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.headers();
        java.lang.String str11 = request0.cookie("null=null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request0.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        org.jsoup.Connection.Request request16 = request0.removeCookie("");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection17 = request0.data();
        org.jsoup.Connection.Request request20 = request0.header("null=hi!", "");
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response22 = httpConnection21.response();
        org.jsoup.Connection connection24 = httpConnection21.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection25 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response26 = httpConnection25.response();
        httpConnection21.res = response26;
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request28.headers();
        request28.followRedirects = false;
        boolean boolean33 = request28.ignoreHttpErrors;
        org.jsoup.Connection.Method method34 = request28.method();
        org.jsoup.Connection connection35 = httpConnection21.method(method34);
        org.jsoup.Connection.Request request36 = request0.method(method34);
        boolean boolean37 = request0.ignoreHttpErrors;
        boolean boolean38 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection.KeyVal keyVal41 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!=", "hi!=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = keyVal41.key("null=null=hi!");
        java.lang.String str44 = keyVal41.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal46 = keyVal41.value("null=null");
        org.jsoup.helper.HttpConnection.Request request47 = request0.data((org.jsoup.Connection.KeyVal) keyVal46);
        boolean boolean48 = request47.ignoreContentType;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "hi!=null" + "'", str44.equals("hi!=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.userAgent("null=hi!");
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        boolean boolean9 = request7.followRedirects;
        org.jsoup.Connection.Request request11 = request7.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.headers();
        boolean boolean13 = request7.ignoreContentType;
        boolean boolean14 = request7.followRedirects();
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request7.method(method16);
        boolean boolean18 = request7.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection19 = request7.data();
        org.jsoup.Connection connection20 = httpConnection0.data(keyValCollection19);
        org.jsoup.helper.HttpConnection.Response response21 = null;
        org.jsoup.helper.HttpConnection.Response response22 = new org.jsoup.helper.HttpConnection.Response(response21);
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        boolean boolean27 = request25.followRedirects;
        org.jsoup.Connection.Request request29 = request25.followRedirects(true);
        java.lang.String str31 = request25.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        org.jsoup.Connection.Request request34 = request25.method(method33);
        org.jsoup.Connection.Request request35 = request23.method(method33);
        org.jsoup.helper.HttpConnection.KeyVal keyVal36 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str37 = keyVal36.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = keyVal36.value("");
        java.lang.String str40 = keyVal36.value();
        org.jsoup.helper.HttpConnection.Request request41 = request23.data((org.jsoup.Connection.KeyVal) keyVal36);
        int int42 = request41.timeout();
        response22.req = request41;
        org.jsoup.Connection connection44 = httpConnection0.response((org.jsoup.Connection.Response) response22);
        java.lang.String str45 = response22.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null=null" + "'", str37.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3000 + "'", int42 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        org.jsoup.parser.Parser parser12 = request7.parser;
        org.jsoup.Connection.Request request14 = request7.followRedirects(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        org.jsoup.Connection.Response response4 = response1.removeCookie("hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        java.lang.String str3 = response1.charset;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        org.jsoup.Connection.Response response10 = response1.cookie("hi!=", "hi!");
        java.lang.String str11 = response1.statusMessage();
        java.lang.String str12 = response1.contentType;
        org.jsoup.Connection.Request request13 = response1.req;
        response1.contentType = "null=null";
        java.lang.String str17 = response1.getHeaderCaseInsensitive("hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        boolean boolean11 = response1.hasCookie("hi!=");
        response1.charset = "hi!";
        org.jsoup.Connection.Response response15 = response1.removeCookie("hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        org.jsoup.Connection.Request request7 = response1.req;
        org.jsoup.Connection.Request request8 = response1.req;
        java.lang.String str9 = response1.statusMessage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.followRedirects();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry10 = request7.scanHeaders("");
        request7.timeoutMilliseconds = 32;
        request7.ignoreContentType = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry10);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response1.scanHeaders("hi!=");
        int int18 = response1.numRedirects;
        java.lang.String str19 = response1.statusMessage;
        response1.charset = "null=hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.parser.Parser parser4 = null;
        request0.parser = parser4;
        org.jsoup.Connection.Request request7 = request0.ignoreHttpErrors(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean8 = request0.hasCookie("");
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        request0.ignoreContentType = false;
        request0.ignoreContentType = false;
        org.jsoup.Connection.Request request21 = request0.cookie("null=null=null=hi!", "hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal3.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal3.value("null=null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null=hi!" + "'", str4.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        response1.statusCode = 10;
        response1.executed = true;
        java.util.Map<java.lang.String, java.lang.String> strMap12 = response1.cookies();
        response1.contentType = "null=null=";
        java.lang.String str15 = response1.statusMessage();
        org.jsoup.Connection.Response response18 = response1.cookie("null=null=", "hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response18);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry7 = response1.scanHeaders("null=hi!");
        java.lang.String str9 = response1.header("hi!");
        java.lang.String str10 = response1.charset;
        java.net.URL uRL11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response12 = response1.url(uRL11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection9 = httpConnection0.header("hi!", "");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.Connection.Method method23 = request17.method();
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.lang.String str30 = request24.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request33 = request24.method(method32);
        org.jsoup.Connection.Request request34 = request17.method(method32);
        org.jsoup.Connection.Request request35 = request10.method(method32);
        org.jsoup.Connection.Request request37 = request10.removeHeader("hi!=null");
        httpConnection0.req = request10;
        boolean boolean40 = request10.hasHeader("null=hi!");
        org.jsoup.parser.Parser parser41 = request10.parser();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        java.lang.String str6 = response1.getHeaderCaseInsensitive("null=null");
        java.lang.String str7 = response1.contentType;
        java.util.Map<java.lang.String, java.lang.String> strMap8 = response1.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        boolean boolean9 = request7.followRedirects();
        request7.ignoreContentType = false;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection12 = request7.data();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection12);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.Connection.Request request44 = response1.req;
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method46 = request45.method();
        org.jsoup.Connection.Request request48 = request45.ignoreContentType(false);
        org.jsoup.Connection.Request request50 = request45.ignoreContentType(true);
        response1.req = request50;
        org.jsoup.helper.HttpConnection httpConnection52 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response53 = httpConnection52.response();
        org.jsoup.Connection connection55 = httpConnection52.followRedirects(false);
        org.jsoup.Connection.Response response56 = httpConnection52.response();
        org.jsoup.Connection.Request request57 = httpConnection52.request();
        response1.req = request57;
        java.net.HttpURLConnection httpURLConnection59 = null;
        org.jsoup.helper.HttpConnection.Response response60 = null;
        org.jsoup.helper.HttpConnection.Response response61 = new org.jsoup.helper.HttpConnection.Response(response60);
        int int62 = response61.statusCode();
        java.lang.String str63 = response61.contentType();
        java.lang.String str64 = response61.statusMessage;
        response61.executed = true;
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection59, (org.jsoup.Connection.Response) response61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request44);
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.Connection.Request request5 = request0.maxBodySize((int) (short) 100);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        keyVal5.key = "hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=", "hi!=null=hi!=null");
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        org.jsoup.Connection.Request request30 = request27.method(method29);
        java.lang.String str31 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request27);
        org.jsoup.Connection.Request request33 = request27.removeCookie("null=null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request35 = request27.maxBodySize((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxSize must be 0 (unlimited) or larger");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!=" + "'", str31.equals("hi!="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.parser.Parser parser3 = null;
        org.jsoup.Connection connection4 = httpConnection0.parser(parser3);
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request6.scanHeaders("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request6.headers();
        org.jsoup.Connection connection13 = httpConnection0.data(strMap12);
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        boolean boolean16 = request14.ignoreHttpErrors();
        org.jsoup.Connection.Request request19 = request14.cookie("hi!", "");
        boolean boolean20 = request14.ignoreContentType;
        org.jsoup.parser.Parser parser21 = request14.parser();
        boolean boolean22 = request14.ignoreContentType();
        org.jsoup.Connection connection23 = httpConnection0.request((org.jsoup.Connection.Request) request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        boolean boolean4 = response1.hasCookie("");
        java.lang.String str5 = response1.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        org.jsoup.Connection.Request request13 = request0.header("hi!=null", "null=null");
        org.jsoup.Connection.Request request15 = request0.followRedirects(true);
        org.jsoup.Connection.Request request17 = request0.removeCookie("null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        request7.ignoreHttpErrors = false;
        boolean boolean12 = request7.hasHeader("hi!=null");
        int int13 = request7.timeoutMilliseconds;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        response1.executed = false;
        org.jsoup.Connection.Response response11 = response1.removeHeader("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        response1.statusCode = 10;
        response1.executed = true;
        java.util.Map<java.lang.String, java.lang.String> strMap12 = response1.cookies();
        response1.statusMessage = "";
        response1.statusCode = (byte) 100;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        org.jsoup.Connection.Response response7 = response1.removeCookie("hi!");
        int int8 = response1.numRedirects;
        java.lang.String str10 = response1.cookie("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap11 = response1.cookies();
        org.jsoup.Connection.Response response14 = response1.header("null=null=null=hi!", "");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry16 = response1.scanHeaders("");
        org.jsoup.Connection.Response response19 = response1.cookie("null=null=hi!", "null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        org.jsoup.Connection.Method method11 = request8.method();
        org.jsoup.Connection.Response response12 = response1.method(method11);
        java.net.HttpURLConnection httpURLConnection13 = null;
        org.jsoup.Connection.Response response14 = null;
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection13, response14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.parser.Parser parser7 = request0.parser();
        boolean boolean9 = request0.hasCookie("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.Connection.Response response24 = httpConnection0.res;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        org.jsoup.Connection.Request request10 = request0.removeCookie("null=hi!");
        boolean boolean11 = request0.followRedirects();
        org.jsoup.Connection.Request request13 = request0.followRedirects(false);
        org.jsoup.Connection.Request request15 = request0.removeHeader("hi!=");
        request0.ignoreContentType = false;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry19 = request0.scanHeaders("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry19);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean7 = request0.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.followRedirects = false;
        boolean boolean13 = request8.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection14 = request8.data();
        request0.data = keyValCollection14;
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = keyVal18.key("null=null");
        org.jsoup.helper.HttpConnection.Request request21 = request0.data((org.jsoup.Connection.KeyVal) keyVal20);
        java.lang.String str23 = request0.header("null=null=hi!");
        boolean boolean24 = request0.ignoreContentType;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean3 = request0.hasHeader("null=null");
        request0.ignoreContentType = true;
        int int6 = request0.maxBodySize();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal7.key = "hi!";
        java.lang.String str10 = keyVal7.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal7.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal12.key("null=hi!");
        java.lang.String str15 = keyVal12.value;
        java.lang.String str16 = keyVal12.key();
        org.jsoup.helper.HttpConnection.Request request17 = request0.data((org.jsoup.Connection.KeyVal) keyVal12);
        org.jsoup.parser.Parser parser18 = request17.parser();
        java.lang.String str20 = request17.cookie("null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null=hi!" + "'", str16.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.cookies();
        request0.ignoreContentType = true;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry20 = request0.scanHeaders("hi!=null");
        java.net.URL uRL21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request22 = request0.url(uRL21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry20);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        org.jsoup.Connection.Method method15 = request14.method();
        org.jsoup.Connection.Request request17 = request14.followRedirects(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        int int22 = response1.numRedirects;
        org.jsoup.Connection.Response response24 = response1.removeCookie("null=null=hi!");
        boolean boolean26 = response1.hasHeader("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        int int12 = request7.maxBodySize();
        java.lang.String str14 = request7.header("hi!");
        org.jsoup.Connection.Request request16 = request7.followRedirects(false);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request7.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.toString();
        keyVal0.value = "";
        keyVal0.value = "null=hi!";
        java.lang.String str6 = keyVal0.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null" + "'", str1.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        boolean boolean11 = request0.followRedirects;
        org.jsoup.Connection.Request request13 = request0.removeCookie("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        int int3 = request0.timeout();
        boolean boolean4 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = org.jsoup.helper.HttpConnection.KeyVal.create("null=null=null=hi!", "null=null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal7.key("hi!=");
        keyVal7.value = "";
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal7);
        java.lang.String str14 = request12.cookie("hi!");
        boolean boolean16 = request12.hasHeader("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.Connection.Request request8 = request0.cookie("null=null=", "null=null=null=hi!=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request11 = request0.cookie("", "null=null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "null=null");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("hi!=");
        boolean boolean12 = request0.followRedirects();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request0.cookies();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry15 = request0.scanHeaders("null=null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry15);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request9 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        org.jsoup.Connection.Request request12 = request9.header("null=hi!", "");
        request9.ignoreContentType = false;
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request15.headers();
        request15.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        boolean boolean22 = request20.ignoreHttpErrors();
        org.jsoup.Connection.Request request25 = request20.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.followRedirects = false;
        boolean boolean31 = request26.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request33 = request26.timeout((int) ' ');
        java.lang.String str35 = request33.cookie("hi!");
        java.lang.String str37 = request33.header("null=null");
        request33.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = request40.headers();
        request40.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser45 = request40.parser;
        request33.parser = parser45;
        org.jsoup.helper.HttpConnection.Request request47 = request20.parser(parser45);
        org.jsoup.helper.HttpConnection.Request request48 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method49 = request48.method();
        org.jsoup.Connection.Request request50 = request47.method(method49);
        org.jsoup.Connection.Request request51 = request15.method(method49);
        boolean boolean52 = request15.ignoreHttpErrors();
        java.lang.String str54 = request15.header("hi!=null");
        org.jsoup.Connection.Method method55 = request15.method();
        org.jsoup.Connection.Request request56 = request9.method(method55);
        java.lang.String str58 = request9.cookie("null=null=null=hi!=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + method55 + "' != '" + org.jsoup.Connection.Method.GET + "'", method55.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null", "null=null");
        java.lang.String str3 = keyVal2.value;
        java.lang.String str4 = keyVal2.value();
        java.lang.String str5 = keyVal2.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=null" + "'", str3.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null=null" + "'", str4.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null=null" + "'", str5.equals("null=null"));
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.Connection.Request request44 = response1.req;
        response1.statusCode = (byte) 10;
        java.util.Map<java.lang.String, java.lang.String> strMap47 = response1.headers();
        java.net.HttpURLConnection httpURLConnection48 = null;
        org.jsoup.helper.HttpConnection httpConnection49 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response50 = httpConnection49.response();
        org.jsoup.Connection.Request request51 = httpConnection49.request();
        org.jsoup.parser.Parser parser52 = null;
        org.jsoup.Connection connection53 = httpConnection49.parser(parser52);
        org.jsoup.Connection.Response response54 = httpConnection49.res;
        org.jsoup.Connection.Response response55 = httpConnection49.response();
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection48, response55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response55);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        boolean boolean8 = request0.ignoreHttpErrors();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection9 = request0.data();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request0.scanHeaders("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.net.URL uRL5 = request0.url();
        boolean boolean6 = request0.ignoreContentType();
        org.jsoup.Connection.Request request8 = request0.removeCookie("hi!=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        org.jsoup.helper.HttpConnection.Response response5 = new org.jsoup.helper.HttpConnection.Response(response1);
        java.lang.String str7 = response1.header("null=hi!");
        java.nio.ByteBuffer byteBuffer8 = null;
        response1.byteData = byteBuffer8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        org.jsoup.helper.HttpConnection.Request request4 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method5 = request4.method();
        boolean boolean6 = request4.followRedirects;
        org.jsoup.Connection.Request request8 = request4.followRedirects(true);
        java.lang.String str10 = request4.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        org.jsoup.Connection.Request request13 = request4.method(method12);
        org.jsoup.Connection.Request request14 = request2.method(method12);
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str16 = keyVal15.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = keyVal15.value("");
        java.lang.String str19 = keyVal15.value();
        org.jsoup.helper.HttpConnection.Request request20 = request2.data((org.jsoup.Connection.KeyVal) keyVal15);
        int int21 = request20.timeout();
        response1.req = request20;
        java.lang.String str23 = response1.statusMessage;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = response1.headers();
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null=null" + "'", str16.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3000 + "'", int21 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        request7.ignoreHttpErrors = false;
        boolean boolean12 = request7.hasHeader("null=null=");
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request7.cookies();
        java.lang.String str15 = request7.getHeaderCaseInsensitive("hi!=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection connection6 = httpConnection0.userAgent("null=null=null=hi!");
        org.jsoup.Connection.Request request7 = httpConnection0.request();
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        org.jsoup.Connection.Method method15 = request14.method();
        org.jsoup.parser.Parser parser16 = null;
        org.jsoup.helper.HttpConnection.Request request17 = request14.parser(parser16);
        org.jsoup.Connection.Request request20 = request17.header("hi!=null", "hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        boolean boolean9 = request7.followRedirects();
        boolean boolean11 = request7.hasCookie("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request13 = request7.removeHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("null=null");
        org.jsoup.Connection.Request request11 = request0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.ignoreHttpErrors();
        org.jsoup.Connection.Request request17 = request12.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.headers();
        request18.followRedirects = false;
        boolean boolean23 = request18.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request25 = request18.timeout((int) ' ');
        java.lang.String str27 = request25.cookie("hi!");
        java.lang.String str29 = request25.header("null=null");
        request25.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser37 = request32.parser;
        request25.parser = parser37;
        org.jsoup.helper.HttpConnection.Request request39 = request12.parser(parser37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        org.jsoup.Connection.Request request42 = request39.method(method41);
        org.jsoup.Connection.Request request43 = request0.method(method41);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request45 = request0.removeHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.Connection.Request request11 = request7.ignoreContentType(true);
        org.jsoup.Connection.Request request13 = request7.removeCookie("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        org.jsoup.Connection connection17 = httpConnection14.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection18 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection21 = httpConnection18.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        int int25 = request22.timeout();
        org.jsoup.parser.Parser parser26 = request22.parser();
        org.jsoup.Connection connection27 = httpConnection18.parser(parser26);
        org.jsoup.Connection connection28 = httpConnection14.parser(parser26);
        request7.parser = parser26;
        boolean boolean30 = request7.followRedirects();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3000 + "'", int25 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.Connection.Request request7 = httpConnection5.request();
        org.jsoup.Connection.Request request8 = httpConnection5.req;
        org.jsoup.Connection.Request request9 = httpConnection5.request();
        org.jsoup.Connection.Response response10 = httpConnection5.res;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.lang.String str19 = request13.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        org.jsoup.Connection.Request request22 = request13.method(method21);
        org.jsoup.Connection.Request request23 = request11.method(method21);
        boolean boolean25 = request11.hasHeader("hi!");
        org.jsoup.Connection.Request request27 = request11.removeCookie("");
        httpConnection5.req = request27;
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request30 = null;
        org.jsoup.Connection connection31 = httpConnection29.request(request30);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response33 = httpConnection32.response();
        org.jsoup.Connection connection34 = httpConnection29.response(response33);
        httpConnection5.res = response33;
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        boolean boolean38 = request36.ignoreHttpErrors();
        org.jsoup.Connection.Request request41 = request36.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request42.headers();
        request42.followRedirects = false;
        boolean boolean47 = request42.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request49 = request42.timeout((int) ' ');
        java.lang.String str51 = request49.cookie("hi!");
        java.lang.String str53 = request49.header("null=null");
        request49.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method57 = request56.method();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = request56.headers();
        request56.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser61 = request56.parser;
        request49.parser = parser61;
        org.jsoup.helper.HttpConnection.Request request63 = request36.parser(parser61);
        org.jsoup.helper.HttpConnection.Request request64 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method65 = request64.method();
        org.jsoup.Connection.Request request66 = request63.method(method65);
        org.jsoup.Connection connection67 = httpConnection5.method(method65);
        org.jsoup.Connection.Request request68 = request4.method(method65);
        boolean boolean69 = request4.followRedirects();
        org.jsoup.helper.HttpConnection.KeyVal keyVal70 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str71 = keyVal70.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal73 = keyVal70.value("hi!");
        keyVal73.value = "";
        keyVal73.value = "hi!";
        java.lang.String str78 = keyVal73.toString();
        java.lang.String str79 = keyVal73.key();
        org.jsoup.helper.HttpConnection.Request request80 = request4.data((org.jsoup.Connection.KeyVal) keyVal73);
        keyVal73.value = "hi!=";
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + method57 + "' != '" + org.jsoup.Connection.Method.GET + "'", method57.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertTrue("'" + method65 + "' != '" + org.jsoup.Connection.Method.GET + "'", method65.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null=hi!" + "'", str78.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request80);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        org.jsoup.Connection.Response response7 = response1.removeCookie("hi!");
        int int8 = response1.numRedirects;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry10 = response1.scanHeaders("null=null=hi!");
        java.lang.String str11 = response1.charset;
        boolean boolean12 = response1.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.userAgent("null=hi!");
        org.jsoup.Connection connection6 = httpConnection0.cookie("hi!=null", "null=null=");
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection10 = httpConnection0.data("null=null=null=hi!=hi!", "null=null");
        org.jsoup.Connection connection12 = httpConnection0.timeout((int) '4');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request9 = request0.timeout((int) (byte) 0);
        java.lang.String str11 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.parser.Parser parser12 = request0.parser();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser12);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.net.URL uRL4 = response1.url();
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        org.jsoup.helper.HttpConnection.Request request9 = request5.timeout(1048576);
        java.lang.String str11 = request5.getHeaderCaseInsensitive("hi!=null");
        response1.req = request5;
        response1.contentType = "hi!=";
        boolean boolean16 = response1.hasCookie("null=hi!");
        java.lang.String str17 = response1.charset;
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request18.headers();
        boolean boolean20 = request18.followRedirects;
        org.jsoup.Connection.Request request23 = request18.header("null=null=", "null=null=null=hi!");
        response1.req = request23;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        java.lang.String str8 = response1.charset;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.Connection.Response response12 = response1.cookie("null=null=hi!", "null=null=null=hi!=hi!");
        java.net.URL uRL13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response14 = response1.url(uRL13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int19 = request18.timeout();
        boolean boolean20 = request18.followRedirects;
        org.jsoup.Connection.Method method21 = request18.method();
        org.jsoup.Connection.Method method22 = request18.method();
        java.lang.String str24 = request18.cookie("null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        java.util.Map<java.lang.String, java.lang.String> strMap3 = response1.cookies();
        java.net.URL uRL4 = response1.url();
        boolean boolean6 = response1.hasCookie("hi!=null");
        response1.contentType = "hi!=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request5.headers();
        httpConnection0.req = request5;
        java.net.URL uRL8 = request5.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection1 = org.jsoup.helper.HttpConnection.connect("null=null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=null=hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        boolean boolean11 = response1.hasCookie("hi!=");
        response1.charset = "hi!";
        int int14 = response1.statusCode;
        java.nio.ByteBuffer byteBuffer15 = null;
        response1.byteData = byteBuffer15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        org.jsoup.Connection.Response response10 = response1.cookie("hi!=", "hi!");
        java.lang.String str11 = response1.statusMessage();
        response1.charset = "";
        response1.contentType = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        int int8 = response1.statusCode();
        response1.contentType = "hi!=null";
        java.lang.String str11 = response1.charset;
        java.lang.String str12 = response1.contentType();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        boolean boolean17 = request15.followRedirects;
        org.jsoup.Connection.Request request19 = request15.followRedirects(true);
        java.lang.String str21 = request15.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        org.jsoup.Connection.Request request24 = request15.method(method23);
        org.jsoup.Connection.Request request25 = request13.method(method23);
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str27 = keyVal26.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = keyVal26.value("");
        java.lang.String str30 = keyVal26.value();
        org.jsoup.helper.HttpConnection.Request request31 = request13.data((org.jsoup.Connection.KeyVal) keyVal26);
        int int32 = request31.timeout();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.cookies();
        response1.req = request31;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!=null" + "'", str12.equals("hi!=null"));
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null=null" + "'", str27.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 3000 + "'", int32 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.Connection connection18 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection connection20 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Response response21 = null;
        org.jsoup.helper.HttpConnection.Response response22 = new org.jsoup.helper.HttpConnection.Response(response21);
        int int23 = response22.statusCode();
        int int24 = response22.numRedirects;
        java.lang.String str25 = response22.charset;
        boolean boolean26 = response22.executed;
        response22.executed = true;
        response22.contentType = "hi!=";
        java.util.Map<java.lang.String, java.lang.String> strMap31 = response22.cookies();
        org.jsoup.Connection connection32 = httpConnection0.cookies(strMap31);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection34 = httpConnection0.url("null=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        org.jsoup.Connection connection36 = httpConnection0.userAgent("");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        request37.followRedirects = false;
        java.lang.String str43 = request37.cookie("");
        boolean boolean44 = request37.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method46 = request45.method();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = request45.headers();
        request45.followRedirects = false;
        boolean boolean50 = request45.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection51 = request45.data();
        request37.data = keyValCollection51;
        org.jsoup.Connection connection53 = httpConnection0.data(keyValCollection51);
        org.jsoup.Connection connection56 = httpConnection0.header("hi!", "null=");
        org.jsoup.helper.HttpConnection.Response response57 = null;
        org.jsoup.helper.HttpConnection.Response response58 = new org.jsoup.helper.HttpConnection.Response(response57);
        int int59 = response58.statusCode();
        int int60 = response58.numRedirects;
        java.lang.String str61 = response58.charset;
        java.net.URL uRL62 = response58.url();
        response58.charset = "hi!=null";
        java.lang.String str65 = response58.statusMessage;
        int int66 = response58.numRedirects;
        org.jsoup.helper.HttpConnection.Response response67 = null;
        org.jsoup.helper.HttpConnection.Response response68 = new org.jsoup.helper.HttpConnection.Response(response67);
        int int69 = response68.statusCode();
        int int70 = response68.numRedirects;
        response68.charset = "";
        org.jsoup.helper.HttpConnection.Request request73 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method74 = request73.method();
        org.jsoup.Connection.Request request76 = request73.ignoreContentType(false);
        org.jsoup.Connection.Request request78 = request73.removeCookie("");
        int int79 = request73.maxBodySize();
        org.jsoup.Connection.Request request81 = request73.followRedirects(false);
        response68.req = request73;
        request73.ignoreHttpErrors = true;
        org.jsoup.Connection.Method method85 = request73.method();
        org.jsoup.Connection.Response response86 = response58.method(method85);
        httpConnection0.res = response58;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + method74 + "' != '" + org.jsoup.Connection.Method.GET + "'", method74.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1048576 + "'", int79 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request81);
        org.junit.Assert.assertTrue("'" + method85 + "' != '" + org.jsoup.Connection.Method.GET + "'", method85.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response86);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        org.jsoup.Connection.Response response4 = response1.removeHeader("hi!");
        response1.contentType = "null=null=null=hi!";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        java.net.URL uRL10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection11 = httpConnection0.url(uRL10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        java.util.Map<java.lang.String, java.lang.String> strMap3 = response1.cookies();
        java.nio.ByteBuffer byteBuffer4 = response1.byteData;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer4);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        org.jsoup.Connection.Response response10 = response1.cookie("hi!=", "hi!");
        java.lang.String str11 = response1.statusMessage();
        response1.charset = "";
        response1.statusMessage = "hi!=null=hi!=null";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean6 = request0.hasCookie("null=null");
        org.jsoup.Connection.Request request9 = request0.header("null=hi!", "null=null=");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request0.scanHeaders("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        org.jsoup.Connection.Request request3 = request0.removeHeader("null=null=null=hi!");
        java.net.URL uRL4 = request0.url();
        int int5 = request0.maxBodySizeBytes;
        org.jsoup.Connection.Request request7 = request0.ignoreHttpErrors(false);
        org.jsoup.Connection.Request request9 = request0.removeCookie("hi!");
        org.jsoup.helper.HttpConnection.Response response10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        int int12 = response11.statusCode();
        int int13 = response11.numRedirects;
        java.lang.String str14 = response11.charset;
        java.lang.String str15 = response11.charset;
        org.jsoup.Connection.Response response18 = response11.header("null=", "hi!");
        java.lang.String str20 = response11.cookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap21 = response11.cookies();
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        request22.followRedirects = false;
        boolean boolean27 = request22.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request29 = request22.timeout((int) ' ');
        boolean boolean30 = request29.ignoreHttpErrors;
        org.jsoup.Connection.Method method31 = request29.method();
        org.jsoup.Connection.Response response32 = response11.method(method31);
        java.lang.String str34 = response11.getHeaderCaseInsensitive("null=null=");
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        boolean boolean37 = request35.ignoreHttpErrors();
        org.jsoup.Connection.Request request40 = request35.cookie("hi!", "");
        java.lang.String str42 = request35.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method44 = request43.method();
        boolean boolean45 = request43.followRedirects;
        org.jsoup.Connection.Request request47 = request43.followRedirects(true);
        java.lang.String str49 = request43.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        org.jsoup.Connection.Request request52 = request43.method(method51);
        org.jsoup.Connection.Request request53 = request35.method(method51);
        org.jsoup.Connection.Response response54 = response11.method(method51);
        org.jsoup.Connection.Request request55 = request0.method(method51);
        java.net.URL uRL56 = request0.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1048576 + "'", int5 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL56);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.net.URL uRL3 = response1.url();
        java.lang.String str5 = response1.cookie("null=null=null=hi!=hi!");
        boolean boolean7 = response1.hasCookie("hi!=null");
        java.lang.String str9 = response1.header("null=null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        boolean boolean9 = request7.followRedirects();
        java.lang.String str11 = request7.cookie("null=null");
        java.lang.String str12 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request7);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        org.jsoup.Connection.Response response8 = response1.header("null=null=hi!", "null=null=hi!");
        java.lang.String str10 = response1.getHeaderCaseInsensitive("null=hi!");
        response1.charset = "null=hi!";
        boolean boolean13 = response1.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.timeout((int) (short) 100);
        org.jsoup.Connection connection6 = httpConnection0.timeout((int) 'a');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        org.jsoup.Connection.Request request12 = request7.cookie("null=null", "null=null=null=hi!");
        boolean boolean14 = request7.hasCookie("null=null=null=hi!");
        int int15 = request7.maxBodySizeBytes;
        org.jsoup.Connection.Request request17 = request7.followRedirects(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1048576 + "'", int15 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.parser.Parser parser3 = null;
        org.jsoup.Connection connection4 = httpConnection0.parser(parser3);
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.Connection connection8 = httpConnection0.header("null=null", "null=null");
        org.jsoup.Connection connection10 = httpConnection0.timeout(20);
        org.jsoup.Connection connection13 = httpConnection0.header("null=null", "null=null=hi!");
        org.jsoup.Connection connection15 = httpConnection0.ignoreHttpErrors(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection6 = httpConnection0.header("null=null=null=hi!", "");
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null=hi!", "null=hi!");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        org.jsoup.Connection.Request request13 = request10.ignoreContentType(false);
        org.jsoup.Connection.Request request15 = request10.removeCookie("");
        int int16 = request10.maxBodySize();
        org.jsoup.Connection.Request request18 = request10.followRedirects(false);
        java.lang.String str20 = request10.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request21.headers();
        request21.followRedirects = false;
        boolean boolean26 = request21.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request28 = request21.timeout((int) ' ');
        java.lang.String str30 = request28.cookie("hi!");
        java.lang.String str32 = request28.header("null=null");
        request28.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = request35.headers();
        request35.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser40 = request35.parser;
        request28.parser = parser40;
        request10.parser = parser40;
        int int43 = request10.timeoutMilliseconds;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request10.headers();
        org.jsoup.Connection connection45 = httpConnection0.cookies(strMap44);
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method47 = request46.method();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = request46.headers();
        request46.followRedirects = false;
        boolean boolean51 = request46.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request53 = request46.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry55 = request46.scanHeaders("null=null");
        org.jsoup.Connection.Request request57 = request46.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request58 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method59 = request58.method();
        boolean boolean60 = request58.ignoreHttpErrors();
        org.jsoup.Connection.Request request63 = request58.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request64 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method65 = request64.method();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = request64.headers();
        request64.followRedirects = false;
        boolean boolean69 = request64.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request71 = request64.timeout((int) ' ');
        java.lang.String str73 = request71.cookie("hi!");
        java.lang.String str75 = request71.header("null=null");
        request71.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request78 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method79 = request78.method();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = request78.headers();
        request78.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser83 = request78.parser;
        request71.parser = parser83;
        org.jsoup.helper.HttpConnection.Request request85 = request58.parser(parser83);
        org.jsoup.helper.HttpConnection.Request request86 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method87 = request86.method();
        org.jsoup.Connection.Request request88 = request85.method(method87);
        org.jsoup.Connection.Request request89 = request46.method(method87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = request46.cookies();
        org.jsoup.Connection connection91 = httpConnection0.cookies(strMap90);
        org.jsoup.Connection connection93 = httpConnection0.referrer("hi!");
        org.jsoup.Connection connection95 = httpConnection0.ignoreHttpErrors(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1048576 + "'", int16 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3000 + "'", int43 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        org.junit.Assert.assertTrue("'" + method47 + "' != '" + org.jsoup.Connection.Method.GET + "'", method47.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertTrue("'" + method65 + "' != '" + org.jsoup.Connection.Method.GET + "'", method65.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + method79 + "' != '" + org.jsoup.Connection.Method.GET + "'", method79.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request85);
        org.junit.Assert.assertTrue("'" + method87 + "' != '" + org.jsoup.Connection.Method.GET + "'", method87.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection95);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        java.lang.String str7 = response1.statusMessage;
        response1.contentType = "null=null=hi!";
        java.nio.ByteBuffer byteBuffer10 = response1.byteData;
        response1.charset = "hi!=null";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer10);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        boolean boolean9 = request7.followRedirects();
        org.jsoup.Connection.Request request11 = request7.ignoreHttpErrors(false);
        request7.ignoreHttpErrors = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        boolean boolean5 = response1.executed;
        response1.executed = true;
        org.jsoup.Connection.Method method8 = response1.method();
        org.jsoup.Connection.Request request9 = response1.req;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        org.jsoup.Connection.Request request17 = request14.header("null=null=hi!", "hi!=");
        org.jsoup.Connection.Request request19 = request14.removeHeader("null=");
        boolean boolean21 = request14.hasHeader("null=null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        request7.ignoreHttpErrors = false;
        boolean boolean12 = request7.hasHeader("null=null=");
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request7.cookies();
        boolean boolean14 = request7.ignoreContentType;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.req;
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection connection6 = httpConnection0.referrer("null=null");
        org.jsoup.Connection connection8 = httpConnection0.referrer("null=hi!");
        org.jsoup.Connection connection10 = httpConnection0.ignoreHttpErrors(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry20 = request18.scanHeaders("");
        boolean boolean21 = request18.followRedirects;
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection25 = httpConnection22.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        int int29 = request26.timeout();
        org.jsoup.parser.Parser parser30 = request26.parser();
        org.jsoup.Connection connection31 = httpConnection22.parser(parser30);
        org.jsoup.Connection connection33 = httpConnection22.timeout((int) ' ');
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method35 = request34.method();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request34.headers();
        request34.followRedirects = false;
        boolean boolean39 = request34.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request41 = request34.timeout((int) ' ');
        java.lang.String str43 = request41.cookie("hi!");
        java.lang.String str45 = request41.header("null=null");
        request41.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request48 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method49 = request48.method();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = request48.headers();
        request48.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser53 = request48.parser;
        request41.parser = parser53;
        org.jsoup.Connection connection55 = httpConnection22.parser(parser53);
        org.jsoup.helper.HttpConnection.Request request56 = request18.parser(parser53);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3000 + "'", int29 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        org.jsoup.Connection.Response response10 = response1.cookie("hi!=", "hi!");
        response1.statusCode = (byte) 100;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        request0.timeoutMilliseconds = 20;
        java.net.URL uRL4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request5 = request0.url(uRL4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request0.cookies();
        java.lang.String str19 = request0.cookie("null=null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        java.lang.String str5 = request0.getHeaderCaseInsensitive("null=hi!");
        boolean boolean7 = request0.hasCookie("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = org.jsoup.helper.HttpConnection.KeyVal.create("null=hi!", "null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = request0.data((org.jsoup.Connection.KeyVal) keyVal10);
        request0.ignoreContentType = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("null=null");
        org.jsoup.Connection.Request request11 = request0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.ignoreHttpErrors();
        org.jsoup.Connection.Request request17 = request12.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.headers();
        request18.followRedirects = false;
        boolean boolean23 = request18.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request25 = request18.timeout((int) ' ');
        java.lang.String str27 = request25.cookie("hi!");
        java.lang.String str29 = request25.header("null=null");
        request25.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser37 = request32.parser;
        request25.parser = parser37;
        org.jsoup.helper.HttpConnection.Request request39 = request12.parser(parser37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        org.jsoup.Connection.Request request42 = request39.method(method41);
        org.jsoup.Connection.Request request43 = request0.method(method41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request0.cookies();
        org.jsoup.Connection.Method method45 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + method45 + "' != '" + org.jsoup.Connection.Method.GET + "'", method45.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        request14.followRedirects = true;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request14.headers();
        java.lang.Class<?> wildcardClass18 = strMap17.getClass();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        java.lang.String str5 = request0.getHeaderCaseInsensitive("null=hi!");
        boolean boolean7 = request0.hasCookie("hi!");
        int int8 = request0.timeout();
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        int int11 = response10.statusCode();
        int int12 = response10.numRedirects;
        java.lang.String str13 = response10.charset;
        response10.contentType = "null=null=null=hi!";
        java.lang.String str16 = response10.statusMessage;
        response10.contentType = "null=null=hi!";
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response19 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3000 + "'", int8 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response1.scanHeaders("hi!=");
        int int18 = response1.numRedirects;
        org.jsoup.Connection.Response response20 = response1.removeCookie("null=null=hi!=null");
        org.jsoup.Connection.Method method21 = response1.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method21);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        org.jsoup.Connection.Response response11 = response1.removeCookie("null=hi!");
        response1.contentType = "";
        java.lang.String str14 = response1.contentType;
        response1.numRedirects = '4';
        boolean boolean18 = response1.hasCookie("hi!");
        response1.numRedirects = (byte) 0;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.statusMessage();
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.Connection.Method method9 = request3.method();
        int int10 = request3.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        boolean boolean18 = request11.followRedirects();
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        org.jsoup.Connection.Request request21 = request11.method(method20);
        org.jsoup.Connection.Request request22 = request3.method(method20);
        org.jsoup.Connection.Response response23 = response1.method(method20);
        java.nio.ByteBuffer byteBuffer24 = null;
        response1.byteData = byteBuffer24;
        org.jsoup.Connection.Response response27 = response1.removeHeader("null=");
        java.util.Map<java.lang.String, java.lang.String> strMap28 = response1.headers();
        org.jsoup.Connection.Response response30 = response1.removeCookie("null=hi!");
        boolean boolean31 = response1.executed;
        org.jsoup.Connection.Response response33 = response1.removeCookie("null=null=hi!");
        org.jsoup.Connection.Response response35 = response1.removeCookie("hi!=null=hi!=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response37 = response1.removeHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1048576 + "'", int10 == 1048576);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response35);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("");
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str9 = keyVal8.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = keyVal8.value("hi!");
        java.lang.String str12 = keyVal8.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal8.value("hi!");
        java.lang.String str15 = keyVal8.key();
        org.jsoup.helper.HttpConnection.Request request16 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        request16.ignoreContentType = true;
        boolean boolean19 = request16.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request21 = request16.timeout(32);
        request16.timeoutMilliseconds = 1;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request16.headers();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.Connection.Request request31 = httpConnection0.req;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection33 = httpConnection0.url("null=hi!=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=hi!=");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        int int8 = response1.statusCode();
        response1.contentType = "hi!=null";
        boolean boolean12 = response1.hasCookie("null=null=null=hi!");
        int int13 = response1.statusCode();
        int int14 = response1.numRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        boolean boolean1 = request0.ignoreContentType();
        java.lang.String str3 = request0.header("null=");
        org.jsoup.Connection.Request request5 = request0.removeCookie("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        java.lang.String str7 = request0.cookie("null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.cookies();
        int int9 = request0.maxBodySize();
        org.jsoup.Connection.Request request12 = request0.header("hi!", "null=null=null=hi!=hi!");
        int int13 = request0.maxBodySize();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1048576 + "'", int9 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1048576 + "'", int13 == 1048576);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        request0.parser = parser30;
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        boolean boolean35 = request33.ignoreHttpErrors();
        org.jsoup.Connection.Request request38 = request33.cookie("hi!", "");
        boolean boolean39 = request33.ignoreContentType;
        org.jsoup.parser.Parser parser40 = request33.parser();
        request0.parser = parser40;
        org.jsoup.parser.Parser parser42 = null;
        request0.parser = parser42;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser40);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Response response12 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.ignoreHttpErrors();
        org.jsoup.Connection.Request request18 = request13.cookie("hi!", "");
        java.lang.String str20 = request13.cookie("null=hi!");
        httpConnection0.req = request13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal5.key("null=hi!");
        java.lang.String str8 = keyVal5.value;
        java.lang.String str9 = keyVal5.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        java.lang.String str6 = response1.getHeaderCaseInsensitive("null=null");
        java.lang.String str7 = response1.contentType;
        java.nio.ByteBuffer byteBuffer8 = response1.byteData;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer8);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response1);
        org.jsoup.Connection.Response response11 = response8.header("hi!=null", "");
        java.lang.String str12 = response8.charset;
        java.lang.String str13 = response8.contentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        boolean boolean33 = request31.ignoreHttpErrors();
        org.jsoup.Connection.Request request36 = request31.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        request37.followRedirects = false;
        boolean boolean42 = request37.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request44 = request37.timeout((int) ' ');
        java.lang.String str46 = request44.cookie("hi!");
        java.lang.String str48 = request44.header("null=null");
        request44.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = request51.headers();
        request51.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser56 = request51.parser;
        request44.parser = parser56;
        org.jsoup.helper.HttpConnection.Request request58 = request31.parser(parser56);
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method60 = request59.method();
        org.jsoup.Connection.Request request61 = request58.method(method60);
        org.jsoup.Connection connection62 = httpConnection0.method(method60);
        org.jsoup.Connection connection65 = httpConnection0.header("null=hi!", "");
        org.jsoup.Connection connection68 = httpConnection0.header("null=null=null=hi!", "hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection68);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        java.lang.String str6 = keyVal0.value();
        keyVal0.key = "null=";
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal0.value("null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal0.key("null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.Connection.Request request44 = response1.req;
        response1.statusCode = (byte) 10;
        response1.charset = "null=";
        java.lang.String str50 = response1.getHeaderCaseInsensitive("null=null");
        java.net.URL uRL51 = response1.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL51);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.Connection.Request request9 = httpConnection0.request();
        org.jsoup.Connection connection11 = httpConnection0.timeout(20);
        org.jsoup.Connection connection13 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request14.headers();
        org.jsoup.Connection.Request request17 = request14.removeHeader("null=null=null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request14.headers();
        org.jsoup.Connection connection19 = httpConnection0.cookies(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int19 = request18.timeout();
        boolean boolean20 = request18.followRedirects;
        java.lang.String str22 = request18.getHeaderCaseInsensitive("null=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray5 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection21 = request10.data;
        org.jsoup.Connection.Request request23 = request10.followRedirects(false);
        boolean boolean25 = request10.hasCookie("null=null=null=hi!=hi!");
        boolean boolean26 = request10.followRedirects();
        java.net.URL uRL27 = request10.url();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection28 = request10.data;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection28);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=null");
        org.jsoup.Connection.Request request13 = request7.ignoreContentType(false);
        org.jsoup.Connection.Request request15 = request7.removeHeader("null=null=null=hi!");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = request7.scanHeaders("null=null=null=hi!");
        org.jsoup.parser.Parser parser18 = request7.parser;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser18);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        org.jsoup.Connection.Request request12 = request7.cookie("null=null", "null=null=null=hi!");
        boolean boolean14 = request7.hasCookie("null=null=null=hi!");
        org.jsoup.Connection.Request request16 = request7.ignoreHttpErrors(false);
        java.net.URL uRL17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request18 = request7.url(uRL17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        org.jsoup.Connection.Request request14 = request7.header("null=null=null=hi!", "");
        boolean boolean15 = request7.followRedirects;
        request7.maxBodySizeBytes = 0;
        org.jsoup.helper.HttpConnection.Request request19 = request7.timeout((int) 'a');
        org.jsoup.Connection.Request request22 = request19.cookie("hi!=null", "null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request9 = request0.timeout((int) (byte) 0);
        request9.ignoreContentType = true;
        org.jsoup.Connection.Request request14 = request9.cookie("null=null=null=hi!", "");
        boolean boolean15 = request9.ignoreContentType;
        request9.ignoreHttpErrors = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        int int3 = request0.timeout();
        boolean boolean4 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = org.jsoup.helper.HttpConnection.KeyVal.create("null=null=null=hi!", "null=null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal7.key("hi!=");
        keyVal7.value = "";
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal7);
        java.lang.String str14 = request12.cookie("hi!");
        boolean boolean15 = request12.ignoreHttpErrors;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        boolean boolean10 = request0.hasHeader("hi!=null");
        int int11 = request0.timeoutMilliseconds;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3000 + "'", int11 == 3000);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection7 = httpConnection0.data("hi!=null", "null=null=");
        org.jsoup.Connection connection9 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Response response10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        int int12 = response11.statusCode();
        int int13 = response11.numRedirects;
        java.lang.String str14 = response11.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry16 = response11.scanHeaders("");
        java.net.URL uRL17 = response11.url();
        int int18 = response11.statusCode();
        response11.contentType = "hi!=null";
        boolean boolean22 = response11.hasCookie("null=null=null=hi!");
        org.jsoup.Connection.Request request23 = response11.req;
        org.jsoup.Connection connection24 = httpConnection0.response((org.jsoup.Connection.Response) response11);
        java.lang.String str25 = response11.statusMessage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str5 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal4.value("hi!");
        java.lang.String str8 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal4.value("hi!");
        java.lang.String str11 = keyVal4.key();
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal4);
        java.net.URL uRL13 = request12.url();
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        org.jsoup.Connection.Request request16 = httpConnection14.request();
        org.jsoup.Connection.Request request17 = httpConnection14.req;
        org.jsoup.Connection.Request request18 = httpConnection14.request();
        org.jsoup.Connection.Response response19 = httpConnection14.res;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        boolean boolean24 = request22.followRedirects;
        org.jsoup.Connection.Request request26 = request22.followRedirects(true);
        java.lang.String str28 = request22.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method30 = request29.method();
        org.jsoup.Connection.Request request31 = request22.method(method30);
        org.jsoup.Connection.Request request32 = request20.method(method30);
        boolean boolean34 = request20.hasHeader("hi!");
        org.jsoup.Connection.Request request36 = request20.removeCookie("");
        httpConnection14.req = request36;
        org.jsoup.helper.HttpConnection httpConnection38 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request39 = null;
        org.jsoup.Connection connection40 = httpConnection38.request(request39);
        org.jsoup.helper.HttpConnection httpConnection41 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response42 = httpConnection41.response();
        org.jsoup.Connection connection43 = httpConnection38.response(response42);
        httpConnection14.res = response42;
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method46 = request45.method();
        boolean boolean47 = request45.ignoreHttpErrors();
        org.jsoup.Connection.Request request50 = request45.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = request51.headers();
        request51.followRedirects = false;
        boolean boolean56 = request51.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request58 = request51.timeout((int) ' ');
        java.lang.String str60 = request58.cookie("hi!");
        java.lang.String str62 = request58.header("null=null");
        request58.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request65 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method66 = request65.method();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = request65.headers();
        request65.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser70 = request65.parser;
        request58.parser = parser70;
        org.jsoup.helper.HttpConnection.Request request72 = request45.parser(parser70);
        org.jsoup.helper.HttpConnection.Request request73 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method74 = request73.method();
        org.jsoup.Connection.Request request75 = request72.method(method74);
        org.jsoup.Connection connection76 = httpConnection14.method(method74);
        org.jsoup.Connection.Request request77 = request12.method(method74);
        request12.ignoreHttpErrors = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + method66 + "' != '" + org.jsoup.Connection.Method.GET + "'", method66.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        org.junit.Assert.assertTrue("'" + method74 + "' != '" + org.jsoup.Connection.Method.GET + "'", method74.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.headers();
        java.net.URL uRL9 = request0.url();
        boolean boolean10 = request0.followRedirects;
        int int11 = request0.maxBodySizeBytes;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1048576 + "'", int11 == 1048576);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        org.jsoup.Connection.Request request16 = request0.removeCookie("");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection17 = request0.data();
        boolean boolean19 = request0.hasCookie("hi!=null");
        org.jsoup.Connection.Request request21 = request0.ignoreContentType(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        int int8 = response1.statusCode();
        int int9 = response1.statusCode();
        java.nio.ByteBuffer byteBuffer10 = null;
        response1.byteData = byteBuffer10;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry13 = response1.scanHeaders("null=hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry13);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection7 = httpConnection4.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        int int11 = request8.timeout();
        org.jsoup.parser.Parser parser12 = request8.parser();
        org.jsoup.Connection connection13 = httpConnection4.parser(parser12);
        org.jsoup.Connection connection14 = httpConnection0.parser(parser12);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection16 = httpConnection0.url("null=null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=null=hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3000 + "'", int11 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        boolean boolean12 = request0.followRedirects();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        boolean boolean28 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        org.jsoup.Connection connection32 = httpConnection29.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection36 = httpConnection33.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        int int40 = request37.timeout();
        org.jsoup.parser.Parser parser41 = request37.parser();
        org.jsoup.Connection connection42 = httpConnection33.parser(parser41);
        org.jsoup.Connection connection43 = httpConnection29.parser(parser41);
        org.jsoup.helper.HttpConnection.Request request44 = request0.parser(parser41);
        int int45 = request44.timeout();
        boolean boolean47 = request44.hasHeader("null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection48 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response49 = httpConnection48.response();
        org.jsoup.Connection connection51 = httpConnection48.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection52 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response53 = httpConnection52.response();
        httpConnection48.res = response53;
        org.jsoup.parser.Parser parser55 = null;
        org.jsoup.Connection connection56 = httpConnection48.parser(parser55);
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method58 = request57.method();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = request57.headers();
        request57.followRedirects = false;
        boolean boolean62 = request57.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection63 = request57.data();
        org.jsoup.Connection connection64 = httpConnection48.data(keyValCollection63);
        request44.data = keyValCollection63;
        org.jsoup.helper.HttpConnection.Response response66 = null;
        org.jsoup.helper.HttpConnection.Response response67 = new org.jsoup.helper.HttpConnection.Response(response66);
        int int68 = response67.statusCode();
        int int69 = response67.numRedirects;
        java.lang.String str70 = response67.charset;
        response67.contentType = "null=null=null=hi!";
        java.util.Map<java.lang.String, java.lang.String> strMap73 = response67.headers();
        response67.numRedirects = (byte) 10;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response76 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request44, response67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3000 + "'", int45 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        org.junit.Assert.assertTrue("'" + method58 + "' != '" + org.jsoup.Connection.Method.GET + "'", method58.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap73);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.helper.HttpConnection.Response response31 = null;
        org.jsoup.helper.HttpConnection.Response response32 = new org.jsoup.helper.HttpConnection.Response(response31);
        int int33 = response32.statusCode();
        int int34 = response32.numRedirects;
        java.lang.String str35 = response32.charset;
        response32.contentType = "null=null=null=hi!";
        response32.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap40 = response32.headers();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry42 = response32.scanHeaders("null=null=");
        org.jsoup.Connection connection43 = httpConnection0.response((org.jsoup.Connection.Response) response32);
        java.lang.String str44 = response32.contentType;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry46 = response32.scanHeaders("hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "null=null=null=hi!" + "'", str44.equals("null=null=null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry46);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        org.jsoup.Connection.Response response11 = response1.header("null=null", "");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document12 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("");
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = request8.headers();
        org.jsoup.Connection.Method method12 = request8.method();
        org.jsoup.Connection.Request request13 = request0.method(method12);
        org.jsoup.Connection.Method method14 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection23 = httpConnection21.followRedirects(false);
        org.jsoup.Connection connection25 = httpConnection21.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection26 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response27 = httpConnection26.response();
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response29 = httpConnection28.response();
        org.jsoup.Connection connection31 = httpConnection28.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response33 = httpConnection32.response();
        httpConnection28.res = response33;
        httpConnection26.res = response33;
        org.jsoup.Connection connection36 = httpConnection21.response(response33);
        httpConnection0.res = response33;
        org.jsoup.helper.HttpConnection.Request request38 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method39 = request38.method();
        boolean boolean40 = request38.followRedirects;
        org.jsoup.Connection.Request request42 = request38.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = request38.headers();
        request38.timeoutMilliseconds = 307;
        request38.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = request38.cookies();
        org.jsoup.Connection connection49 = httpConnection0.cookies(strMap48);
        org.jsoup.Connection connection52 = httpConnection0.data("null=null=null=hi!", "null=null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response53 = httpConnection0.execute();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method39 + "' != '" + org.jsoup.Connection.Method.GET + "'", method39.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection.Response response7 = httpConnection0.res;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        response1.numRedirects = (byte) 10;
        java.net.URL uRL10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response11 = response1.url(uRL10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.headers();
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        boolean boolean11 = request9.followRedirects;
        org.jsoup.Connection.Request request13 = request9.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request9.cookies();
        boolean boolean16 = request9.hasCookie("");
        int int17 = request9.timeout();
        org.jsoup.Connection.Request request19 = request9.followRedirects(true);
        org.jsoup.parser.Parser parser20 = request9.parser();
        org.jsoup.helper.HttpConnection.Request request21 = request0.parser(parser20);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3000 + "'", int17 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection10 = httpConnection0.header("null=null", "");
        org.jsoup.Connection connection12 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.helper.HttpConnection.Response response13 = null;
        org.jsoup.helper.HttpConnection.Response response14 = new org.jsoup.helper.HttpConnection.Response(response13);
        int int15 = response14.statusCode();
        int int16 = response14.numRedirects;
        response14.charset = "";
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request19.headers();
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.ignoreHttpErrors();
        org.jsoup.Connection.Request request29 = request24.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method31 = request30.method();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = request30.headers();
        request30.followRedirects = false;
        boolean boolean35 = request30.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request37 = request30.timeout((int) ' ');
        java.lang.String str39 = request37.cookie("hi!");
        java.lang.String str41 = request37.header("null=null");
        request37.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method45 = request44.method();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = request44.headers();
        request44.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser49 = request44.parser;
        request37.parser = parser49;
        org.jsoup.helper.HttpConnection.Request request51 = request24.parser(parser49);
        org.jsoup.helper.HttpConnection.Request request52 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method53 = request52.method();
        org.jsoup.Connection.Request request54 = request51.method(method53);
        org.jsoup.Connection.Request request55 = request19.method(method53);
        org.jsoup.Connection.Response response56 = response14.method(method53);
        org.jsoup.Connection.Request request57 = response14.req;
        response14.statusCode = (byte) 10;
        java.util.Map<java.lang.String, java.lang.String> strMap60 = response14.headers();
        int int61 = response14.statusCode;
        httpConnection0.res = response14;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response63 = httpConnection0.execute();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + method45 + "' != '" + org.jsoup.Connection.Method.GET + "'", method45.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str6 = response1.statusMessage;
        java.nio.ByteBuffer byteBuffer7 = response1.byteData;
        java.lang.String str9 = response1.cookie("null=null=hi!");
        java.lang.String str11 = response1.getHeaderCaseInsensitive("hi!=");
        java.lang.String str12 = response1.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = response1.scanHeaders("null=null=");
        java.lang.String str13 = response1.getHeaderCaseInsensitive("null=hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.Connection connection18 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection connection20 = httpConnection0.ignoreHttpErrors(true);
        java.net.URL uRL21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection22 = httpConnection0.url(uRL21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        java.lang.String str3 = response1.statusMessage;
        java.lang.String str4 = response1.statusMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document5 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request3.headers();
        org.jsoup.Connection.Method method7 = request3.method();
        org.jsoup.Connection connection8 = httpConnection0.method(method7);
        org.jsoup.Connection connection11 = httpConnection0.data("hi!=null", "hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        boolean boolean7 = request5.ignoreHttpErrors();
        org.jsoup.Connection.Request request10 = request5.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        org.jsoup.helper.HttpConnection.Request request32 = request5.parser(parser30);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        org.jsoup.Connection.Request request35 = request32.method(method34);
        org.jsoup.Connection.Request request36 = request0.method(method34);
        boolean boolean37 = request0.ignoreHttpErrors();
        java.lang.String str39 = request0.header("hi!=null");
        org.jsoup.parser.Parser parser40 = request0.parser();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser40);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.parser.Parser parser13 = request0.parser;
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        org.jsoup.Connection connection17 = httpConnection14.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request18 = httpConnection14.req;
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request19.headers();
        request19.followRedirects = false;
        boolean boolean24 = request19.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request26 = request19.timeout((int) ' ');
        java.lang.String str28 = request26.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection29 = request26.data();
        org.jsoup.Connection connection30 = httpConnection14.data(keyValCollection29);
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        boolean boolean33 = request31.followRedirects;
        org.jsoup.Connection.Request request35 = request31.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request31.headers();
        boolean boolean37 = request31.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request38 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method39 = request38.method();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = request38.headers();
        request38.followRedirects = false;
        boolean boolean43 = request38.ignoreHttpErrors;
        org.jsoup.Connection.Method method44 = request38.method();
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method46 = request45.method();
        boolean boolean47 = request45.followRedirects;
        org.jsoup.Connection.Request request49 = request45.followRedirects(true);
        java.lang.String str51 = request45.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request52 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method53 = request52.method();
        org.jsoup.Connection.Request request54 = request45.method(method53);
        org.jsoup.Connection.Request request55 = request38.method(method53);
        org.jsoup.Connection.Request request56 = request31.method(method53);
        org.jsoup.Connection connection57 = httpConnection14.method(method53);
        org.jsoup.Connection.Request request58 = request0.method(method53);
        org.jsoup.Connection.Request request60 = request0.ignoreHttpErrors(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + method39 + "' != '" + org.jsoup.Connection.Method.GET + "'", method39.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal11.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = keyVal17.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal20.key = "hi!";
        java.lang.String str23 = keyVal20.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = keyVal20.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal29.key = "hi!";
        java.lang.String str32 = keyVal29.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str34 = keyVal33.toString();
        keyVal33.value = "";
        keyVal33.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal39.key = "hi!";
        java.lang.String str42 = keyVal39.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = keyVal39.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str46 = keyVal45.key();
        org.jsoup.Connection.KeyVal[] keyValArray47 = new org.jsoup.Connection.KeyVal[] { keyVal11, keyVal14, keyVal19, keyVal20, keyVal28, keyVal29, keyVal33, keyVal39, keyVal45 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList48 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList48, keyValArray47);
        request7.data = keyValList48;
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = request51.headers();
        request51.followRedirects = false;
        java.lang.String str57 = request51.cookie("");
        boolean boolean58 = request51.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method60 = request59.method();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = request59.headers();
        request59.followRedirects = false;
        boolean boolean64 = request59.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection65 = request59.data();
        request51.data = keyValCollection65;
        request7.data = keyValCollection65;
        org.jsoup.Connection.Request request70 = request7.cookie("hi!=null", "null=null=hi!");
        java.lang.String str72 = request7.getHeaderCaseInsensitive("null=null=");
        int int73 = request7.timeoutMilliseconds;
        int int74 = request7.maxBodySize();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null=null" + "'", str34.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "hi!" + "'", str42.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 32 + "'", int73 == 32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1048576 + "'", int74 == 1048576);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.Connection.Request request44 = response1.req;
        response1.statusCode = (byte) 10;
        java.util.Map<java.lang.String, java.lang.String> strMap47 = response1.headers();
        response1.executed = true;
        int int50 = response1.statusCode;
        boolean boolean52 = response1.hasHeader("null=null=hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.cookies();
        boolean boolean17 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str19 = keyVal18.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = keyVal18.value("hi!");
        java.lang.String str22 = keyVal21.toString();
        org.jsoup.helper.HttpConnection.Request request23 = request0.data((org.jsoup.Connection.KeyVal) keyVal21);
        int int24 = request23.timeoutMilliseconds;
        org.jsoup.parser.Parser parser25 = request23.parser();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null=hi!" + "'", str22.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3000 + "'", int24 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.net.URL uRL3 = response1.url();
        java.lang.String str4 = response1.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response21 = httpConnection20.response();
        org.jsoup.Connection connection23 = httpConnection20.followRedirects(false);
        org.jsoup.Connection.Response response24 = httpConnection20.response();
        httpConnection0.res = response24;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request26.headers();
        org.jsoup.Connection.Method method30 = request26.method();
        org.jsoup.Connection connection31 = httpConnection0.method(method30);
        org.jsoup.Connection connection33 = httpConnection0.timeout((int) (byte) 0);
        org.jsoup.Connection.Request request34 = httpConnection0.request();
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = request35.headers();
        request35.followRedirects = false;
        boolean boolean41 = request35.hasCookie("null=null");
        java.lang.String str43 = request35.getHeaderCaseInsensitive("null=hi!");
        java.lang.String str45 = request35.header("");
        java.lang.String str46 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request35);
        java.lang.String str48 = request35.header("");
        org.jsoup.Connection connection49 = httpConnection0.request((org.jsoup.Connection.Request) request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "" + "'", str46.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        int int8 = response1.statusCode();
        response1.contentType = "hi!=null";
        java.lang.String str11 = response1.charset;
        java.lang.String str12 = response1.contentType();
        java.lang.String str14 = response1.cookie("null=null=null=hi!=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!=null" + "'", str12.equals("hi!=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str5 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal4.value("hi!");
        java.lang.String str8 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal4.value("hi!");
        java.lang.String str11 = keyVal4.key();
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal4);
        boolean boolean13 = request0.ignoreContentType;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.Connection connection7 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection11 = httpConnection8.data("hi!", "hi!");
        org.jsoup.Connection.Response response12 = httpConnection8.res;
        org.jsoup.Connection connection13 = httpConnection0.response(response12);
        org.jsoup.Connection connection15 = httpConnection0.maxBodySize(32);
        org.jsoup.Connection connection17 = httpConnection0.referrer("null=hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=null");
        org.jsoup.Connection.Request request13 = request7.ignoreContentType(false);
        org.jsoup.Connection.Request request15 = request7.removeHeader("null=hi!");
        java.lang.String str17 = request7.header("null=null=null=hi!=hi!");
        org.jsoup.parser.Parser parser18 = request7.parser();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser18);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        int int5 = request0.maxBodySize();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1048576 + "'", int5 == 1048576);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.Connection connection32 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request33.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request33.headers();
        org.jsoup.Connection.Method method37 = request33.method();
        org.jsoup.Connection connection38 = httpConnection0.method(method37);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        boolean boolean41 = request39.followRedirects;
        org.jsoup.Connection.Request request43 = request39.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request39.headers();
        boolean boolean45 = request39.ignoreContentType;
        request39.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = request39.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = request39.cookies();
        java.lang.String str51 = request39.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request53 = request39.timeout(0);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection54 = request39.data();
        org.jsoup.Connection connection55 = httpConnection0.data(keyValCollection54);
        org.jsoup.helper.HttpConnection.Response response56 = null;
        org.jsoup.helper.HttpConnection.Response response57 = new org.jsoup.helper.HttpConnection.Response(response56);
        int int58 = response57.statusCode();
        int int59 = response57.numRedirects;
        java.lang.String str60 = response57.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry62 = response57.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap63 = response57.headers();
        org.jsoup.Connection connection64 = httpConnection0.cookies(strMap63);
        org.jsoup.Connection.Request request65 = httpConnection0.request();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request65);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("null=null", "null=hi!");
        java.lang.String str3 = keyVal2.key;
        keyVal2.value = "hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=null" + "'", str3.equals("null=null"));
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        java.lang.String str14 = request0.cookie("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request0.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        int int6 = response1.statusCode();
        int int7 = response1.numRedirects;
        java.lang.String str8 = response1.statusMessage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.maxBodySize((int) (short) 1);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request6 = null;
        org.jsoup.Connection connection7 = httpConnection5.request(request6);
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        org.jsoup.Connection.Request request10 = httpConnection8.request();
        org.jsoup.Connection connection11 = httpConnection5.request(request10);
        org.jsoup.Connection connection14 = httpConnection5.cookie("null=null", "null=null");
        org.jsoup.Connection connection16 = httpConnection5.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.cookies();
        org.jsoup.Connection connection23 = httpConnection5.data(strMap22);
        org.jsoup.Connection connection24 = httpConnection0.data(strMap22);
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.followRedirects = false;
        java.lang.String str31 = request25.cookie("");
        boolean boolean32 = request25.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request33.headers();
        request33.followRedirects = false;
        boolean boolean38 = request33.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection39 = request33.data();
        request25.data = keyValCollection39;
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = keyVal43.key("null=null");
        org.jsoup.helper.HttpConnection.Request request46 = request25.data((org.jsoup.Connection.KeyVal) keyVal45);
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = request47.headers();
        request47.followRedirects = false;
        boolean boolean52 = request47.ignoreHttpErrors;
        org.jsoup.Connection.Method method53 = request47.method();
        int int54 = request47.maxBodySizeBytes;
        org.jsoup.Connection.Method method55 = request47.method();
        org.jsoup.Connection.Request request56 = request25.method(method55);
        org.jsoup.Connection connection57 = httpConnection0.request((org.jsoup.Connection.Request) request25);
        org.jsoup.helper.HttpConnection httpConnection58 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection60 = httpConnection58.followRedirects(false);
        org.jsoup.Connection connection62 = httpConnection58.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection63 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response64 = httpConnection63.response();
        org.jsoup.helper.HttpConnection httpConnection65 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response66 = httpConnection65.response();
        org.jsoup.Connection connection68 = httpConnection65.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection69 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response70 = httpConnection69.response();
        httpConnection65.res = response70;
        httpConnection63.res = response70;
        org.jsoup.Connection connection73 = httpConnection58.response(response70);
        org.jsoup.Connection connection75 = httpConnection58.ignoreHttpErrors(false);
        org.jsoup.Connection connection77 = httpConnection58.referrer("hi!");
        org.jsoup.helper.HttpConnection.Request request78 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method79 = request78.method();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = request78.headers();
        request78.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser83 = request78.parser;
        org.jsoup.Connection connection84 = httpConnection58.parser(parser83);
        org.jsoup.Connection connection85 = httpConnection0.parser(parser83);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document86 = httpConnection0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1048576 + "'", int54 == 1048576);
        org.junit.Assert.assertTrue("'" + method55 + "' != '" + org.jsoup.Connection.Method.GET + "'", method55.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection77);
        org.junit.Assert.assertTrue("'" + method79 + "' != '" + org.jsoup.Connection.Method.GET + "'", method79.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection85);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response21 = httpConnection20.response();
        org.jsoup.Connection connection23 = httpConnection20.followRedirects(false);
        org.jsoup.Connection.Response response24 = httpConnection20.response();
        httpConnection0.res = response24;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request26.headers();
        org.jsoup.Connection.Method method30 = request26.method();
        org.jsoup.Connection connection31 = httpConnection0.method(method30);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response33 = httpConnection32.response();
        org.jsoup.Connection connection35 = httpConnection32.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection36 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection39 = httpConnection36.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = request40.headers();
        int int43 = request40.timeout();
        org.jsoup.parser.Parser parser44 = request40.parser();
        org.jsoup.Connection connection45 = httpConnection36.parser(parser44);
        org.jsoup.Connection connection46 = httpConnection32.parser(parser44);
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        boolean boolean49 = request47.ignoreHttpErrors();
        org.jsoup.Connection.Request request52 = request47.cookie("hi!", "");
        boolean boolean53 = request47.ignoreContentType;
        org.jsoup.Connection.Request request56 = request47.cookie("null=hi!", "hi!");
        java.lang.String str58 = request47.getHeaderCaseInsensitive("");
        java.lang.String str60 = request47.cookie("");
        request47.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = request47.cookies();
        org.jsoup.Connection connection64 = httpConnection32.data(strMap63);
        org.jsoup.Connection connection65 = httpConnection0.cookies(strMap63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3000 + "'", int43 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection65);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal0.value("null=");
        keyVal7.key = "null=null=null=hi!";
        java.lang.String str10 = keyVal7.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null=null=null=hi!" + "'", str10.equals("null=null=null=hi!"));
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        java.lang.String str6 = response1.getHeaderCaseInsensitive("null=null");
        java.lang.String str7 = response1.statusMessage;
        java.util.Map<java.lang.String, java.lang.String> strMap8 = response1.headers();
        java.nio.ByteBuffer byteBuffer9 = response1.byteData;
        response1.statusCode = 0;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer9);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout((int) (short) 0);
        boolean boolean5 = request4.ignoreHttpErrors;
        int int6 = request4.timeoutMilliseconds;
        org.jsoup.parser.Parser parser7 = request4.parser;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser7);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        request7.ignoreHttpErrors = false;
        org.jsoup.Connection.Request request12 = request7.ignoreContentType(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection connection6 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection connection8 = httpConnection0.referrer("hi!=");
        org.jsoup.Connection connection10 = httpConnection0.followRedirects(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        org.jsoup.Connection.Request request10 = request0.removeCookie("null=hi!");
        java.lang.String str12 = request0.getHeaderCaseInsensitive("hi!");
        org.jsoup.Connection.Request request15 = request0.cookie("null=null=null=hi!", "null=null=null=hi!=hi!");
        org.jsoup.helper.HttpConnection.Response response16 = null;
        org.jsoup.helper.HttpConnection.Response response17 = new org.jsoup.helper.HttpConnection.Response(response16);
        int int18 = response17.statusCode();
        int int19 = response17.numRedirects;
        java.lang.String str20 = response17.charset;
        java.lang.String str21 = response17.charset;
        org.jsoup.Connection.Response response24 = response17.header("null=", "hi!");
        java.lang.String str26 = response17.cookie("");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response27 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        java.lang.String str3 = response1.contentType();
        int int4 = response1.statusCode();
        java.net.URL uRL5 = response1.url();
        java.lang.String str6 = response1.charset();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean7 = request0.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.followRedirects = false;
        boolean boolean13 = request8.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection14 = request8.data();
        request0.data = keyValCollection14;
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request16.headers();
        request16.followRedirects = false;
        java.lang.String str22 = request16.cookie("");
        boolean boolean23 = request16.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request24.headers();
        request24.followRedirects = false;
        boolean boolean29 = request24.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection30 = request24.data();
        request16.data = keyValCollection30;
        request0.data = keyValCollection30;
        java.lang.String str34 = request0.getHeaderCaseInsensitive("");
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        boolean boolean37 = request35.ignoreHttpErrors();
        org.jsoup.Connection.Request request40 = request35.cookie("hi!", "");
        boolean boolean41 = request35.ignoreContentType;
        org.jsoup.Connection.Request request44 = request35.cookie("null=hi!", "hi!");
        java.lang.String str46 = request35.getHeaderCaseInsensitive("");
        java.lang.String str48 = request35.cookie("");
        request35.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap51 = request35.cookies();
        boolean boolean52 = request35.followRedirects();
        org.jsoup.helper.HttpConnection.KeyVal keyVal53 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str54 = keyVal53.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal56 = keyVal53.value("hi!");
        java.lang.String str57 = keyVal56.toString();
        org.jsoup.helper.HttpConnection.Request request58 = request35.data((org.jsoup.Connection.KeyVal) keyVal56);
        java.lang.String str59 = keyVal56.value;
        org.jsoup.helper.HttpConnection.Request request60 = request0.data((org.jsoup.Connection.KeyVal) keyVal56);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection14);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "null=hi!" + "'", str57.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "hi!" + "'", str59.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int19 = request18.timeout();
        request18.maxBodySizeBytes = 3000;
        org.jsoup.Connection.Request request24 = request18.cookie("hi!", "null=hi!");
        org.jsoup.helper.HttpConnection.Response response25 = null;
        org.jsoup.helper.HttpConnection.Response response26 = new org.jsoup.helper.HttpConnection.Response(response25);
        int int27 = response26.statusCode();
        int int28 = response26.numRedirects;
        response26.charset = "";
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request34 = request31.ignoreContentType(false);
        org.jsoup.Connection.Request request36 = request31.removeCookie("");
        int int37 = request31.maxBodySize();
        org.jsoup.Connection.Request request39 = request31.followRedirects(false);
        response26.req = request31;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response41 = org.jsoup.helper.HttpConnection.Response.execute(request24, response26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1048576 + "'", int37 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        org.jsoup.Connection.Request request8 = request0.maxBodySize((int) (byte) 0);
        request0.timeoutMilliseconds = (short) 0;
        boolean boolean11 = request0.followRedirects;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.parser.Parser parser6 = request0.parser;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        request7.followRedirects = false;
        boolean boolean12 = request7.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request14 = request7.timeout((int) ' ');
        java.lang.String str16 = request14.cookie("hi!");
        java.lang.String str18 = request14.header("null=null");
        request14.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request21.headers();
        request21.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser26 = request21.parser;
        request14.parser = parser26;
        org.jsoup.helper.HttpConnection.Request request28 = request0.parser(parser26);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        org.jsoup.Connection.Request request16 = request0.removeCookie("");
        java.net.URL uRL17 = request0.url();
        org.jsoup.Connection.Method method18 = request0.method();
        boolean boolean20 = request0.hasCookie("hi!=null=hi!=null");
        java.lang.String str22 = request0.cookie("null=");
        boolean boolean24 = request0.hasHeader("null=null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request0.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL17);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.cookies();
        request0.ignoreContentType = true;
        org.jsoup.Connection.Request request20 = request0.removeCookie("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        int int2 = request0.maxBodySizeBytes;
        org.jsoup.Connection.Method method3 = request0.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1048576 + "'", int2 == 1048576);
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection9 = httpConnection7.followRedirects(false);
        org.jsoup.Connection connection11 = httpConnection7.referrer("");
        org.jsoup.Connection.Response response12 = httpConnection7.response();
        org.jsoup.Connection connection13 = httpConnection0.response(response12);
        org.jsoup.Connection connection15 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection17 = httpConnection0.referrer("hi!=null=hi!=null");
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        boolean boolean20 = request18.followRedirects;
        org.jsoup.Connection.Request request22 = request18.followRedirects(true);
        org.jsoup.parser.Parser parser23 = request18.parser;
        org.jsoup.Connection connection24 = httpConnection0.parser(parser23);
        org.jsoup.helper.HttpConnection.Response response25 = null;
        org.jsoup.helper.HttpConnection.Response response26 = new org.jsoup.helper.HttpConnection.Response(response25);
        java.lang.String str27 = response26.contentType();
        java.lang.String str28 = response26.contentType();
        response26.numRedirects = 1;
        java.net.URL uRL31 = response26.url();
        org.jsoup.Connection connection32 = httpConnection0.response((org.jsoup.Connection.Response) response26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        java.net.URL uRL7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request8 = request0.url(uRL7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        java.lang.String str3 = response1.contentType();
        boolean boolean5 = response1.hasCookie("null=null=hi!");
        java.lang.String str7 = response1.getHeaderCaseInsensitive("null=hi!");
        response1.statusMessage = "hi!=null=hi!=null";
        java.net.URL uRL10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response11 = response1.url(uRL10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (short) 100;
        org.jsoup.parser.Parser parser9 = request0.parser;
        org.jsoup.Connection.Request request12 = request0.cookie("null=null", "hi!=null");
        org.jsoup.Connection.Request request14 = request0.maxBodySize(97);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        boolean boolean2 = request0.followRedirects;
        request0.ignoreContentType = true;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = request0.scanHeaders("null=");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = request0.scanHeaders("hi!");
        request0.ignoreContentType = false;
        java.net.URL uRL11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request12 = request0.url(uRL11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection.Request request10 = httpConnection0.request();
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        java.lang.String str17 = request11.cookie("");
        org.jsoup.Connection.Request request19 = request11.maxBodySize((int) (short) 100);
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response21 = httpConnection20.response();
        org.jsoup.Connection connection23 = httpConnection20.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response25 = httpConnection24.response();
        httpConnection20.res = response25;
        org.jsoup.Connection connection29 = httpConnection20.header("hi!", "");
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method31 = request30.method();
        boolean boolean32 = request30.followRedirects;
        org.jsoup.Connection.Request request34 = request30.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request30.headers();
        boolean boolean36 = request30.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        request37.followRedirects = false;
        boolean boolean42 = request37.ignoreHttpErrors;
        org.jsoup.Connection.Method method43 = request37.method();
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method45 = request44.method();
        boolean boolean46 = request44.followRedirects;
        org.jsoup.Connection.Request request48 = request44.followRedirects(true);
        java.lang.String str50 = request44.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        org.jsoup.Connection.Request request53 = request44.method(method52);
        org.jsoup.Connection.Request request54 = request37.method(method52);
        org.jsoup.Connection.Request request55 = request30.method(method52);
        org.jsoup.Connection.Request request57 = request30.removeHeader("hi!=null");
        httpConnection20.req = request30;
        org.jsoup.parser.Parser parser59 = request30.parser;
        request11.parser = parser59;
        org.jsoup.Connection connection61 = httpConnection0.parser(parser59);
        org.jsoup.helper.HttpConnection.Response response62 = null;
        org.jsoup.helper.HttpConnection.Response response63 = new org.jsoup.helper.HttpConnection.Response(response62);
        int int64 = response63.statusCode();
        int int65 = response63.numRedirects;
        java.lang.String str66 = response63.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry68 = response63.scanHeaders("");
        java.lang.String str70 = response63.cookie("");
        java.lang.String str72 = response63.header("null=null");
        httpConnection0.res = response63;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method45 + "' != '" + org.jsoup.Connection.Method.GET + "'", method45.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        boolean boolean16 = request14.hasHeader("null=null");
        request14.ignoreContentType = true;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection19 = request14.data;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection19);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.helper.HttpConnection.Response response31 = null;
        org.jsoup.helper.HttpConnection.Response response32 = new org.jsoup.helper.HttpConnection.Response(response31);
        int int33 = response32.statusCode();
        int int34 = response32.numRedirects;
        java.lang.String str35 = response32.charset;
        response32.contentType = "null=null=null=hi!";
        response32.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap40 = response32.headers();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry42 = response32.scanHeaders("null=null=");
        org.jsoup.Connection connection43 = httpConnection0.response((org.jsoup.Connection.Response) response32);
        java.lang.String str44 = response32.contentType;
        org.jsoup.Connection.Response response47 = response32.cookie("null=null=null=hi!", "hi!=");
        int int48 = response32.statusCode;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "null=null=null=hi!" + "'", str44.equals("null=null=null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Response response4 = null;
        org.jsoup.helper.HttpConnection.Response response5 = new org.jsoup.helper.HttpConnection.Response(response4);
        int int6 = response5.statusCode();
        int int7 = response5.numRedirects;
        response5.charset = "";
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        request10.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        boolean boolean17 = request15.ignoreHttpErrors();
        org.jsoup.Connection.Request request20 = request15.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request21.headers();
        request21.followRedirects = false;
        boolean boolean26 = request21.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request28 = request21.timeout((int) ' ');
        java.lang.String str30 = request28.cookie("hi!");
        java.lang.String str32 = request28.header("null=null");
        request28.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = request35.headers();
        request35.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser40 = request35.parser;
        request28.parser = parser40;
        org.jsoup.helper.HttpConnection.Request request42 = request15.parser(parser40);
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method44 = request43.method();
        org.jsoup.Connection.Request request45 = request42.method(method44);
        org.jsoup.Connection.Request request46 = request10.method(method44);
        org.jsoup.Connection.Response response47 = response5.method(method44);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = response5.cookies();
        org.jsoup.Connection connection49 = httpConnection0.cookies(strMap48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.helper.HttpConnection.Response response44 = new org.jsoup.helper.HttpConnection.Response(response1);
        boolean boolean46 = response1.hasCookie("null=hi!");
        response1.statusCode = 1048576;
        java.nio.ByteBuffer byteBuffer49 = response1.byteData;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer49);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        org.jsoup.Connection.Request request12 = request7.cookie("null=null", "null=null=null=hi!");
        boolean boolean14 = request7.hasCookie("null=null=null=hi!");
        org.jsoup.Connection.Request request16 = request7.ignoreHttpErrors(false);
        org.jsoup.Connection.Request request18 = request7.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request7.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        boolean boolean9 = request7.followRedirects;
        org.jsoup.Connection.Request request11 = request7.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.headers();
        org.jsoup.Connection connection13 = httpConnection0.data(strMap12);
        org.jsoup.Connection connection16 = httpConnection0.header("hi!", "null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection18 = httpConnection0.url("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.value("");
        java.lang.String str5 = keyVal2.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal2.value("null=hi!=null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null=null=" + "'", str5.equals("null=null="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry20 = request18.scanHeaders("");
        boolean boolean21 = request18.followRedirects;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request18.cookies();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection23 = request18.data;
        boolean boolean24 = request18.ignoreContentType();
        boolean boolean25 = request18.followRedirects();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean8 = request0.hasCookie("");
        org.jsoup.Connection.Request request10 = request0.removeHeader("null=hi!");
        boolean boolean12 = request0.hasCookie("null=null=");
        java.lang.String str14 = request0.getHeaderCaseInsensitive("hi!=");
        boolean boolean15 = request0.followRedirects;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.lang.String str17 = response1.cookie("null=null=hi!");
        boolean boolean19 = response1.hasHeader("null=");
        java.lang.String str21 = response1.header("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = response1.headers();
        response1.numRedirects = 32;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.parser.Parser parser7 = null;
        org.jsoup.Connection connection8 = httpConnection0.parser(parser7);
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.lang.String str17 = request11.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request11.method(method19);
        org.jsoup.Connection.Request request21 = request9.method(method19);
        org.jsoup.Connection connection22 = httpConnection0.method(method19);
        java.net.URL uRL23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection24 = httpConnection0.url(uRL23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.lang.String str10 = request7.header("hi!");
        org.jsoup.Connection.Request request12 = request7.maxBodySize(1);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request7.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        java.util.Map<java.lang.String, java.lang.String> strMap3 = response1.cookies();
        java.lang.String str5 = response1.getHeaderCaseInsensitive("null=hi!=null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean7 = request0.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.followRedirects = false;
        boolean boolean13 = request8.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection14 = request8.data();
        request0.data = keyValCollection14;
        java.lang.String str17 = request0.cookie("null=hi!=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.userAgent("null=hi!");
        org.jsoup.Connection connection6 = httpConnection0.cookie("hi!=null", "null=null=");
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.followRedirects = false;
        boolean boolean13 = request8.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request15 = request8.timeout((int) ' ');
        java.lang.String str17 = request15.cookie("hi!");
        boolean boolean18 = request15.ignoreContentType;
        java.net.URL uRL19 = request15.url();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request15.cookies();
        org.jsoup.Connection connection21 = httpConnection0.data(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=null");
        request0.ignoreHttpErrors = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection9 = httpConnection7.followRedirects(false);
        org.jsoup.Connection connection11 = httpConnection7.referrer("");
        org.jsoup.Connection.Response response12 = httpConnection7.response();
        org.jsoup.Connection connection13 = httpConnection0.response(response12);
        org.jsoup.Connection connection15 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.ignoreHttpErrors();
        org.jsoup.Connection.Request request21 = request16.cookie("hi!", "");
        java.lang.String str23 = request16.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.lang.String str30 = request24.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request33 = request24.method(method32);
        org.jsoup.Connection.Request request34 = request16.method(method32);
        org.jsoup.Connection connection35 = httpConnection0.method(method32);
        org.jsoup.Connection connection37 = httpConnection0.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection38 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response39 = httpConnection38.response();
        org.jsoup.Connection connection41 = httpConnection38.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection42 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response43 = httpConnection42.response();
        httpConnection38.res = response43;
        java.lang.String[] strArray47 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection48 = httpConnection38.data(strArray47);
        org.jsoup.Connection connection49 = httpConnection0.data(strArray47);
        org.jsoup.Connection.Response response50 = httpConnection0.response();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response50);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.Connection connection7 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection10 = httpConnection0.cookie("null=null", "null=null=null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection14 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request15.headers();
        request15.followRedirects = false;
        java.net.URL uRL20 = request15.url();
        org.jsoup.Connection.Request request22 = request15.removeCookie("hi!");
        org.jsoup.Connection.Request request24 = request15.ignoreHttpErrors(true);
        httpConnection0.req = request15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        boolean boolean2 = request0.followRedirects;
        int int3 = request0.timeoutMilliseconds;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection4 = request0.data;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection4);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection.Response response1 = null;
        org.jsoup.helper.HttpConnection.Response response2 = new org.jsoup.helper.HttpConnection.Response(response1);
        int int3 = response2.statusCode();
        int int4 = response2.numRedirects;
        response2.charset = "";
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        request7.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.ignoreHttpErrors();
        org.jsoup.Connection.Request request17 = request12.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.headers();
        request18.followRedirects = false;
        boolean boolean23 = request18.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request25 = request18.timeout((int) ' ');
        java.lang.String str27 = request25.cookie("hi!");
        java.lang.String str29 = request25.header("null=null");
        request25.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser37 = request32.parser;
        request25.parser = parser37;
        org.jsoup.helper.HttpConnection.Request request39 = request12.parser(parser37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        org.jsoup.Connection.Request request42 = request39.method(method41);
        org.jsoup.Connection.Request request43 = request7.method(method41);
        org.jsoup.Connection.Response response44 = response2.method(method41);
        org.jsoup.Connection.Request request45 = request0.method(method41);
        request0.ignoreContentType = true;
        boolean boolean48 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request50 = request0.timeout((int) 'a');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "null=null");
        boolean boolean10 = request0.followRedirects;
        org.jsoup.Connection.Request request12 = request0.removeHeader("hi!");
        org.jsoup.Connection.Request request14 = request0.removeCookie("");
        request0.ignoreContentType = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        int int8 = response1.statusCode();
        org.jsoup.Connection.Response response10 = response1.removeCookie("null=null=hi!");
        response1.charset = "null=null=null=hi!";
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document13 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        request0.followRedirects = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.value("hi!=null");
        keyVal2.key = "hi!=null";
        java.lang.String str7 = keyVal2.toString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!=null=hi!=null" + "'", str7.equals("hi!=null=hi!=null"));
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        java.lang.String str3 = keyVal2.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal2.value("hi!=");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal5.value("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        int int12 = request7.maxBodySize();
        java.lang.String str14 = request7.header("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request7.headers();
        int int16 = request7.timeoutMilliseconds;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request7.cookies();
        org.jsoup.Connection.Request request19 = request7.followRedirects(false);
        org.jsoup.helper.HttpConnection.Response response20 = null;
        org.jsoup.helper.HttpConnection.Response response21 = new org.jsoup.helper.HttpConnection.Response(response20);
        org.jsoup.Connection.Method method22 = response21.method();
        boolean boolean24 = response21.hasCookie("");
        boolean boolean26 = response21.hasCookie("null=");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response27 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request7, response21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        int int7 = request0.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request8.headers();
        boolean boolean14 = request8.ignoreContentType;
        boolean boolean15 = request8.followRedirects();
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        org.jsoup.Connection.Request request18 = request8.method(method17);
        org.jsoup.Connection.Request request19 = request0.method(method17);
        org.jsoup.parser.Parser parser20 = null;
        org.jsoup.helper.HttpConnection.Request request21 = request0.parser(parser20);
        org.jsoup.Connection.Request request23 = request21.removeCookie("null=null=null=hi!=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1048576 + "'", int7 == 1048576);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.lang.String str19 = request13.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        org.jsoup.Connection.Request request22 = request13.method(method21);
        org.jsoup.Connection.Request request23 = request11.method(method21);
        org.jsoup.helper.HttpConnection.KeyVal keyVal24 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str25 = keyVal24.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = keyVal24.value("");
        java.lang.String str28 = keyVal24.value();
        org.jsoup.helper.HttpConnection.Request request29 = request11.data((org.jsoup.Connection.KeyVal) keyVal24);
        int int30 = request29.timeout();
        response10.req = request29;
        httpConnection0.res = response10;
        boolean boolean34 = response10.hasCookie("null=null=");
        java.lang.String str35 = response10.contentType;
        boolean boolean37 = response10.hasCookie("null=null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null=null" + "'", str25.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3000 + "'", int30 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request7.data();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("null=hi!=null=null", "null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean7 = request0.ignoreContentType();
        java.lang.String str9 = request0.header("hi!=null");
        org.jsoup.Connection.Request request12 = request0.cookie("null=null=null=hi!", "null=hi!");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry14 = request0.scanHeaders("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry14);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response1.scanHeaders("hi!=");
        int int18 = response1.numRedirects;
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        boolean boolean21 = request19.followRedirects;
        org.jsoup.Connection.Request request23 = request19.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request19.cookies();
        boolean boolean26 = request19.hasCookie("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request19.headers();
        response1.req = request19;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.charset;
        org.jsoup.Connection.Response response8 = response1.header("null=", "hi!");
        java.lang.String str10 = response1.cookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap11 = response1.cookies();
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        boolean boolean20 = request19.ignoreHttpErrors;
        org.jsoup.Connection.Method method21 = request19.method();
        org.jsoup.Connection.Response response22 = response1.method(method21);
        response1.executed = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = request2.headers();
        request2.followRedirects = false;
        boolean boolean7 = request2.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request9 = request2.timeout((int) ' ');
        boolean boolean10 = request9.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal13.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = keyVal19.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal22.key = "hi!";
        java.lang.String str25 = keyVal22.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = keyVal22.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal30 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal31.key = "hi!";
        java.lang.String str34 = keyVal31.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str36 = keyVal35.toString();
        keyVal35.value = "";
        keyVal35.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal41 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal41.key = "hi!";
        java.lang.String str44 = keyVal41.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal46 = keyVal41.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal47 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str48 = keyVal47.key();
        org.jsoup.Connection.KeyVal[] keyValArray49 = new org.jsoup.Connection.KeyVal[] { keyVal13, keyVal16, keyVal21, keyVal22, keyVal30, keyVal31, keyVal35, keyVal41, keyVal47 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList50 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList50, keyValArray49);
        request9.data = keyValList50;
        org.jsoup.helper.HttpConnection.Request request53 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method54 = request53.method();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = request53.headers();
        request53.followRedirects = false;
        java.lang.String str59 = request53.cookie("");
        boolean boolean60 = request53.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method62 = request61.method();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = request61.headers();
        request61.followRedirects = false;
        boolean boolean66 = request61.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection67 = request61.data();
        request53.data = keyValCollection67;
        request9.data = keyValCollection67;
        org.jsoup.Connection connection70 = httpConnection0.data(keyValCollection67);
        org.jsoup.helper.HttpConnection httpConnection71 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response72 = httpConnection71.response();
        org.jsoup.Connection.Request request73 = httpConnection71.request();
        org.jsoup.Connection connection75 = httpConnection71.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request76 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = request76.headers();
        httpConnection71.req = request76;
        org.jsoup.parser.Parser parser79 = request76.parser();
        org.jsoup.Connection.Request request82 = request76.header("null=", "null=");
        org.jsoup.Connection.Request request85 = request76.header("null=null=null=hi!", "hi!=");
        org.jsoup.Connection connection86 = httpConnection0.request(request85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "hi!" + "'", str34.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null=null" + "'", str36.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "hi!" + "'", str44.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + method54 + "' != '" + org.jsoup.Connection.Method.GET + "'", method54.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + method62 + "' != '" + org.jsoup.Connection.Method.GET + "'", method62.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection86);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        boolean boolean10 = request7.ignoreContentType;
        java.net.URL uRL11 = request7.url();
        boolean boolean12 = request7.followRedirects();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request7.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal12.key = "hi!";
        java.lang.String str15 = keyVal12.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = keyVal12.key("hi!");
        java.lang.String str18 = keyVal12.value();
        keyVal12.key = "null=";
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = keyVal12.value("null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request23 = request7.data((org.jsoup.Connection.KeyVal) keyVal12);
        org.jsoup.Connection.Method method24 = request23.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        int int3 = request0.timeout();
        org.jsoup.parser.Parser parser4 = request0.parser();
        org.jsoup.Connection.Request request7 = request0.cookie("hi!=null=hi!=null", "hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = 52;
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        boolean boolean22 = request20.followRedirects;
        org.jsoup.Connection.Request request24 = request20.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request20.headers();
        request20.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser28 = request20.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request20.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request20.cookies();
        org.jsoup.Connection connection31 = httpConnection0.cookies(strMap30);
        org.jsoup.helper.HttpConnection.Response response32 = null;
        org.jsoup.helper.HttpConnection.Response response33 = new org.jsoup.helper.HttpConnection.Response(response32);
        int int34 = response33.statusCode();
        response33.charset = "hi!=null";
        org.jsoup.Connection.Response response38 = response33.removeHeader("hi!=");
        java.lang.String str39 = response33.contentType();
        httpConnection0.res = response33;
        java.nio.ByteBuffer byteBuffer41 = response33.byteData;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer41);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        org.jsoup.Connection.Request request10 = request0.method(method9);
        boolean boolean11 = request0.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection12 = request0.data();
        request0.maxBodySizeBytes = 3000;
        org.jsoup.Connection.Request request16 = request0.ignoreContentType(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        org.jsoup.helper.HttpConnection.Request request4 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method5 = request4.method();
        boolean boolean6 = request4.followRedirects;
        org.jsoup.Connection.Request request8 = request4.followRedirects(true);
        java.lang.String str10 = request4.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        org.jsoup.Connection.Request request13 = request4.method(method12);
        org.jsoup.Connection.Request request14 = request2.method(method12);
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str16 = keyVal15.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = keyVal15.value("");
        java.lang.String str19 = keyVal15.value();
        org.jsoup.helper.HttpConnection.Request request20 = request2.data((org.jsoup.Connection.KeyVal) keyVal15);
        int int21 = request20.timeout();
        response1.req = request20;
        boolean boolean24 = response1.hasHeader("null=");
        int int25 = response1.statusCode();
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null=null" + "'", str16.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3000 + "'", int21 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        java.lang.String str3 = response1.contentType();
        boolean boolean5 = response1.hasCookie("null=null=hi!");
        java.lang.String str7 = response1.getHeaderCaseInsensitive("null=hi!");
        java.nio.ByteBuffer byteBuffer8 = response1.byteData;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer8);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.followRedirects = false;
        int int9 = request0.timeout();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request0.data;
        boolean boolean11 = request0.ignoreContentType();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3000 + "'", int9 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(1048576);
        boolean boolean5 = request0.ignoreContentType;
        request0.timeoutMilliseconds = (byte) -1;
        org.jsoup.Connection.Request request9 = request0.maxBodySize((int) (byte) 1);
        int int10 = request0.timeoutMilliseconds;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.helper.HttpConnection.Response response31 = null;
        org.jsoup.helper.HttpConnection.Response response32 = new org.jsoup.helper.HttpConnection.Response(response31);
        int int33 = response32.statusCode();
        int int34 = response32.numRedirects;
        java.lang.String str35 = response32.charset;
        response32.contentType = "null=null=null=hi!";
        response32.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap40 = response32.headers();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry42 = response32.scanHeaders("null=null=");
        org.jsoup.Connection connection43 = httpConnection0.response((org.jsoup.Connection.Response) response32);
        java.lang.String str44 = response32.contentType;
        org.jsoup.Connection.Response response47 = response32.cookie("null=null=null=hi!", "hi!=");
        java.lang.String str48 = response32.charset;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "null=null=null=hi!" + "'", str44.equals("null=null=null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        int int10 = response1.numRedirects;
        org.jsoup.Connection.Method method11 = response1.method();
        java.lang.String str12 = response1.contentType;
        response1.numRedirects = (byte) 10;
        response1.statusMessage = "";
        response1.statusCode = 1;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout((int) (short) 0);
        org.jsoup.Connection.Method method5 = request0.method();
        boolean boolean6 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request8 = request0.timeout((int) (byte) 100);
        boolean boolean9 = request8.ignoreHttpErrors;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("");
        org.jsoup.Connection.Request request9 = request0.removeHeader("null=null=null=hi!");
        org.jsoup.Connection.Request request11 = request0.ignoreContentType(true);
        int int12 = request0.timeout();
        int int13 = request0.timeoutMilliseconds;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3000 + "'", int12 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        org.jsoup.Connection.Request request9 = request0.method(method8);
        java.net.URL uRL10 = request0.url();
        java.lang.String str12 = request0.cookie("null=null=null=hi!");
        boolean boolean14 = request0.hasCookie("hi!=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        request0.parser = parser30;
        int int33 = request0.timeoutMilliseconds;
        org.jsoup.Connection.Request request35 = request0.maxBodySize((int) (byte) 10);
        org.jsoup.Connection.Request request37 = request0.maxBodySize(52);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3000 + "'", int33 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.Connection.Request request44 = response1.req;
        response1.statusCode = (byte) 10;
        java.util.Map<java.lang.String, java.lang.String> strMap47 = response1.headers();
        int int48 = response1.statusCode();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        org.jsoup.Connection.Request request10 = request0.removeCookie("null=hi!");
        java.lang.String str12 = request0.getHeaderCaseInsensitive("hi!");
        org.jsoup.Connection.Request request15 = request0.cookie("null=null=null=hi!", "null=null=null=hi!=hi!");
        request0.ignoreContentType = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("null=null=hi!", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        java.net.URL uRL15 = request0.url();
        org.jsoup.Connection.Request request17 = request0.removeCookie("");
        boolean boolean18 = request0.ignoreHttpErrors;
        request0.ignoreContentType = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int19 = request18.timeout();
        request18.maxBodySizeBytes = 3000;
        boolean boolean22 = request18.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request23.headers();
        request23.followRedirects = false;
        boolean boolean28 = request23.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request30 = request23.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry32 = request23.scanHeaders("null=null");
        boolean boolean33 = request23.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection.Response response35 = null;
        org.jsoup.helper.HttpConnection.Response response36 = new org.jsoup.helper.HttpConnection.Response(response35);
        int int37 = response36.statusCode();
        int int38 = response36.numRedirects;
        response36.charset = "";
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = request41.headers();
        request41.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method47 = request46.method();
        boolean boolean48 = request46.ignoreHttpErrors();
        org.jsoup.Connection.Request request51 = request46.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request52 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method53 = request52.method();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = request52.headers();
        request52.followRedirects = false;
        boolean boolean57 = request52.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request59 = request52.timeout((int) ' ');
        java.lang.String str61 = request59.cookie("hi!");
        java.lang.String str63 = request59.header("null=null");
        request59.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request66 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method67 = request66.method();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = request66.headers();
        request66.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser71 = request66.parser;
        request59.parser = parser71;
        org.jsoup.helper.HttpConnection.Request request73 = request46.parser(parser71);
        org.jsoup.helper.HttpConnection.Request request74 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method75 = request74.method();
        org.jsoup.Connection.Request request76 = request73.method(method75);
        org.jsoup.Connection.Request request77 = request41.method(method75);
        org.jsoup.Connection.Response response78 = response36.method(method75);
        org.jsoup.Connection.Request request79 = request34.method(method75);
        request34.ignoreContentType = true;
        org.jsoup.helper.HttpConnection.Request request82 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method83 = request82.method();
        org.jsoup.Connection.Request request85 = request82.ignoreContentType(false);
        org.jsoup.Connection.Request request87 = request82.removeCookie("");
        int int88 = request82.maxBodySize();
        org.jsoup.Connection.Request request90 = request82.followRedirects(false);
        java.lang.String str92 = request82.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.Connection.Method method93 = request82.method();
        org.jsoup.Connection.Request request94 = request34.method(method93);
        org.jsoup.Connection.Request request95 = request23.method(method93);
        org.jsoup.Connection.Request request96 = request18.method(method93);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + method47 + "' != '" + org.jsoup.Connection.Method.GET + "'", method47.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + method67 + "' != '" + org.jsoup.Connection.Method.GET + "'", method67.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        org.junit.Assert.assertTrue("'" + method75 + "' != '" + org.jsoup.Connection.Method.GET + "'", method75.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request79);
        org.junit.Assert.assertTrue("'" + method83 + "' != '" + org.jsoup.Connection.Method.GET + "'", method83.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1048576 + "'", int88 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + method93 + "' != '" + org.jsoup.Connection.Method.GET + "'", method93.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request96);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        boolean boolean8 = request0.followRedirects;
        int int9 = request0.maxBodySizeBytes;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1048576 + "'", int9 == 1048576);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection21 = request10.data;
        org.jsoup.Connection.Request request23 = request10.followRedirects(false);
        boolean boolean25 = request10.hasCookie("null=null=null=hi!=hi!");
        boolean boolean26 = request10.followRedirects();
        java.net.URL uRL27 = request10.url();
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection30 = httpConnection28.followRedirects(false);
        org.jsoup.Connection connection32 = httpConnection28.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response34 = httpConnection33.response();
        org.jsoup.helper.HttpConnection httpConnection35 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response36 = httpConnection35.response();
        org.jsoup.Connection connection38 = httpConnection35.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection39 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response40 = httpConnection39.response();
        httpConnection35.res = response40;
        httpConnection33.res = response40;
        org.jsoup.Connection connection43 = httpConnection28.response(response40);
        org.jsoup.Connection connection45 = httpConnection28.ignoreHttpErrors(false);
        org.jsoup.Connection connection47 = httpConnection28.referrer("hi!");
        org.jsoup.helper.HttpConnection httpConnection48 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response49 = httpConnection48.response();
        org.jsoup.Connection connection51 = httpConnection48.followRedirects(false);
        org.jsoup.Connection.Response response52 = httpConnection48.response();
        httpConnection28.res = response52;
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method55 = request54.method();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = request54.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = request54.headers();
        org.jsoup.Connection.Method method58 = request54.method();
        org.jsoup.Connection connection59 = httpConnection28.method(method58);
        org.jsoup.Connection connection61 = httpConnection28.timeout((int) (byte) 0);
        org.jsoup.helper.HttpConnection httpConnection62 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request63 = null;
        org.jsoup.Connection connection64 = httpConnection62.request(request63);
        org.jsoup.helper.HttpConnection httpConnection65 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response66 = httpConnection65.response();
        org.jsoup.Connection.Request request67 = httpConnection65.request();
        org.jsoup.Connection connection68 = httpConnection62.request(request67);
        org.jsoup.helper.HttpConnection.Request request69 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method70 = request69.method();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = request69.headers();
        request69.followRedirects = false;
        boolean boolean74 = request69.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request76 = request69.timeout((int) ' ');
        java.lang.String str78 = request76.cookie("hi!");
        java.lang.String str80 = request76.header("null=null");
        request76.followRedirects = false;
        org.jsoup.parser.Parser parser83 = request76.parser;
        org.jsoup.Connection connection84 = httpConnection62.parser(parser83);
        org.jsoup.Connection connection85 = httpConnection28.parser(parser83);
        request10.parser = parser83;
        org.jsoup.helper.HttpConnection.Request request88 = request10.timeout(0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response52);
        org.junit.Assert.assertTrue("'" + method55 + "' != '" + org.jsoup.Connection.Method.GET + "'", method55.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertTrue("'" + method58 + "' != '" + org.jsoup.Connection.Method.GET + "'", method58.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection68);
        org.junit.Assert.assertTrue("'" + method70 + "' != '" + org.jsoup.Connection.Method.GET + "'", method70.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request88);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.lang.String str3 = response1.contentType();
        response1.numRedirects = 1;
        response1.numRedirects = 1048576;
        int int8 = response1.statusCode;
        java.lang.String str9 = response1.charset;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        boolean boolean16 = request7.ignoreHttpErrors;
        org.jsoup.Connection.Request request18 = request7.ignoreHttpErrors(false);
        request7.ignoreContentType = true;
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response22 = httpConnection21.response();
        org.jsoup.Connection.Request request23 = httpConnection21.request();
        org.jsoup.Connection.Request request24 = httpConnection21.req;
        org.jsoup.Connection.Request request25 = httpConnection21.request();
        org.jsoup.Connection.Response response26 = httpConnection21.res;
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method28 = request27.method();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request27.headers();
        request27.followRedirects = false;
        boolean boolean32 = request27.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request34 = request27.timeout((int) ' ');
        boolean boolean35 = request34.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection36 = request34.data;
        org.jsoup.Connection connection37 = httpConnection21.data(keyValCollection36);
        request7.data = keyValCollection36;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
        org.junit.Assert.assertTrue("'" + method28 + "' != '" + org.jsoup.Connection.Method.GET + "'", method28.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Response response2 = httpConnection0.res;
        org.jsoup.Connection connection4 = httpConnection0.maxBodySize((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection6 = httpConnection0.timeout((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Timeout milliseconds must be 0 (infinite) or greater");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        int int22 = response1.numRedirects;
        org.jsoup.Connection.Response response24 = response1.removeCookie("null=null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        response1.statusMessage = "null=";
        java.lang.String str7 = response1.statusMessage();
        boolean boolean9 = response1.hasCookie("null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=" + "'", str7.equals("null="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=hi!");
        request0.ignoreHttpErrors = true;
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request14.headers();
        request14.followRedirects = false;
        boolean boolean19 = request14.ignoreHttpErrors;
        org.jsoup.Connection.Method method20 = request14.method();
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        boolean boolean23 = request21.followRedirects;
        org.jsoup.Connection.Request request25 = request21.followRedirects(true);
        java.lang.String str27 = request21.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        org.jsoup.Connection.Request request30 = request21.method(method29);
        org.jsoup.Connection.Request request31 = request14.method(method29);
        org.jsoup.Connection.Request request32 = request0.method(method29);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection10 = httpConnection0.header("null=null", "");
        org.jsoup.Connection connection12 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.helper.HttpConnection.Response response13 = null;
        org.jsoup.helper.HttpConnection.Response response14 = new org.jsoup.helper.HttpConnection.Response(response13);
        int int15 = response14.statusCode();
        int int16 = response14.numRedirects;
        response14.charset = "";
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request19.headers();
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.ignoreHttpErrors();
        org.jsoup.Connection.Request request29 = request24.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method31 = request30.method();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = request30.headers();
        request30.followRedirects = false;
        boolean boolean35 = request30.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request37 = request30.timeout((int) ' ');
        java.lang.String str39 = request37.cookie("hi!");
        java.lang.String str41 = request37.header("null=null");
        request37.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method45 = request44.method();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = request44.headers();
        request44.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser49 = request44.parser;
        request37.parser = parser49;
        org.jsoup.helper.HttpConnection.Request request51 = request24.parser(parser49);
        org.jsoup.helper.HttpConnection.Request request52 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method53 = request52.method();
        org.jsoup.Connection.Request request54 = request51.method(method53);
        org.jsoup.Connection.Request request55 = request19.method(method53);
        org.jsoup.Connection.Response response56 = response14.method(method53);
        org.jsoup.Connection.Request request57 = response14.req;
        response14.statusCode = (byte) 10;
        java.util.Map<java.lang.String, java.lang.String> strMap60 = response14.headers();
        int int61 = response14.statusCode;
        httpConnection0.res = response14;
        java.lang.String str63 = response14.contentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + method45 + "' != '" + org.jsoup.Connection.Method.GET + "'", method45.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = (short) -1;
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        keyVal0.key = "hi!";
        java.lang.String str8 = keyVal0.key;
        keyVal0.value = "null=hi!=null=null";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        org.jsoup.Connection.Method method22 = response1.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request9 = request0.timeout((int) (byte) 0);
        request0.timeoutMilliseconds = 0;
        org.jsoup.parser.Parser parser12 = request0.parser;
        java.net.URL uRL13 = request0.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL13);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("");
        java.lang.String str4 = keyVal0.value;
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.key("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null" + "'", str1.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int19 = request18.timeout();
        request18.maxBodySizeBytes = 3000;
        org.jsoup.Connection.Request request24 = request18.cookie("hi!", "null=hi!");
        boolean boolean25 = request18.ignoreHttpErrors();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.helper.HttpConnection.Response response44 = new org.jsoup.helper.HttpConnection.Response(response1);
        boolean boolean46 = response1.hasCookie("null=hi!");
        java.nio.ByteBuffer byteBuffer47 = response1.byteData;
        java.nio.ByteBuffer byteBuffer48 = response1.byteData;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer48);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request7.data();
        java.lang.String str12 = request7.header("hi!");
        org.jsoup.Connection.Request request15 = request7.cookie("null=null=null=hi!", "null=null");
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request16.headers();
        request16.followRedirects = false;
        boolean boolean21 = request16.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request23 = request16.timeout((int) ' ');
        java.lang.String str25 = request23.cookie("hi!");
        org.jsoup.Connection.Request request28 = request23.cookie("null=null", "null=null=null=hi!");
        boolean boolean30 = request23.hasCookie("null=null=null=hi!");
        org.jsoup.Connection.Request request32 = request23.ignoreHttpErrors(false);
        org.jsoup.Connection.Request request34 = request23.followRedirects(true);
        org.jsoup.Connection.Method method35 = request23.method();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection36 = request23.data;
        request7.data = keyValCollection36;
        java.io.OutputStream outputStream38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection36, outputStream38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection36);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        boolean boolean9 = request7.followRedirects();
        boolean boolean11 = request7.hasCookie("hi!");
        java.net.URL uRL12 = request7.url();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request7.cookies();
        org.jsoup.Connection.Request request15 = request7.followRedirects(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!=null=hi!=null", "null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout((int) (short) 0);
        org.jsoup.Connection.Method method5 = request0.method();
        boolean boolean6 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request8 = request0.timeout((int) (byte) 100);
        request8.ignoreContentType = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.req;
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection connection6 = httpConnection0.referrer("null=null");
        org.jsoup.Connection connection9 = httpConnection0.cookie("hi!=null", "null=");
        org.jsoup.Connection connection11 = httpConnection0.maxBodySize((int) (short) 10);
        org.jsoup.helper.HttpConnection httpConnection12 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection15 = httpConnection12.data("hi!", "hi!");
        org.jsoup.Connection connection18 = httpConnection12.data("null=null", "null=null");
        org.jsoup.helper.HttpConnection httpConnection19 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection21 = httpConnection19.followRedirects(false);
        org.jsoup.Connection connection23 = httpConnection19.referrer("");
        org.jsoup.Connection connection25 = httpConnection19.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        boolean boolean28 = request26.followRedirects;
        org.jsoup.Connection.Request request30 = request26.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = request26.headers();
        org.jsoup.Connection connection32 = httpConnection19.data(strMap31);
        org.jsoup.Connection connection33 = httpConnection12.data(strMap31);
        org.jsoup.Connection connection34 = httpConnection0.data(strMap31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        int int8 = response1.statusCode();
        int int9 = response1.statusCode();
        java.nio.ByteBuffer byteBuffer10 = null;
        response1.byteData = byteBuffer10;
        java.lang.String str13 = response1.header("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.Connection connection7 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection10 = httpConnection0.cookie("null=null", "null=null=null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection14 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection16 = httpConnection0.followRedirects(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.followRedirects;
        org.jsoup.Connection.Request request20 = request16.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request16.cookies();
        org.jsoup.Connection connection22 = httpConnection0.cookies(strMap21);
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request23.headers();
        request23.followRedirects = false;
        boolean boolean28 = request23.ignoreHttpErrors;
        org.jsoup.Connection.Method method29 = request23.method();
        int int30 = request23.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        boolean boolean33 = request31.followRedirects;
        org.jsoup.Connection.Request request35 = request31.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request31.headers();
        boolean boolean37 = request31.ignoreContentType;
        boolean boolean38 = request31.followRedirects();
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request31.method(method40);
        org.jsoup.Connection.Request request42 = request23.method(method40);
        org.jsoup.Connection connection43 = httpConnection0.method(method40);
        org.jsoup.Connection connection46 = httpConnection0.cookie("null=hi!", "");
        org.jsoup.Connection connection48 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request49 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method50 = request49.method();
        boolean boolean51 = request49.followRedirects;
        org.jsoup.Connection.Request request53 = request49.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = request49.headers();
        boolean boolean55 = request49.ignoreContentType;
        request49.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap58 = request49.cookies();
        int int59 = request49.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request61 = request49.timeout(0);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = request61.cookies();
        org.jsoup.Connection connection63 = httpConnection0.data(strMap62);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection65 = httpConnection0.url("null=null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1048576 + "'", int30 == 1048576);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        org.junit.Assert.assertTrue("'" + method50 + "' != '" + org.jsoup.Connection.Method.GET + "'", method50.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1048576 + "'", int59 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("hi!");
        java.lang.String str7 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.value("null=null");
        java.lang.String str10 = keyVal9.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal9.value("");
        keyVal9.value = "hi!";
        java.lang.String str15 = keyVal9.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null=null" + "'", str10.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        java.lang.String str3 = response1.contentType();
        boolean boolean5 = response1.hasCookie("null=null=hi!");
        java.lang.String str7 = response1.getHeaderCaseInsensitive("null=hi!");
        response1.statusMessage = "hi!=null=hi!=null";
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        org.jsoup.Connection.Response response12 = response1.removeCookie("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str6 = response1.contentType;
        java.lang.String str7 = response1.statusMessage;
        int int8 = response1.statusCode();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request4 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method5 = request4.method();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request4.headers();
        request4.followRedirects = false;
        boolean boolean9 = request4.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request11 = request4.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry13 = request4.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request4.headers();
        httpConnection0.req = request4;
        org.jsoup.Connection.Method method16 = request4.method();
        org.jsoup.Connection.Request request18 = request4.removeHeader("null=");
        org.jsoup.helper.HttpConnection httpConnection19 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection21 = httpConnection19.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        request22.followRedirects = false;
        boolean boolean27 = request22.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request29 = request22.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry31 = request22.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap32 = request22.headers();
        org.jsoup.Connection connection33 = httpConnection19.data(strMap32);
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method35 = request34.method();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request34.headers();
        request34.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser39 = request34.parser;
        org.jsoup.Connection.Request request41 = request34.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap42 = request34.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = request34.cookies();
        org.jsoup.Connection connection44 = httpConnection19.data(strMap43);
        org.jsoup.Connection connection47 = httpConnection19.header("null=null", "");
        org.jsoup.helper.HttpConnection.Response response48 = null;
        org.jsoup.helper.HttpConnection.Response response49 = new org.jsoup.helper.HttpConnection.Response(response48);
        int int50 = response49.statusCode();
        int int51 = response49.numRedirects;
        response49.charset = "";
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method55 = request54.method();
        org.jsoup.Connection.Request request57 = request54.ignoreContentType(false);
        org.jsoup.Connection.Request request59 = request54.removeCookie("");
        int int60 = request54.maxBodySize();
        org.jsoup.Connection.Request request62 = request54.followRedirects(false);
        response49.req = request54;
        request54.ignoreHttpErrors = true;
        java.net.URL uRL66 = request54.url();
        org.jsoup.helper.HttpConnection.Request request67 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method68 = request67.method();
        boolean boolean69 = request67.followRedirects;
        org.jsoup.Connection.Request request71 = request67.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = request67.headers();
        boolean boolean73 = request67.ignoreContentType;
        request67.followRedirects = false;
        int int76 = request67.timeout();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection77 = request67.data;
        org.jsoup.helper.HttpConnection.Request request78 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method79 = request78.method();
        boolean boolean80 = request78.followRedirects;
        org.jsoup.Connection.Request request82 = request78.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = request78.cookies();
        boolean boolean85 = request78.hasCookie("null=null");
        org.jsoup.parser.Parser parser86 = request78.parser();
        request67.parser = parser86;
        request54.parser = parser86;
        org.jsoup.Connection connection89 = httpConnection19.parser(parser86);
        org.jsoup.helper.HttpConnection.Request request90 = request4.parser(parser86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + method55 + "' != '" + org.jsoup.Connection.Method.GET + "'", method55.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1048576 + "'", int60 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL66);
        org.junit.Assert.assertTrue("'" + method68 + "' != '" + org.jsoup.Connection.Method.GET + "'", method68.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 3000 + "'", int76 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection77);
        org.junit.Assert.assertTrue("'" + method79 + "' != '" + org.jsoup.Connection.Method.GET + "'", method79.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request90);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        org.jsoup.Connection.Request request3 = request0.removeHeader("null=null=null=hi!");
        java.net.URL uRL4 = request0.url();
        boolean boolean5 = request0.ignoreHttpErrors;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection.Request request12 = httpConnection10.request();
        org.jsoup.Connection.Request request13 = httpConnection10.req;
        org.jsoup.Connection connection15 = httpConnection10.timeout((int) 'a');
        org.jsoup.Connection connection17 = httpConnection10.ignoreHttpErrors(false);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        boolean boolean20 = request18.followRedirects;
        org.jsoup.Connection.Request request22 = request18.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request18.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request27 = request18.data((org.jsoup.Connection.KeyVal) keyVal26);
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response29 = httpConnection28.response();
        org.jsoup.Connection.Request request30 = httpConnection28.request();
        org.jsoup.Connection.Request request31 = httpConnection28.req;
        org.jsoup.Connection connection33 = httpConnection28.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method35 = request34.method();
        boolean boolean36 = request34.ignoreHttpErrors();
        org.jsoup.Connection.Request request39 = request34.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = request40.headers();
        request40.followRedirects = false;
        boolean boolean45 = request40.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request47 = request40.timeout((int) ' ');
        java.lang.String str49 = request47.cookie("hi!");
        java.lang.String str51 = request47.header("null=null");
        request47.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method55 = request54.method();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = request54.headers();
        request54.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser59 = request54.parser;
        request47.parser = parser59;
        org.jsoup.helper.HttpConnection.Request request61 = request34.parser(parser59);
        org.jsoup.Connection connection62 = httpConnection28.request((org.jsoup.Connection.Request) request61);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection63 = request61.data;
        request18.data = keyValCollection63;
        org.jsoup.Connection connection65 = httpConnection10.data(keyValCollection63);
        org.jsoup.Connection connection66 = httpConnection0.data(keyValCollection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + method55 + "' != '" + org.jsoup.Connection.Method.GET + "'", method55.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection66);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.net.URL uRL10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request11 = request0.url(uRL10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        request33.ignoreContentType = true;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection37 = request33.data;
        request33.ignoreContentType = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection37);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        org.jsoup.Connection.Request request7 = response1.req;
        response1.statusMessage = "hi!=null";
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response1);
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        java.lang.String str12 = response11.charset;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=null");
        org.jsoup.Connection.Request request13 = request7.ignoreContentType(false);
        org.jsoup.Connection.Request request15 = request7.removeHeader("null=null=null=hi!");
        org.jsoup.Connection.Request request17 = request7.followRedirects(false);
        boolean boolean19 = request7.hasCookie("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.followRedirects;
        org.jsoup.Connection.Request request16 = request12.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request12.cookies();
        org.jsoup.Connection connection18 = httpConnection0.data(strMap17);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection20 = httpConnection0.timeout((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Timeout milliseconds must be 0 (infinite) or greater");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request5 = null;
        org.jsoup.Connection connection6 = httpConnection4.request(request5);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection.Request request9 = httpConnection7.request();
        org.jsoup.Connection connection10 = httpConnection4.request(request9);
        org.jsoup.Connection.Request request11 = httpConnection4.req;
        org.jsoup.Connection connection13 = httpConnection4.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        boolean boolean16 = request14.followRedirects;
        org.jsoup.Connection.Request request18 = request14.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request14.headers();
        boolean boolean20 = request14.ignoreContentType;
        request14.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request14.cookies();
        httpConnection4.req = request14;
        org.jsoup.Connection.Response response25 = httpConnection4.response();
        httpConnection0.res = response25;
        org.jsoup.Connection connection28 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.Connection connection30 = httpConnection0.referrer("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.contentType = "null=hi!";
        java.lang.String str6 = response1.statusMessage;
        response1.charset = "hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        boolean boolean22 = request20.followRedirects;
        org.jsoup.Connection.Request request24 = request20.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request20.headers();
        request20.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser28 = request20.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request20.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request20.cookies();
        org.jsoup.Connection connection31 = httpConnection0.cookies(strMap30);
        org.jsoup.helper.HttpConnection.Response response32 = null;
        org.jsoup.helper.HttpConnection.Response response33 = new org.jsoup.helper.HttpConnection.Response(response32);
        int int34 = response33.statusCode();
        response33.charset = "hi!=null";
        org.jsoup.Connection.Response response38 = response33.removeHeader("hi!=");
        java.lang.String str39 = response33.contentType();
        httpConnection0.res = response33;
        int int41 = response33.statusCode;
        java.lang.String str43 = response33.cookie("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        boolean boolean7 = response1.hasHeader("hi!=");
        org.jsoup.Connection.Method method8 = response1.method();
        int int9 = response1.numRedirects;
        java.lang.String str10 = response1.charset();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Request request18 = httpConnection0.request();
        org.jsoup.helper.HttpConnection.Response response19 = null;
        org.jsoup.helper.HttpConnection.Response response20 = new org.jsoup.helper.HttpConnection.Response(response19);
        org.jsoup.Connection.Method method21 = response20.method();
        boolean boolean23 = response20.hasCookie("");
        boolean boolean25 = response20.hasCookie("null=");
        httpConnection0.res = response20;
        org.jsoup.Connection connection28 = httpConnection0.followRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str6 = response1.statusMessage;
        java.nio.ByteBuffer byteBuffer7 = response1.byteData;
        java.lang.String str9 = response1.cookie("null=null=hi!");
        java.lang.String str11 = response1.getHeaderCaseInsensitive("hi!=");
        java.lang.String str13 = response1.cookie("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        int int2 = request0.maxBodySizeBytes;
        java.lang.String str4 = request0.cookie("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1048576 + "'", int2 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.numRedirects = 0;
        java.lang.String str8 = response1.getHeaderCaseInsensitive("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.Connection connection7 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection10 = httpConnection0.cookie("null=null", "null=null=null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection httpConnection13 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request14 = null;
        org.jsoup.Connection connection15 = httpConnection13.request(request14);
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response17 = httpConnection16.response();
        org.jsoup.Connection.Request request18 = httpConnection16.request();
        org.jsoup.Connection connection19 = httpConnection13.request(request18);
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection22 = httpConnection20.followRedirects(false);
        org.jsoup.Connection connection24 = httpConnection20.referrer("");
        org.jsoup.Connection.Response response25 = httpConnection20.response();
        org.jsoup.Connection connection26 = httpConnection13.response(response25);
        org.jsoup.Connection connection28 = httpConnection13.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method30 = request29.method();
        boolean boolean31 = request29.ignoreHttpErrors();
        org.jsoup.Connection.Request request34 = request29.cookie("hi!", "");
        java.lang.String str36 = request29.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        boolean boolean39 = request37.followRedirects;
        org.jsoup.Connection.Request request41 = request37.followRedirects(true);
        java.lang.String str43 = request37.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method45 = request44.method();
        org.jsoup.Connection.Request request46 = request37.method(method45);
        org.jsoup.Connection.Request request47 = request29.method(method45);
        org.jsoup.Connection connection48 = httpConnection13.method(method45);
        org.jsoup.Connection connection50 = httpConnection13.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection51 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response52 = httpConnection51.response();
        org.jsoup.Connection connection54 = httpConnection51.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection55 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response56 = httpConnection55.response();
        httpConnection51.res = response56;
        java.lang.String[] strArray60 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection61 = httpConnection51.data(strArray60);
        org.jsoup.Connection connection62 = httpConnection13.data(strArray60);
        org.jsoup.Connection connection63 = httpConnection0.data(strArray60);
        org.jsoup.Connection.Request request64 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + method45 + "' != '" + org.jsoup.Connection.Method.GET + "'", method45.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        boolean boolean5 = response1.executed;
        response1.executed = true;
        response1.contentType = "hi!=";
        java.lang.String str11 = response1.cookie("hi!");
        response1.charset = "null=hi!=null=null";
        java.lang.String str14 = response1.contentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!=" + "'", str14.equals("hi!="));
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.Connection.Request request44 = response1.req;
        response1.statusCode = (byte) 10;
        response1.contentType = "hi!=";
        java.lang.String str50 = response1.header("null=null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection13 = httpConnection0.ignoreHttpErrors(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        response1.statusCode = (byte) 10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        boolean boolean19 = request0.ignoreContentType();
        org.jsoup.Connection.Method method20 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(1048576);
        org.jsoup.helper.HttpConnection.Request request6 = request0.timeout((int) '#');
        int int7 = request6.timeoutMilliseconds;
        request6.followRedirects = false;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request6.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        boolean boolean5 = response1.executed;
        response1.executed = true;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response1);
        java.net.URL uRL9 = response8.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null=", "null=hi!=null=null");
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.net.URL uRL5 = request0.url();
        int int6 = request0.timeoutMilliseconds;
        org.jsoup.Connection.Request request9 = request0.header("null=null=hi!=null", "hi!=null=hi!=null");
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection connection13 = httpConnection10.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        httpConnection10.res = response15;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request17.headers();
        org.jsoup.Connection connection19 = httpConnection10.request((org.jsoup.Connection.Request) request17);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry21 = request17.scanHeaders("null=null");
        org.jsoup.Connection.Request request23 = request17.ignoreContentType(false);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection24 = request17.data;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        org.jsoup.Connection.Request request28 = request25.ignoreContentType(false);
        org.jsoup.Connection.Request request30 = request25.removeCookie("");
        int int31 = request25.maxBodySize();
        org.jsoup.Connection.Request request33 = request25.followRedirects(false);
        java.lang.String str35 = request25.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = request36.headers();
        request36.followRedirects = false;
        boolean boolean41 = request36.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request43 = request36.timeout((int) ' ');
        java.lang.String str45 = request43.cookie("hi!");
        java.lang.String str47 = request43.header("null=null");
        request43.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = request50.headers();
        request50.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser55 = request50.parser;
        request43.parser = parser55;
        request25.parser = parser55;
        org.jsoup.helper.HttpConnection.Request request58 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method59 = request58.method();
        boolean boolean60 = request58.ignoreHttpErrors();
        org.jsoup.Connection.Request request63 = request58.cookie("hi!", "");
        boolean boolean64 = request58.ignoreContentType;
        org.jsoup.parser.Parser parser65 = request58.parser();
        request25.parser = parser65;
        request17.parser = parser65;
        request0.parser = parser65;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3000 + "'", int6 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1048576 + "'", int31 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser55);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser65);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.Connection connection13 = httpConnection0.ignoreContentType(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!=", "hi!=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal4.value("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.cookies();
        boolean boolean17 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal18.key = "hi!";
        java.lang.String str21 = keyVal18.key;
        org.jsoup.helper.HttpConnection.Request request22 = request0.data((org.jsoup.Connection.KeyVal) keyVal18);
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request23.headers();
        request23.followRedirects = false;
        boolean boolean28 = request23.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request30 = request23.timeout((int) ' ');
        java.lang.String str32 = request30.cookie("hi!");
        org.jsoup.Connection.Request request35 = request30.cookie("null=null", "null=null=null=hi!");
        boolean boolean37 = request30.hasCookie("null=null=null=hi!");
        org.jsoup.Connection.Request request39 = request30.ignoreHttpErrors(false);
        org.jsoup.Connection.Request request41 = request30.followRedirects(true);
        org.jsoup.Connection.Method method42 = request30.method();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection43 = request30.data;
        request0.data = keyValCollection43;
        org.jsoup.Connection.Request request46 = request0.removeHeader("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response1);
        org.jsoup.Connection.Response response11 = response8.header("hi!=null", "");
        java.lang.String str12 = response8.charset;
        boolean boolean13 = response8.executed;
        response8.charset = "null=null=hi!";
        response8.statusMessage = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        org.jsoup.Connection.Method method8 = request7.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        org.jsoup.Connection.Response response11 = response1.removeCookie("null=hi!");
        response1.contentType = "";
        java.lang.String str14 = response1.contentType;
        response1.numRedirects = '4';
        boolean boolean18 = response1.hasCookie("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        org.jsoup.Connection.Response response10 = response1.cookie("hi!=", "hi!");
        java.lang.String str11 = response1.charset;
        java.lang.String str12 = response1.charset;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray13 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection9 = httpConnection7.followRedirects(false);
        org.jsoup.Connection connection11 = httpConnection7.referrer("");
        org.jsoup.Connection.Response response12 = httpConnection7.response();
        org.jsoup.Connection connection13 = httpConnection0.response(response12);
        org.jsoup.Connection connection15 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.ignoreHttpErrors();
        org.jsoup.Connection.Request request21 = request16.cookie("hi!", "");
        java.lang.String str23 = request16.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.lang.String str30 = request24.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request33 = request24.method(method32);
        org.jsoup.Connection.Request request34 = request16.method(method32);
        org.jsoup.Connection connection35 = httpConnection0.method(method32);
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        boolean boolean38 = request36.followRedirects;
        org.jsoup.Connection.Request request40 = request36.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request36.headers();
        boolean boolean42 = request36.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method44 = request43.method();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = request43.headers();
        request43.followRedirects = false;
        boolean boolean48 = request43.ignoreHttpErrors;
        org.jsoup.Connection.Method method49 = request43.method();
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        boolean boolean52 = request50.followRedirects;
        org.jsoup.Connection.Request request54 = request50.followRedirects(true);
        java.lang.String str56 = request50.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method58 = request57.method();
        org.jsoup.Connection.Request request59 = request50.method(method58);
        org.jsoup.Connection.Request request60 = request43.method(method58);
        org.jsoup.Connection.Request request61 = request36.method(method58);
        boolean boolean63 = request36.hasHeader("null=null=");
        org.jsoup.Connection connection64 = httpConnection0.request((org.jsoup.Connection.Request) request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + method58 + "' != '" + org.jsoup.Connection.Method.GET + "'", method58.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection64);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("hi!");
        java.lang.String str7 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.value("null=null");
        java.lang.String str10 = keyVal9.value();
        keyVal9.key = "null=null";
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal9.value("null=null=");
        java.lang.String str15 = keyVal14.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = keyVal14.value("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null=null" + "'", str10.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "null=null" + "'", str15.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal17);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Request request2 = request0.removeHeader("null=hi!=null=null");
        org.jsoup.Connection.Request request4 = request0.maxBodySize(10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!=", "null=null=null=hi!=hi!");
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection.Request request5 = httpConnection0.request();
        org.jsoup.Connection connection7 = httpConnection0.referrer("null=hi!");
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request9 = null;
        org.jsoup.Connection connection10 = httpConnection8.request(request9);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        org.jsoup.Connection.Request request13 = httpConnection11.request();
        org.jsoup.Connection connection14 = httpConnection8.request(request13);
        org.jsoup.helper.HttpConnection httpConnection15 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection17 = httpConnection15.followRedirects(false);
        org.jsoup.Connection connection19 = httpConnection15.referrer("");
        org.jsoup.Connection.Response response20 = httpConnection15.response();
        org.jsoup.Connection connection21 = httpConnection8.response(response20);
        org.jsoup.Connection connection23 = httpConnection8.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.ignoreHttpErrors();
        org.jsoup.Connection.Request request29 = request24.cookie("hi!", "");
        java.lang.String str31 = request24.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        boolean boolean34 = request32.followRedirects;
        org.jsoup.Connection.Request request36 = request32.followRedirects(true);
        java.lang.String str38 = request32.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request32.method(method40);
        org.jsoup.Connection.Request request42 = request24.method(method40);
        org.jsoup.Connection connection43 = httpConnection8.method(method40);
        org.jsoup.Connection connection45 = httpConnection8.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection46 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response47 = httpConnection46.response();
        org.jsoup.Connection connection49 = httpConnection46.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection50 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response51 = httpConnection50.response();
        httpConnection46.res = response51;
        java.lang.String[] strArray55 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection56 = httpConnection46.data(strArray55);
        org.jsoup.Connection connection57 = httpConnection8.data(strArray55);
        org.jsoup.Connection connection58 = httpConnection0.data(strArray55);
        org.jsoup.Connection connection60 = httpConnection0.ignoreHttpErrors(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean6 = request0.hasCookie("null=null");
        java.lang.String str8 = request0.getHeaderCaseInsensitive("null=hi!");
        java.lang.String str10 = request0.header("");
        java.lang.String str11 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        java.lang.String str13 = request0.header("");
        request0.timeoutMilliseconds = 97;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        boolean boolean37 = request35.followRedirects;
        org.jsoup.Connection.Request request39 = request35.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = request35.headers();
        boolean boolean41 = request35.ignoreContentType;
        request35.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request35.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = request35.cookies();
        java.lang.String str47 = request35.getHeaderCaseInsensitive("null=null");
        java.lang.String str49 = request35.cookie("hi!");
        boolean boolean51 = request35.hasCookie("null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap52 = request35.headers();
        org.jsoup.Connection connection53 = httpConnection0.data(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        org.jsoup.Connection.Response response7 = response1.removeCookie("hi!");
        int int8 = response1.numRedirects;
        java.lang.String str9 = response1.charset;
        java.nio.ByteBuffer byteBuffer10 = response1.byteData;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer10);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str6 = response1.contentType;
        response1.statusCode = ' ';
        response1.numRedirects = 32;
        java.lang.String str11 = response1.contentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        java.lang.String str22 = response1.charset();
        java.lang.String str23 = response1.statusMessage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response17 = httpConnection16.response();
        org.jsoup.Connection connection19 = httpConnection16.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection23 = httpConnection20.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request24.headers();
        int int27 = request24.timeout();
        org.jsoup.parser.Parser parser28 = request24.parser();
        org.jsoup.Connection connection29 = httpConnection20.parser(parser28);
        org.jsoup.Connection connection30 = httpConnection16.parser(parser28);
        request15.parser = parser28;
        org.jsoup.parser.Parser parser32 = request15.parser;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3000 + "'", int27 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser32);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection connection5 = httpConnection0.response(response4);
        org.jsoup.helper.HttpConnection.Response response6 = null;
        org.jsoup.helper.HttpConnection.Response response7 = new org.jsoup.helper.HttpConnection.Response(response6);
        int int8 = response7.statusCode();
        int int9 = response7.numRedirects;
        java.lang.String str10 = response7.charset;
        java.lang.String str11 = response7.statusMessage;
        java.util.Map<java.lang.String, java.lang.String> strMap12 = response7.headers();
        org.jsoup.Connection connection13 = httpConnection0.cookies(strMap12);
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request14.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request14.headers();
        java.lang.String str19 = request14.getHeaderCaseInsensitive("null=hi!");
        boolean boolean21 = request14.hasCookie("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal24 = org.jsoup.helper.HttpConnection.KeyVal.create("null=hi!", "null=hi!");
        org.jsoup.helper.HttpConnection.Request request25 = request14.data((org.jsoup.Connection.KeyVal) keyVal24);
        org.jsoup.Connection connection26 = httpConnection0.request((org.jsoup.Connection.Request) request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection30 = httpConnection27.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection31 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection34 = httpConnection31.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = request35.headers();
        int int38 = request35.timeout();
        org.jsoup.parser.Parser parser39 = request35.parser();
        org.jsoup.Connection connection40 = httpConnection31.parser(parser39);
        org.jsoup.Connection connection41 = httpConnection27.parser(parser39);
        org.jsoup.Connection connection42 = httpConnection0.parser(parser39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3000 + "'", int38 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        response1.charset = "null=null";
        java.net.URL uRL9 = response1.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection9 = httpConnection0.header("hi!", "");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.Connection.Method method23 = request17.method();
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.lang.String str30 = request24.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request33 = request24.method(method32);
        org.jsoup.Connection.Request request34 = request17.method(method32);
        org.jsoup.Connection.Request request35 = request10.method(method32);
        org.jsoup.Connection.Request request37 = request10.removeHeader("hi!=null");
        httpConnection0.req = request10;
        org.jsoup.parser.Parser parser39 = request10.parser;
        java.lang.String str41 = request10.getHeaderCaseInsensitive("hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        request0.parser = parser30;
        int int33 = request0.timeoutMilliseconds;
        org.jsoup.Connection.Request request36 = request0.cookie("null=null=null=hi!", "hi!=null");
        int int37 = request0.maxBodySizeBytes;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3000 + "'", int33 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1048576 + "'", int37 == 1048576);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.followRedirects;
        org.jsoup.Connection.Request request16 = request12.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request12.cookies();
        org.jsoup.Connection connection18 = httpConnection0.data(strMap17);
        org.jsoup.Connection connection21 = httpConnection0.data("null=hi!", "hi!=null=hi!=null");
        org.jsoup.Connection.Request request22 = httpConnection0.req;
        org.jsoup.Connection connection24 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection httpConnection25 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request26 = null;
        org.jsoup.Connection connection27 = httpConnection25.request(request26);
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response29 = httpConnection28.response();
        org.jsoup.Connection.Request request30 = httpConnection28.request();
        org.jsoup.Connection connection31 = httpConnection25.request(request30);
        org.jsoup.Connection connection33 = httpConnection25.ignoreContentType(true);
        org.jsoup.Connection connection36 = httpConnection25.cookie("hi!=null", "null=null");
        org.jsoup.Connection connection38 = httpConnection25.referrer("null=");
        org.jsoup.helper.HttpConnection httpConnection39 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request40 = null;
        org.jsoup.Connection connection41 = httpConnection39.request(request40);
        org.jsoup.helper.HttpConnection httpConnection42 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response43 = httpConnection42.response();
        org.jsoup.Connection.Request request44 = httpConnection42.request();
        org.jsoup.Connection connection45 = httpConnection39.request(request44);
        org.jsoup.helper.HttpConnection httpConnection46 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection48 = httpConnection46.followRedirects(false);
        org.jsoup.Connection connection50 = httpConnection46.referrer("");
        org.jsoup.Connection.Response response51 = httpConnection46.response();
        org.jsoup.Connection connection52 = httpConnection39.response(response51);
        org.jsoup.Connection connection54 = httpConnection39.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request55 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method56 = request55.method();
        boolean boolean57 = request55.ignoreHttpErrors();
        org.jsoup.Connection.Request request60 = request55.cookie("hi!", "");
        java.lang.String str62 = request55.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method64 = request63.method();
        boolean boolean65 = request63.followRedirects;
        org.jsoup.Connection.Request request67 = request63.followRedirects(true);
        java.lang.String str69 = request63.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request70 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method71 = request70.method();
        org.jsoup.Connection.Request request72 = request63.method(method71);
        org.jsoup.Connection.Request request73 = request55.method(method71);
        org.jsoup.Connection connection74 = httpConnection39.method(method71);
        org.jsoup.Connection connection76 = httpConnection39.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection77 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response78 = httpConnection77.response();
        org.jsoup.Connection connection80 = httpConnection77.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection81 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response82 = httpConnection81.response();
        httpConnection77.res = response82;
        java.lang.String[] strArray86 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection87 = httpConnection77.data(strArray86);
        org.jsoup.Connection connection88 = httpConnection39.data(strArray86);
        org.jsoup.Connection connection89 = httpConnection25.data(strArray86);
        org.jsoup.Connection connection90 = httpConnection0.data(strArray86);
        org.jsoup.Connection connection92 = httpConnection0.ignoreHttpErrors(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
        org.junit.Assert.assertTrue("'" + method56 + "' != '" + org.jsoup.Connection.Method.GET + "'", method56.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + method64 + "' != '" + org.jsoup.Connection.Method.GET + "'", method64.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + method71 + "' != '" + org.jsoup.Connection.Method.GET + "'", method71.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection92);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.Connection.Response response4 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        boolean boolean9 = request7.followRedirects;
        org.jsoup.Connection.Request request11 = request7.followRedirects(true);
        java.lang.String str13 = request7.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        org.jsoup.Connection.Request request16 = request7.method(method15);
        org.jsoup.Connection.Request request17 = request5.method(method15);
        org.jsoup.parser.Parser parser18 = request5.parser;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.helper.HttpConnection.Response response20 = null;
        org.jsoup.helper.HttpConnection.Response response21 = new org.jsoup.helper.HttpConnection.Response(response20);
        int int22 = response21.statusCode();
        int int23 = response21.numRedirects;
        java.lang.String str24 = response21.charset;
        java.lang.String str25 = response21.charset;
        org.jsoup.Connection.Response response28 = response21.header("null=", "hi!");
        java.lang.String str30 = response21.cookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap31 = response21.cookies();
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.followRedirects = false;
        boolean boolean37 = request32.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request39 = request32.timeout((int) ' ');
        boolean boolean40 = request39.ignoreHttpErrors;
        org.jsoup.Connection.Method method41 = request39.method();
        org.jsoup.Connection.Response response42 = response21.method(method41);
        java.lang.String str44 = response21.getHeaderCaseInsensitive("null=null=");
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method46 = request45.method();
        boolean boolean47 = request45.ignoreHttpErrors();
        org.jsoup.Connection.Request request50 = request45.cookie("hi!", "");
        java.lang.String str52 = request45.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request53 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method54 = request53.method();
        boolean boolean55 = request53.followRedirects;
        org.jsoup.Connection.Request request57 = request53.followRedirects(true);
        java.lang.String str59 = request53.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request60 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method61 = request60.method();
        org.jsoup.Connection.Request request62 = request53.method(method61);
        org.jsoup.Connection.Request request63 = request45.method(method61);
        org.jsoup.Connection.Response response64 = response21.method(method61);
        org.jsoup.Connection connection65 = httpConnection0.method(method61);
        org.jsoup.Connection connection67 = httpConnection0.ignoreContentType(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + method54 + "' != '" + org.jsoup.Connection.Method.GET + "'", method54.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + method61 + "' != '" + org.jsoup.Connection.Method.GET + "'", method61.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        response1.numRedirects = (byte) 10;
        java.util.Map<java.lang.String, java.lang.String> strMap5 = response1.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection35 = request33.data;
        org.jsoup.Connection.Request request38 = request33.cookie("null=hi!", "null=null=hi!");
        org.jsoup.Connection.Request request40 = request33.followRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection6 = httpConnection0.cookie("null=null=null=hi!", "hi!=");
        org.jsoup.Connection connection8 = httpConnection0.maxBodySize(1048576);
        org.jsoup.Connection connection10 = httpConnection0.timeout(0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.parser.Parser parser13 = request0.parser;
        org.jsoup.Connection.Request request15 = request0.removeHeader("null=null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request18 = request0.header("", "null=null=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection6 = httpConnection0.header("null=null=null=hi!", "");
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null=hi!", "null=hi!");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request10.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str15 = keyVal14.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = keyVal14.value("hi!");
        java.lang.String str18 = keyVal14.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = keyVal14.value("hi!");
        java.lang.String str21 = keyVal14.key();
        org.jsoup.helper.HttpConnection.Request request22 = request10.data((org.jsoup.Connection.KeyVal) keyVal14);
        java.net.URL uRL23 = request22.url();
        org.jsoup.Connection connection24 = httpConnection0.request((org.jsoup.Connection.Request) request22);
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        boolean boolean27 = request25.ignoreHttpErrors();
        org.jsoup.Connection.Request request30 = request25.cookie("hi!", "");
        boolean boolean31 = request25.ignoreContentType;
        org.jsoup.Connection.Request request34 = request25.cookie("null=hi!", "hi!");
        java.lang.String str36 = request25.getHeaderCaseInsensitive("");
        java.lang.String str38 = request25.cookie("");
        request25.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request25.cookies();
        org.jsoup.Connection connection42 = httpConnection0.cookies(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.lang.String str8 = response1.cookie("");
        java.lang.String str10 = response1.getHeaderCaseInsensitive("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        java.lang.String str22 = response1.statusMessage;
        int int23 = response1.numRedirects;
        java.nio.ByteBuffer byteBuffer24 = null;
        response1.byteData = byteBuffer24;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document26 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection httpConnection6 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response7 = httpConnection6.response();
        org.jsoup.Connection.Request request8 = httpConnection6.request();
        org.jsoup.Connection connection10 = httpConnection6.ignoreContentType(true);
        org.jsoup.Connection.Request request11 = httpConnection6.request();
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        org.jsoup.Connection.Method method15 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request12.cookies();
        org.jsoup.Connection connection17 = httpConnection6.cookies(strMap16);
        org.jsoup.helper.HttpConnection httpConnection18 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response19 = httpConnection18.response();
        org.jsoup.Connection.Request request20 = httpConnection18.request();
        org.jsoup.Connection connection22 = httpConnection18.ignoreContentType(true);
        org.jsoup.Connection.Request request23 = httpConnection18.request();
        org.jsoup.Connection connection25 = httpConnection18.referrer("null=hi!");
        org.jsoup.helper.HttpConnection httpConnection26 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request27 = null;
        org.jsoup.Connection connection28 = httpConnection26.request(request27);
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        org.jsoup.Connection.Request request31 = httpConnection29.request();
        org.jsoup.Connection connection32 = httpConnection26.request(request31);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection35 = httpConnection33.followRedirects(false);
        org.jsoup.Connection connection37 = httpConnection33.referrer("");
        org.jsoup.Connection.Response response38 = httpConnection33.response();
        org.jsoup.Connection connection39 = httpConnection26.response(response38);
        org.jsoup.Connection connection41 = httpConnection26.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        boolean boolean44 = request42.ignoreHttpErrors();
        org.jsoup.Connection.Request request47 = request42.cookie("hi!", "");
        java.lang.String str49 = request42.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        boolean boolean52 = request50.followRedirects;
        org.jsoup.Connection.Request request54 = request50.followRedirects(true);
        java.lang.String str56 = request50.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method58 = request57.method();
        org.jsoup.Connection.Request request59 = request50.method(method58);
        org.jsoup.Connection.Request request60 = request42.method(method58);
        org.jsoup.Connection connection61 = httpConnection26.method(method58);
        org.jsoup.Connection connection63 = httpConnection26.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection64 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response65 = httpConnection64.response();
        org.jsoup.Connection connection67 = httpConnection64.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection68 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response69 = httpConnection68.response();
        httpConnection64.res = response69;
        java.lang.String[] strArray73 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection74 = httpConnection64.data(strArray73);
        org.jsoup.Connection connection75 = httpConnection26.data(strArray73);
        org.jsoup.Connection connection76 = httpConnection18.data(strArray73);
        org.jsoup.Connection connection77 = httpConnection6.data(strArray73);
        org.jsoup.Connection connection78 = httpConnection0.data(strArray73);
        org.jsoup.helper.HttpConnection.Response response79 = null;
        org.jsoup.helper.HttpConnection.Response response80 = new org.jsoup.helper.HttpConnection.Response(response79);
        int int81 = response80.statusCode();
        int int82 = response80.numRedirects;
        java.lang.String str83 = response80.charset;
        java.net.URL uRL84 = response80.url();
        response80.charset = "hi!=null";
        java.lang.String str87 = response80.statusMessage;
        org.jsoup.Connection.Response response89 = response80.removeHeader("null=");
        java.lang.String str91 = response80.getHeaderCaseInsensitive("hi!");
        int int92 = response80.numRedirects;
        org.jsoup.Connection connection93 = httpConnection0.response((org.jsoup.Connection.Response) response80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + method58 + "' != '" + org.jsoup.Connection.Method.GET + "'", method58.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection93);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        response1.statusMessage = "null=";
        java.lang.String str7 = response1.statusMessage;
        int int8 = response1.statusCode;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=" + "'", str7.equals("null="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=hi!");
        int int8 = request0.maxBodySize();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection9 = request0.data;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1048576 + "'", int8 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection9);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.Connection connection32 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection34 = httpConnection0.ignoreContentType(true);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document35 = httpConnection0.post();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("null=null=hi!");
        java.lang.String str6 = keyVal0.value;
        keyVal0.value = "null=null=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        request6.maxBodySizeBytes = 0;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.statusMessage();
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.Connection.Method method9 = request3.method();
        int int10 = request3.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        boolean boolean18 = request11.followRedirects();
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        org.jsoup.Connection.Request request21 = request11.method(method20);
        org.jsoup.Connection.Request request22 = request3.method(method20);
        org.jsoup.Connection.Response response23 = response1.method(method20);
        java.nio.ByteBuffer byteBuffer24 = null;
        response1.byteData = byteBuffer24;
        org.jsoup.Connection.Response response27 = response1.removeHeader("null=");
        java.util.Map<java.lang.String, java.lang.String> strMap28 = response1.headers();
        org.jsoup.Connection.Response response30 = response1.removeCookie("null=hi!");
        boolean boolean31 = response1.executed;
        java.lang.String str32 = response1.contentType();
        int int33 = response1.statusCode;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry35 = response1.scanHeaders("hi!=null=hi!=null");
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        boolean boolean38 = request36.followRedirects;
        org.jsoup.Connection.Request request40 = request36.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request36.headers();
        boolean boolean42 = request36.ignoreContentType;
        boolean boolean43 = request36.followRedirects();
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method45 = request44.method();
        org.jsoup.Connection.Request request46 = request36.method(method45);
        boolean boolean47 = request36.followRedirects();
        response1.req = request36;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1048576 + "'", int10 == 1048576);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry35);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + method45 + "' != '" + org.jsoup.Connection.Method.GET + "'", method45.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("null=null");
        org.jsoup.Connection.Request request11 = request0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.ignoreHttpErrors();
        org.jsoup.Connection.Request request17 = request12.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.headers();
        request18.followRedirects = false;
        boolean boolean23 = request18.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request25 = request18.timeout((int) ' ');
        java.lang.String str27 = request25.cookie("hi!");
        java.lang.String str29 = request25.header("null=null");
        request25.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser37 = request32.parser;
        request25.parser = parser37;
        org.jsoup.helper.HttpConnection.Request request39 = request12.parser(parser37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        org.jsoup.Connection.Request request42 = request39.method(method41);
        org.jsoup.Connection.Request request43 = request0.method(method41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request0.cookies();
        org.jsoup.helper.HttpConnection.Request request46 = request0.timeout((int) (byte) 100);
        java.net.URL uRL47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request48 = request0.url(uRL47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response10 = httpConnection9.response();
        org.jsoup.Connection connection12 = httpConnection9.followRedirects(false);
        org.jsoup.Connection connection14 = httpConnection9.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request15.headers();
        request15.followRedirects = false;
        boolean boolean20 = request15.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request22 = request15.timeout((int) ' ');
        boolean boolean23 = request22.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal26.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal32 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = keyVal32.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal35.key = "hi!";
        java.lang.String str38 = keyVal35.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal40 = keyVal35.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal44.key = "hi!";
        java.lang.String str47 = keyVal44.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str49 = keyVal48.toString();
        keyVal48.value = "";
        keyVal48.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal54 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal54.key = "hi!";
        java.lang.String str57 = keyVal54.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal59 = keyVal54.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal60 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str61 = keyVal60.key();
        org.jsoup.Connection.KeyVal[] keyValArray62 = new org.jsoup.Connection.KeyVal[] { keyVal26, keyVal29, keyVal34, keyVal35, keyVal43, keyVal44, keyVal48, keyVal54, keyVal60 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList63 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList63, keyValArray62);
        request22.data = keyValList63;
        org.jsoup.Connection connection66 = httpConnection9.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList63);
        request0.data = keyValList63;
        org.jsoup.helper.HttpConnection.Request request68 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method69 = request68.method();
        boolean boolean70 = request68.followRedirects;
        org.jsoup.Connection.Request request72 = request68.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = request68.cookies();
        boolean boolean75 = request68.hasCookie("");
        int int76 = request68.timeout();
        org.jsoup.Connection.Request request78 = request68.followRedirects(true);
        org.jsoup.parser.Parser parser79 = request68.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = request68.cookies();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection81 = request68.data();
        request0.data = keyValCollection81;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "hi!" + "'", str47.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null=null" + "'", str49.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "hi!" + "'", str57.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection66);
        org.junit.Assert.assertTrue("'" + method69 + "' != '" + org.jsoup.Connection.Method.GET + "'", method69.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 3000 + "'", int76 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection81);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.cookies();
        boolean boolean17 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str19 = keyVal18.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = keyVal18.value("hi!");
        java.lang.String str22 = keyVal21.toString();
        org.jsoup.helper.HttpConnection.Request request23 = request0.data((org.jsoup.Connection.KeyVal) keyVal21);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request25 = request23.removeHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null=hi!" + "'", str22.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        request0.ignoreContentType = false;
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        request10.followRedirects = false;
        boolean boolean15 = request10.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request17 = request10.timeout((int) ' ');
        boolean boolean18 = request17.ignoreHttpErrors;
        org.jsoup.Connection.Method method19 = request17.method();
        org.jsoup.Connection.Request request20 = request0.method(method19);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection9 = httpConnection0.header("hi!", "");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.Connection.Method method23 = request17.method();
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.lang.String str30 = request24.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request33 = request24.method(method32);
        org.jsoup.Connection.Request request34 = request17.method(method32);
        org.jsoup.Connection.Request request35 = request10.method(method32);
        org.jsoup.Connection.Request request37 = request10.removeHeader("hi!=null");
        httpConnection0.req = request10;
        org.jsoup.helper.HttpConnection.Response response39 = null;
        org.jsoup.helper.HttpConnection.Response response40 = new org.jsoup.helper.HttpConnection.Response(response39);
        int int41 = response40.statusCode();
        int int42 = response40.numRedirects;
        java.lang.String str43 = response40.charset;
        response40.contentType = "null=null=null=hi!";
        response40.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = response40.headers();
        org.jsoup.helper.HttpConnection.Request request49 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method50 = request49.method();
        boolean boolean51 = request49.followRedirects;
        org.jsoup.Connection.Request request53 = request49.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = request49.headers();
        boolean boolean55 = request49.ignoreContentType;
        boolean boolean56 = request49.followRedirects();
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method58 = request57.method();
        org.jsoup.Connection.Request request59 = request49.method(method58);
        org.jsoup.Connection.Response response60 = response40.method(method58);
        int int61 = response40.numRedirects;
        org.jsoup.Connection.Response response63 = response40.removeCookie("null=null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap64 = response40.cookies();
        org.jsoup.Connection connection65 = httpConnection0.data(strMap64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + method50 + "' != '" + org.jsoup.Connection.Method.GET + "'", method50.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + method58 + "' != '" + org.jsoup.Connection.Method.GET + "'", method58.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection65);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request9 = request0.timeout((int) (byte) 0);
        java.lang.String str11 = request0.getHeaderCaseInsensitive("null=null");
        java.lang.String str13 = request0.header("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection0 = null;
        java.io.OutputStream outputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection0, outputStream1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection.Request request5 = httpConnection0.request();
        org.jsoup.Connection.Request request6 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("");
        int int8 = request0.timeout();
        org.jsoup.Connection.Request request10 = request0.followRedirects(true);
        org.jsoup.parser.Parser parser11 = request0.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request0.cookies();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection13 = request0.data();
        java.lang.String str15 = request0.header("null=null=null=hi!=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        keyVal18.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = keyVal18.value("null=null=hi!");
        java.lang.String str23 = keyVal22.key;
        org.jsoup.helper.HttpConnection.Request request24 = request0.data((org.jsoup.Connection.KeyVal) keyVal22);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3000 + "'", int8 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request10 = request3.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry12 = request3.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request3.headers();
        org.jsoup.Connection connection14 = httpConnection0.data(strMap13);
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request15.headers();
        request15.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser20 = request15.parser;
        org.jsoup.Connection.Request request22 = request15.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request15.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request15.cookies();
        org.jsoup.Connection connection25 = httpConnection0.data(strMap24);
        org.jsoup.Connection connection27 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method31 = request30.method();
        boolean boolean32 = request30.followRedirects;
        org.jsoup.Connection.Request request34 = request30.followRedirects(true);
        java.lang.String str36 = request30.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        org.jsoup.Connection.Request request39 = request30.method(method38);
        org.jsoup.Connection.Request request40 = request28.method(method38);
        org.jsoup.parser.Parser parser41 = request28.parser;
        org.jsoup.Connection connection42 = httpConnection0.parser(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        org.jsoup.Connection.Response response11 = response1.removeCookie("null=hi!");
        response1.contentType = "";
        java.nio.ByteBuffer byteBuffer14 = null;
        response1.byteData = byteBuffer14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection9 = httpConnection0.header("hi!", "");
        org.jsoup.Connection.Request request10 = httpConnection0.req;
        org.jsoup.Connection connection12 = httpConnection0.timeout((int) (short) 10);
        org.jsoup.Connection connection14 = httpConnection0.followRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        org.jsoup.Connection.Response response7 = response1.removeCookie("hi!");
        int int8 = response1.numRedirects;
        java.lang.String str10 = response1.cookie("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap11 = response1.cookies();
        org.jsoup.Connection.Response response14 = response1.header("null=null=null=hi!", "");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry16 = response1.scanHeaders("");
        int int17 = response1.numRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        java.util.Map<java.lang.String, java.lang.String> strMap6 = response1.headers();
        boolean boolean8 = response1.hasHeader("null=null=hi!");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry10 = response1.scanHeaders("hi!=null=hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry10);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.lang.String str16 = response1.charset();
        java.net.URL uRL17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response18 = response1.url(uRL17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.toString();
        keyVal0.value = "null=null=null=hi!=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = keyVal0.value("hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null=hi!" + "'", str4.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal8);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request4 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method5 = request4.method();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request4.headers();
        request4.followRedirects = false;
        boolean boolean9 = request4.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request11 = request4.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry13 = request4.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request4.headers();
        httpConnection0.req = request4;
        org.jsoup.Connection.Method method16 = request4.method();
        org.jsoup.Connection.Request request18 = request4.removeHeader("null=");
        java.lang.String str20 = request4.header("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.Connection connection19 = httpConnection0.header("null=null", "hi!");
        org.jsoup.Connection connection21 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection connection24 = httpConnection0.header("null=", "null=null=");
        org.jsoup.Connection connection26 = httpConnection0.referrer("null=hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.lang.String str3 = response1.contentType();
        response1.contentType = "null=null=null=hi!=hi!";
        java.util.Map<java.lang.String, java.lang.String> strMap6 = response1.cookies();
        java.lang.String str7 = response1.charset;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request3.headers();
        org.jsoup.Connection.Method method7 = request3.method();
        org.jsoup.Connection connection8 = httpConnection0.method(method7);
        org.jsoup.Connection connection10 = httpConnection0.userAgent("null=hi!=null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        java.lang.String str7 = request0.cookie("null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.headers();
        java.lang.String str11 = request0.cookie("null=null=hi!");
        java.lang.String str13 = request0.getHeaderCaseInsensitive("null=");
        boolean boolean14 = request0.followRedirects();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        int int10 = response1.numRedirects;
        org.jsoup.Connection.Method method11 = response1.method();
        java.lang.String str12 = response1.contentType;
        response1.numRedirects = (byte) 10;
        response1.statusMessage = "";
        java.lang.String str17 = response1.contentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        org.jsoup.Connection.Response response11 = response1.removeCookie("null=hi!");
        java.nio.ByteBuffer byteBuffer12 = null;
        response1.byteData = byteBuffer12;
        org.jsoup.Connection.Response response15 = response1.removeHeader("null=null=null=hi!=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.followRedirects;
        org.jsoup.Connection.Request request16 = request12.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request12.cookies();
        org.jsoup.Connection connection18 = httpConnection0.data(strMap17);
        org.jsoup.Connection connection21 = httpConnection0.data("null=hi!", "hi!=null=hi!=null");
        org.jsoup.Connection.Request request22 = httpConnection0.req;
        org.jsoup.Connection connection24 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection httpConnection25 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request26 = null;
        org.jsoup.Connection connection27 = httpConnection25.request(request26);
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response29 = httpConnection28.response();
        org.jsoup.Connection.Request request30 = httpConnection28.request();
        org.jsoup.Connection connection31 = httpConnection25.request(request30);
        org.jsoup.Connection connection33 = httpConnection25.ignoreContentType(true);
        org.jsoup.Connection connection36 = httpConnection25.cookie("hi!=null", "null=null");
        org.jsoup.Connection connection38 = httpConnection25.referrer("null=");
        org.jsoup.helper.HttpConnection httpConnection39 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request40 = null;
        org.jsoup.Connection connection41 = httpConnection39.request(request40);
        org.jsoup.helper.HttpConnection httpConnection42 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response43 = httpConnection42.response();
        org.jsoup.Connection.Request request44 = httpConnection42.request();
        org.jsoup.Connection connection45 = httpConnection39.request(request44);
        org.jsoup.helper.HttpConnection httpConnection46 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection48 = httpConnection46.followRedirects(false);
        org.jsoup.Connection connection50 = httpConnection46.referrer("");
        org.jsoup.Connection.Response response51 = httpConnection46.response();
        org.jsoup.Connection connection52 = httpConnection39.response(response51);
        org.jsoup.Connection connection54 = httpConnection39.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request55 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method56 = request55.method();
        boolean boolean57 = request55.ignoreHttpErrors();
        org.jsoup.Connection.Request request60 = request55.cookie("hi!", "");
        java.lang.String str62 = request55.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method64 = request63.method();
        boolean boolean65 = request63.followRedirects;
        org.jsoup.Connection.Request request67 = request63.followRedirects(true);
        java.lang.String str69 = request63.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request70 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method71 = request70.method();
        org.jsoup.Connection.Request request72 = request63.method(method71);
        org.jsoup.Connection.Request request73 = request55.method(method71);
        org.jsoup.Connection connection74 = httpConnection39.method(method71);
        org.jsoup.Connection connection76 = httpConnection39.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection77 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response78 = httpConnection77.response();
        org.jsoup.Connection connection80 = httpConnection77.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection81 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response82 = httpConnection81.response();
        httpConnection77.res = response82;
        java.lang.String[] strArray86 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection87 = httpConnection77.data(strArray86);
        org.jsoup.Connection connection88 = httpConnection39.data(strArray86);
        org.jsoup.Connection connection89 = httpConnection25.data(strArray86);
        org.jsoup.Connection connection90 = httpConnection0.data(strArray86);
        org.jsoup.Connection connection92 = httpConnection0.referrer("null=null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
        org.junit.Assert.assertTrue("'" + method56 + "' != '" + org.jsoup.Connection.Method.GET + "'", method56.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + method64 + "' != '" + org.jsoup.Connection.Method.GET + "'", method64.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + method71 + "' != '" + org.jsoup.Connection.Method.GET + "'", method71.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection92);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.Connection.Request request7 = httpConnection5.request();
        org.jsoup.Connection.Request request8 = httpConnection5.req;
        org.jsoup.Connection.Request request9 = httpConnection5.request();
        org.jsoup.Connection.Response response10 = httpConnection5.res;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.lang.String str19 = request13.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        org.jsoup.Connection.Request request22 = request13.method(method21);
        org.jsoup.Connection.Request request23 = request11.method(method21);
        boolean boolean25 = request11.hasHeader("hi!");
        org.jsoup.Connection.Request request27 = request11.removeCookie("");
        httpConnection5.req = request27;
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request30 = null;
        org.jsoup.Connection connection31 = httpConnection29.request(request30);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response33 = httpConnection32.response();
        org.jsoup.Connection connection34 = httpConnection29.response(response33);
        httpConnection5.res = response33;
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        boolean boolean38 = request36.ignoreHttpErrors();
        org.jsoup.Connection.Request request41 = request36.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request42.headers();
        request42.followRedirects = false;
        boolean boolean47 = request42.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request49 = request42.timeout((int) ' ');
        java.lang.String str51 = request49.cookie("hi!");
        java.lang.String str53 = request49.header("null=null");
        request49.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method57 = request56.method();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = request56.headers();
        request56.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser61 = request56.parser;
        request49.parser = parser61;
        org.jsoup.helper.HttpConnection.Request request63 = request36.parser(parser61);
        org.jsoup.helper.HttpConnection.Request request64 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method65 = request64.method();
        org.jsoup.Connection.Request request66 = request63.method(method65);
        org.jsoup.Connection connection67 = httpConnection5.method(method65);
        org.jsoup.Connection.Request request68 = request4.method(method65);
        boolean boolean69 = request4.followRedirects();
        org.jsoup.helper.HttpConnection.Request request70 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method71 = request70.method();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = request70.headers();
        request70.followRedirects = false;
        boolean boolean75 = request70.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request77 = request70.timeout((int) ' ');
        boolean boolean78 = request77.followRedirects();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry80 = request77.scanHeaders("");
        java.lang.String str82 = request77.cookie("null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal83 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal83.key = "hi!";
        java.lang.String str86 = keyVal83.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal88 = keyVal83.key("hi!");
        java.lang.String str89 = keyVal83.value();
        keyVal83.key = "null=";
        org.jsoup.helper.HttpConnection.KeyVal keyVal93 = keyVal83.value("null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request94 = request77.data((org.jsoup.Connection.KeyVal) keyVal83);
        org.jsoup.helper.HttpConnection.Request request95 = request4.data((org.jsoup.Connection.KeyVal) keyVal83);
        org.jsoup.Connection.Request request98 = request4.header("null=null=null=hi!=hi!", "null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + method57 + "' != '" + org.jsoup.Connection.Method.GET + "'", method57.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertTrue("'" + method65 + "' != '" + org.jsoup.Connection.Method.GET + "'", method65.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + method71 + "' != '" + org.jsoup.Connection.Method.GET + "'", method71.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "hi!" + "'", str86.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request98);
    }
}

