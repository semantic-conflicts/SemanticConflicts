import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = '#';
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.Connection.Request request12 = request7.cookie("null=null=null=hi!", "hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.toString();
        keyVal0.value = "";
        keyVal0.value = "null=hi!";
        keyVal0.key = "null=null";
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.key("hi!");
        java.lang.String str10 = keyVal0.value();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null" + "'", str1.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null=hi!" + "'", str10.equals("null=hi!"));
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection8 = httpConnection0.ignoreContentType(true);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document9 = httpConnection0.post();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("hi!");
        java.lang.String str7 = keyVal0.key();
        keyVal0.value = "hi!=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response18 = response1.cookie("", "null=null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.lang.String str3 = response1.contentType();
        response1.numRedirects = 1;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = response1.hasHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request7.data();
        java.lang.String str12 = request7.header("hi!");
        org.jsoup.Connection.Request request15 = request7.header("null=null=hi!", "");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = request7.scanHeaders("null=null=null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request7.headers();
        java.lang.Class<?> wildcardClass19 = request7.getClass();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal3.key("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        java.lang.String str22 = response1.charset();
        org.jsoup.Connection.Method method23 = response1.method();
        boolean boolean24 = response1.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        boolean boolean5 = response1.executed;
        response1.executed = true;
        org.jsoup.Connection.Method method8 = response1.method();
        org.jsoup.Connection.Request request9 = response1.req;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray10 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request9);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request7.data();
        boolean boolean12 = request7.hasCookie("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean9 = request3.hasCookie("null=null");
        java.lang.String str11 = request3.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.request((org.jsoup.Connection.Request) request3);
        org.jsoup.Connection connection15 = httpConnection0.data("null=hi!", "");
        org.jsoup.Connection connection17 = httpConnection0.maxBodySize(32);
        org.jsoup.Connection.Request request18 = httpConnection0.request();
        org.jsoup.Connection connection20 = httpConnection0.followRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        boolean boolean4 = response1.hasCookie("");
        java.net.HttpURLConnection httpURLConnection5 = null;
        org.jsoup.helper.HttpConnection.Response response6 = null;
        org.jsoup.helper.HttpConnection.Response response7 = new org.jsoup.helper.HttpConnection.Response(response6);
        int int8 = response7.statusCode();
        int int9 = response7.numRedirects;
        java.lang.String str10 = response7.charset;
        java.net.URL uRL11 = response7.url();
        response7.charset = "hi!=null";
        org.jsoup.Connection.Response response16 = response7.cookie("null=null=hi!", "hi!=null");
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection5, (org.jsoup.Connection.Response) response7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.maxBodySizeBytes = (-1);
        java.lang.String str4 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Response response5 = null;
        org.jsoup.helper.HttpConnection.Response response6 = new org.jsoup.helper.HttpConnection.Response(response5);
        int int7 = response6.statusCode();
        int int8 = response6.numRedirects;
        java.lang.String str9 = response6.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = response6.scanHeaders("");
        java.net.URL uRL12 = response6.url();
        response6.statusCode = 10;
        response6.executed = true;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = response6.cookies();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response18 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=", "null=null=null=hi!");
        java.lang.String str3 = keyVal2.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=" + "'", str3.equals("null="));
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        request0.followRedirects = false;
        boolean boolean17 = request0.ignoreContentType();
        org.jsoup.helper.HttpConnection httpConnection18 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response19 = httpConnection18.response();
        org.jsoup.Connection connection21 = httpConnection18.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection25 = httpConnection22.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        int int29 = request26.timeout();
        org.jsoup.parser.Parser parser30 = request26.parser();
        org.jsoup.Connection connection31 = httpConnection22.parser(parser30);
        org.jsoup.Connection connection32 = httpConnection18.parser(parser30);
        org.jsoup.helper.HttpConnection.Request request33 = request0.parser(parser30);
        boolean boolean34 = request0.followRedirects;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3000 + "'", int29 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        boolean boolean22 = request10.hasCookie("null=null=null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response23 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = 'a';
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        org.jsoup.Connection.Request request7 = response1.req;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = response1.scanHeaders("hi!=null");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        java.net.URL uRL11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response12 = response1.url(uRL11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        int int10 = response1.numRedirects;
        org.jsoup.Connection.Method method11 = response1.method();
        org.jsoup.Connection.Response response14 = response1.header("null=", "null=null=null=hi!=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request9 = request0.timeout((int) (byte) 0);
        boolean boolean11 = request0.hasHeader("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        org.jsoup.Connection.Request request8 = request0.maxBodySize((int) (byte) 0);
        org.jsoup.Connection.Request request10 = request0.removeCookie("hi!");
        boolean boolean11 = request0.followRedirects();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        int int12 = request7.maxBodySize();
        java.lang.String str14 = request7.header("hi!");
        boolean boolean15 = request7.followRedirects();
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request17 = request7.url(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.net.URL uRL9 = request0.url();
        org.jsoup.Connection.Request request11 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request13 = request0.removeCookie("null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(1048576);
        boolean boolean5 = request0.ignoreContentType;
        request0.timeoutMilliseconds = (byte) -1;
        org.jsoup.Connection.Request request9 = request0.maxBodySize((int) (byte) 1);
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request11 = null;
        org.jsoup.Connection connection12 = httpConnection10.request(request11);
        org.jsoup.helper.HttpConnection httpConnection13 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response14 = httpConnection13.response();
        org.jsoup.Connection.Request request15 = httpConnection13.request();
        org.jsoup.Connection connection16 = httpConnection10.request(request15);
        org.jsoup.Connection.Request request17 = httpConnection10.req;
        org.jsoup.Connection connection19 = httpConnection10.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        boolean boolean22 = request20.followRedirects;
        org.jsoup.Connection.Request request24 = request20.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request20.headers();
        boolean boolean26 = request20.ignoreContentType;
        request20.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request20.cookies();
        httpConnection10.req = request20;
        boolean boolean32 = request20.hasCookie("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request33.headers();
        request33.followRedirects = false;
        boolean boolean38 = request33.ignoreHttpErrors;
        org.jsoup.Connection.Method method39 = request33.method();
        int int40 = request33.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        boolean boolean43 = request41.followRedirects;
        org.jsoup.Connection.Request request45 = request41.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = request41.headers();
        boolean boolean47 = request41.ignoreContentType;
        boolean boolean48 = request41.followRedirects();
        org.jsoup.helper.HttpConnection.Request request49 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method50 = request49.method();
        org.jsoup.Connection.Request request51 = request41.method(method50);
        org.jsoup.Connection.Request request52 = request33.method(method50);
        org.jsoup.Connection.Request request53 = request20.method(method50);
        org.jsoup.Connection.Request request54 = request0.method(method50);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + method39 + "' != '" + org.jsoup.Connection.Method.GET + "'", method39.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1048576 + "'", int40 == 1048576);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + method50 + "' != '" + org.jsoup.Connection.Method.GET + "'", method50.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.Connection connection21 = httpConnection0.referrer("null=null=null=hi!");
        org.jsoup.Connection.Response response22 = null;
        org.jsoup.Connection connection23 = httpConnection0.response(response22);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response24 = httpConnection0.execute();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        org.jsoup.Connection.Request request9 = request0.method(method8);
        java.net.URL uRL10 = request0.url();
        java.lang.String str12 = request0.cookie("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request13.headers();
        request13.followRedirects = false;
        boolean boolean18 = request13.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request20 = request13.timeout((int) ' ');
        boolean boolean21 = request20.ignoreContentType;
        boolean boolean22 = request20.followRedirects();
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request23.headers();
        request23.followRedirects = false;
        java.lang.String str29 = request23.cookie("");
        boolean boolean30 = request23.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.followRedirects = false;
        boolean boolean36 = request31.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection37 = request31.data();
        request23.data = keyValCollection37;
        request20.data = keyValCollection37;
        request0.data = keyValCollection37;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection37);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        request0.parser = parser30;
        int int33 = request0.timeoutMilliseconds;
        org.jsoup.Connection.Request request35 = request0.maxBodySize((int) (byte) 10);
        org.jsoup.helper.HttpConnection httpConnection36 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response37 = httpConnection36.response();
        org.jsoup.Connection.Request request38 = httpConnection36.request();
        org.jsoup.Connection.Request request39 = httpConnection36.req;
        org.jsoup.Connection.Request request40 = httpConnection36.request();
        org.jsoup.Connection.Response response41 = httpConnection36.res;
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method45 = request44.method();
        boolean boolean46 = request44.followRedirects;
        org.jsoup.Connection.Request request48 = request44.followRedirects(true);
        java.lang.String str50 = request44.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        org.jsoup.Connection.Request request53 = request44.method(method52);
        org.jsoup.Connection.Request request54 = request42.method(method52);
        boolean boolean56 = request42.hasHeader("hi!");
        org.jsoup.Connection.Request request58 = request42.removeCookie("");
        httpConnection36.req = request58;
        org.jsoup.helper.HttpConnection httpConnection60 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request61 = null;
        org.jsoup.Connection connection62 = httpConnection60.request(request61);
        org.jsoup.helper.HttpConnection httpConnection63 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response64 = httpConnection63.response();
        org.jsoup.Connection connection65 = httpConnection60.response(response64);
        httpConnection36.res = response64;
        org.jsoup.Connection connection68 = httpConnection36.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request69 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method70 = request69.method();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = request69.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = request69.headers();
        org.jsoup.Connection.Method method73 = request69.method();
        org.jsoup.Connection connection74 = httpConnection36.method(method73);
        org.jsoup.Connection.Request request75 = request0.method(method73);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3000 + "'", int33 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response41);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method45 + "' != '" + org.jsoup.Connection.Method.GET + "'", method45.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection68);
        org.junit.Assert.assertTrue("'" + method70 + "' != '" + org.jsoup.Connection.Method.GET + "'", method70.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertTrue("'" + method73 + "' != '" + org.jsoup.Connection.Method.GET + "'", method73.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request75);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.helper.HttpConnection.Response response44 = new org.jsoup.helper.HttpConnection.Response(response1);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray45 = response44.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection6 = httpConnection0.header("null=null=null=hi!", "");
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null=hi!", "null=hi!");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request10.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str15 = keyVal14.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = keyVal14.value("hi!");
        java.lang.String str18 = keyVal14.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = keyVal14.value("hi!");
        java.lang.String str21 = keyVal14.key();
        org.jsoup.helper.HttpConnection.Request request22 = request10.data((org.jsoup.Connection.KeyVal) keyVal14);
        java.net.URL uRL23 = request22.url();
        org.jsoup.Connection connection24 = httpConnection0.request((org.jsoup.Connection.Request) request22);
        org.jsoup.Connection.Method method25 = request22.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        request11.maxBodySizeBytes = (short) 100;
        org.jsoup.parser.Parser parser20 = request11.parser;
        org.jsoup.helper.HttpConnection.Request request21 = request0.parser(parser20);
        java.lang.String str23 = request0.header("hi!=null");
        boolean boolean24 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        boolean boolean27 = request25.followRedirects;
        org.jsoup.Connection.Request request29 = request25.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request25.cookies();
        boolean boolean32 = request25.hasCookie("");
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str34 = keyVal33.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal36 = keyVal33.value("hi!");
        java.lang.String str37 = keyVal33.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = keyVal33.value("hi!");
        java.lang.String str40 = keyVal33.key();
        org.jsoup.helper.HttpConnection.Request request41 = request25.data((org.jsoup.Connection.KeyVal) keyVal33);
        org.jsoup.helper.HttpConnection.Request request42 = request0.data((org.jsoup.Connection.KeyVal) keyVal33);
        java.lang.String str44 = request42.getHeaderCaseInsensitive("hi!");
        org.jsoup.Connection.Request request46 = request42.followRedirects(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry4 = response1.scanHeaders("null=hi!");
        org.jsoup.Connection.Method method5 = response1.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method5);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        boolean boolean6 = request0.followRedirects();
        request0.ignoreHttpErrors = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.charset;
        org.jsoup.Connection.Response response8 = response1.header("null=", "hi!");
        int int9 = response1.statusCode();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        java.net.URL uRL8 = request0.url();
        java.lang.String str10 = request0.header("null=null=hi!");
        boolean boolean12 = request0.hasCookie("hi!");
        boolean boolean14 = request0.hasHeader("null=");
        boolean boolean15 = request0.followRedirects();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Response response7 = httpConnection0.response();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection9 = httpConnection0.url("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.followRedirects();
        org.jsoup.helper.HttpConnection.Request request10 = request7.timeout((int) '4');
        org.jsoup.Connection.Method method11 = request7.method();
        java.net.URL uRL12 = request7.url();
        java.net.URL uRL13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request14 = request7.url(uRL13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL12);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.statusMessage();
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.Connection.Method method9 = request3.method();
        int int10 = request3.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        boolean boolean18 = request11.followRedirects();
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        org.jsoup.Connection.Request request21 = request11.method(method20);
        org.jsoup.Connection.Request request22 = request3.method(method20);
        org.jsoup.Connection.Response response23 = response1.method(method20);
        java.lang.String str24 = response1.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1048576 + "'", int10 == 1048576);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        org.jsoup.Connection.Request request16 = request0.removeCookie("");
        java.net.URL uRL17 = request0.url();
        org.jsoup.Connection.Request request19 = request0.maxBodySize(10);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!=null", "hi!=null");
        java.lang.String str3 = keyVal2.toString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!=null=hi!=null" + "'", str3.equals("hi!=null=hi!=null"));
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        boolean boolean6 = request0.hasHeader("hi!=null");
        request0.maxBodySizeBytes = 1048576;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.followRedirects;
        org.jsoup.Connection.Request request16 = request12.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request12.cookies();
        org.jsoup.Connection connection18 = httpConnection0.data(strMap17);
        org.jsoup.Connection connection21 = httpConnection0.data("null=hi!", "hi!=null=hi!=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response22 = httpConnection0.execute();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        java.util.Map<java.lang.String, java.lang.String> strMap6 = response1.headers();
        java.lang.String str7 = response1.charset;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean9 = request3.hasCookie("null=null");
        java.lang.String str11 = request3.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.request((org.jsoup.Connection.Request) request3);
        org.jsoup.helper.HttpConnection httpConnection13 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response14 = httpConnection13.response();
        httpConnection0.res = response14;
        org.jsoup.Connection.Response response16 = httpConnection0.response();
        java.net.URL uRL17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection18 = httpConnection0.url(uRL17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        java.lang.Class<?> wildcardClass2 = request0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request0.followRedirects();
        org.jsoup.Connection.Request request10 = request0.removeHeader("null=null=null=hi!");
        org.jsoup.Connection.Request request12 = request0.ignoreContentType(false);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection13 = request0.data;
        java.net.URL uRL14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request15 = request0.url(uRL14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection13);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        response1.statusMessage = "null=";
        int int7 = response1.statusCode;
        response1.contentType = "";
        java.net.HttpURLConnection httpURLConnection10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = null;
        org.jsoup.helper.HttpConnection.Response response12 = new org.jsoup.helper.HttpConnection.Response(response11);
        int int13 = response12.statusCode();
        int int14 = response12.numRedirects;
        response12.charset = "";
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        boolean boolean24 = request22.ignoreHttpErrors();
        org.jsoup.Connection.Request request27 = request22.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request28.headers();
        request28.followRedirects = false;
        boolean boolean33 = request28.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request35 = request28.timeout((int) ' ');
        java.lang.String str37 = request35.cookie("hi!");
        java.lang.String str39 = request35.header("null=null");
        request35.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request42.headers();
        request42.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser47 = request42.parser;
        request35.parser = parser47;
        org.jsoup.helper.HttpConnection.Request request49 = request22.parser(parser47);
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        org.jsoup.Connection.Request request52 = request49.method(method51);
        org.jsoup.Connection.Request request53 = request17.method(method51);
        org.jsoup.Connection.Response response54 = response12.method(method51);
        org.jsoup.Connection.Request request55 = response12.req;
        response12.statusCode = (byte) 10;
        response12.charset = "null=";
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection10, (org.jsoup.Connection.Response) response12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request55);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        boolean boolean28 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        org.jsoup.Connection connection32 = httpConnection29.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection36 = httpConnection33.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        int int40 = request37.timeout();
        org.jsoup.parser.Parser parser41 = request37.parser();
        org.jsoup.Connection connection42 = httpConnection33.parser(parser41);
        org.jsoup.Connection connection43 = httpConnection29.parser(parser41);
        org.jsoup.helper.HttpConnection.Request request44 = request0.parser(parser41);
        int int45 = request44.timeout();
        java.lang.String str47 = request44.header("hi!=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3000 + "'", int45 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreHttpErrors;
        org.jsoup.Connection.Method method9 = request7.method();
        org.jsoup.Connection.Request request12 = request7.header("hi!=null", "null=null=null=hi!");
        boolean boolean13 = request7.followRedirects;
        request7.timeoutMilliseconds = (short) -1;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response1.scanHeaders("null=");
        response1.charset = "hi!=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request10 = request3.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry12 = request3.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request3.headers();
        org.jsoup.Connection connection14 = httpConnection0.data(strMap13);
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request15.headers();
        request15.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser20 = request15.parser;
        org.jsoup.Connection.Request request22 = request15.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request15.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request15.cookies();
        org.jsoup.Connection connection25 = httpConnection0.data(strMap24);
        org.jsoup.Connection connection28 = httpConnection0.header("null=null", "");
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request30 = null;
        org.jsoup.Connection connection31 = httpConnection29.request(request30);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response33 = httpConnection32.response();
        org.jsoup.Connection.Request request34 = httpConnection32.request();
        org.jsoup.Connection connection35 = httpConnection29.request(request34);
        org.jsoup.Connection connection37 = httpConnection29.ignoreContentType(true);
        org.jsoup.Connection.Request request38 = httpConnection29.req;
        httpConnection0.req = request38;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection9 = httpConnection7.followRedirects(false);
        org.jsoup.Connection connection11 = httpConnection7.referrer("");
        org.jsoup.Connection.Response response12 = httpConnection7.response();
        org.jsoup.Connection connection13 = httpConnection0.response(response12);
        org.jsoup.Connection connection15 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection17 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Request request18 = null;
        org.jsoup.Connection connection19 = httpConnection0.request(request18);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection21 = httpConnection0.timeout(32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response10 = httpConnection9.response();
        org.jsoup.Connection connection12 = httpConnection9.followRedirects(false);
        org.jsoup.Connection connection14 = httpConnection9.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request15.headers();
        request15.followRedirects = false;
        boolean boolean20 = request15.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request22 = request15.timeout((int) ' ');
        boolean boolean23 = request22.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal26.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal32 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = keyVal32.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal35.key = "hi!";
        java.lang.String str38 = keyVal35.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal40 = keyVal35.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal44.key = "hi!";
        java.lang.String str47 = keyVal44.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str49 = keyVal48.toString();
        keyVal48.value = "";
        keyVal48.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal54 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal54.key = "hi!";
        java.lang.String str57 = keyVal54.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal59 = keyVal54.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal60 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str61 = keyVal60.key();
        org.jsoup.Connection.KeyVal[] keyValArray62 = new org.jsoup.Connection.KeyVal[] { keyVal26, keyVal29, keyVal34, keyVal35, keyVal43, keyVal44, keyVal48, keyVal54, keyVal60 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList63 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList63, keyValArray62);
        request22.data = keyValList63;
        org.jsoup.Connection connection66 = httpConnection9.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList63);
        request0.data = keyValList63;
        org.jsoup.Connection.Request request69 = request0.removeCookie("hi!=null");
        java.net.URL uRL70 = request0.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "hi!" + "'", str47.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null=null" + "'", str49.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "hi!" + "'", str57.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL70);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection21 = request10.data;
        org.jsoup.Connection.Method method22 = request10.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection21);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response21 = httpConnection20.response();
        org.jsoup.Connection connection23 = httpConnection20.followRedirects(false);
        org.jsoup.Connection.Response response24 = httpConnection20.response();
        httpConnection0.res = response24;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request26.headers();
        org.jsoup.Connection.Method method30 = request26.method();
        org.jsoup.Connection connection31 = httpConnection0.method(method30);
        org.jsoup.Connection.Request request32 = httpConnection0.request();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.parser.Parser parser3 = null;
        org.jsoup.Connection connection4 = httpConnection0.parser(parser3);
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request6.scanHeaders("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request6.headers();
        org.jsoup.Connection connection13 = httpConnection0.data(strMap12);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document14 = httpConnection0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry20 = request18.scanHeaders("");
        boolean boolean21 = request18.followRedirects;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request18.cookies();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection23 = request18.data;
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection23, outputStream24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection23);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.lang.String str19 = request13.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        org.jsoup.Connection.Request request22 = request13.method(method21);
        org.jsoup.Connection.Request request23 = request11.method(method21);
        org.jsoup.helper.HttpConnection.KeyVal keyVal24 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str25 = keyVal24.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = keyVal24.value("");
        java.lang.String str28 = keyVal24.value();
        org.jsoup.helper.HttpConnection.Request request29 = request11.data((org.jsoup.Connection.KeyVal) keyVal24);
        int int30 = request29.timeout();
        response10.req = request29;
        httpConnection0.res = response10;
        int int33 = response10.numRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null=null" + "'", str25.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3000 + "'", int30 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        request7.followRedirects = false;
        org.jsoup.parser.Parser parser14 = request7.parser;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Request request16 = request7.timeout((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Timeout milliseconds must be 0 (infinite) or greater");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        org.jsoup.Connection.Request request16 = request0.removeCookie("");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection17 = request0.data();
        org.jsoup.Connection.Request request20 = request0.header("null=hi!", "");
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response22 = httpConnection21.response();
        org.jsoup.Connection connection24 = httpConnection21.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection25 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response26 = httpConnection25.response();
        httpConnection21.res = response26;
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request28.headers();
        request28.followRedirects = false;
        boolean boolean33 = request28.ignoreHttpErrors;
        org.jsoup.Connection.Method method34 = request28.method();
        org.jsoup.Connection connection35 = httpConnection21.method(method34);
        org.jsoup.Connection.Request request36 = request0.method(method34);
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        boolean boolean39 = request37.ignoreHttpErrors();
        org.jsoup.Connection.Request request42 = request37.cookie("hi!", "");
        boolean boolean43 = request37.ignoreContentType;
        org.jsoup.Connection.Request request46 = request37.cookie("null=hi!", "hi!");
        java.lang.String str48 = request37.getHeaderCaseInsensitive("");
        java.lang.String str50 = request37.cookie("");
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = request51.headers();
        request51.followRedirects = false;
        boolean boolean56 = request51.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request58 = request51.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry60 = request51.scanHeaders("null=null");
        org.jsoup.Connection.Request request62 = request51.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method64 = request63.method();
        boolean boolean65 = request63.ignoreHttpErrors();
        org.jsoup.Connection.Request request68 = request63.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request69 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method70 = request69.method();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = request69.headers();
        request69.followRedirects = false;
        boolean boolean74 = request69.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request76 = request69.timeout((int) ' ');
        java.lang.String str78 = request76.cookie("hi!");
        java.lang.String str80 = request76.header("null=null");
        request76.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request83 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method84 = request83.method();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = request83.headers();
        request83.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser88 = request83.parser;
        request76.parser = parser88;
        org.jsoup.helper.HttpConnection.Request request90 = request63.parser(parser88);
        org.jsoup.helper.HttpConnection.Request request91 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method92 = request91.method();
        org.jsoup.Connection.Request request93 = request90.method(method92);
        org.jsoup.Connection.Request request94 = request51.method(method92);
        org.jsoup.Connection.Request request95 = request37.method(method92);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection96 = request37.data();
        request0.data = keyValCollection96;
        java.io.OutputStream outputStream98 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection96, outputStream98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertTrue("'" + method64 + "' != '" + org.jsoup.Connection.Method.GET + "'", method64.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertTrue("'" + method70 + "' != '" + org.jsoup.Connection.Method.GET + "'", method70.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + method84 + "' != '" + org.jsoup.Connection.Method.GET + "'", method84.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request90);
        org.junit.Assert.assertTrue("'" + method92 + "' != '" + org.jsoup.Connection.Method.GET + "'", method92.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection96);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection5 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        boolean boolean14 = request13.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal17.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = keyVal23.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal26.key = "hi!";
        java.lang.String str29 = keyVal26.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = keyVal26.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal35.key = "hi!";
        java.lang.String str38 = keyVal35.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str40 = keyVal39.toString();
        keyVal39.value = "";
        keyVal39.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal45.key = "hi!";
        java.lang.String str48 = keyVal45.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal50 = keyVal45.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal51 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str52 = keyVal51.key();
        org.jsoup.Connection.KeyVal[] keyValArray53 = new org.jsoup.Connection.KeyVal[] { keyVal17, keyVal20, keyVal25, keyVal26, keyVal34, keyVal35, keyVal39, keyVal45, keyVal51 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList54 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList54, keyValArray53);
        request13.data = keyValList54;
        org.jsoup.Connection connection57 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList54);
        org.jsoup.helper.HttpConnection.Request request58 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method59 = request58.method();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = request58.headers();
        request58.followRedirects = false;
        java.lang.String str64 = request58.cookie("");
        boolean boolean65 = request58.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request66 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method67 = request66.method();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = request66.headers();
        request66.followRedirects = false;
        boolean boolean71 = request66.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection72 = request66.data();
        request58.data = keyValCollection72;
        org.jsoup.Connection connection74 = httpConnection0.data(keyValCollection72);
        org.jsoup.Connection connection76 = httpConnection0.ignoreHttpErrors(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "null=null" + "'", str40.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "hi!" + "'", str48.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + method67 + "' != '" + org.jsoup.Connection.Method.GET + "'", method67.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection76);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!";
        java.net.URL uRL5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response6 = response1.url(uRL5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection2 = request0.data;
        java.io.OutputStream outputStream3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection2, outputStream3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection2);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.statusMessage();
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.Connection.Method method9 = request3.method();
        int int10 = request3.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        boolean boolean18 = request11.followRedirects();
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        org.jsoup.Connection.Request request21 = request11.method(method20);
        org.jsoup.Connection.Request request22 = request3.method(method20);
        org.jsoup.Connection.Response response23 = response1.method(method20);
        org.jsoup.Connection.Response response26 = response1.header("null=null", "null=null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1048576 + "'", int10 == 1048576);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry5 = request0.scanHeaders("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request0.headers();
        java.net.URL uRL7 = request0.url();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser13 = request8.parser;
        org.jsoup.Connection.Request request15 = request8.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request8.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request8.cookies();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        boolean boolean20 = request18.followRedirects;
        org.jsoup.Connection.Request request22 = request18.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request18.cookies();
        boolean boolean25 = request18.hasCookie("null=null");
        org.jsoup.parser.Parser parser26 = request18.parser();
        request8.parser = parser26;
        request0.parser = parser26;
        org.jsoup.Connection.Request request30 = request0.removeHeader("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(1048576);
        java.lang.String str6 = request0.getHeaderCaseInsensitive("hi!=null");
        boolean boolean7 = request0.ignoreContentType();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str6 = response1.contentType;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("hi!=");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document9 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        boolean boolean9 = request7.followRedirects();
        boolean boolean11 = request7.hasCookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection12 = request7.data();
        org.jsoup.Connection.Request request14 = request7.maxBodySize((int) '#');
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        org.jsoup.Connection.Response response9 = response1.removeCookie("");
        java.net.HttpURLConnection httpURLConnection10 = null;
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request12 = null;
        org.jsoup.Connection connection13 = httpConnection11.request(request12);
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        org.jsoup.Connection.Request request16 = httpConnection14.request();
        org.jsoup.Connection connection17 = httpConnection11.request(request16);
        org.jsoup.Connection connection19 = httpConnection11.ignoreContentType(true);
        org.jsoup.Connection connection22 = httpConnection11.data("null=hi!", "null=hi!");
        org.jsoup.Connection connection24 = httpConnection11.userAgent("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection25 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response26 = httpConnection25.response();
        org.jsoup.Connection connection28 = httpConnection25.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        httpConnection25.res = response30;
        org.jsoup.Connection connection33 = httpConnection25.userAgent("null=null");
        org.jsoup.Connection.Request request34 = httpConnection25.request();
        org.jsoup.helper.HttpConnection httpConnection35 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response36 = httpConnection35.response();
        org.jsoup.Connection.Request request37 = httpConnection35.request();
        org.jsoup.parser.Parser parser38 = null;
        org.jsoup.Connection connection39 = httpConnection35.parser(parser38);
        org.jsoup.Connection.Response response40 = httpConnection35.res;
        org.jsoup.helper.HttpConnection httpConnection41 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response42 = httpConnection41.response();
        org.jsoup.Connection.Request request43 = httpConnection41.request();
        org.jsoup.parser.Parser parser44 = null;
        org.jsoup.Connection connection45 = httpConnection41.parser(parser44);
        org.jsoup.Connection.Response response46 = httpConnection41.res;
        org.jsoup.Connection connection47 = httpConnection35.response(response46);
        org.jsoup.Connection connection48 = httpConnection25.response(response46);
        org.jsoup.helper.HttpConnection httpConnection49 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response50 = httpConnection49.response();
        httpConnection25.res = response50;
        httpConnection11.res = response50;
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection10, response50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response50);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str5 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal4.value("hi!");
        java.lang.String str8 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal4.value("hi!");
        java.lang.String str11 = keyVal4.key();
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal4);
        java.net.URL uRL13 = request12.url();
        java.lang.String str15 = request12.cookie("null=null=null=hi!=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        boolean boolean9 = request0.hasHeader("null=hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=null");
        org.jsoup.Connection.Request request13 = request0.ignoreContentType(false);
        request0.timeoutMilliseconds = (short) 0;
        org.jsoup.helper.HttpConnection.Response response16 = null;
        org.jsoup.helper.HttpConnection.Response response17 = new org.jsoup.helper.HttpConnection.Response(response16);
        int int18 = response17.statusCode();
        int int19 = response17.numRedirects;
        java.lang.String str20 = response17.charset;
        java.lang.String str21 = response17.contentType();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response22 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.headers();
        org.jsoup.helper.HttpConnection.Response response11 = null;
        org.jsoup.helper.HttpConnection.Response response12 = new org.jsoup.helper.HttpConnection.Response(response11);
        int int13 = response12.statusCode();
        int int14 = response12.numRedirects;
        response12.charset = "";
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        boolean boolean24 = request22.ignoreHttpErrors();
        org.jsoup.Connection.Request request27 = request22.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request28.headers();
        request28.followRedirects = false;
        boolean boolean33 = request28.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request35 = request28.timeout((int) ' ');
        java.lang.String str37 = request35.cookie("hi!");
        java.lang.String str39 = request35.header("null=null");
        request35.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request42.headers();
        request42.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser47 = request42.parser;
        request35.parser = parser47;
        org.jsoup.helper.HttpConnection.Request request49 = request22.parser(parser47);
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        org.jsoup.Connection.Request request52 = request49.method(method51);
        org.jsoup.Connection.Request request53 = request17.method(method51);
        org.jsoup.Connection.Response response54 = response12.method(method51);
        org.jsoup.Connection.Request request55 = response12.req;
        response12.statusCode = (byte) 10;
        response12.charset = "null=";
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response60 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request55);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        java.lang.String str17 = request15.header("");
        org.jsoup.Connection.Request request19 = request15.removeCookie("null=hi!");
        request15.maxBodySizeBytes = (short) 0;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Request request11 = request0.timeout((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Timeout milliseconds must be 0 (infinite) or greater");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response17 = httpConnection16.response();
        org.jsoup.Connection connection19 = httpConnection16.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection23 = httpConnection20.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request24.headers();
        int int27 = request24.timeout();
        org.jsoup.parser.Parser parser28 = request24.parser();
        org.jsoup.Connection connection29 = httpConnection20.parser(parser28);
        org.jsoup.Connection connection30 = httpConnection16.parser(parser28);
        request15.parser = parser28;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method35 = request34.method();
        boolean boolean36 = request34.followRedirects;
        org.jsoup.Connection.Request request38 = request34.followRedirects(true);
        java.lang.String str40 = request34.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        org.jsoup.Connection.Request request43 = request34.method(method42);
        org.jsoup.Connection.Request request44 = request32.method(method42);
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str46 = keyVal45.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = keyVal45.value("");
        java.lang.String str49 = keyVal45.value();
        org.jsoup.helper.HttpConnection.Request request50 = request32.data((org.jsoup.Connection.KeyVal) keyVal45);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry52 = request50.scanHeaders("");
        org.jsoup.Connection.Method method53 = request50.method();
        org.jsoup.Connection.Request request54 = request15.method(method53);
        java.lang.String str56 = request15.cookie("hi!=");
        boolean boolean57 = request15.ignoreHttpErrors();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3000 + "'", int27 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null=null" + "'", str46.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "" + "'", str49.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry52);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeUrl("hi!=null=hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "hi!=null=hi!=null" + "'", str1.equals("hi!=null=hi!=null"));
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        boolean boolean11 = request9.followRedirects;
        org.jsoup.Connection.Request request13 = request9.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request9.headers();
        boolean boolean15 = request9.ignoreContentType;
        request9.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request9.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request9.cookies();
        java.lang.String str21 = request9.getHeaderCaseInsensitive("null=null");
        org.jsoup.parser.Parser parser22 = request9.parser;
        request0.parser = parser22;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser22);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        java.lang.String str5 = response1.statusMessage;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request9 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection connection13 = httpConnection10.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        httpConnection10.res = response15;
        org.jsoup.Connection connection19 = httpConnection10.header("hi!", "");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        boolean boolean22 = request20.followRedirects;
        org.jsoup.Connection.Request request24 = request20.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request20.headers();
        boolean boolean26 = request20.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method28 = request27.method();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request27.headers();
        request27.followRedirects = false;
        boolean boolean32 = request27.ignoreHttpErrors;
        org.jsoup.Connection.Method method33 = request27.method();
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method35 = request34.method();
        boolean boolean36 = request34.followRedirects;
        org.jsoup.Connection.Request request38 = request34.followRedirects(true);
        java.lang.String str40 = request34.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        org.jsoup.Connection.Request request43 = request34.method(method42);
        org.jsoup.Connection.Request request44 = request27.method(method42);
        org.jsoup.Connection.Request request45 = request20.method(method42);
        org.jsoup.Connection.Request request47 = request20.removeHeader("hi!=null");
        httpConnection10.req = request20;
        org.jsoup.parser.Parser parser49 = request20.parser;
        request9.parser = parser49;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + method28 + "' != '" + org.jsoup.Connection.Method.GET + "'", method28.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser49);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        java.lang.String str6 = response1.getHeaderCaseInsensitive("null=null");
        java.net.URL uRL7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response8 = response1.url(uRL7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        java.lang.String str8 = response1.statusMessage;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        request0.parser = parser30;
        request0.ignoreContentType = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        boolean boolean16 = request7.ignoreHttpErrors;
        org.jsoup.Connection.Request request18 = request7.ignoreHttpErrors(false);
        request7.ignoreContentType = true;
        int int21 = request7.maxBodySizeBytes;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1048576 + "'", int21 == 1048576);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        org.jsoup.Connection.Request request9 = request0.method(method8);
        java.net.URL uRL10 = request0.url();
        java.lang.String str12 = request0.cookie("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request16 = request0.data((org.jsoup.Connection.KeyVal) keyVal15);
        int int17 = request0.maxBodySizeBytes;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1048576 + "'", int17 == 1048576);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("hi!");
        int int10 = request0.timeoutMilliseconds;
        org.jsoup.Connection.Request request13 = request0.header("null=null=null=hi!=hi!", "null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3000 + "'", int10 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("hi!");
        java.lang.String str7 = keyVal6.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry4 = response1.scanHeaders("null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap5 = response1.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.headers();
        boolean boolean23 = request17.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request24.headers();
        request24.followRedirects = false;
        boolean boolean29 = request24.ignoreHttpErrors;
        org.jsoup.Connection.Method method30 = request24.method();
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        boolean boolean33 = request31.followRedirects;
        org.jsoup.Connection.Request request35 = request31.followRedirects(true);
        java.lang.String str37 = request31.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request38 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method39 = request38.method();
        org.jsoup.Connection.Request request40 = request31.method(method39);
        org.jsoup.Connection.Request request41 = request24.method(method39);
        org.jsoup.Connection.Request request42 = request17.method(method39);
        org.jsoup.Connection connection43 = httpConnection0.method(method39);
        org.jsoup.Connection connection45 = httpConnection0.ignoreContentType(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + method39 + "' != '" + org.jsoup.Connection.Method.GET + "'", method39.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        boolean boolean33 = request31.ignoreHttpErrors();
        org.jsoup.Connection.Request request36 = request31.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        request37.followRedirects = false;
        boolean boolean42 = request37.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request44 = request37.timeout((int) ' ');
        java.lang.String str46 = request44.cookie("hi!");
        java.lang.String str48 = request44.header("null=null");
        request44.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = request51.headers();
        request51.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser56 = request51.parser;
        request44.parser = parser56;
        org.jsoup.helper.HttpConnection.Request request58 = request31.parser(parser56);
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method60 = request59.method();
        org.jsoup.Connection.Request request61 = request58.method(method60);
        org.jsoup.Connection connection62 = httpConnection0.method(method60);
        org.jsoup.Connection connection64 = httpConnection0.ignoreHttpErrors(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection64);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        int int8 = response1.statusCode();
        response1.contentType = "hi!=null";
        boolean boolean12 = response1.hasCookie("null=null=null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response15 = response1.header("", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.toString();
        keyVal0.value = "";
        keyVal0.value = "null=hi!";
        keyVal0.key = "null=null";
        java.lang.String str8 = keyVal0.toString();
        java.lang.String str9 = keyVal0.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = keyVal0.key("null=null");
        keyVal11.key = "null=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null" + "'", str1.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=null=null=hi!" + "'", str8.equals("null=null=null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=hi!" + "'", str9.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal11);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        request11.maxBodySizeBytes = (short) 100;
        org.jsoup.parser.Parser parser20 = request11.parser;
        org.jsoup.helper.HttpConnection.Request request21 = request0.parser(parser20);
        java.lang.String str23 = request0.header("hi!=null");
        boolean boolean24 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        boolean boolean27 = request25.followRedirects;
        org.jsoup.Connection.Request request29 = request25.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request25.cookies();
        boolean boolean32 = request25.hasCookie("");
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str34 = keyVal33.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal36 = keyVal33.value("hi!");
        java.lang.String str37 = keyVal33.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = keyVal33.value("hi!");
        java.lang.String str40 = keyVal33.key();
        org.jsoup.helper.HttpConnection.Request request41 = request25.data((org.jsoup.Connection.KeyVal) keyVal33);
        org.jsoup.helper.HttpConnection.Request request42 = request0.data((org.jsoup.Connection.KeyVal) keyVal33);
        org.jsoup.Connection.Request request44 = request0.ignoreHttpErrors(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        org.jsoup.parser.Parser parser5 = request0.parser;
        request0.ignoreHttpErrors = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser5);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.Connection.Method method11 = request5.method();
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.followRedirects;
        org.jsoup.Connection.Request request16 = request12.followRedirects(true);
        java.lang.String str18 = request12.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        org.jsoup.Connection.Request request21 = request12.method(method20);
        org.jsoup.Connection.Request request22 = request5.method(method20);
        org.jsoup.Connection connection23 = httpConnection0.method(method20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request0.scanHeaders("hi!=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        java.lang.String str3 = keyVal2.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal2.key("null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=null" + "'", str3.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Response response3 = httpConnection0.response();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response3);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal3.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        int int12 = request7.maxBodySize();
        java.lang.String str14 = request7.header("hi!");
        org.jsoup.parser.Parser parser15 = request7.parser;
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request16.headers();
        request16.followRedirects = false;
        boolean boolean21 = request16.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request23 = request16.timeout((int) ' ');
        boolean boolean24 = request23.followRedirects();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry26 = request23.scanHeaders("");
        request23.ignoreContentType = false;
        org.jsoup.Connection.Method method29 = request23.method();
        org.jsoup.Connection.Request request30 = request7.method(method29);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry26);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.cookies();
        request0.ignoreContentType = true;
        org.jsoup.Connection.Request request20 = request0.removeHeader("null=");
        org.jsoup.Connection.Request request22 = request0.ignoreContentType(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.helper.HttpConnection.Response response44 = new org.jsoup.helper.HttpConnection.Response(response1);
        java.lang.String str45 = response1.charset();
        response1.statusCode = 1048576;
        int int48 = response1.numRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "" + "'", str45.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        int int3 = request0.timeout();
        boolean boolean4 = request0.ignoreHttpErrors();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        request0.ignoreContentType = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        boolean boolean11 = request7.hasCookie("null=hi!");
        request7.maxBodySizeBytes = (byte) 1;
        org.jsoup.Connection.Method method14 = request7.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        org.jsoup.Connection.Response response4 = response1.removeHeader("hi!");
        java.net.URL uRL5 = response1.url();
        response1.statusCode = (short) 10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null=null=hi!", "hi!");
        keyVal2.key = "null=null";
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        boolean boolean4 = request0.hasCookie("null=hi!");
        request0.timeoutMilliseconds = (byte) -1;
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request14.headers();
        org.jsoup.Connection connection16 = httpConnection7.request((org.jsoup.Connection.Request) request14);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry18 = request14.scanHeaders("null=null");
        org.jsoup.Connection.Request request20 = request14.ignoreContentType(false);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection21 = request14.data;
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        org.jsoup.Connection.Request request25 = request22.ignoreContentType(false);
        org.jsoup.Connection.Request request27 = request22.removeCookie("");
        int int28 = request22.maxBodySize();
        org.jsoup.Connection.Request request30 = request22.followRedirects(false);
        java.lang.String str32 = request22.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request33.headers();
        request33.followRedirects = false;
        boolean boolean38 = request33.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request40 = request33.timeout((int) ' ');
        java.lang.String str42 = request40.cookie("hi!");
        java.lang.String str44 = request40.header("null=null");
        request40.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = request47.headers();
        request47.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser52 = request47.parser;
        request40.parser = parser52;
        request22.parser = parser52;
        org.jsoup.helper.HttpConnection.Request request55 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method56 = request55.method();
        boolean boolean57 = request55.ignoreHttpErrors();
        org.jsoup.Connection.Request request60 = request55.cookie("hi!", "");
        boolean boolean61 = request55.ignoreContentType;
        org.jsoup.parser.Parser parser62 = request55.parser();
        request22.parser = parser62;
        request14.parser = parser62;
        org.jsoup.helper.HttpConnection.Request request65 = request0.parser(parser62);
        org.jsoup.Connection.Request request68 = request65.header("hi!=null", "null=null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1048576 + "'", int28 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser52);
        org.junit.Assert.assertTrue("'" + method56 + "' != '" + org.jsoup.Connection.Method.GET + "'", method56.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        boolean boolean4 = response1.hasCookie("");
        boolean boolean6 = response1.hasCookie("null=");
        org.jsoup.Connection.Response response9 = response1.cookie("null=null=", "null=null=hi!");
        org.jsoup.Connection.Response response11 = response1.removeHeader("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        org.jsoup.Connection.Response response8 = response1.header("null=null=hi!", "null=null=hi!");
        java.nio.ByteBuffer byteBuffer9 = response1.byteData;
        java.lang.String str10 = response1.contentType;
        int int11 = response1.statusCode;
        java.net.HttpURLConnection httpURLConnection12 = null;
        org.jsoup.helper.HttpConnection.Response response13 = null;
        org.jsoup.helper.HttpConnection.Response response14 = new org.jsoup.helper.HttpConnection.Response(response13);
        int int15 = response14.statusCode();
        int int16 = response14.numRedirects;
        response14.charset = "";
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        org.jsoup.Connection.Request request22 = request19.ignoreContentType(false);
        org.jsoup.Connection.Request request24 = request19.removeCookie("");
        int int25 = request19.maxBodySize();
        org.jsoup.Connection.Request request27 = request19.followRedirects(false);
        response14.req = request19;
        java.lang.String str30 = response14.cookie("null=null=hi!");
        boolean boolean32 = response14.hasHeader("null=");
        java.lang.String str34 = response14.header("hi!");
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection12, (org.jsoup.Connection.Response) response14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1048576 + "'", int25 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        org.jsoup.Connection.Response response7 = response1.removeCookie("hi!");
        java.lang.String str8 = response1.statusMessage;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.Connection.Request request9 = httpConnection0.request();
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection.Request request12 = httpConnection10.request();
        org.jsoup.parser.Parser parser13 = null;
        org.jsoup.Connection connection14 = httpConnection10.parser(parser13);
        org.jsoup.Connection.Response response15 = httpConnection10.res;
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response17 = httpConnection16.response();
        org.jsoup.Connection.Request request18 = httpConnection16.request();
        org.jsoup.parser.Parser parser19 = null;
        org.jsoup.Connection connection20 = httpConnection16.parser(parser19);
        org.jsoup.Connection.Response response21 = httpConnection16.res;
        org.jsoup.Connection connection22 = httpConnection10.response(response21);
        org.jsoup.Connection connection23 = httpConnection0.response(response21);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document24 = httpConnection0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request9 = request0.timeout((int) (byte) 0);
        java.lang.String str11 = request0.header("");
        java.net.URL uRL12 = request0.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL12);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection6 = httpConnection0.header("null=null=null=hi!", "");
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null=hi!", "null=hi!");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.Connection.Request request44 = response1.req;
        response1.statusCode = (byte) 10;
        response1.charset = "null=";
        boolean boolean50 = response1.hasCookie("null=null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        org.jsoup.Connection.Response response10 = response1.cookie("null=null=hi!", "hi!=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document11 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (short) 100;
        org.jsoup.parser.Parser parser9 = request0.parser;
        boolean boolean10 = request0.ignoreContentType;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        java.net.URL uRL8 = request0.url();
        java.lang.String str10 = request0.header("null=null=hi!");
        boolean boolean11 = request0.ignoreContentType();
        boolean boolean12 = request0.ignoreHttpErrors;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        org.jsoup.Connection.Response response10 = response1.cookie("null=null=hi!", "hi!=null");
        java.util.Map<java.lang.String, java.lang.String> strMap11 = response1.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request9 = request0.timeout((int) (byte) 0);
        org.jsoup.parser.Parser parser10 = request0.parser();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser10);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.maxBodySizeBytes = (short) 100;
        org.jsoup.parser.Parser parser9 = request0.parser;
        request0.followRedirects = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser9);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        boolean boolean28 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        org.jsoup.Connection connection32 = httpConnection29.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection36 = httpConnection33.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        int int40 = request37.timeout();
        org.jsoup.parser.Parser parser41 = request37.parser();
        org.jsoup.Connection connection42 = httpConnection33.parser(parser41);
        org.jsoup.Connection connection43 = httpConnection29.parser(parser41);
        org.jsoup.helper.HttpConnection.Request request44 = request0.parser(parser41);
        int int45 = request44.timeout();
        int int46 = request44.timeout();
        org.jsoup.parser.Parser parser47 = request44.parser;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3000 + "'", int45 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3000 + "'", int46 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser47);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = (byte) -1;
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        java.lang.String str5 = response1.statusMessage();
        response1.numRedirects = (-1);
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.ignoreHttpErrors();
        org.jsoup.Connection.Request request13 = request8.cookie("hi!", "");
        boolean boolean14 = request8.ignoreContentType;
        org.jsoup.parser.Parser parser15 = request8.parser();
        response1.req = request8;
        java.net.URL uRL17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request18 = request8.url(uRL17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser15);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal2.key("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        boolean boolean6 = request0.hasHeader("hi!=null");
        org.jsoup.Connection.Request request8 = request0.ignoreContentType(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.Connection.Response response9 = httpConnection0.response();
        org.jsoup.Connection.Request request10 = null;
        org.jsoup.Connection connection11 = httpConnection0.request(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        org.jsoup.Connection.Request request10 = request0.removeCookie("null=hi!");
        java.lang.String str12 = request0.getHeaderCaseInsensitive("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal15.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = keyVal15.value("null=null");
        java.lang.String str20 = keyVal19.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = keyVal19.key("null=hi!");
        org.jsoup.helper.HttpConnection.Request request23 = request0.data((org.jsoup.Connection.KeyVal) keyVal22);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        java.net.URL uRL7 = request0.url();
        boolean boolean8 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str10 = keyVal9.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal9.value("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal9.key("hi!");
        java.lang.String str15 = keyVal9.value;
        org.jsoup.helper.HttpConnection.Request request16 = request0.data((org.jsoup.Connection.KeyVal) keyVal9);
        org.jsoup.Connection.Request request19 = request16.header("null=hi!", "null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection7 = httpConnection4.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        int int11 = request8.timeout();
        org.jsoup.parser.Parser parser12 = request8.parser();
        org.jsoup.Connection connection13 = httpConnection4.parser(parser12);
        org.jsoup.Connection connection14 = httpConnection0.parser(parser12);
        org.jsoup.Connection connection16 = httpConnection0.userAgent("hi!=null");
        org.jsoup.Connection.Request request17 = httpConnection0.req;
        org.jsoup.Connection.Response response18 = httpConnection0.response();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3000 + "'", int11 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response18);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeUrl("null=null=null=hi!=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null=null=hi!=hi!" + "'", str1.equals("null=null=null=hi!=hi!"));
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        java.lang.String str6 = keyVal0.value();
        keyVal0.key = "null=";
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal0.value("null=null=hi!");
        java.lang.String str11 = keyVal0.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null=null=hi!" + "'", str11.equals("null=null=hi!"));
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        org.jsoup.Connection connection36 = httpConnection0.userAgent("");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        request37.followRedirects = false;
        java.lang.String str43 = request37.cookie("");
        boolean boolean44 = request37.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method46 = request45.method();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = request45.headers();
        request45.followRedirects = false;
        boolean boolean50 = request45.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection51 = request45.data();
        request37.data = keyValCollection51;
        org.jsoup.Connection connection53 = httpConnection0.data(keyValCollection51);
        org.jsoup.Connection connection56 = httpConnection0.header("hi!", "null=");
        org.jsoup.Connection connection59 = httpConnection0.header("hi!=", "null=null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection59);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeUrl("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=" + "'", str1.equals("null="));
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        boolean boolean9 = request7.followRedirects();
        org.jsoup.Connection.Request request11 = request7.followRedirects(true);
        int int12 = request7.timeoutMilliseconds;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.Connection connection32 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection34 = httpConnection0.userAgent("null=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response35 = httpConnection0.execute();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean9 = request3.hasCookie("null=null");
        java.lang.String str11 = request3.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.request((org.jsoup.Connection.Request) request3);
        org.jsoup.helper.HttpConnection httpConnection13 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response14 = httpConnection13.response();
        httpConnection0.res = response14;
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        org.jsoup.Connection.Request request19 = request16.ignoreContentType(false);
        org.jsoup.parser.Parser parser20 = null;
        request16.parser = parser20;
        int int22 = request16.timeoutMilliseconds;
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request16.headers();
        org.jsoup.Connection connection24 = httpConnection0.data(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3000 + "'", int22 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request31.cookies();
        org.jsoup.Connection connection35 = httpConnection0.data(strMap34);
        org.jsoup.helper.HttpConnection.Response response36 = null;
        org.jsoup.helper.HttpConnection.Response response37 = new org.jsoup.helper.HttpConnection.Response(response36);
        int int38 = response37.statusCode();
        int int39 = response37.numRedirects;
        java.lang.String str40 = response37.charset;
        java.lang.String str41 = response37.statusMessage;
        org.jsoup.Connection.Response response43 = response37.removeCookie("hi!");
        int int44 = response37.numRedirects;
        java.lang.String str46 = response37.cookie("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap47 = response37.cookies();
        java.lang.String str48 = response37.statusMessage;
        httpConnection0.res = response37;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("null=null=null=hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.value("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        response1.charset = "null=null";
        java.lang.String str9 = response1.charset();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=null" + "'", str9.equals("null=null"));
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.statusMessage();
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.Connection.Method method9 = request3.method();
        int int10 = request3.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        boolean boolean18 = request11.followRedirects();
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        org.jsoup.Connection.Request request21 = request11.method(method20);
        org.jsoup.Connection.Request request22 = request3.method(method20);
        org.jsoup.Connection.Response response23 = response1.method(method20);
        java.nio.ByteBuffer byteBuffer24 = null;
        response1.byteData = byteBuffer24;
        org.jsoup.Connection.Response response27 = response1.removeHeader("null=");
        java.lang.String str28 = response1.statusMessage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1048576 + "'", int10 == 1048576);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection.Request request5 = httpConnection0.request();
        org.jsoup.Connection connection7 = httpConnection0.referrer("null=hi!");
        org.jsoup.Connection.Response response8 = httpConnection0.response();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection11 = httpConnection0.data("", "null=null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.headers();
        request17.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser25 = request17.parser();
        org.jsoup.Connection connection26 = httpConnection0.parser(parser25);
        org.jsoup.Connection connection29 = httpConnection0.data("null=null", "null=null");
        org.jsoup.Connection.Request request30 = httpConnection0.request();
        org.jsoup.Connection connection33 = httpConnection0.cookie("null=null", "null=");
        org.jsoup.helper.HttpConnection httpConnection34 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response35 = httpConnection34.response();
        org.jsoup.Connection.Request request36 = httpConnection34.request();
        org.jsoup.Connection connection38 = httpConnection34.ignoreContentType(true);
        org.jsoup.Connection.Request request39 = httpConnection34.request();
        org.jsoup.Connection connection41 = httpConnection34.referrer("null=hi!");
        org.jsoup.helper.HttpConnection httpConnection42 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request43 = null;
        org.jsoup.Connection connection44 = httpConnection42.request(request43);
        org.jsoup.helper.HttpConnection httpConnection45 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response46 = httpConnection45.response();
        org.jsoup.Connection.Request request47 = httpConnection45.request();
        org.jsoup.Connection connection48 = httpConnection42.request(request47);
        org.jsoup.helper.HttpConnection httpConnection49 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection51 = httpConnection49.followRedirects(false);
        org.jsoup.Connection connection53 = httpConnection49.referrer("");
        org.jsoup.Connection.Response response54 = httpConnection49.response();
        org.jsoup.Connection connection55 = httpConnection42.response(response54);
        org.jsoup.Connection connection57 = httpConnection42.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request58 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method59 = request58.method();
        boolean boolean60 = request58.ignoreHttpErrors();
        org.jsoup.Connection.Request request63 = request58.cookie("hi!", "");
        java.lang.String str65 = request58.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request66 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method67 = request66.method();
        boolean boolean68 = request66.followRedirects;
        org.jsoup.Connection.Request request70 = request66.followRedirects(true);
        java.lang.String str72 = request66.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request73 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method74 = request73.method();
        org.jsoup.Connection.Request request75 = request66.method(method74);
        org.jsoup.Connection.Request request76 = request58.method(method74);
        org.jsoup.Connection connection77 = httpConnection42.method(method74);
        org.jsoup.Connection connection79 = httpConnection42.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection80 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response81 = httpConnection80.response();
        org.jsoup.Connection connection83 = httpConnection80.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection84 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response85 = httpConnection84.response();
        httpConnection80.res = response85;
        java.lang.String[] strArray89 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection90 = httpConnection80.data(strArray89);
        org.jsoup.Connection connection91 = httpConnection42.data(strArray89);
        org.jsoup.Connection connection92 = httpConnection34.data(strArray89);
        org.jsoup.Connection connection93 = httpConnection0.data(strArray89);
        org.jsoup.Connection connection96 = httpConnection0.cookie("hi!", "");
        org.jsoup.Connection.Request request97 = httpConnection0.request();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + method67 + "' != '" + org.jsoup.Connection.Method.GET + "'", method67.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + method74 + "' != '" + org.jsoup.Connection.Method.GET + "'", method74.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request97);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        java.net.URL uRL8 = request0.url();
        java.lang.String str10 = request0.header("null=null=hi!");
        boolean boolean12 = request0.hasHeader("null=null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        int int3 = request0.timeout();
        boolean boolean4 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = org.jsoup.helper.HttpConnection.KeyVal.create("null=null=null=hi!", "null=null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal7.key("hi!=");
        keyVal7.value = "";
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal7);
        boolean boolean14 = request0.hasCookie("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean6 = request0.hasCookie("null=null");
        java.lang.String str8 = request0.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection.Request request10 = request0.removeHeader("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreHttpErrors;
        org.jsoup.Connection.Request request11 = request7.header("null=", "null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        boolean boolean7 = request5.ignoreHttpErrors();
        org.jsoup.Connection.Request request10 = request5.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        org.jsoup.helper.HttpConnection.Request request32 = request5.parser(parser30);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        org.jsoup.Connection.Request request35 = request32.method(method34);
        org.jsoup.Connection.Request request36 = request0.method(method34);
        java.net.URL uRL37 = request0.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL37);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.statusMessage = "hi!=";
        java.lang.String str4 = response1.statusMessage;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!=" + "'", str4.equals("hi!="));
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=", "null=");
        java.lang.String str3 = keyVal2.value();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=" + "'", str3.equals("null="));
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = 32;
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.req;
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection7 = httpConnection5.followRedirects(false);
        org.jsoup.Connection connection9 = httpConnection5.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.helper.HttpConnection httpConnection12 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response13 = httpConnection12.response();
        org.jsoup.Connection connection15 = httpConnection12.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response17 = httpConnection16.response();
        httpConnection12.res = response17;
        httpConnection10.res = response17;
        org.jsoup.Connection connection20 = httpConnection5.response(response17);
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        boolean boolean23 = request21.followRedirects;
        org.jsoup.Connection.Request request25 = request21.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request21.cookies();
        org.jsoup.Connection connection27 = httpConnection5.cookies(strMap26);
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request28.headers();
        request28.followRedirects = false;
        boolean boolean33 = request28.ignoreHttpErrors;
        org.jsoup.Connection.Method method34 = request28.method();
        int int35 = request28.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        boolean boolean38 = request36.followRedirects;
        org.jsoup.Connection.Request request40 = request36.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request36.headers();
        boolean boolean42 = request36.ignoreContentType;
        boolean boolean43 = request36.followRedirects();
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method45 = request44.method();
        org.jsoup.Connection.Request request46 = request36.method(method45);
        org.jsoup.Connection.Request request47 = request28.method(method45);
        org.jsoup.Connection connection48 = httpConnection5.method(method45);
        org.jsoup.Connection connection49 = httpConnection0.method(method45);
        org.jsoup.helper.HttpConnection httpConnection50 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response51 = httpConnection50.response();
        org.jsoup.Connection.Request request52 = httpConnection50.request();
        org.jsoup.parser.Parser parser53 = null;
        org.jsoup.Connection connection54 = httpConnection50.parser(parser53);
        org.jsoup.Connection.Response response55 = httpConnection50.res;
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method57 = request56.method();
        org.jsoup.Connection.Request request59 = request56.ignoreContentType(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry61 = request56.scanHeaders("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap62 = request56.headers();
        org.jsoup.Connection connection63 = httpConnection50.data(strMap62);
        org.jsoup.helper.HttpConnection.Request request64 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method65 = request64.method();
        org.jsoup.Connection.Request request67 = request64.ignoreContentType(false);
        org.jsoup.Connection.Request request69 = request64.removeCookie("");
        int int70 = request64.maxBodySize();
        org.jsoup.Connection.Request request72 = request64.followRedirects(false);
        java.lang.String str74 = request64.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request75 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method76 = request75.method();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = request75.headers();
        request75.followRedirects = false;
        boolean boolean80 = request75.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request82 = request75.timeout((int) ' ');
        java.lang.String str84 = request82.cookie("hi!");
        java.lang.String str86 = request82.header("null=null");
        request82.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request89 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method90 = request89.method();
        java.util.Map<java.lang.String, java.lang.String> strMap91 = request89.headers();
        request89.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser94 = request89.parser;
        request82.parser = parser94;
        request64.parser = parser94;
        org.jsoup.Connection connection97 = httpConnection50.parser(parser94);
        org.jsoup.Connection connection98 = httpConnection0.parser(parser94);
        org.jsoup.Connection.Request request99 = httpConnection0.request();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1048576 + "'", int35 == 1048576);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + method45 + "' != '" + org.jsoup.Connection.Method.GET + "'", method45.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response55);
        org.junit.Assert.assertTrue("'" + method57 + "' != '" + org.jsoup.Connection.Method.GET + "'", method57.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        org.junit.Assert.assertTrue("'" + method65 + "' != '" + org.jsoup.Connection.Method.GET + "'", method65.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1048576 + "'", int70 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + method76 + "' != '" + org.jsoup.Connection.Method.GET + "'", method76.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + method90 + "' != '" + org.jsoup.Connection.Method.GET + "'", method90.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request99);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.headers();
        request17.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser25 = request17.parser();
        org.jsoup.Connection connection26 = httpConnection0.parser(parser25);
        org.jsoup.Connection connection29 = httpConnection0.data("null=null", "null=null");
        org.jsoup.Connection.Request request30 = httpConnection0.request();
        org.jsoup.Connection connection33 = httpConnection0.cookie("null=null", "null=");
        org.jsoup.helper.HttpConnection httpConnection34 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response35 = httpConnection34.response();
        org.jsoup.Connection.Request request36 = httpConnection34.request();
        org.jsoup.Connection connection38 = httpConnection34.ignoreContentType(true);
        org.jsoup.Connection.Request request39 = httpConnection34.request();
        org.jsoup.Connection connection41 = httpConnection34.referrer("null=hi!");
        org.jsoup.helper.HttpConnection httpConnection42 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request43 = null;
        org.jsoup.Connection connection44 = httpConnection42.request(request43);
        org.jsoup.helper.HttpConnection httpConnection45 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response46 = httpConnection45.response();
        org.jsoup.Connection.Request request47 = httpConnection45.request();
        org.jsoup.Connection connection48 = httpConnection42.request(request47);
        org.jsoup.helper.HttpConnection httpConnection49 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection51 = httpConnection49.followRedirects(false);
        org.jsoup.Connection connection53 = httpConnection49.referrer("");
        org.jsoup.Connection.Response response54 = httpConnection49.response();
        org.jsoup.Connection connection55 = httpConnection42.response(response54);
        org.jsoup.Connection connection57 = httpConnection42.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request58 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method59 = request58.method();
        boolean boolean60 = request58.ignoreHttpErrors();
        org.jsoup.Connection.Request request63 = request58.cookie("hi!", "");
        java.lang.String str65 = request58.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request66 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method67 = request66.method();
        boolean boolean68 = request66.followRedirects;
        org.jsoup.Connection.Request request70 = request66.followRedirects(true);
        java.lang.String str72 = request66.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request73 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method74 = request73.method();
        org.jsoup.Connection.Request request75 = request66.method(method74);
        org.jsoup.Connection.Request request76 = request58.method(method74);
        org.jsoup.Connection connection77 = httpConnection42.method(method74);
        org.jsoup.Connection connection79 = httpConnection42.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection80 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response81 = httpConnection80.response();
        org.jsoup.Connection connection83 = httpConnection80.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection84 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response85 = httpConnection84.response();
        httpConnection80.res = response85;
        java.lang.String[] strArray89 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection90 = httpConnection80.data(strArray89);
        org.jsoup.Connection connection91 = httpConnection42.data(strArray89);
        org.jsoup.Connection connection92 = httpConnection34.data(strArray89);
        org.jsoup.Connection connection93 = httpConnection0.data(strArray89);
        org.jsoup.Connection.Request request94 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + method67 + "' != '" + org.jsoup.Connection.Method.GET + "'", method67.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + method74 + "' != '" + org.jsoup.Connection.Method.GET + "'", method74.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request94);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=", "null=null=null=hi!");
        keyVal2.value = "null=null";
        keyVal2.value = "hi!=";
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection.Response response5 = httpConnection0.response();
        org.jsoup.Connection connection7 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection9 = httpConnection0.ignoreHttpErrors(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean7 = request0.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.followRedirects = false;
        boolean boolean13 = request8.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection14 = request8.data();
        request0.data = keyValCollection14;
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = keyVal18.key("null=null");
        org.jsoup.helper.HttpConnection.Request request21 = request0.data((org.jsoup.Connection.KeyVal) keyVal20);
        java.lang.String str23 = request0.header("null=null=hi!");
        boolean boolean25 = request0.hasHeader("hi!=");
        org.jsoup.Connection.Request request27 = request0.removeCookie("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        int int12 = request7.maxBodySize();
        java.lang.String str14 = request7.header("hi!");
        boolean boolean15 = request7.followRedirects();
        boolean boolean16 = request7.ignoreHttpErrors;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.lang.String str8 = response1.cookie("");
        java.lang.String str10 = response1.header("null=null");
        java.lang.String str11 = response1.statusMessage();
        response1.statusMessage = "hi!=null";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        java.net.URL uRL7 = request0.url();
        boolean boolean8 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str10 = keyVal9.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal9.value("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal9.key("hi!");
        java.lang.String str15 = keyVal9.value;
        org.jsoup.helper.HttpConnection.Request request16 = request0.data((org.jsoup.Connection.KeyVal) keyVal9);
        request0.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser19 = request0.parser;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        java.net.HttpURLConnection httpURLConnection8 = null;
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        java.lang.String str11 = response10.contentType();
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection8, (org.jsoup.Connection.Response) response10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        boolean boolean11 = response1.hasCookie("hi!=");
        org.jsoup.Connection.Response response14 = response1.header("hi!=", "hi!=");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response16 = response1.removeHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.maxBodySize((int) (short) 1);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request6 = null;
        org.jsoup.Connection connection7 = httpConnection5.request(request6);
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        org.jsoup.Connection.Request request10 = httpConnection8.request();
        org.jsoup.Connection connection11 = httpConnection5.request(request10);
        org.jsoup.Connection connection14 = httpConnection5.cookie("null=null", "null=null");
        org.jsoup.Connection connection16 = httpConnection5.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.cookies();
        org.jsoup.Connection connection23 = httpConnection5.data(strMap22);
        org.jsoup.Connection connection24 = httpConnection0.data(strMap22);
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.followRedirects = false;
        java.lang.String str31 = request25.cookie("");
        boolean boolean32 = request25.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request33.headers();
        request33.followRedirects = false;
        boolean boolean38 = request33.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection39 = request33.data();
        request25.data = keyValCollection39;
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = keyVal43.key("null=null");
        org.jsoup.helper.HttpConnection.Request request46 = request25.data((org.jsoup.Connection.KeyVal) keyVal45);
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = request47.headers();
        request47.followRedirects = false;
        boolean boolean52 = request47.ignoreHttpErrors;
        org.jsoup.Connection.Method method53 = request47.method();
        int int54 = request47.maxBodySizeBytes;
        org.jsoup.Connection.Method method55 = request47.method();
        org.jsoup.Connection.Request request56 = request25.method(method55);
        org.jsoup.Connection connection57 = httpConnection0.request((org.jsoup.Connection.Request) request25);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection59 = httpConnection0.url("null=null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=null=hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1048576 + "'", int54 == 1048576);
        org.junit.Assert.assertTrue("'" + method55 + "' != '" + org.jsoup.Connection.Method.GET + "'", method55.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        request7.followRedirects = false;
        boolean boolean12 = request7.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request14 = request7.timeout((int) ' ');
        java.lang.String str16 = request14.cookie("hi!");
        java.lang.String str18 = request14.header("null=null");
        request14.followRedirects = false;
        org.jsoup.parser.Parser parser21 = request14.parser;
        org.jsoup.Connection connection22 = httpConnection0.parser(parser21);
        org.jsoup.helper.HttpConnection.Response response23 = null;
        org.jsoup.helper.HttpConnection.Response response24 = new org.jsoup.helper.HttpConnection.Response(response23);
        int int25 = response24.numRedirects;
        response24.charset = "hi!=null";
        response24.statusMessage = "null=";
        org.jsoup.Connection connection30 = httpConnection0.response((org.jsoup.Connection.Response) response24);
        org.jsoup.Connection.Response response31 = null;
        org.jsoup.Connection connection32 = httpConnection0.response(response31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int19 = request18.timeout();
        request18.maxBodySizeBytes = 3000;
        org.jsoup.Connection.Request request24 = request18.header("hi!", "hi!=null");
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request18.headers();
        java.net.URL uRL26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request27 = request18.url(uRL26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        org.jsoup.parser.Parser parser6 = null;
        request0.parser = parser6;
        request0.timeoutMilliseconds = (short) 1;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal4.value("hi!=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = keyVal4.key("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal4.value("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        org.jsoup.Connection.Request request21 = request0.cookie("null=hi!", "null=null=null=hi!");
        org.jsoup.Connection.Request request23 = request0.removeCookie("null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("hi!");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        request10.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser15 = request10.parser;
        org.jsoup.helper.HttpConnection.Request request16 = request0.parser(parser15);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection6 = httpConnection0.data("hi!=null", "null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request3);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Request request7 = request0.maxBodySize((int) (short) 0);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.followRedirects;
        org.jsoup.Connection.Request request20 = request16.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request16.cookies();
        org.jsoup.Connection connection22 = httpConnection0.cookies(strMap21);
        org.jsoup.helper.HttpConnection httpConnection23 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection25 = httpConnection23.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.followRedirects = false;
        boolean boolean31 = request26.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request33 = request26.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry35 = request26.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request26.headers();
        org.jsoup.Connection connection37 = httpConnection23.data(strMap36);
        org.jsoup.Connection.Response response38 = httpConnection23.res;
        org.jsoup.Connection connection39 = httpConnection0.response(response38);
        org.jsoup.Connection connection42 = httpConnection0.data("hi!=null=hi!=null", "hi!=null=hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = request2.headers();
        request2.followRedirects = false;
        boolean boolean7 = request2.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request9 = request2.timeout((int) ' ');
        boolean boolean10 = request9.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal13.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = keyVal19.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal22.key = "hi!";
        java.lang.String str25 = keyVal22.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = keyVal22.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal30 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal31.key = "hi!";
        java.lang.String str34 = keyVal31.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str36 = keyVal35.toString();
        keyVal35.value = "";
        keyVal35.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal41 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal41.key = "hi!";
        java.lang.String str44 = keyVal41.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal46 = keyVal41.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal47 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str48 = keyVal47.key();
        org.jsoup.Connection.KeyVal[] keyValArray49 = new org.jsoup.Connection.KeyVal[] { keyVal13, keyVal16, keyVal21, keyVal22, keyVal30, keyVal31, keyVal35, keyVal41, keyVal47 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList50 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList50, keyValArray49);
        request9.data = keyValList50;
        org.jsoup.helper.HttpConnection.Request request53 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method54 = request53.method();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = request53.headers();
        request53.followRedirects = false;
        java.lang.String str59 = request53.cookie("");
        boolean boolean60 = request53.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method62 = request61.method();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = request61.headers();
        request61.followRedirects = false;
        boolean boolean66 = request61.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection67 = request61.data();
        request53.data = keyValCollection67;
        request9.data = keyValCollection67;
        org.jsoup.Connection connection70 = httpConnection0.data(keyValCollection67);
        org.jsoup.helper.HttpConnection httpConnection71 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response72 = httpConnection71.response();
        org.jsoup.Connection connection74 = httpConnection71.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection75 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response76 = httpConnection75.response();
        httpConnection71.res = response76;
        org.jsoup.Connection connection80 = httpConnection71.header("hi!", "");
        java.lang.String[] strArray87 = new java.lang.String[] { "null=null=null=hi!", "null=null=null=hi!", "null=null", "null=hi!", "null=null", "null=null" };
        org.jsoup.Connection connection88 = httpConnection71.data(strArray87);
        org.jsoup.Connection connection89 = httpConnection0.data(strArray87);
        org.jsoup.Connection connection91 = httpConnection0.ignoreHttpErrors(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "hi!" + "'", str34.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null=null" + "'", str36.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "hi!" + "'", str44.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + method54 + "' != '" + org.jsoup.Connection.Method.GET + "'", method54.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + method62 + "' != '" + org.jsoup.Connection.Method.GET + "'", method62.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection91);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null=null=hi!", "hi!");
        java.lang.String str3 = keyVal2.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request5.headers();
        httpConnection0.req = request5;
        org.jsoup.Connection.Method method8 = request5.method();
        boolean boolean10 = request5.hasHeader("hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.followRedirects();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry10 = request7.scanHeaders("");
        request7.ignoreContentType = false;
        org.jsoup.Connection.Method method13 = request7.method();
        org.jsoup.Connection.Request request15 = request7.removeHeader("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry10);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal11.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = keyVal17.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal20.key = "hi!";
        java.lang.String str23 = keyVal20.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = keyVal20.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal29.key = "hi!";
        java.lang.String str32 = keyVal29.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str34 = keyVal33.toString();
        keyVal33.value = "";
        keyVal33.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal39.key = "hi!";
        java.lang.String str42 = keyVal39.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = keyVal39.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str46 = keyVal45.key();
        org.jsoup.Connection.KeyVal[] keyValArray47 = new org.jsoup.Connection.KeyVal[] { keyVal11, keyVal14, keyVal19, keyVal20, keyVal28, keyVal29, keyVal33, keyVal39, keyVal45 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList48 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList48, keyValArray47);
        request7.data = keyValList48;
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = request51.headers();
        request51.followRedirects = false;
        java.lang.String str57 = request51.cookie("");
        boolean boolean58 = request51.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method60 = request59.method();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = request59.headers();
        request59.followRedirects = false;
        boolean boolean64 = request59.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection65 = request59.data();
        request51.data = keyValCollection65;
        request7.data = keyValCollection65;
        org.jsoup.Connection.Request request70 = request7.cookie("hi!=null", "null=null=hi!");
        int int71 = request7.maxBodySize();
        org.jsoup.Connection.Request request73 = request7.removeCookie("hi!=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null=null" + "'", str34.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "hi!" + "'", str42.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1048576 + "'", int71 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response1.scanHeaders("hi!=");
        int int18 = response1.numRedirects;
        boolean boolean19 = response1.executed;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response20 = new org.jsoup.helper.HttpConnection.Response(response1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Too many redirects occurred trying to load URL null");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request0.data;
        java.lang.String str12 = request0.header("null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        org.jsoup.Connection.Response response21 = httpConnection0.response();
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response23 = httpConnection22.response();
        org.jsoup.Connection connection25 = httpConnection22.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection26 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response27 = httpConnection26.response();
        httpConnection22.res = response27;
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request29.headers();
        org.jsoup.Connection connection31 = httpConnection22.request((org.jsoup.Connection.Request) request29);
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method35 = request34.method();
        boolean boolean36 = request34.followRedirects;
        org.jsoup.Connection.Request request38 = request34.followRedirects(true);
        java.lang.String str40 = request34.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        org.jsoup.Connection.Request request43 = request34.method(method42);
        org.jsoup.Connection.Request request44 = request32.method(method42);
        org.jsoup.Connection.Request request45 = request29.method(method42);
        org.jsoup.Connection connection46 = httpConnection0.method(method42);
        org.jsoup.Connection connection48 = httpConnection0.referrer("null=null=null=hi!");
        org.jsoup.Connection.Response response49 = httpConnection0.res;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        boolean boolean16 = request7.ignoreHttpErrors;
        org.jsoup.Connection.Request request18 = request7.ignoreHttpErrors(false);
        request7.ignoreContentType = true;
        boolean boolean21 = request7.ignoreHttpErrors;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.req;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection4 = httpConnection0.timeout((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Timeout milliseconds must be 0 (infinite) or greater");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.parser.Parser parser13 = request0.parser;
        org.jsoup.Connection.Request request15 = request0.removeHeader("null=null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request0.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        java.lang.String str7 = response1.statusMessage;
        response1.executed = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        keyVal3.value = "";
        keyVal3.value = "hi!";
        java.lang.String str8 = keyVal3.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response1.scanHeaders("hi!=");
        int int18 = response1.numRedirects;
        java.net.URL uRL19 = response1.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL19);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Request request2 = request0.removeHeader("null=null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        boolean boolean2 = request0.followRedirects;
        int int3 = request0.timeoutMilliseconds;
        java.lang.String str5 = request0.cookie("null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request0.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.net.URL uRL3 = response1.url();
        java.lang.String str5 = response1.cookie("null=null=null=hi!=hi!");
        java.net.HttpURLConnection httpURLConnection6 = null;
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        int int9 = response8.statusCode();
        int int10 = response8.numRedirects;
        response8.charset = "";
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request13.headers();
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        boolean boolean20 = request18.ignoreHttpErrors();
        org.jsoup.Connection.Request request23 = request18.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request24.headers();
        request24.followRedirects = false;
        boolean boolean29 = request24.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request31 = request24.timeout((int) ' ');
        java.lang.String str33 = request31.cookie("hi!");
        java.lang.String str35 = request31.header("null=null");
        request31.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request38 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method39 = request38.method();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = request38.headers();
        request38.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser43 = request38.parser;
        request31.parser = parser43;
        org.jsoup.helper.HttpConnection.Request request45 = request18.parser(parser43);
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method47 = request46.method();
        org.jsoup.Connection.Request request48 = request45.method(method47);
        org.jsoup.Connection.Request request49 = request13.method(method47);
        org.jsoup.Connection.Response response50 = response8.method(method47);
        org.jsoup.Connection.Request request51 = response8.req;
        response8.statusCode = (byte) 10;
        java.util.Map<java.lang.String, java.lang.String> strMap54 = response8.headers();
        int int55 = response8.statusCode;
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection6, (org.jsoup.Connection.Response) response8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + method39 + "' != '" + org.jsoup.Connection.Method.GET + "'", method39.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertTrue("'" + method47 + "' != '" + org.jsoup.Connection.Method.GET + "'", method47.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request4 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method5 = request4.method();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request4.headers();
        int int7 = request4.timeout();
        org.jsoup.parser.Parser parser8 = request4.parser();
        org.jsoup.Connection connection9 = httpConnection0.parser(parser8);
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection connection13 = httpConnection10.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        httpConnection10.res = response15;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request17.headers();
        org.jsoup.Connection connection19 = httpConnection10.request((org.jsoup.Connection.Request) request17);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry21 = request17.scanHeaders("null=null");
        org.jsoup.Connection.Request request23 = request17.ignoreContentType(false);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection24 = request17.data;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        org.jsoup.Connection.Request request28 = request25.ignoreContentType(false);
        org.jsoup.Connection.Request request30 = request25.removeCookie("");
        int int31 = request25.maxBodySize();
        org.jsoup.Connection.Request request33 = request25.followRedirects(false);
        java.lang.String str35 = request25.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = request36.headers();
        request36.followRedirects = false;
        boolean boolean41 = request36.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request43 = request36.timeout((int) ' ');
        java.lang.String str45 = request43.cookie("hi!");
        java.lang.String str47 = request43.header("null=null");
        request43.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = request50.headers();
        request50.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser55 = request50.parser;
        request43.parser = parser55;
        request25.parser = parser55;
        org.jsoup.helper.HttpConnection.Request request58 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method59 = request58.method();
        boolean boolean60 = request58.ignoreHttpErrors();
        org.jsoup.Connection.Request request63 = request58.cookie("hi!", "");
        boolean boolean64 = request58.ignoreContentType;
        org.jsoup.parser.Parser parser65 = request58.parser();
        request25.parser = parser65;
        request17.parser = parser65;
        org.jsoup.Connection connection68 = httpConnection0.parser(parser65);
        org.jsoup.Connection connection70 = httpConnection0.userAgent("null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3000 + "'", int7 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1048576 + "'", int31 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser55);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection70);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection.Request request18 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        boolean boolean8 = request0.hasHeader("null=null=hi!");
        java.lang.String str10 = request0.header("hi!=null");
        org.jsoup.Connection.Request request12 = request0.ignoreHttpErrors(true);
        org.jsoup.Connection.Method method13 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        boolean boolean7 = response1.hasHeader("hi!=");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Too many redirects occurred trying to load URL null");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        java.lang.String str6 = keyVal0.value();
        keyVal0.key = "null=";
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal0.value("null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal10.value("null=null=null=hi!=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        org.jsoup.Connection.Request request7 = request0.removeCookie("null=");
        java.lang.Class<?> wildcardClass8 = request0.getClass();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.toString();
        keyVal0.value = "";
        java.lang.String str4 = keyVal0.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null" + "'", str1.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection.Response response5 = httpConnection0.response();
        org.jsoup.Connection connection7 = httpConnection0.followRedirects(false);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection9 = httpConnection0.url("null=null=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=null=");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        org.jsoup.Connection.Request request16 = request0.removeCookie("");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection17 = request0.data();
        org.jsoup.Connection.Request request20 = request0.header("null=hi!", "");
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response22 = httpConnection21.response();
        org.jsoup.Connection connection24 = httpConnection21.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection25 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response26 = httpConnection25.response();
        httpConnection21.res = response26;
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request28.headers();
        request28.followRedirects = false;
        boolean boolean33 = request28.ignoreHttpErrors;
        org.jsoup.Connection.Method method34 = request28.method();
        org.jsoup.Connection connection35 = httpConnection21.method(method34);
        org.jsoup.Connection.Request request36 = request0.method(method34);
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        boolean boolean39 = request37.ignoreHttpErrors();
        org.jsoup.Connection.Request request42 = request37.cookie("hi!", "");
        boolean boolean43 = request37.ignoreContentType;
        org.jsoup.Connection.Request request46 = request37.cookie("null=hi!", "hi!");
        java.lang.String str48 = request37.getHeaderCaseInsensitive("");
        java.lang.String str50 = request37.cookie("");
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = request51.headers();
        request51.followRedirects = false;
        boolean boolean56 = request51.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request58 = request51.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry60 = request51.scanHeaders("null=null");
        org.jsoup.Connection.Request request62 = request51.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method64 = request63.method();
        boolean boolean65 = request63.ignoreHttpErrors();
        org.jsoup.Connection.Request request68 = request63.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request69 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method70 = request69.method();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = request69.headers();
        request69.followRedirects = false;
        boolean boolean74 = request69.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request76 = request69.timeout((int) ' ');
        java.lang.String str78 = request76.cookie("hi!");
        java.lang.String str80 = request76.header("null=null");
        request76.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request83 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method84 = request83.method();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = request83.headers();
        request83.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser88 = request83.parser;
        request76.parser = parser88;
        org.jsoup.helper.HttpConnection.Request request90 = request63.parser(parser88);
        org.jsoup.helper.HttpConnection.Request request91 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method92 = request91.method();
        org.jsoup.Connection.Request request93 = request90.method(method92);
        org.jsoup.Connection.Request request94 = request51.method(method92);
        org.jsoup.Connection.Request request95 = request37.method(method92);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection96 = request37.data();
        request0.data = keyValCollection96;
        boolean boolean98 = request0.followRedirects;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertTrue("'" + method64 + "' != '" + org.jsoup.Connection.Method.GET + "'", method64.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertTrue("'" + method70 + "' != '" + org.jsoup.Connection.Method.GET + "'", method70.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + method84 + "' != '" + org.jsoup.Connection.Method.GET + "'", method84.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request90);
        org.junit.Assert.assertTrue("'" + method92 + "' != '" + org.jsoup.Connection.Method.GET + "'", method92.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        org.jsoup.Connection.Response response10 = response1.cookie("hi!=", "hi!");
        java.lang.String str11 = response1.charset;
        java.lang.String str12 = response1.charset;
        java.lang.String str13 = response1.statusMessage;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        java.lang.String str22 = response1.charset();
        int int23 = response1.statusCode;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        org.jsoup.Connection.Request request8 = request0.maxBodySize((int) (short) 100);
        boolean boolean9 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Response response10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        int int12 = response11.statusCode();
        int int13 = response11.numRedirects;
        response11.charset = "";
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request16.headers();
        request16.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        boolean boolean23 = request21.ignoreHttpErrors();
        org.jsoup.Connection.Request request26 = request21.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method28 = request27.method();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request27.headers();
        request27.followRedirects = false;
        boolean boolean32 = request27.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request34 = request27.timeout((int) ' ');
        java.lang.String str36 = request34.cookie("hi!");
        java.lang.String str38 = request34.header("null=null");
        request34.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = request41.headers();
        request41.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser46 = request41.parser;
        request34.parser = parser46;
        org.jsoup.helper.HttpConnection.Request request48 = request21.parser(parser46);
        org.jsoup.helper.HttpConnection.Request request49 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method50 = request49.method();
        org.jsoup.Connection.Request request51 = request48.method(method50);
        org.jsoup.Connection.Request request52 = request16.method(method50);
        org.jsoup.Connection.Response response53 = response11.method(method50);
        org.jsoup.Connection.Request request54 = response11.req;
        response11.statusCode = (byte) 10;
        java.util.Map<java.lang.String, java.lang.String> strMap57 = response11.headers();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response58 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertTrue("'" + method28 + "' != '" + org.jsoup.Connection.Method.GET + "'", method28.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        org.junit.Assert.assertTrue("'" + method50 + "' != '" + org.jsoup.Connection.Method.GET + "'", method50.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap57);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean9 = request3.hasCookie("null=null");
        java.lang.String str11 = request3.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.request((org.jsoup.Connection.Request) request3);
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request13.headers();
        request13.followRedirects = false;
        boolean boolean18 = request13.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request20 = request13.timeout((int) ' ');
        boolean boolean21 = request20.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        org.jsoup.Connection connection23 = httpConnection0.cookies(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = request15.scanHeaders("hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        boolean boolean22 = request10.hasCookie("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request23.headers();
        request23.followRedirects = false;
        boolean boolean28 = request23.ignoreHttpErrors;
        org.jsoup.Connection.Method method29 = request23.method();
        int int30 = request23.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        boolean boolean33 = request31.followRedirects;
        org.jsoup.Connection.Request request35 = request31.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request31.headers();
        boolean boolean37 = request31.ignoreContentType;
        boolean boolean38 = request31.followRedirects();
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request31.method(method40);
        org.jsoup.Connection.Request request42 = request23.method(method40);
        org.jsoup.Connection.Request request43 = request10.method(method40);
        request10.ignoreHttpErrors = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1048576 + "'", int30 == 1048576);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request7.data();
        java.lang.String str12 = request7.header("hi!");
        org.jsoup.Connection.Request request15 = request7.cookie("null=null=null=hi!", "null=null");
        boolean boolean17 = request7.hasCookie("null=");
        java.net.URL uRL18 = request7.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL18);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str6 = response1.statusMessage;
        response1.charset = "hi!=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        org.jsoup.Connection.Request request3 = request0.removeHeader("null=null=null=hi!");
        java.net.URL uRL4 = request0.url();
        int int5 = request0.maxBodySizeBytes;
        org.jsoup.Connection.Request request7 = request0.ignoreHttpErrors(false);
        org.jsoup.Connection.Request request9 = request0.removeCookie("hi!");
        org.jsoup.helper.HttpConnection.Response response10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        int int12 = response11.numRedirects;
        response11.charset = "hi!=null";
        response11.statusMessage = "null=";
        int int17 = response11.statusCode;
        response11.executed = false;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response20 = org.jsoup.helper.HttpConnection.Response.execute(request9, response11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1048576 + "'", int5 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.Connection.Response response7 = response1.removeHeader("hi!");
        boolean boolean9 = response1.hasHeader("hi!=");
        boolean boolean10 = response1.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry20 = request18.scanHeaders("");
        boolean boolean21 = request18.followRedirects;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request18.cookies();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection23 = request18.data;
        boolean boolean24 = request18.ignoreContentType();
        request18.timeoutMilliseconds = 100;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        org.jsoup.Connection.Response response8 = response1.header("null=null=hi!", "null=null=hi!");
        java.lang.String str10 = response1.getHeaderCaseInsensitive("null=hi!");
        java.lang.String str11 = response1.statusMessage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.cookies();
        boolean boolean4 = request0.followRedirects();
        request0.timeoutMilliseconds = (byte) 0;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.maxBodySizeBytes = (-1);
        java.lang.String str4 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        java.lang.String str6 = request0.cookie("hi!=null=hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request0.followRedirects();
        org.jsoup.Connection.Method method9 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = ' ';
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal5.value("null=null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.parser.Parser parser3 = null;
        org.jsoup.Connection connection4 = httpConnection0.parser(parser3);
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request6.scanHeaders("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request6.headers();
        org.jsoup.Connection connection13 = httpConnection0.data(strMap12);
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        org.jsoup.Connection.Request request17 = request14.ignoreContentType(false);
        org.jsoup.Connection.Request request19 = request14.removeCookie("");
        int int20 = request14.maxBodySize();
        org.jsoup.Connection.Request request22 = request14.followRedirects(false);
        java.lang.String str24 = request14.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.followRedirects = false;
        boolean boolean30 = request25.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request32 = request25.timeout((int) ' ');
        java.lang.String str34 = request32.cookie("hi!");
        java.lang.String str36 = request32.header("null=null");
        request32.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request39.headers();
        request39.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser44 = request39.parser;
        request32.parser = parser44;
        request14.parser = parser44;
        org.jsoup.Connection connection47 = httpConnection0.parser(parser44);
        org.jsoup.Connection connection49 = httpConnection0.referrer("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1048576 + "'", int20 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request10 = request3.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry12 = request3.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request3.headers();
        org.jsoup.Connection connection14 = httpConnection0.data(strMap13);
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request15.headers();
        request15.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser20 = request15.parser;
        org.jsoup.Connection.Request request22 = request15.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request15.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request15.cookies();
        org.jsoup.Connection connection25 = httpConnection0.data(strMap24);
        org.jsoup.Connection connection27 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Response response28 = httpConnection0.res;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.cookies();
        boolean boolean17 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str19 = keyVal18.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = keyVal18.value("hi!");
        java.lang.String str22 = keyVal21.toString();
        org.jsoup.helper.HttpConnection.Request request23 = request0.data((org.jsoup.Connection.KeyVal) keyVal21);
        keyVal21.value = "hi!";
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null=hi!" + "'", str22.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.Connection connection7 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection10 = httpConnection0.cookie("null=null", "null=null=null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection connection15 = httpConnection0.cookie("hi!", "null=null=null=hi!=hi!");
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection17 = httpConnection0.url(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection httpConnection6 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response7 = httpConnection6.response();
        org.jsoup.Connection.Request request8 = httpConnection6.request();
        org.jsoup.Connection connection10 = httpConnection6.ignoreContentType(true);
        org.jsoup.Connection.Request request11 = httpConnection6.request();
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        org.jsoup.Connection.Method method15 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request12.cookies();
        org.jsoup.Connection connection17 = httpConnection6.cookies(strMap16);
        org.jsoup.helper.HttpConnection httpConnection18 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response19 = httpConnection18.response();
        org.jsoup.Connection.Request request20 = httpConnection18.request();
        org.jsoup.Connection connection22 = httpConnection18.ignoreContentType(true);
        org.jsoup.Connection.Request request23 = httpConnection18.request();
        org.jsoup.Connection connection25 = httpConnection18.referrer("null=hi!");
        org.jsoup.helper.HttpConnection httpConnection26 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request27 = null;
        org.jsoup.Connection connection28 = httpConnection26.request(request27);
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        org.jsoup.Connection.Request request31 = httpConnection29.request();
        org.jsoup.Connection connection32 = httpConnection26.request(request31);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection35 = httpConnection33.followRedirects(false);
        org.jsoup.Connection connection37 = httpConnection33.referrer("");
        org.jsoup.Connection.Response response38 = httpConnection33.response();
        org.jsoup.Connection connection39 = httpConnection26.response(response38);
        org.jsoup.Connection connection41 = httpConnection26.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        boolean boolean44 = request42.ignoreHttpErrors();
        org.jsoup.Connection.Request request47 = request42.cookie("hi!", "");
        java.lang.String str49 = request42.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        boolean boolean52 = request50.followRedirects;
        org.jsoup.Connection.Request request54 = request50.followRedirects(true);
        java.lang.String str56 = request50.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method58 = request57.method();
        org.jsoup.Connection.Request request59 = request50.method(method58);
        org.jsoup.Connection.Request request60 = request42.method(method58);
        org.jsoup.Connection connection61 = httpConnection26.method(method58);
        org.jsoup.Connection connection63 = httpConnection26.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection64 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response65 = httpConnection64.response();
        org.jsoup.Connection connection67 = httpConnection64.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection68 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response69 = httpConnection68.response();
        httpConnection64.res = response69;
        java.lang.String[] strArray73 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection74 = httpConnection64.data(strArray73);
        org.jsoup.Connection connection75 = httpConnection26.data(strArray73);
        org.jsoup.Connection connection76 = httpConnection18.data(strArray73);
        org.jsoup.Connection connection77 = httpConnection6.data(strArray73);
        org.jsoup.Connection connection78 = httpConnection0.data(strArray73);
        org.jsoup.helper.HttpConnection.Request request79 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method80 = request79.method();
        boolean boolean81 = request79.ignoreHttpErrors();
        org.jsoup.Connection.Request request84 = request79.cookie("hi!", "");
        java.lang.String str86 = request79.cookie("null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap87 = request79.cookies();
        int int88 = request79.maxBodySize();
        java.util.Map<java.lang.String, java.lang.String> strMap89 = request79.headers();
        org.jsoup.Connection connection90 = httpConnection0.cookies(strMap89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + method58 + "' != '" + org.jsoup.Connection.Method.GET + "'", method58.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection78);
        org.junit.Assert.assertTrue("'" + method80 + "' != '" + org.jsoup.Connection.Method.GET + "'", method80.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1048576 + "'", int88 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection90);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        org.jsoup.parser.Parser parser6 = null;
        request0.parser = parser6;
        org.jsoup.Connection.Request request9 = request0.followRedirects(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.parser.Parser parser4 = null;
        org.jsoup.Connection connection5 = httpConnection0.parser(parser4);
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        boolean boolean12 = request6.ignoreContentType;
        org.jsoup.Connection.Request request15 = request6.cookie("null=hi!", "hi!");
        java.lang.String str17 = request6.getHeaderCaseInsensitive("");
        java.lang.String str19 = request6.cookie("");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.followRedirects = false;
        boolean boolean25 = request20.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request27 = request20.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry29 = request20.scanHeaders("null=null");
        org.jsoup.Connection.Request request31 = request20.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        boolean boolean34 = request32.ignoreHttpErrors();
        org.jsoup.Connection.Request request37 = request32.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request38 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method39 = request38.method();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = request38.headers();
        request38.followRedirects = false;
        boolean boolean43 = request38.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request45 = request38.timeout((int) ' ');
        java.lang.String str47 = request45.cookie("hi!");
        java.lang.String str49 = request45.header("null=null");
        request45.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request52 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method53 = request52.method();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = request52.headers();
        request52.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser57 = request52.parser;
        request45.parser = parser57;
        org.jsoup.helper.HttpConnection.Request request59 = request32.parser(parser57);
        org.jsoup.helper.HttpConnection.Request request60 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method61 = request60.method();
        org.jsoup.Connection.Request request62 = request59.method(method61);
        org.jsoup.Connection.Request request63 = request20.method(method61);
        org.jsoup.Connection.Request request64 = request6.method(method61);
        org.jsoup.Connection connection65 = httpConnection0.method(method61);
        java.net.URL uRL66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection67 = httpConnection0.url(uRL66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertTrue("'" + method39 + "' != '" + org.jsoup.Connection.Method.GET + "'", method39.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        org.junit.Assert.assertTrue("'" + method61 + "' != '" + org.jsoup.Connection.Method.GET + "'", method61.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection65);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        int int15 = request0.timeout();
        java.lang.String str16 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3000 + "'", int15 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.headers();
        request17.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser25 = request17.parser();
        org.jsoup.Connection connection26 = httpConnection0.parser(parser25);
        org.jsoup.Connection connection28 = httpConnection0.userAgent("hi!=null");
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method30 = request29.method();
        boolean boolean31 = request29.followRedirects;
        org.jsoup.Connection.Request request33 = request29.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request29.cookies();
        boolean boolean36 = request29.hasCookie("null=null");
        boolean boolean38 = request29.hasHeader("null=hi!");
        org.jsoup.Connection.Request request40 = request29.removeCookie("null=null");
        org.jsoup.Connection.Request request42 = request29.ignoreContentType(false);
        httpConnection0.req = request29;
        java.lang.String str45 = request29.getHeaderCaseInsensitive("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        boolean boolean28 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        org.jsoup.Connection connection32 = httpConnection29.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection36 = httpConnection33.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        int int40 = request37.timeout();
        org.jsoup.parser.Parser parser41 = request37.parser();
        org.jsoup.Connection connection42 = httpConnection33.parser(parser41);
        org.jsoup.Connection connection43 = httpConnection29.parser(parser41);
        org.jsoup.helper.HttpConnection.Request request44 = request0.parser(parser41);
        int int45 = request44.maxBodySizeBytes;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1048576 + "'", int45 == 1048576);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        org.jsoup.Connection.Response response9 = response1.removeCookie("");
        java.lang.String str10 = response1.statusMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document11 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        boolean boolean4 = request0.hasCookie("null=null");
        int int5 = request0.timeoutMilliseconds;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3000 + "'", int5 == 3000);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        request7.followRedirects = false;
        boolean boolean12 = request7.ignoreHttpErrors;
        org.jsoup.Connection.Method method13 = request7.method();
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        boolean boolean16 = request14.followRedirects;
        org.jsoup.Connection.Request request18 = request14.followRedirects(true);
        java.lang.String str20 = request14.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        org.jsoup.Connection.Request request23 = request14.method(method22);
        org.jsoup.Connection.Request request24 = request7.method(method22);
        org.jsoup.Connection.Request request25 = request0.method(method22);
        boolean boolean26 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request29 = request0.header("null=", "null=null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = keyVal13.value("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = keyVal13.value("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        boolean boolean16 = request14.hasHeader("null=null");
        java.net.URL uRL17 = request14.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL17);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal2.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal2.value("null=null");
        java.lang.String str7 = keyVal2.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal2.value("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=null" + "'", str7.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request0.data;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection11 = request0.data();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request0.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.followRedirects;
        org.jsoup.Connection.Request request20 = request16.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request16.cookies();
        org.jsoup.Connection connection22 = httpConnection0.cookies(strMap21);
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request23.headers();
        request23.followRedirects = false;
        boolean boolean28 = request23.ignoreHttpErrors;
        org.jsoup.Connection.Method method29 = request23.method();
        int int30 = request23.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        boolean boolean33 = request31.followRedirects;
        org.jsoup.Connection.Request request35 = request31.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request31.headers();
        boolean boolean37 = request31.ignoreContentType;
        boolean boolean38 = request31.followRedirects();
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request31.method(method40);
        org.jsoup.Connection.Request request42 = request23.method(method40);
        org.jsoup.Connection connection43 = httpConnection0.method(method40);
        org.jsoup.Connection connection46 = httpConnection0.cookie("null=hi!", "");
        org.jsoup.Connection connection48 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.Connection.Response response49 = httpConnection0.response();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1048576 + "'", int30 == 1048576);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.parser.Parser parser7 = null;
        org.jsoup.Connection connection8 = httpConnection0.parser(parser7);
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection11 = httpConnection9.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry21 = request12.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request12.headers();
        org.jsoup.Connection connection23 = httpConnection9.data(strMap22);
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request24.headers();
        request24.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser29 = request24.parser;
        org.jsoup.Connection.Request request31 = request24.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap32 = request24.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request24.cookies();
        org.jsoup.Connection connection34 = httpConnection9.data(strMap33);
        org.jsoup.helper.HttpConnection httpConnection35 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response36 = httpConnection35.response();
        org.jsoup.Connection.Request request37 = httpConnection35.request();
        org.jsoup.Connection connection39 = httpConnection35.ignoreContentType(true);
        org.jsoup.Connection.Request request40 = httpConnection35.request();
        org.jsoup.Connection connection42 = httpConnection35.referrer("null=hi!");
        org.jsoup.helper.HttpConnection httpConnection43 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request44 = null;
        org.jsoup.Connection connection45 = httpConnection43.request(request44);
        org.jsoup.helper.HttpConnection httpConnection46 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response47 = httpConnection46.response();
        org.jsoup.Connection.Request request48 = httpConnection46.request();
        org.jsoup.Connection connection49 = httpConnection43.request(request48);
        org.jsoup.helper.HttpConnection httpConnection50 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection52 = httpConnection50.followRedirects(false);
        org.jsoup.Connection connection54 = httpConnection50.referrer("");
        org.jsoup.Connection.Response response55 = httpConnection50.response();
        org.jsoup.Connection connection56 = httpConnection43.response(response55);
        org.jsoup.Connection connection58 = httpConnection43.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method60 = request59.method();
        boolean boolean61 = request59.ignoreHttpErrors();
        org.jsoup.Connection.Request request64 = request59.cookie("hi!", "");
        java.lang.String str66 = request59.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request67 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method68 = request67.method();
        boolean boolean69 = request67.followRedirects;
        org.jsoup.Connection.Request request71 = request67.followRedirects(true);
        java.lang.String str73 = request67.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request74 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method75 = request74.method();
        org.jsoup.Connection.Request request76 = request67.method(method75);
        org.jsoup.Connection.Request request77 = request59.method(method75);
        org.jsoup.Connection connection78 = httpConnection43.method(method75);
        org.jsoup.Connection connection80 = httpConnection43.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection81 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response82 = httpConnection81.response();
        org.jsoup.Connection connection84 = httpConnection81.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection85 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response86 = httpConnection85.response();
        httpConnection81.res = response86;
        java.lang.String[] strArray90 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection91 = httpConnection81.data(strArray90);
        org.jsoup.Connection connection92 = httpConnection43.data(strArray90);
        org.jsoup.Connection connection93 = httpConnection35.data(strArray90);
        org.jsoup.Connection connection94 = httpConnection9.data(strArray90);
        org.jsoup.Connection connection95 = httpConnection0.data(strArray90);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response96 = httpConnection0.execute();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection58);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + method68 + "' != '" + org.jsoup.Connection.Method.GET + "'", method68.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + method75 + "' != '" + org.jsoup.Connection.Method.GET + "'", method75.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection95);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        request7.followRedirects = false;
        boolean boolean12 = request7.ignoreHttpErrors;
        org.jsoup.Connection.Method method13 = request7.method();
        org.jsoup.Connection connection14 = httpConnection0.method(method13);
        org.jsoup.Connection connection16 = httpConnection0.maxBodySize(3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.headers();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        int int19 = request18.timeout();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.cookies();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry22 = request18.scanHeaders("");
        boolean boolean23 = request18.followRedirects();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request0.data();
        org.jsoup.Connection.Request request18 = request0.cookie("null=null=null=hi!", "null=null=null=hi!");
        org.jsoup.Connection.Request request21 = request0.header("hi!", "null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        java.lang.String str9 = request0.cookie("hi!=null");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.Connection.Method method23 = request17.method();
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.lang.String str30 = request24.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request33 = request24.method(method32);
        org.jsoup.Connection.Request request34 = request17.method(method32);
        org.jsoup.Connection.Request request35 = request10.method(method32);
        org.jsoup.Connection.Request request36 = request0.method(method32);
        org.jsoup.Connection.Request request38 = request0.ignoreContentType(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        response1.executed = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        org.jsoup.Connection.Request request8 = request0.maxBodySize((int) (short) 100);
        boolean boolean9 = request0.ignoreHttpErrors;
        request0.followRedirects = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.headers();
        java.net.URL uRL9 = request0.url();
        boolean boolean10 = request0.ignoreHttpErrors();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry16 = request0.scanHeaders("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry16);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        java.lang.String str5 = response1.statusMessage();
        java.lang.String str7 = response1.header("hi!=null=hi!=null");
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection11 = httpConnection8.data("hi!", "hi!");
        org.jsoup.parser.Parser parser12 = null;
        org.jsoup.Connection connection13 = httpConnection8.parser(parser12);
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        org.jsoup.Connection.Request request16 = httpConnection14.request();
        org.jsoup.Connection.Request request17 = httpConnection14.req;
        org.jsoup.Connection connection19 = httpConnection14.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        boolean boolean22 = request20.ignoreHttpErrors();
        org.jsoup.Connection.Request request25 = request20.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.followRedirects = false;
        boolean boolean31 = request26.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request33 = request26.timeout((int) ' ');
        java.lang.String str35 = request33.cookie("hi!");
        java.lang.String str37 = request33.header("null=null");
        request33.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = request40.headers();
        request40.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser45 = request40.parser;
        request33.parser = parser45;
        org.jsoup.helper.HttpConnection.Request request47 = request20.parser(parser45);
        org.jsoup.Connection connection48 = httpConnection14.request((org.jsoup.Connection.Request) request47);
        org.jsoup.helper.HttpConnection.Request request49 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method50 = request49.method();
        boolean boolean51 = request49.followRedirects;
        org.jsoup.Connection.Request request53 = request49.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = request49.headers();
        boolean boolean55 = request49.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method57 = request56.method();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = request56.headers();
        request56.followRedirects = false;
        boolean boolean61 = request56.ignoreHttpErrors;
        org.jsoup.Connection.Method method62 = request56.method();
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method64 = request63.method();
        boolean boolean65 = request63.followRedirects;
        org.jsoup.Connection.Request request67 = request63.followRedirects(true);
        java.lang.String str69 = request63.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request70 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method71 = request70.method();
        org.jsoup.Connection.Request request72 = request63.method(method71);
        org.jsoup.Connection.Request request73 = request56.method(method71);
        org.jsoup.Connection.Request request74 = request49.method(method71);
        org.jsoup.Connection connection75 = httpConnection14.method(method71);
        org.jsoup.Connection connection76 = httpConnection8.method(method71);
        org.jsoup.Connection.Response response77 = response1.method(method71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        org.junit.Assert.assertTrue("'" + method50 + "' != '" + org.jsoup.Connection.Method.GET + "'", method50.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + method57 + "' != '" + org.jsoup.Connection.Method.GET + "'", method57.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + method62 + "' != '" + org.jsoup.Connection.Method.GET + "'", method62.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method64 + "' != '" + org.jsoup.Connection.Method.GET + "'", method64.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + method71 + "' != '" + org.jsoup.Connection.Method.GET + "'", method71.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response77);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        org.jsoup.Connection connection36 = httpConnection0.userAgent("");
        org.jsoup.helper.HttpConnection.Response response37 = null;
        org.jsoup.helper.HttpConnection.Response response38 = new org.jsoup.helper.HttpConnection.Response(response37);
        int int39 = response38.numRedirects;
        response38.charset = "hi!=null";
        org.jsoup.Connection.Response response43 = response38.removeCookie("null=null");
        org.jsoup.Connection connection44 = httpConnection0.response(response43);
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method46 = request45.method();
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        boolean boolean49 = request47.followRedirects;
        org.jsoup.Connection.Request request51 = request47.followRedirects(true);
        java.lang.String str53 = request47.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method55 = request54.method();
        org.jsoup.Connection.Request request56 = request47.method(method55);
        org.jsoup.Connection.Request request57 = request45.method(method55);
        org.jsoup.helper.HttpConnection.KeyVal keyVal58 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str59 = keyVal58.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal61 = keyVal58.value("");
        java.lang.String str62 = keyVal58.value();
        org.jsoup.helper.HttpConnection.Request request63 = request45.data((org.jsoup.Connection.KeyVal) keyVal58);
        org.jsoup.Connection.Request request66 = request45.cookie("null=hi!", "null=null=null=hi!");
        org.jsoup.Connection connection67 = httpConnection0.request(request66);
        org.jsoup.Connection connection70 = httpConnection0.header("hi!", "hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + method55 + "' != '" + org.jsoup.Connection.Method.GET + "'", method55.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "null=null" + "'", str59.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "" + "'", str62.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection70);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        java.lang.String str7 = response1.statusMessage;
        response1.contentType = "null=null=hi!";
        java.nio.ByteBuffer byteBuffer10 = response1.byteData;
        int int11 = response1.statusCode();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.parser.Parser parser7 = null;
        org.jsoup.Connection connection8 = httpConnection0.parser(parser7);
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = request9.headers();
        request9.followRedirects = false;
        boolean boolean14 = request9.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request9.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.headers();
        request17.timeoutMilliseconds = 307;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.followRedirects = false;
        boolean boolean30 = request25.ignoreHttpErrors;
        org.jsoup.Connection.Method method31 = request25.method();
        int int32 = request25.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        boolean boolean35 = request33.followRedirects;
        org.jsoup.Connection.Request request37 = request33.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = request33.headers();
        boolean boolean39 = request33.ignoreContentType;
        boolean boolean40 = request33.followRedirects();
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        org.jsoup.Connection.Request request43 = request33.method(method42);
        org.jsoup.Connection.Request request44 = request25.method(method42);
        org.jsoup.Connection.Request request45 = request17.method(method42);
        org.jsoup.Connection connection46 = httpConnection0.method(method42);
        org.jsoup.Connection.Response response47 = httpConnection0.response();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1048576 + "'", int32 == 1048576);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response47);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response1.scanHeaders("hi!=");
        int int18 = response1.numRedirects;
        java.lang.String str19 = response1.statusMessage;
        java.net.URL uRL20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response21 = response1.url(uRL20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection5 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        boolean boolean14 = request13.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal17.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = keyVal23.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal26.key = "hi!";
        java.lang.String str29 = keyVal26.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = keyVal26.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal35.key = "hi!";
        java.lang.String str38 = keyVal35.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str40 = keyVal39.toString();
        keyVal39.value = "";
        keyVal39.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal45.key = "hi!";
        java.lang.String str48 = keyVal45.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal50 = keyVal45.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal51 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str52 = keyVal51.key();
        org.jsoup.Connection.KeyVal[] keyValArray53 = new org.jsoup.Connection.KeyVal[] { keyVal17, keyVal20, keyVal25, keyVal26, keyVal34, keyVal35, keyVal39, keyVal45, keyVal51 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList54 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList54, keyValArray53);
        request13.data = keyValList54;
        org.jsoup.Connection connection57 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList54);
        org.jsoup.Connection.Response response58 = httpConnection0.response();
        org.jsoup.Connection connection60 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection62 = httpConnection0.maxBodySize((int) '4');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "null=null" + "'", str40.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "hi!" + "'", str48.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        int int3 = request0.timeout();
        boolean boolean4 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = org.jsoup.helper.HttpConnection.KeyVal.create("null=null=null=hi!", "null=null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal7.key("hi!=");
        keyVal7.value = "";
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal7);
        request12.ignoreContentType = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection9 = httpConnection7.followRedirects(false);
        org.jsoup.Connection connection11 = httpConnection7.referrer("");
        org.jsoup.Connection.Response response12 = httpConnection7.response();
        org.jsoup.Connection connection13 = httpConnection0.response(response12);
        org.jsoup.Connection connection15 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection17 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Request request18 = null;
        org.jsoup.Connection connection19 = httpConnection0.request(request18);
        org.jsoup.Connection.Request request20 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request20);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        org.jsoup.Connection connection11 = httpConnection8.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request12 = httpConnection8.req;
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request13.headers();
        request13.followRedirects = false;
        boolean boolean18 = request13.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request20 = request13.timeout((int) ' ');
        java.lang.String str22 = request20.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection23 = request20.data();
        org.jsoup.Connection connection24 = httpConnection8.data(keyValCollection23);
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        boolean boolean27 = request25.followRedirects;
        org.jsoup.Connection.Request request29 = request25.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request25.headers();
        boolean boolean31 = request25.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.followRedirects = false;
        boolean boolean37 = request32.ignoreHttpErrors;
        org.jsoup.Connection.Method method38 = request32.method();
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        boolean boolean41 = request39.followRedirects;
        org.jsoup.Connection.Request request43 = request39.followRedirects(true);
        java.lang.String str45 = request39.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method47 = request46.method();
        org.jsoup.Connection.Request request48 = request39.method(method47);
        org.jsoup.Connection.Request request49 = request32.method(method47);
        org.jsoup.Connection.Request request50 = request25.method(method47);
        org.jsoup.Connection connection51 = httpConnection8.method(method47);
        org.jsoup.Connection.Request request52 = request0.method(method47);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request55 = request0.header("", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + method47 + "' != '" + org.jsoup.Connection.Method.GET + "'", method47.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        org.jsoup.Connection.Method method15 = request0.method();
        org.jsoup.Connection.Request request17 = request0.ignoreContentType(true);
        org.jsoup.parser.Parser parser18 = request0.parser;
        org.jsoup.Connection.Request request20 = request0.removeCookie("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        response1.statusMessage = "hi!=";
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document4 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(1048576);
        boolean boolean5 = request0.ignoreContentType;
        request0.timeoutMilliseconds = (byte) -1;
        org.jsoup.Connection.Request request10 = request0.cookie("null=null=null=hi!", "");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.cookies();
        boolean boolean10 = request7.hasHeader("null=null");
        org.jsoup.Connection.Request request12 = request7.ignoreHttpErrors(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str5 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal4.value("hi!");
        java.lang.String str8 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal4.value("hi!");
        java.lang.String str11 = keyVal4.key();
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal4);
        java.lang.String str13 = keyVal4.key();
        java.lang.String str14 = keyVal4.toString();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=hi!" + "'", str14.equals("null=hi!"));
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request14.headers();
        request14.followRedirects = false;
        boolean boolean19 = request14.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request21 = request14.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry23 = request14.scanHeaders("null=null");
        org.jsoup.Connection.Request request25 = request14.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        boolean boolean28 = request26.ignoreHttpErrors();
        org.jsoup.Connection.Request request31 = request26.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.followRedirects = false;
        boolean boolean37 = request32.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request39 = request32.timeout((int) ' ');
        java.lang.String str41 = request39.cookie("hi!");
        java.lang.String str43 = request39.header("null=null");
        request39.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method47 = request46.method();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = request46.headers();
        request46.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser51 = request46.parser;
        request39.parser = parser51;
        org.jsoup.helper.HttpConnection.Request request53 = request26.parser(parser51);
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method55 = request54.method();
        org.jsoup.Connection.Request request56 = request53.method(method55);
        org.jsoup.Connection.Request request57 = request14.method(method55);
        org.jsoup.Connection.Request request58 = request0.method(method55);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection59 = request0.data();
        org.jsoup.Connection.Method method60 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + method47 + "' != '" + org.jsoup.Connection.Method.GET + "'", method47.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        org.junit.Assert.assertTrue("'" + method55 + "' != '" + org.jsoup.Connection.Method.GET + "'", method55.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection59);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("hi!");
        java.lang.String str7 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.value("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = keyVal0.value("");
        keyVal0.value = "null=null=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal11);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection.Request request5 = httpConnection0.request();
        org.jsoup.Connection connection7 = httpConnection0.referrer("null=hi!");
        java.net.URL uRL8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection9 = httpConnection0.url(uRL8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal3.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal3.key("null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry7 = response1.scanHeaders("null=hi!");
        java.lang.String str9 = response1.header("hi!");
        java.net.URL uRL10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response11 = response1.url(uRL10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        java.lang.String str9 = response8.contentType();
        java.lang.String str10 = response8.contentType();
        int int11 = response8.statusCode();
        httpConnection0.res = response8;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray13 = response8.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        org.jsoup.parser.Parser parser9 = request7.parser;
        java.lang.String str11 = request7.getHeaderCaseInsensitive("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout((int) (short) 0);
        org.jsoup.Connection.Method method5 = request0.method();
        boolean boolean6 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request8 = request0.timeout((int) (byte) 100);
        java.lang.String str10 = request0.cookie("hi!=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request0.data();
        org.jsoup.Connection.Request request18 = request0.cookie("null=null=null=hi!", "null=null=null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request21 = request0.header("", "null=null=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        java.lang.String str14 = request0.cookie("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection35 = request33.data;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request33.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = request33.cookies();
        int int38 = request33.timeout();
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        boolean boolean41 = request39.followRedirects;
        org.jsoup.Connection.Request request43 = request39.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request39.headers();
        boolean boolean45 = request39.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method47 = request46.method();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = request46.headers();
        request46.followRedirects = false;
        boolean boolean51 = request46.ignoreHttpErrors;
        org.jsoup.Connection.Method method52 = request46.method();
        org.jsoup.helper.HttpConnection.Request request53 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method54 = request53.method();
        boolean boolean55 = request53.followRedirects;
        org.jsoup.Connection.Request request57 = request53.followRedirects(true);
        java.lang.String str59 = request53.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request60 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method61 = request60.method();
        org.jsoup.Connection.Request request62 = request53.method(method61);
        org.jsoup.Connection.Request request63 = request46.method(method61);
        org.jsoup.Connection.Request request64 = request39.method(method61);
        org.jsoup.Connection.Request request65 = request33.method(method61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3000 + "'", int38 == 3000);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + method47 + "' != '" + org.jsoup.Connection.Method.GET + "'", method47.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method54 + "' != '" + org.jsoup.Connection.Method.GET + "'", method54.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + method61 + "' != '" + org.jsoup.Connection.Method.GET + "'", method61.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request65);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        org.jsoup.helper.HttpConnection.Response response5 = new org.jsoup.helper.HttpConnection.Response(response1);
        java.lang.String str7 = response1.header("null=hi!");
        org.jsoup.Connection.Request request8 = response1.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request8);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = request2.headers();
        request2.followRedirects = false;
        boolean boolean7 = request2.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request9 = request2.timeout((int) ' ');
        boolean boolean10 = request9.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal13.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = keyVal19.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal22.key = "hi!";
        java.lang.String str25 = keyVal22.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = keyVal22.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal30 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal31.key = "hi!";
        java.lang.String str34 = keyVal31.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str36 = keyVal35.toString();
        keyVal35.value = "";
        keyVal35.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal41 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal41.key = "hi!";
        java.lang.String str44 = keyVal41.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal46 = keyVal41.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal47 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str48 = keyVal47.key();
        org.jsoup.Connection.KeyVal[] keyValArray49 = new org.jsoup.Connection.KeyVal[] { keyVal13, keyVal16, keyVal21, keyVal22, keyVal30, keyVal31, keyVal35, keyVal41, keyVal47 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList50 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList50, keyValArray49);
        request9.data = keyValList50;
        org.jsoup.helper.HttpConnection.Request request53 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method54 = request53.method();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = request53.headers();
        request53.followRedirects = false;
        java.lang.String str59 = request53.cookie("");
        boolean boolean60 = request53.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method62 = request61.method();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = request61.headers();
        request61.followRedirects = false;
        boolean boolean66 = request61.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection67 = request61.data();
        request53.data = keyValCollection67;
        request9.data = keyValCollection67;
        org.jsoup.Connection connection70 = httpConnection0.data(keyValCollection67);
        org.jsoup.helper.HttpConnection httpConnection71 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response72 = httpConnection71.response();
        org.jsoup.Connection connection74 = httpConnection71.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection75 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response76 = httpConnection75.response();
        httpConnection71.res = response76;
        org.jsoup.Connection connection80 = httpConnection71.header("hi!", "");
        java.lang.String[] strArray87 = new java.lang.String[] { "null=null=null=hi!", "null=null=null=hi!", "null=null", "null=hi!", "null=null", "null=null" };
        org.jsoup.Connection connection88 = httpConnection71.data(strArray87);
        org.jsoup.Connection connection89 = httpConnection0.data(strArray87);
        org.jsoup.Connection connection91 = httpConnection0.ignoreContentType(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "hi!" + "'", str34.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null=null" + "'", str36.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "hi!" + "'", str44.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + method54 + "' != '" + org.jsoup.Connection.Method.GET + "'", method54.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + method62 + "' != '" + org.jsoup.Connection.Method.GET + "'", method62.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection91);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry13 = request7.scanHeaders("");
        java.net.URL uRL14 = request7.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL14);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response1);
        java.lang.String str10 = response8.header("hi!");
        boolean boolean11 = response8.executed;
        java.net.HttpURLConnection httpURLConnection12 = null;
        org.jsoup.helper.HttpConnection.Response response13 = null;
        org.jsoup.helper.HttpConnection.Response response14 = new org.jsoup.helper.HttpConnection.Response(response13);
        int int15 = response14.statusCode();
        int int16 = response14.numRedirects;
        java.lang.String str17 = response14.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry19 = response14.scanHeaders("");
        response14.charset = "null=null";
        // The following exception was thrown during execution in test generation
        try {
            response8.setupFromConnection(httpURLConnection12, (org.jsoup.Connection.Response) response14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry19);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        org.jsoup.Connection connection7 = httpConnection4.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        httpConnection4.res = response9;
        httpConnection0.res = response9;
        org.jsoup.Connection connection14 = httpConnection0.header("hi!", "");
        org.jsoup.Connection.Request request15 = httpConnection0.req;
        org.jsoup.Connection connection17 = httpConnection0.referrer("null=null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.parser.Parser parser4 = null;
        org.jsoup.Connection connection5 = httpConnection0.parser(parser4);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document6 = httpConnection0.post();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response21 = httpConnection20.response();
        org.jsoup.Connection connection23 = httpConnection20.followRedirects(false);
        org.jsoup.Connection.Response response24 = httpConnection20.response();
        httpConnection0.res = response24;
        org.jsoup.Connection connection27 = httpConnection0.ignoreHttpErrors(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection23 = httpConnection21.followRedirects(false);
        org.jsoup.Connection connection25 = httpConnection21.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection26 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response27 = httpConnection26.response();
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response29 = httpConnection28.response();
        org.jsoup.Connection connection31 = httpConnection28.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response33 = httpConnection32.response();
        httpConnection28.res = response33;
        httpConnection26.res = response33;
        org.jsoup.Connection connection36 = httpConnection21.response(response33);
        httpConnection0.res = response33;
        org.jsoup.helper.HttpConnection.Request request38 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method39 = request38.method();
        boolean boolean40 = request38.followRedirects;
        org.jsoup.Connection.Request request42 = request38.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = request38.headers();
        request38.timeoutMilliseconds = 307;
        request38.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = request38.cookies();
        org.jsoup.Connection connection49 = httpConnection0.cookies(strMap48);
        org.jsoup.Connection connection51 = httpConnection0.followRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method39 + "' != '" + org.jsoup.Connection.Method.GET + "'", method39.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        boolean boolean7 = request5.ignoreHttpErrors();
        org.jsoup.Connection.Request request10 = request5.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        org.jsoup.helper.HttpConnection.Request request32 = request5.parser(parser30);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        org.jsoup.Connection.Request request35 = request32.method(method34);
        org.jsoup.Connection.Request request36 = request0.method(method34);
        request0.followRedirects = false;
        request0.ignoreContentType = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        java.lang.String str9 = response8.contentType();
        java.lang.String str10 = response8.contentType();
        int int11 = response8.statusCode();
        httpConnection0.res = response8;
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request13.headers();
        boolean boolean19 = request13.ignoreContentType;
        request13.ignoreHttpErrors = true;
        java.net.URL uRL22 = request13.url();
        org.jsoup.Connection.Request request24 = request13.ignoreContentType(false);
        org.jsoup.Connection.Request request26 = request13.ignoreContentType(false);
        httpConnection0.req = request13;
        org.jsoup.Connection connection30 = httpConnection0.cookie("hi!=null", "null=");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response31 = httpConnection0.execute();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        boolean boolean9 = request7.followRedirects();
        boolean boolean11 = request7.hasCookie("hi!");
        request7.ignoreContentType = false;
        boolean boolean14 = request7.followRedirects;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean3 = request0.hasHeader("null=null");
        request0.ignoreContentType = true;
        int int6 = request0.maxBodySize();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal7.key = "hi!";
        java.lang.String str10 = keyVal7.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal7.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal12.key("null=hi!");
        java.lang.String str15 = keyVal12.value;
        java.lang.String str16 = keyVal12.key();
        org.jsoup.helper.HttpConnection.Request request17 = request0.data((org.jsoup.Connection.KeyVal) keyVal12);
        java.lang.String str19 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null=hi!" + "'", str16.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Response response7 = httpConnection0.response();
        org.jsoup.Connection connection9 = httpConnection0.ignoreHttpErrors(false);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response10 = httpConnection0.execute();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        org.jsoup.parser.Parser parser6 = null;
        request0.parser = parser6;
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        org.jsoup.Connection connection11 = httpConnection8.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection12 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection15 = httpConnection12.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request16.headers();
        int int19 = request16.timeout();
        org.jsoup.parser.Parser parser20 = request16.parser();
        org.jsoup.Connection connection21 = httpConnection12.parser(parser20);
        org.jsoup.Connection connection22 = httpConnection8.parser(parser20);
        org.jsoup.helper.HttpConnection.Request request23 = request0.parser(parser20);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = new org.jsoup.helper.HttpConnection.KeyVal("null=null", "hi!");
        org.jsoup.helper.HttpConnection.Request request7 = request0.data((org.jsoup.Connection.KeyVal) keyVal6);
        org.jsoup.helper.HttpConnection.Response response8 = null;
        org.jsoup.helper.HttpConnection.Response response9 = new org.jsoup.helper.HttpConnection.Response(response8);
        int int10 = response9.numRedirects;
        response9.charset = "hi!=null";
        org.jsoup.Connection.Response response14 = response9.removeCookie("null=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response15 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        request0.maxBodySizeBytes = (-1);
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        java.lang.String str6 = keyVal5.value;
        java.lang.String str7 = keyVal5.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!" + "'", str7.equals("hi!"));
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        java.lang.String str5 = request0.getHeaderCaseInsensitive("null=hi!");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry7 = request0.scanHeaders("null=null");
        java.lang.String str9 = request0.cookie("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        boolean boolean9 = request0.ignoreHttpErrors();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = '4';
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.Connection connection13 = httpConnection0.followRedirects(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        org.jsoup.Connection.Response response4 = response1.removeHeader("hi!");
        boolean boolean6 = response1.hasCookie("hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request0.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection9 = request0.data();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request0.scanHeaders("null=hi!");
        request0.timeoutMilliseconds = (byte) -1;
        org.jsoup.parser.Parser parser14 = request0.parser;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        int int8 = request0.timeout();
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection11 = httpConnection9.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean18 = request12.hasCookie("null=null");
        java.lang.String str20 = request12.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection21 = httpConnection9.request((org.jsoup.Connection.Request) request12);
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response23 = httpConnection22.response();
        httpConnection9.res = response23;
        org.jsoup.Connection connection26 = httpConnection9.ignoreHttpErrors(false);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection.Request request29 = httpConnection27.request();
        org.jsoup.Connection.Request request30 = httpConnection27.req;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        boolean boolean33 = request31.ignoreHttpErrors();
        org.jsoup.Connection.Request request36 = request31.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        request37.followRedirects = false;
        boolean boolean42 = request37.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request44 = request37.timeout((int) ' ');
        java.lang.String str46 = request44.cookie("hi!");
        java.lang.String str48 = request44.header("null=null");
        request44.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = request51.headers();
        request51.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser56 = request51.parser;
        request44.parser = parser56;
        org.jsoup.helper.HttpConnection.Request request58 = request31.parser(parser56);
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method60 = request59.method();
        org.jsoup.Connection.Request request61 = request58.method(method60);
        org.jsoup.Connection connection62 = httpConnection27.method(method60);
        org.jsoup.Connection connection63 = httpConnection9.method(method60);
        org.jsoup.Connection.Request request64 = request0.method(method60);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3000 + "'", int8 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.Connection.Request request11 = request7.ignoreContentType(true);
        org.jsoup.Connection.Request request13 = request7.removeCookie("null=null=null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = request7.hasHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        boolean boolean3 = response1.hasCookie("hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Request request4 = null;
        httpConnection0.req = request4;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection8 = httpConnection0.data("null=null=hi!", "null=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        boolean boolean9 = request7.followRedirects();
        boolean boolean11 = request7.hasCookie("hi!");
        java.net.URL uRL12 = request7.url();
        request7.ignoreContentType = true;
        org.jsoup.Connection.Request request16 = request7.removeHeader("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request9 = request0.timeout((int) (byte) 0);
        org.jsoup.Connection.Request request11 = request9.removeCookie("hi!");
        org.jsoup.Connection.Request request14 = request9.header("null=hi!", "");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.parser.Parser parser7 = null;
        org.jsoup.Connection connection8 = httpConnection0.parser(parser7);
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection11 = httpConnection9.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry21 = request12.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request12.headers();
        org.jsoup.Connection connection23 = httpConnection9.data(strMap22);
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request24.headers();
        request24.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser29 = request24.parser;
        org.jsoup.Connection.Request request31 = request24.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap32 = request24.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request24.cookies();
        org.jsoup.Connection connection34 = httpConnection9.data(strMap33);
        org.jsoup.helper.HttpConnection httpConnection35 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response36 = httpConnection35.response();
        org.jsoup.Connection.Request request37 = httpConnection35.request();
        org.jsoup.Connection connection39 = httpConnection35.ignoreContentType(true);
        org.jsoup.Connection.Request request40 = httpConnection35.request();
        org.jsoup.Connection connection42 = httpConnection35.referrer("null=hi!");
        org.jsoup.helper.HttpConnection httpConnection43 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request44 = null;
        org.jsoup.Connection connection45 = httpConnection43.request(request44);
        org.jsoup.helper.HttpConnection httpConnection46 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response47 = httpConnection46.response();
        org.jsoup.Connection.Request request48 = httpConnection46.request();
        org.jsoup.Connection connection49 = httpConnection43.request(request48);
        org.jsoup.helper.HttpConnection httpConnection50 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection52 = httpConnection50.followRedirects(false);
        org.jsoup.Connection connection54 = httpConnection50.referrer("");
        org.jsoup.Connection.Response response55 = httpConnection50.response();
        org.jsoup.Connection connection56 = httpConnection43.response(response55);
        org.jsoup.Connection connection58 = httpConnection43.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method60 = request59.method();
        boolean boolean61 = request59.ignoreHttpErrors();
        org.jsoup.Connection.Request request64 = request59.cookie("hi!", "");
        java.lang.String str66 = request59.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request67 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method68 = request67.method();
        boolean boolean69 = request67.followRedirects;
        org.jsoup.Connection.Request request71 = request67.followRedirects(true);
        java.lang.String str73 = request67.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request74 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method75 = request74.method();
        org.jsoup.Connection.Request request76 = request67.method(method75);
        org.jsoup.Connection.Request request77 = request59.method(method75);
        org.jsoup.Connection connection78 = httpConnection43.method(method75);
        org.jsoup.Connection connection80 = httpConnection43.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection81 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response82 = httpConnection81.response();
        org.jsoup.Connection connection84 = httpConnection81.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection85 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response86 = httpConnection85.response();
        httpConnection81.res = response86;
        java.lang.String[] strArray90 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection91 = httpConnection81.data(strArray90);
        org.jsoup.Connection connection92 = httpConnection43.data(strArray90);
        org.jsoup.Connection connection93 = httpConnection35.data(strArray90);
        org.jsoup.Connection connection94 = httpConnection9.data(strArray90);
        org.jsoup.Connection connection95 = httpConnection0.data(strArray90);
        org.jsoup.Connection connection97 = httpConnection0.maxBodySize((int) (byte) 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection58);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + method68 + "' != '" + org.jsoup.Connection.Method.GET + "'", method68.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + method75 + "' != '" + org.jsoup.Connection.Method.GET + "'", method75.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection97);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.parser.Parser parser3 = null;
        org.jsoup.Connection connection4 = httpConnection0.parser(parser3);
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.Connection.Response response6 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        boolean boolean11 = request9.followRedirects;
        org.jsoup.Connection.Request request13 = request9.followRedirects(true);
        java.lang.String str15 = request9.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        org.jsoup.Connection.Request request18 = request9.method(method17);
        org.jsoup.Connection.Request request19 = request7.method(method17);
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str21 = keyVal20.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = keyVal20.value("");
        java.lang.String str24 = keyVal20.value();
        org.jsoup.helper.HttpConnection.Request request25 = request7.data((org.jsoup.Connection.KeyVal) keyVal20);
        int int26 = request25.timeout();
        boolean boolean27 = request25.followRedirects;
        org.jsoup.Connection.Request request30 = request25.cookie("null=hi!", "hi!");
        boolean boolean32 = request25.hasHeader("null=");
        org.jsoup.Connection connection33 = httpConnection0.request((org.jsoup.Connection.Request) request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null=null" + "'", str21.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3000 + "'", int26 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser5 = request0.parser;
        org.jsoup.Connection.Request request7 = request0.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.headers();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry10 = request0.scanHeaders("null=hi!");
        org.jsoup.parser.Parser parser11 = request0.parser;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser11);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        response1.statusCode = 10;
        response1.executed = true;
        java.util.Map<java.lang.String, java.lang.String> strMap12 = response1.cookies();
        response1.executed = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("hi!");
        java.lang.String str7 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.value("null=null");
        java.lang.String str10 = keyVal9.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal9.value("");
        keyVal9.value = "hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal9.value("null=null=");
        keyVal16.value = "null=null=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null=null" + "'", str10.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        int int8 = response1.statusCode();
        java.lang.String str9 = response1.statusMessage;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.Connection.Request request7 = httpConnection5.request();
        response1.req = request7;
        response1.executed = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout((int) (short) 0);
        org.jsoup.Connection.Method method5 = request0.method();
        boolean boolean6 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request8 = request0.timeout((int) (byte) 100);
        boolean boolean9 = request8.ignoreHttpErrors();
        org.jsoup.parser.Parser parser10 = request8.parser();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser10);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection.Request request5 = httpConnection0.request();
        org.jsoup.Connection connection7 = httpConnection0.referrer("null=hi!");
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request9 = null;
        org.jsoup.Connection connection10 = httpConnection8.request(request9);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        org.jsoup.Connection.Request request13 = httpConnection11.request();
        org.jsoup.Connection connection14 = httpConnection8.request(request13);
        org.jsoup.helper.HttpConnection httpConnection15 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection17 = httpConnection15.followRedirects(false);
        org.jsoup.Connection connection19 = httpConnection15.referrer("");
        org.jsoup.Connection.Response response20 = httpConnection15.response();
        org.jsoup.Connection connection21 = httpConnection8.response(response20);
        org.jsoup.Connection connection23 = httpConnection8.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.ignoreHttpErrors();
        org.jsoup.Connection.Request request29 = request24.cookie("hi!", "");
        java.lang.String str31 = request24.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        boolean boolean34 = request32.followRedirects;
        org.jsoup.Connection.Request request36 = request32.followRedirects(true);
        java.lang.String str38 = request32.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request32.method(method40);
        org.jsoup.Connection.Request request42 = request24.method(method40);
        org.jsoup.Connection connection43 = httpConnection8.method(method40);
        org.jsoup.Connection connection45 = httpConnection8.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection46 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response47 = httpConnection46.response();
        org.jsoup.Connection connection49 = httpConnection46.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection50 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response51 = httpConnection50.response();
        httpConnection46.res = response51;
        java.lang.String[] strArray55 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection56 = httpConnection46.data(strArray55);
        org.jsoup.Connection connection57 = httpConnection8.data(strArray55);
        org.jsoup.Connection connection58 = httpConnection0.data(strArray55);
        org.jsoup.Connection connection60 = httpConnection0.referrer("null=null=null=hi!=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        response1.executed = false;
        java.lang.String str10 = response1.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.followRedirects;
        org.jsoup.Connection.Request request16 = request12.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request12.cookies();
        org.jsoup.Connection connection18 = httpConnection0.data(strMap17);
        org.jsoup.Connection connection20 = httpConnection0.ignoreContentType(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        org.jsoup.Connection.Request request3 = request0.removeHeader("null=null=null=hi!");
        org.jsoup.Connection.Request request5 = request0.removeHeader("null=null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        request6.ignoreHttpErrors = true;
        java.net.URL uRL18 = request6.url();
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        boolean boolean21 = request19.followRedirects;
        org.jsoup.Connection.Request request23 = request19.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request19.headers();
        boolean boolean25 = request19.ignoreContentType;
        request19.followRedirects = false;
        int int28 = request19.timeout();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection29 = request19.data;
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method31 = request30.method();
        boolean boolean32 = request30.followRedirects;
        org.jsoup.Connection.Request request34 = request30.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request30.cookies();
        boolean boolean37 = request30.hasCookie("null=null");
        org.jsoup.parser.Parser parser38 = request30.parser();
        request19.parser = parser38;
        request6.parser = parser38;
        java.net.URL uRL41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request42 = request6.url(uRL41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL18);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3000 + "'", int28 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection29);
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser38);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        java.lang.String str6 = response1.getHeaderCaseInsensitive("null=null");
        java.lang.String str7 = response1.statusMessage;
        java.lang.String str9 = response1.getHeaderCaseInsensitive("null=null=");
        java.net.URL uRL10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response11 = response1.url(uRL10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        java.lang.String str3 = response1.contentType();
        java.net.URL uRL4 = response1.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL4);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        response1.statusCode = 10;
        response1.executed = true;
        java.util.Map<java.lang.String, java.lang.String> strMap12 = response1.cookies();
        response1.contentType = "null=null=";
        java.net.URL uRL15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response16 = response1.url(uRL15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.helper.HttpConnection.Response response44 = new org.jsoup.helper.HttpConnection.Response(response1);
        org.jsoup.Connection.Method method45 = response44.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method45);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.Connection.Response response7 = response1.removeHeader("hi!");
        boolean boolean9 = response1.hasHeader("hi!=");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        org.jsoup.parser.Parser parser9 = request7.parser;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request7.headers();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        org.jsoup.Connection connection36 = httpConnection0.userAgent("");
        org.jsoup.helper.HttpConnection.Response response37 = null;
        org.jsoup.helper.HttpConnection.Response response38 = new org.jsoup.helper.HttpConnection.Response(response37);
        int int39 = response38.numRedirects;
        response38.charset = "hi!=null";
        org.jsoup.Connection.Response response43 = response38.removeCookie("null=null");
        org.jsoup.Connection connection44 = httpConnection0.response(response43);
        org.jsoup.Connection connection46 = httpConnection0.referrer("hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal12.key = "hi!";
        java.lang.String str15 = keyVal12.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = keyVal12.key("hi!");
        java.lang.String str18 = keyVal12.value();
        keyVal12.key = "null=";
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = keyVal12.value("null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request23 = request7.data((org.jsoup.Connection.KeyVal) keyVal12);
        java.lang.String str24 = keyVal12.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null=null=hi!" + "'", str24.equals("null=null=hi!"));
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection19 = httpConnection0.ignoreHttpErrors(false);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection22 = httpConnection0.data("", "hi!=null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        response1.statusMessage = "null=";
        int int7 = response1.statusCode;
        response1.contentType = "";
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response12 = response1.cookie("", "null=null=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cookie name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        java.lang.String str8 = response1.statusMessage;
        int int9 = response1.numRedirects;
        org.jsoup.helper.HttpConnection.Response response10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        int int12 = response11.statusCode();
        int int13 = response11.numRedirects;
        response11.charset = "";
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        org.jsoup.Connection.Request request19 = request16.ignoreContentType(false);
        org.jsoup.Connection.Request request21 = request16.removeCookie("");
        int int22 = request16.maxBodySize();
        org.jsoup.Connection.Request request24 = request16.followRedirects(false);
        response11.req = request16;
        request16.ignoreHttpErrors = true;
        org.jsoup.Connection.Method method28 = request16.method();
        org.jsoup.Connection.Response response29 = response1.method(method28);
        java.net.HttpURLConnection httpURLConnection30 = null;
        org.jsoup.helper.HttpConnection httpConnection31 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request32 = null;
        org.jsoup.Connection connection33 = httpConnection31.request(request32);
        org.jsoup.helper.HttpConnection httpConnection34 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response35 = httpConnection34.response();
        org.jsoup.Connection.Request request36 = httpConnection34.request();
        org.jsoup.Connection connection37 = httpConnection31.request(request36);
        org.jsoup.Connection.Request request38 = httpConnection31.req;
        org.jsoup.Connection connection40 = httpConnection31.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        boolean boolean43 = request41.followRedirects;
        org.jsoup.Connection.Request request45 = request41.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = request41.headers();
        boolean boolean47 = request41.ignoreContentType;
        request41.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = request41.cookies();
        httpConnection31.req = request41;
        org.jsoup.Connection.Response response52 = httpConnection31.response();
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection30, response52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1048576 + "'", int22 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        org.junit.Assert.assertTrue("'" + method28 + "' != '" + org.jsoup.Connection.Method.GET + "'", method28.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection40);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response52);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        java.net.URL uRL15 = request0.url();
        org.jsoup.Connection.Request request17 = request0.removeCookie("");
        org.jsoup.Connection.Request request19 = request0.removeCookie("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request0.headers();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        java.lang.String str19 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request18);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response21 = httpConnection20.response();
        org.jsoup.Connection connection23 = httpConnection20.followRedirects(false);
        org.jsoup.Connection.Response response24 = httpConnection20.response();
        httpConnection0.res = response24;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request26.headers();
        org.jsoup.Connection.Method method30 = request26.method();
        org.jsoup.Connection connection31 = httpConnection0.method(method30);
        org.jsoup.Connection connection33 = httpConnection0.timeout((int) (byte) 0);
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method35 = request34.method();
        boolean boolean36 = request34.followRedirects;
        org.jsoup.Connection.Request request38 = request34.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request34.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal42 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request43 = request34.data((org.jsoup.Connection.KeyVal) keyVal42);
        org.jsoup.helper.HttpConnection httpConnection44 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response45 = httpConnection44.response();
        org.jsoup.Connection.Request request46 = httpConnection44.request();
        org.jsoup.Connection.Request request47 = httpConnection44.req;
        org.jsoup.Connection connection49 = httpConnection44.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        boolean boolean52 = request50.ignoreHttpErrors();
        org.jsoup.Connection.Request request55 = request50.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method57 = request56.method();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = request56.headers();
        request56.followRedirects = false;
        boolean boolean61 = request56.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request63 = request56.timeout((int) ' ');
        java.lang.String str65 = request63.cookie("hi!");
        java.lang.String str67 = request63.header("null=null");
        request63.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request70 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method71 = request70.method();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = request70.headers();
        request70.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser75 = request70.parser;
        request63.parser = parser75;
        org.jsoup.helper.HttpConnection.Request request77 = request50.parser(parser75);
        org.jsoup.Connection connection78 = httpConnection44.request((org.jsoup.Connection.Request) request77);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection79 = request77.data;
        request34.data = keyValCollection79;
        org.jsoup.Connection connection81 = httpConnection0.data(keyValCollection79);
        org.jsoup.helper.HttpConnection.Request request82 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method83 = request82.method();
        boolean boolean84 = request82.followRedirects;
        org.jsoup.Connection.Request request86 = request82.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap87 = request82.headers();
        boolean boolean88 = request82.ignoreContentType;
        request82.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap91 = request82.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap92 = request82.cookies();
        org.jsoup.Connection connection93 = httpConnection0.cookies(strMap92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        org.junit.Assert.assertTrue("'" + method57 + "' != '" + org.jsoup.Connection.Method.GET + "'", method57.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + method71 + "' != '" + org.jsoup.Connection.Method.GET + "'", method71.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection81);
        org.junit.Assert.assertTrue("'" + method83 + "' != '" + org.jsoup.Connection.Method.GET + "'", method83.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection93);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        org.jsoup.Connection.Request request14 = request7.header("null=null=null=hi!", "");
        org.jsoup.helper.HttpConnection httpConnection15 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection18 = httpConnection15.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request19.headers();
        int int22 = request19.timeout();
        org.jsoup.parser.Parser parser23 = request19.parser();
        org.jsoup.Connection connection24 = httpConnection15.parser(parser23);
        org.jsoup.helper.HttpConnection httpConnection25 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response26 = httpConnection25.response();
        org.jsoup.Connection connection28 = httpConnection25.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        httpConnection25.res = response30;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request32.headers();
        org.jsoup.Connection connection34 = httpConnection25.request((org.jsoup.Connection.Request) request32);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry36 = request32.scanHeaders("null=null");
        org.jsoup.Connection.Request request38 = request32.ignoreContentType(false);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection39 = request32.data;
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        org.jsoup.Connection.Request request43 = request40.ignoreContentType(false);
        org.jsoup.Connection.Request request45 = request40.removeCookie("");
        int int46 = request40.maxBodySize();
        org.jsoup.Connection.Request request48 = request40.followRedirects(false);
        java.lang.String str50 = request40.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = request51.headers();
        request51.followRedirects = false;
        boolean boolean56 = request51.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request58 = request51.timeout((int) ' ');
        java.lang.String str60 = request58.cookie("hi!");
        java.lang.String str62 = request58.header("null=null");
        request58.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request65 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method66 = request65.method();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = request65.headers();
        request65.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser70 = request65.parser;
        request58.parser = parser70;
        request40.parser = parser70;
        org.jsoup.helper.HttpConnection.Request request73 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method74 = request73.method();
        boolean boolean75 = request73.ignoreHttpErrors();
        org.jsoup.Connection.Request request78 = request73.cookie("hi!", "");
        boolean boolean79 = request73.ignoreContentType;
        org.jsoup.parser.Parser parser80 = request73.parser();
        request40.parser = parser80;
        request32.parser = parser80;
        org.jsoup.Connection connection83 = httpConnection15.parser(parser80);
        request7.parser = parser80;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3000 + "'", int22 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection39);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1048576 + "'", int46 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + method66 + "' != '" + org.jsoup.Connection.Method.GET + "'", method66.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser70);
        org.junit.Assert.assertTrue("'" + method74 + "' != '" + org.jsoup.Connection.Method.GET + "'", method74.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection83);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response1);
        response1.statusCode = 0;
        java.lang.String str11 = response1.charset;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        response1.statusMessage = "null=";
        int int7 = response1.statusCode;
        response1.contentType = "";
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal2.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal2.value("null=null");
        java.lang.String str7 = keyVal2.value();
        java.lang.String str8 = keyVal2.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal2.value("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=null" + "'", str7.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=null" + "'", str8.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection5 = httpConnection0.header("null=null=hi!", "hi!=null=hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean9 = request3.hasCookie("null=null");
        java.lang.String str11 = request3.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.request((org.jsoup.Connection.Request) request3);
        org.jsoup.Connection connection15 = httpConnection0.data("null=hi!", "");
        org.jsoup.Connection connection17 = httpConnection0.maxBodySize(32);
        org.jsoup.Connection.Request request18 = httpConnection0.request();
        org.jsoup.helper.HttpConnection.Response response19 = null;
        org.jsoup.helper.HttpConnection.Response response20 = new org.jsoup.helper.HttpConnection.Response(response19);
        int int21 = response20.numRedirects;
        response20.charset = "hi!=null";
        java.lang.String str25 = response20.getHeaderCaseInsensitive("null=null");
        org.jsoup.Connection connection26 = httpConnection0.response((org.jsoup.Connection.Response) response20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.cookies();
        boolean boolean17 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal18.key = "hi!";
        java.lang.String str21 = keyVal18.key;
        org.jsoup.helper.HttpConnection.Request request22 = request0.data((org.jsoup.Connection.KeyVal) keyVal18);
        org.jsoup.Connection.Method method23 = request22.method();
        java.lang.String str25 = request22.header("hi!=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("null=hi!", "null=hi!");
        java.lang.String str3 = keyVal2.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal2.value("null=null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=hi!" + "'", str3.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection5 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        boolean boolean14 = request13.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal17.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = keyVal23.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal26.key = "hi!";
        java.lang.String str29 = keyVal26.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = keyVal26.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal35.key = "hi!";
        java.lang.String str38 = keyVal35.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str40 = keyVal39.toString();
        keyVal39.value = "";
        keyVal39.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal45.key = "hi!";
        java.lang.String str48 = keyVal45.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal50 = keyVal45.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal51 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str52 = keyVal51.key();
        org.jsoup.Connection.KeyVal[] keyValArray53 = new org.jsoup.Connection.KeyVal[] { keyVal17, keyVal20, keyVal25, keyVal26, keyVal34, keyVal35, keyVal39, keyVal45, keyVal51 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList54 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList54, keyValArray53);
        request13.data = keyValList54;
        org.jsoup.Connection connection57 = httpConnection0.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList54);
        java.io.OutputStream outputStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList54, outputStream58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "null=null" + "'", str40.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "hi!" + "'", str48.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str6 = response1.contentType;
        java.lang.String str7 = response1.statusMessage;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        java.lang.String str6 = keyVal0.value;
        keyVal0.key = "hi!";
        keyVal0.key = "null=null=null=hi!";
        java.lang.String str11 = keyVal0.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null=null=null=hi!" + "'", str11.equals("null=null=null=hi!"));
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        org.jsoup.Connection.Request request3 = request0.removeHeader("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        boolean boolean14 = request13.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal17.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = keyVal23.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal26.key = "hi!";
        java.lang.String str29 = keyVal26.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal31 = keyVal26.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal35.key = "hi!";
        java.lang.String str38 = keyVal35.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str40 = keyVal39.toString();
        keyVal39.value = "";
        keyVal39.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal45.key = "hi!";
        java.lang.String str48 = keyVal45.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal50 = keyVal45.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal51 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str52 = keyVal51.key();
        org.jsoup.Connection.KeyVal[] keyValArray53 = new org.jsoup.Connection.KeyVal[] { keyVal17, keyVal20, keyVal25, keyVal26, keyVal34, keyVal35, keyVal39, keyVal45, keyVal51 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList54 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList54, keyValArray53);
        request13.data = keyValList54;
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method58 = request57.method();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = request57.headers();
        request57.followRedirects = false;
        java.lang.String str63 = request57.cookie("");
        boolean boolean64 = request57.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request65 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method66 = request65.method();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = request65.headers();
        request65.followRedirects = false;
        boolean boolean70 = request65.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection71 = request65.data();
        request57.data = keyValCollection71;
        request13.data = keyValCollection71;
        org.jsoup.Connection connection74 = httpConnection4.data(keyValCollection71);
        request0.data = keyValCollection71;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "null=null" + "'", str40.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "hi!" + "'", str48.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + method58 + "' != '" + org.jsoup.Connection.Method.GET + "'", method58.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + method66 + "' != '" + org.jsoup.Connection.Method.GET + "'", method66.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "null=null");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("hi!=");
        boolean boolean12 = request0.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection13 = request0.data;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection13);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.lang.String str10 = request7.header("hi!");
        org.jsoup.Connection.Request request12 = request7.removeHeader("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        int int8 = request7.timeoutMilliseconds;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request9 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        java.lang.String str11 = request9.cookie("null=null=null=hi!");
        java.net.URL uRL12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request13 = request9.url(uRL12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.util.Map<java.lang.String, java.lang.String> strMap2 = response1.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection connection8 = httpConnection0.maxBodySize((int) (byte) 0);
        org.jsoup.Connection.Response response9 = httpConnection0.response();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = response1.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = response1.cookies();
        org.jsoup.helper.HttpConnection httpConnection46 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request47 = null;
        org.jsoup.Connection connection48 = httpConnection46.request(request47);
        org.jsoup.helper.HttpConnection httpConnection49 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response50 = httpConnection49.response();
        org.jsoup.Connection.Request request51 = httpConnection49.request();
        org.jsoup.Connection connection52 = httpConnection46.request(request51);
        org.jsoup.Connection.Response response53 = httpConnection46.response();
        org.jsoup.Connection connection55 = httpConnection46.ignoreHttpErrors(false);
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method57 = request56.method();
        boolean boolean58 = request56.ignoreHttpErrors();
        org.jsoup.Connection.Request request61 = request56.cookie("hi!", "");
        boolean boolean62 = request56.ignoreContentType;
        org.jsoup.Connection.Request request65 = request56.cookie("null=hi!", "hi!");
        java.lang.String str67 = request56.getHeaderCaseInsensitive("");
        java.lang.String str69 = request56.cookie("");
        request56.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap72 = request56.cookies();
        boolean boolean73 = request56.followRedirects();
        org.jsoup.helper.HttpConnection.KeyVal keyVal74 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal74.key = "hi!";
        java.lang.String str77 = keyVal74.key;
        org.jsoup.helper.HttpConnection.Request request78 = request56.data((org.jsoup.Connection.KeyVal) keyVal74);
        org.jsoup.Connection.Method method79 = request78.method();
        org.jsoup.Connection connection80 = httpConnection46.method(method79);
        org.jsoup.Connection.Response response81 = response1.method(method79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        org.junit.Assert.assertTrue("'" + method57 + "' != '" + org.jsoup.Connection.Method.GET + "'", method57.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "hi!" + "'", str77.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
        org.junit.Assert.assertTrue("'" + method79 + "' != '" + org.jsoup.Connection.Method.GET + "'", method79.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response81);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection1 = org.jsoup.helper.HttpConnection.connect("null=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        org.jsoup.Connection.Request request8 = request0.removeCookie("null=null=");
        boolean boolean9 = request0.ignoreContentType;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        org.jsoup.Connection.Request request7 = response1.req;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = response1.scanHeaders("hi!=null");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        org.jsoup.Connection.Response response13 = response1.header("null=null=", "hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.parser.Parser parser13 = request0.parser;
        org.jsoup.Connection.Request request15 = request0.removeHeader("null=null=hi!");
        org.jsoup.Connection.Request request18 = request0.header("null=null=", "");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        request0.parser = parser30;
        int int33 = request0.timeoutMilliseconds;
        org.jsoup.Connection.Request request36 = request0.cookie("null=null=null=hi!", "hi!=null");
        org.jsoup.Connection.Request request38 = request0.removeHeader("null=null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3000 + "'", int33 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request9 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        org.jsoup.Connection.Request request12 = request9.header("null=hi!", "");
        org.jsoup.Connection.Request request15 = request9.header("null=null=hi!", "hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        int int11 = response10.statusCode();
        int int12 = response10.numRedirects;
        response10.charset = "";
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request15.headers();
        request15.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        boolean boolean22 = request20.ignoreHttpErrors();
        org.jsoup.Connection.Request request25 = request20.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.followRedirects = false;
        boolean boolean31 = request26.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request33 = request26.timeout((int) ' ');
        java.lang.String str35 = request33.cookie("hi!");
        java.lang.String str37 = request33.header("null=null");
        request33.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = request40.headers();
        request40.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser45 = request40.parser;
        request33.parser = parser45;
        org.jsoup.helper.HttpConnection.Request request47 = request20.parser(parser45);
        org.jsoup.helper.HttpConnection.Request request48 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method49 = request48.method();
        org.jsoup.Connection.Request request50 = request47.method(method49);
        org.jsoup.Connection.Request request51 = request15.method(method49);
        org.jsoup.Connection.Response response52 = response10.method(method49);
        org.jsoup.Connection.Request request53 = response10.req;
        response10.statusCode = (byte) 10;
        java.util.Map<java.lang.String, java.lang.String> strMap56 = response10.headers();
        org.jsoup.Connection connection57 = httpConnection0.cookies(strMap56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        java.net.URL uRL7 = request0.url();
        boolean boolean8 = request0.ignoreContentType();
        request0.maxBodySizeBytes = (-1);
        java.lang.String str12 = request0.header("null=null=hi!");
        org.jsoup.Connection.Request request14 = request0.removeCookie("null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        java.lang.String str6 = response1.getHeaderCaseInsensitive("null=null");
        java.lang.String str7 = response1.statusMessage;
        java.nio.ByteBuffer byteBuffer8 = null;
        response1.byteData = byteBuffer8;
        boolean boolean10 = response1.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        int int12 = request7.maxBodySize();
        java.lang.String str14 = request7.header("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request7.headers();
        int int16 = request7.timeoutMilliseconds;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.headers();
        boolean boolean23 = request17.ignoreContentType;
        request17.ignoreHttpErrors = true;
        java.net.URL uRL26 = request17.url();
        org.jsoup.Connection.Request request28 = request17.ignoreContentType(false);
        request17.ignoreHttpErrors = true;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection31 = request17.data();
        request7.data = keyValCollection31;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection31);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        org.jsoup.Connection.Request request12 = request7.cookie("null=null", "null=null=null=hi!");
        boolean boolean14 = request7.hasCookie("null=null=null=hi!");
        int int15 = request7.timeoutMilliseconds;
        boolean boolean16 = request7.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection17 = request7.data;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection17);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        org.jsoup.helper.HttpConnection.Response response5 = new org.jsoup.helper.HttpConnection.Response(response1);
        response5.statusCode = ' ';
        org.jsoup.Connection.Response response10 = response5.cookie("null=null=null=hi!", "hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        org.jsoup.helper.HttpConnection.Response response5 = new org.jsoup.helper.HttpConnection.Response(response1);
        org.jsoup.Connection.Request request6 = response5.req;
        java.nio.ByteBuffer byteBuffer7 = response5.byteData;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer7);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        request11.maxBodySizeBytes = (short) 100;
        org.jsoup.parser.Parser parser20 = request11.parser;
        org.jsoup.helper.HttpConnection.Request request21 = request0.parser(parser20);
        java.lang.String str23 = request0.header("hi!=null");
        boolean boolean24 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        boolean boolean27 = request25.followRedirects;
        org.jsoup.Connection.Request request29 = request25.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request25.cookies();
        boolean boolean32 = request25.hasCookie("");
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str34 = keyVal33.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal36 = keyVal33.value("hi!");
        java.lang.String str37 = keyVal33.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = keyVal33.value("hi!");
        java.lang.String str40 = keyVal33.key();
        org.jsoup.helper.HttpConnection.Request request41 = request25.data((org.jsoup.Connection.KeyVal) keyVal33);
        org.jsoup.helper.HttpConnection.Request request42 = request0.data((org.jsoup.Connection.KeyVal) keyVal33);
        int int43 = request0.maxBodySize();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1048576 + "'", int43 == 1048576);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        org.jsoup.Connection connection11 = httpConnection8.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request12 = httpConnection8.req;
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request13.headers();
        request13.followRedirects = false;
        boolean boolean18 = request13.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request20 = request13.timeout((int) ' ');
        java.lang.String str22 = request20.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection23 = request20.data();
        org.jsoup.Connection connection24 = httpConnection8.data(keyValCollection23);
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        boolean boolean27 = request25.followRedirects;
        org.jsoup.Connection.Request request29 = request25.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request25.headers();
        boolean boolean31 = request25.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.followRedirects = false;
        boolean boolean37 = request32.ignoreHttpErrors;
        org.jsoup.Connection.Method method38 = request32.method();
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        boolean boolean41 = request39.followRedirects;
        org.jsoup.Connection.Request request43 = request39.followRedirects(true);
        java.lang.String str45 = request39.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request46 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method47 = request46.method();
        org.jsoup.Connection.Request request48 = request39.method(method47);
        org.jsoup.Connection.Request request49 = request32.method(method47);
        org.jsoup.Connection.Request request50 = request25.method(method47);
        org.jsoup.Connection connection51 = httpConnection8.method(method47);
        org.jsoup.Connection.Request request52 = request0.method(method47);
        org.jsoup.helper.HttpConnection.Request request54 = request0.timeout((int) (short) 0);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + method47 + "' != '" + org.jsoup.Connection.Method.GET + "'", method47.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.statusMessage();
        response1.contentType = "null=";
        java.lang.String str5 = response1.contentType;
        java.lang.String str7 = response1.header("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null=" + "'", str5.equals("null="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        request0.parser = parser30;
        org.jsoup.helper.HttpConnection.Response response33 = null;
        org.jsoup.helper.HttpConnection.Response response34 = new org.jsoup.helper.HttpConnection.Response(response33);
        int int35 = response34.statusCode();
        int int36 = response34.numRedirects;
        response34.charset = "";
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request39.headers();
        request39.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method45 = request44.method();
        boolean boolean46 = request44.ignoreHttpErrors();
        org.jsoup.Connection.Request request49 = request44.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = request50.headers();
        request50.followRedirects = false;
        boolean boolean55 = request50.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request57 = request50.timeout((int) ' ');
        java.lang.String str59 = request57.cookie("hi!");
        java.lang.String str61 = request57.header("null=null");
        request57.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request64 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method65 = request64.method();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = request64.headers();
        request64.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser69 = request64.parser;
        request57.parser = parser69;
        org.jsoup.helper.HttpConnection.Request request71 = request44.parser(parser69);
        org.jsoup.helper.HttpConnection.Request request72 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method73 = request72.method();
        org.jsoup.Connection.Request request74 = request71.method(method73);
        org.jsoup.Connection.Request request75 = request39.method(method73);
        org.jsoup.Connection.Response response76 = response34.method(method73);
        org.jsoup.Connection.Request request77 = response34.req;
        response34.statusCode = (byte) 10;
        response34.charset = "null=";
        java.lang.String str83 = response34.getHeaderCaseInsensitive("null=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response84 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request0, response34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + method45 + "' != '" + org.jsoup.Connection.Method.GET + "'", method45.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + method65 + "' != '" + org.jsoup.Connection.Method.GET + "'", method65.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        org.junit.Assert.assertTrue("'" + method73 + "' != '" + org.jsoup.Connection.Method.GET + "'", method73.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request7.data();
        java.lang.String str12 = request7.header("hi!");
        org.jsoup.Connection.Request request15 = request7.header("null=null=hi!", "");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = request7.scanHeaders("null=null=null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request7.headers();
        java.lang.String str20 = request7.header("hi!=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!=null", "null=null=null=hi!=hi!");
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection35 = request33.data;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request33.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = request33.cookies();
        boolean boolean39 = request33.hasHeader("null=null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection6 = request0.data();
        boolean boolean7 = request0.ignoreHttpErrors;
        request0.ignoreContentType = true;
        java.lang.String str11 = request0.header("hi!=");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request0.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        java.lang.String str7 = response1.statusMessage;
        response1.contentType = "null=null=hi!";
        java.nio.ByteBuffer byteBuffer10 = response1.byteData;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry12 = response1.scanHeaders("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry12);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        org.jsoup.Connection.Request request12 = request7.header("hi!=null", "null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.followRedirects;
        org.jsoup.Connection.Request request16 = request12.followRedirects(true);
        java.lang.String str18 = request12.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        org.jsoup.Connection.Request request21 = request12.method(method20);
        org.jsoup.Connection.Request request22 = request10.method(method20);
        org.jsoup.Connection.Request request23 = request7.method(method20);
        org.jsoup.helper.HttpConnection.Response response24 = null;
        org.jsoup.helper.HttpConnection.Response response25 = new org.jsoup.helper.HttpConnection.Response(response24);
        int int26 = response25.numRedirects;
        response25.charset = "hi!=null";
        java.lang.String str30 = response25.getHeaderCaseInsensitive("null=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response31 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request7, response25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response1.scanHeaders("null=");
        org.jsoup.Connection.Response response20 = response1.header("hi!", "hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        boolean boolean5 = response1.executed;
        response1.executed = true;
        org.jsoup.Connection.Method method8 = response1.method();
        org.jsoup.Connection.Request request9 = response1.req;
        response1.charset = "hi!=null";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request9);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request4 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method5 = request4.method();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request4.headers();
        request4.followRedirects = false;
        boolean boolean9 = request4.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request11 = request4.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry13 = request4.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request4.headers();
        httpConnection0.req = request4;
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        java.lang.String str6 = response1.cookie("null=null=null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document7 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!=", "hi!=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("null=null=hi!");
        java.lang.String str5 = keyVal2.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal2.value("null=null");
        java.lang.String str8 = keyVal7.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!=null" + "'", str5.equals("hi!=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=null=hi!" + "'", str8.equals("null=null=hi!"));
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.followRedirects();
        org.jsoup.Connection.Request request10 = request7.maxBodySize(0);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Request request18 = httpConnection0.request();
        org.jsoup.Connection.Request request19 = null;
        org.jsoup.Connection connection20 = httpConnection0.request(request19);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection23 = httpConnection0.header("null=null=null=hi!=hi!", "hi!=");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection1 = org.jsoup.helper.HttpConnection.connect("null=null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        org.jsoup.Connection.Request request16 = request0.removeCookie("");
        java.lang.String str17 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        int int18 = request0.timeout();
        int int19 = request0.timeout();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3000 + "'", int18 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3000 + "'", int19 == 3000);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        keyVal2.key = "";
        keyVal2.key = "null=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        boolean boolean9 = request0.hasHeader("null=hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=null");
        request0.maxBodySizeBytes = (short) -1;
        java.net.URL uRL14 = request0.url();
        int int15 = request0.maxBodySize();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean9 = request3.hasCookie("null=null");
        java.lang.String str11 = request3.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.request((org.jsoup.Connection.Request) request3);
        org.jsoup.Connection connection15 = httpConnection0.data("null=hi!", "");
        org.jsoup.Connection connection18 = httpConnection0.data("null=null", "null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.followRedirects = false;
        boolean boolean13 = request8.ignoreHttpErrors;
        org.jsoup.Connection.Method method14 = request8.method();
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        boolean boolean17 = request15.followRedirects;
        org.jsoup.Connection.Request request19 = request15.followRedirects(true);
        java.lang.String str21 = request15.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        org.jsoup.Connection.Request request24 = request15.method(method23);
        org.jsoup.Connection.Request request25 = request8.method(method23);
        org.jsoup.Connection.Response response26 = response1.method(method23);
        response1.contentType = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        boolean boolean28 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        org.jsoup.Connection connection32 = httpConnection29.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection36 = httpConnection33.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        int int40 = request37.timeout();
        org.jsoup.parser.Parser parser41 = request37.parser();
        org.jsoup.Connection connection42 = httpConnection33.parser(parser41);
        org.jsoup.Connection connection43 = httpConnection29.parser(parser41);
        org.jsoup.helper.HttpConnection.Request request44 = request0.parser(parser41);
        org.jsoup.Connection.Request request47 = request44.header("hi!=null", "null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Response response48 = null;
        org.jsoup.helper.HttpConnection.Response response49 = new org.jsoup.helper.HttpConnection.Response(response48);
        int int50 = response49.statusCode();
        int int51 = response49.numRedirects;
        response49.charset = "";
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method55 = request54.method();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = request54.headers();
        request54.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method60 = request59.method();
        boolean boolean61 = request59.ignoreHttpErrors();
        org.jsoup.Connection.Request request64 = request59.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request65 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method66 = request65.method();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = request65.headers();
        request65.followRedirects = false;
        boolean boolean70 = request65.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request72 = request65.timeout((int) ' ');
        java.lang.String str74 = request72.cookie("hi!");
        java.lang.String str76 = request72.header("null=null");
        request72.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request79 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method80 = request79.method();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = request79.headers();
        request79.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser84 = request79.parser;
        request72.parser = parser84;
        org.jsoup.helper.HttpConnection.Request request86 = request59.parser(parser84);
        org.jsoup.helper.HttpConnection.Request request87 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method88 = request87.method();
        org.jsoup.Connection.Request request89 = request86.method(method88);
        org.jsoup.Connection.Request request90 = request54.method(method88);
        org.jsoup.Connection.Response response91 = response49.method(method88);
        org.jsoup.Connection.Request request92 = response49.req;
        response49.statusCode = (byte) 10;
        java.util.Map<java.lang.String, java.lang.String> strMap95 = response49.headers();
        response49.executed = true;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response98 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request44, response49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + method55 + "' != '" + org.jsoup.Connection.Method.GET + "'", method55.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        org.junit.Assert.assertTrue("'" + method66 + "' != '" + org.jsoup.Connection.Method.GET + "'", method66.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + method80 + "' != '" + org.jsoup.Connection.Method.GET + "'", method80.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request86);
        org.junit.Assert.assertTrue("'" + method88 + "' != '" + org.jsoup.Connection.Method.GET + "'", method88.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap95);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection.Response response19 = null;
        org.jsoup.helper.HttpConnection.Response response20 = new org.jsoup.helper.HttpConnection.Response(response19);
        int int21 = response20.statusCode();
        int int22 = response20.numRedirects;
        response20.charset = "";
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method31 = request30.method();
        boolean boolean32 = request30.ignoreHttpErrors();
        org.jsoup.Connection.Request request35 = request30.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = request36.headers();
        request36.followRedirects = false;
        boolean boolean41 = request36.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request43 = request36.timeout((int) ' ');
        java.lang.String str45 = request43.cookie("hi!");
        java.lang.String str47 = request43.header("null=null");
        request43.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = request50.headers();
        request50.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser55 = request50.parser;
        request43.parser = parser55;
        org.jsoup.helper.HttpConnection.Request request57 = request30.parser(parser55);
        org.jsoup.helper.HttpConnection.Request request58 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method59 = request58.method();
        org.jsoup.Connection.Request request60 = request57.method(method59);
        org.jsoup.Connection.Request request61 = request25.method(method59);
        org.jsoup.Connection.Response response62 = response20.method(method59);
        org.jsoup.Connection.Request request63 = request18.method(method59);
        request18.ignoreContentType = true;
        httpConnection0.req = request18;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        java.lang.String str6 = response1.getHeaderCaseInsensitive("null=null");
        java.lang.String str7 = response1.statusMessage;
        java.util.Map<java.lang.String, java.lang.String> strMap8 = response1.headers();
        org.jsoup.Connection.Response response11 = response1.header("null=", "");
        org.jsoup.Connection.Response response14 = response1.header("null=null=null=hi!", "hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        boolean boolean10 = request7.ignoreContentType();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser5 = request0.parser;
        org.jsoup.Connection.Request request7 = request0.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        int int10 = request0.timeoutMilliseconds;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3000 + "'", int10 == 3000);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("");
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str9 = keyVal8.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = keyVal8.value("hi!");
        java.lang.String str12 = keyVal8.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal8.value("hi!");
        java.lang.String str15 = keyVal8.key();
        org.jsoup.helper.HttpConnection.Request request16 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        request16.ignoreContentType = true;
        boolean boolean19 = request16.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request21 = request16.timeout(32);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request16.headers();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        java.net.URL uRL7 = request0.url();
        org.jsoup.Connection.Request request9 = request0.maxBodySize((int) 'a');
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response1.scanHeaders("hi!=");
        int int18 = response1.numRedirects;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry20 = response1.scanHeaders("null=null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry20);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Request request4 = null;
        httpConnection0.req = request4;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        boolean boolean10 = request6.hasCookie("null=null");
        org.jsoup.Connection connection11 = httpConnection0.request((org.jsoup.Connection.Request) request6);
        java.net.URL uRL12 = request6.url();
        int int13 = request6.maxBodySize();
        request6.ignoreHttpErrors = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1048576 + "'", int13 == 1048576);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        boolean boolean4 = request0.hasCookie("null=hi!");
        request0.timeoutMilliseconds = (byte) -1;
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal7.value("hi!");
        java.lang.String str11 = keyVal7.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = keyVal7.value("hi!");
        org.jsoup.helper.HttpConnection.Request request14 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        java.lang.String str15 = keyVal13.key();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        int int3 = request0.timeout();
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        org.jsoup.Connection connection7 = httpConnection4.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        httpConnection4.res = response9;
        org.jsoup.Connection connection13 = httpConnection4.header("hi!", "");
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        boolean boolean16 = request14.followRedirects;
        org.jsoup.Connection.Request request18 = request14.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request14.headers();
        boolean boolean20 = request14.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request21.headers();
        request21.followRedirects = false;
        boolean boolean26 = request21.ignoreHttpErrors;
        org.jsoup.Connection.Method method27 = request21.method();
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        boolean boolean30 = request28.followRedirects;
        org.jsoup.Connection.Request request32 = request28.followRedirects(true);
        java.lang.String str34 = request28.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        org.jsoup.Connection.Request request37 = request28.method(method36);
        org.jsoup.Connection.Request request38 = request21.method(method36);
        org.jsoup.Connection.Request request39 = request14.method(method36);
        org.jsoup.Connection.Request request41 = request14.removeHeader("hi!=null");
        httpConnection4.req = request14;
        org.jsoup.parser.Parser parser43 = request14.parser;
        request0.parser = parser43;
        int int45 = request0.maxBodySizeBytes;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1048576 + "'", int45 == 1048576);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        org.jsoup.Connection.Request request5 = response1.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request5);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        boolean boolean11 = request9.ignoreHttpErrors();
        org.jsoup.Connection.Request request14 = request9.cookie("hi!", "");
        boolean boolean15 = request9.ignoreContentType;
        org.jsoup.Connection.Request request18 = request9.cookie("null=hi!", "hi!");
        org.jsoup.Connection connection19 = httpConnection0.request((org.jsoup.Connection.Request) request9);
        boolean boolean20 = request9.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        java.lang.String str24 = keyVal23.key();
        org.jsoup.helper.HttpConnection.Request request25 = request9.data((org.jsoup.Connection.KeyVal) keyVal23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "hi!" + "'", str24.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.parser.Parser parser13 = request0.parser;
        java.lang.String str15 = request0.cookie("null=");
        java.lang.String str17 = request0.getHeaderCaseInsensitive("null=null=null=hi!=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        boolean boolean11 = request7.hasCookie("null=hi!");
        org.jsoup.helper.HttpConnection.Response response12 = null;
        org.jsoup.helper.HttpConnection.Response response13 = new org.jsoup.helper.HttpConnection.Response(response12);
        int int14 = response13.statusCode();
        int int15 = response13.numRedirects;
        response13.charset = "";
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request21 = request18.ignoreContentType(false);
        org.jsoup.Connection.Request request23 = request18.removeCookie("");
        int int24 = request18.maxBodySize();
        org.jsoup.Connection.Request request26 = request18.followRedirects(false);
        response13.req = request18;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry29 = response13.scanHeaders("hi!=");
        int int30 = response13.numRedirects;
        org.jsoup.Connection.Response response32 = response13.removeHeader("null=");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response33 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request7, response13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1048576 + "'", int24 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response32);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal5.key("null=hi!");
        java.lang.String str8 = keyVal5.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=hi!" + "'", str8.equals("null=hi!"));
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.headers();
        request17.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser25 = request17.parser();
        org.jsoup.Connection connection26 = httpConnection0.parser(parser25);
        org.jsoup.Connection connection29 = httpConnection0.data("null=null", "null=null");
        org.jsoup.Connection.Request request30 = httpConnection0.request();
        org.jsoup.Connection connection32 = httpConnection0.userAgent("null=null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str5 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal4.value("hi!");
        java.lang.String str8 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal4.value("hi!");
        java.lang.String str11 = keyVal4.key();
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal4);
        java.net.URL uRL13 = request12.url();
        boolean boolean14 = request12.ignoreContentType;
        java.lang.String str16 = request12.header("hi!");
        int int17 = request12.maxBodySizeBytes;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1048576 + "'", int17 == 1048576);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        boolean boolean33 = request31.ignoreHttpErrors();
        org.jsoup.Connection.Request request36 = request31.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        request37.followRedirects = false;
        boolean boolean42 = request37.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request44 = request37.timeout((int) ' ');
        java.lang.String str46 = request44.cookie("hi!");
        java.lang.String str48 = request44.header("null=null");
        request44.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = request51.headers();
        request51.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser56 = request51.parser;
        request44.parser = parser56;
        org.jsoup.helper.HttpConnection.Request request58 = request31.parser(parser56);
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method60 = request59.method();
        org.jsoup.Connection.Request request61 = request58.method(method60);
        org.jsoup.Connection connection62 = httpConnection0.method(method60);
        org.jsoup.Connection connection65 = httpConnection0.header("null=hi!", "");
        org.jsoup.Connection connection68 = httpConnection0.data("null=null", "hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection68);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.maxBodySize((int) (short) 1);
        org.jsoup.Connection connection6 = httpConnection0.ignoreHttpErrors(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        int int3 = request0.timeout();
        boolean boolean4 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = org.jsoup.helper.HttpConnection.KeyVal.create("null=null=null=hi!", "null=null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal7.key("hi!=");
        keyVal7.value = "";
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal7);
        org.jsoup.Connection.Request request15 = request0.cookie("null=null=hi!", "hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.Connection.Request request20 = httpConnection0.request();
        org.jsoup.Connection.Request request21 = httpConnection0.request();
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        boolean boolean24 = request22.followRedirects;
        org.jsoup.Connection.Request request26 = request22.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request22.headers();
        boolean boolean28 = request22.ignoreContentType;
        boolean boolean29 = request22.followRedirects();
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method31 = request30.method();
        org.jsoup.Connection.Request request32 = request22.method(method31);
        boolean boolean33 = request22.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection34 = request22.data();
        org.jsoup.Connection connection35 = httpConnection0.request((org.jsoup.Connection.Request) request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        int int22 = response1.numRedirects;
        org.jsoup.Connection.Method method23 = response1.method();
        java.nio.ByteBuffer byteBuffer24 = null;
        response1.byteData = byteBuffer24;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.maxBodySize((int) (short) 1);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request6 = null;
        org.jsoup.Connection connection7 = httpConnection5.request(request6);
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        org.jsoup.Connection.Request request10 = httpConnection8.request();
        org.jsoup.Connection connection11 = httpConnection5.request(request10);
        org.jsoup.Connection connection14 = httpConnection5.cookie("null=null", "null=null");
        org.jsoup.Connection connection16 = httpConnection5.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.cookies();
        org.jsoup.Connection connection23 = httpConnection5.data(strMap22);
        org.jsoup.Connection connection24 = httpConnection0.data(strMap22);
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.followRedirects = false;
        java.lang.String str31 = request25.cookie("");
        boolean boolean32 = request25.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request33.headers();
        request33.followRedirects = false;
        boolean boolean38 = request33.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection39 = request33.data();
        request25.data = keyValCollection39;
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = keyVal43.key("null=null");
        org.jsoup.helper.HttpConnection.Request request46 = request25.data((org.jsoup.Connection.KeyVal) keyVal45);
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = request47.headers();
        request47.followRedirects = false;
        boolean boolean52 = request47.ignoreHttpErrors;
        org.jsoup.Connection.Method method53 = request47.method();
        int int54 = request47.maxBodySizeBytes;
        org.jsoup.Connection.Method method55 = request47.method();
        org.jsoup.Connection.Request request56 = request25.method(method55);
        org.jsoup.Connection connection57 = httpConnection0.request((org.jsoup.Connection.Request) request25);
        org.jsoup.helper.HttpConnection httpConnection58 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection60 = httpConnection58.followRedirects(false);
        org.jsoup.Connection connection62 = httpConnection58.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection63 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response64 = httpConnection63.response();
        org.jsoup.helper.HttpConnection httpConnection65 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response66 = httpConnection65.response();
        org.jsoup.Connection connection68 = httpConnection65.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection69 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response70 = httpConnection69.response();
        httpConnection65.res = response70;
        httpConnection63.res = response70;
        org.jsoup.Connection connection73 = httpConnection58.response(response70);
        org.jsoup.Connection connection75 = httpConnection58.ignoreHttpErrors(false);
        org.jsoup.Connection connection77 = httpConnection58.referrer("hi!");
        org.jsoup.helper.HttpConnection.Request request78 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method79 = request78.method();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = request78.headers();
        request78.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser83 = request78.parser;
        org.jsoup.Connection connection84 = httpConnection58.parser(parser83);
        org.jsoup.Connection connection85 = httpConnection0.parser(parser83);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response86 = httpConnection0.execute();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1048576 + "'", int54 == 1048576);
        org.junit.Assert.assertTrue("'" + method55 + "' != '" + org.jsoup.Connection.Method.GET + "'", method55.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection77);
        org.junit.Assert.assertTrue("'" + method79 + "' != '" + org.jsoup.Connection.Method.GET + "'", method79.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection85);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        java.lang.String str8 = response1.charset;
        int int9 = response1.numRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        keyVal13.value = "null=null";
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout((int) (short) 0);
        org.jsoup.Connection.Method method5 = request0.method();
        boolean boolean6 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request8 = request0.timeout((int) (byte) 100);
        boolean boolean9 = request8.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request8.removeCookie("hi!=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        java.lang.String str3 = keyVal2.value;
        java.lang.String str4 = keyVal2.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=null" + "'", str3.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!" + "'", str4.equals("hi!"));
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        java.net.URL uRL7 = request0.url();
        boolean boolean8 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str10 = keyVal9.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal9.value("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal9.key("hi!");
        java.lang.String str15 = keyVal9.value;
        org.jsoup.helper.HttpConnection.Request request16 = request0.data((org.jsoup.Connection.KeyVal) keyVal9);
        java.lang.String str18 = request0.cookie("null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        response1.executed = false;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.parser.Parser parser13 = request0.parser;
        org.jsoup.Connection.Request request15 = request0.ignoreHttpErrors(false);
        org.jsoup.Connection.Method method16 = request0.method();
        int int17 = request0.maxBodySize();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1048576 + "'", int17 == 1048576);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.maxBodySize((int) (short) 1);
        org.jsoup.Connection connection6 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        boolean boolean9 = request7.followRedirects;
        org.jsoup.Connection.Request request11 = request7.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.headers();
        boolean boolean13 = request7.ignoreContentType;
        request7.maxBodySizeBytes = (short) 100;
        org.jsoup.parser.Parser parser16 = request7.parser;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request7.parser(parser36);
        int int39 = request7.timeout();
        java.lang.String str41 = request7.cookie("null=hi!");
        org.jsoup.Connection connection42 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3000 + "'", int39 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        response1.charset = "hi!=null";
        org.jsoup.Connection.Response response6 = response1.removeHeader("hi!=");
        java.lang.String str7 = response1.contentType();
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        org.jsoup.Connection.Request request14 = request7.header("null=null=null=hi!", "");
        boolean boolean15 = request7.followRedirects;
        request7.maxBodySizeBytes = 0;
        org.jsoup.helper.HttpConnection.Request request19 = request7.timeout((int) 'a');
        int int20 = request7.timeoutMilliseconds;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.Connection connection32 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection34 = httpConnection0.userAgent("null=null");
        java.net.URL uRL35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection36 = httpConnection0.url(uRL35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.headers();
        request17.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser25 = request17.parser();
        org.jsoup.Connection connection26 = httpConnection0.parser(parser25);
        org.jsoup.Connection connection29 = httpConnection0.data("null=null", "null=null");
        org.jsoup.Connection.Request request30 = httpConnection0.request();
        java.lang.Class<?> wildcardClass31 = httpConnection0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Response response4 = httpConnection0.response();
        org.jsoup.Connection.Request request5 = httpConnection0.request();
        org.jsoup.helper.HttpConnection httpConnection6 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response7 = httpConnection6.response();
        org.jsoup.Connection.Request request8 = httpConnection6.request();
        org.jsoup.Connection.Request request9 = httpConnection6.req;
        org.jsoup.Connection connection11 = httpConnection6.timeout((int) 'a');
        org.jsoup.helper.HttpConnection httpConnection12 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response13 = httpConnection12.response();
        org.jsoup.Connection.Request request14 = httpConnection12.request();
        org.jsoup.Connection connection16 = httpConnection12.ignoreContentType(true);
        org.jsoup.Connection.Request request17 = httpConnection12.request();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.headers();
        org.jsoup.Connection.Method method21 = request18.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request18.cookies();
        org.jsoup.Connection connection23 = httpConnection12.cookies(strMap22);
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response25 = httpConnection24.response();
        org.jsoup.Connection.Request request26 = httpConnection24.request();
        org.jsoup.Connection connection28 = httpConnection24.ignoreContentType(true);
        org.jsoup.Connection.Request request29 = httpConnection24.request();
        org.jsoup.Connection connection31 = httpConnection24.referrer("null=hi!");
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request33 = null;
        org.jsoup.Connection connection34 = httpConnection32.request(request33);
        org.jsoup.helper.HttpConnection httpConnection35 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response36 = httpConnection35.response();
        org.jsoup.Connection.Request request37 = httpConnection35.request();
        org.jsoup.Connection connection38 = httpConnection32.request(request37);
        org.jsoup.helper.HttpConnection httpConnection39 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection41 = httpConnection39.followRedirects(false);
        org.jsoup.Connection connection43 = httpConnection39.referrer("");
        org.jsoup.Connection.Response response44 = httpConnection39.response();
        org.jsoup.Connection connection45 = httpConnection32.response(response44);
        org.jsoup.Connection connection47 = httpConnection32.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request48 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method49 = request48.method();
        boolean boolean50 = request48.ignoreHttpErrors();
        org.jsoup.Connection.Request request53 = request48.cookie("hi!", "");
        java.lang.String str55 = request48.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method57 = request56.method();
        boolean boolean58 = request56.followRedirects;
        org.jsoup.Connection.Request request60 = request56.followRedirects(true);
        java.lang.String str62 = request56.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method64 = request63.method();
        org.jsoup.Connection.Request request65 = request56.method(method64);
        org.jsoup.Connection.Request request66 = request48.method(method64);
        org.jsoup.Connection connection67 = httpConnection32.method(method64);
        org.jsoup.Connection connection69 = httpConnection32.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection70 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response71 = httpConnection70.response();
        org.jsoup.Connection connection73 = httpConnection70.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection74 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response75 = httpConnection74.response();
        httpConnection70.res = response75;
        java.lang.String[] strArray79 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection80 = httpConnection70.data(strArray79);
        org.jsoup.Connection connection81 = httpConnection32.data(strArray79);
        org.jsoup.Connection connection82 = httpConnection24.data(strArray79);
        org.jsoup.Connection connection83 = httpConnection12.data(strArray79);
        org.jsoup.Connection connection84 = httpConnection6.data(strArray79);
        org.jsoup.Connection connection85 = httpConnection0.data(strArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection47);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + method57 + "' != '" + org.jsoup.Connection.Method.GET + "'", method57.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + method64 + "' != '" + org.jsoup.Connection.Method.GET + "'", method64.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection85);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.lang.String str19 = request13.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        org.jsoup.Connection.Request request22 = request13.method(method21);
        org.jsoup.Connection.Request request23 = request11.method(method21);
        org.jsoup.helper.HttpConnection.KeyVal keyVal24 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str25 = keyVal24.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = keyVal24.value("");
        java.lang.String str28 = keyVal24.value();
        org.jsoup.helper.HttpConnection.Request request29 = request11.data((org.jsoup.Connection.KeyVal) keyVal24);
        int int30 = request29.timeout();
        response10.req = request29;
        httpConnection0.res = response10;
        java.nio.ByteBuffer byteBuffer33 = response10.byteData;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null=null" + "'", str25.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3000 + "'", int30 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer33);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.net.URL uRL5 = request0.url();
        boolean boolean6 = request0.ignoreContentType();
        java.lang.String str8 = request0.cookie("null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        org.jsoup.Connection.Request request3 = request0.removeHeader("null=null=null=hi!");
        java.net.URL uRL4 = request0.url();
        int int5 = request0.maxBodySizeBytes;
        org.jsoup.Connection.Request request7 = request0.ignoreHttpErrors(false);
        org.jsoup.Connection.Request request9 = request0.removeCookie("hi!");
        org.jsoup.helper.HttpConnection.Response response10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        int int12 = response11.statusCode();
        int int13 = response11.numRedirects;
        java.lang.String str14 = response11.charset;
        java.lang.String str15 = response11.charset;
        org.jsoup.Connection.Response response18 = response11.header("null=", "hi!");
        java.lang.String str20 = response11.cookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap21 = response11.cookies();
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        request22.followRedirects = false;
        boolean boolean27 = request22.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request29 = request22.timeout((int) ' ');
        boolean boolean30 = request29.ignoreHttpErrors;
        org.jsoup.Connection.Method method31 = request29.method();
        org.jsoup.Connection.Response response32 = response11.method(method31);
        java.lang.String str34 = response11.getHeaderCaseInsensitive("null=null=");
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        boolean boolean37 = request35.ignoreHttpErrors();
        org.jsoup.Connection.Request request40 = request35.cookie("hi!", "");
        java.lang.String str42 = request35.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method44 = request43.method();
        boolean boolean45 = request43.followRedirects;
        org.jsoup.Connection.Request request47 = request43.followRedirects(true);
        java.lang.String str49 = request43.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        org.jsoup.Connection.Request request52 = request43.method(method51);
        org.jsoup.Connection.Request request53 = request35.method(method51);
        org.jsoup.Connection.Response response54 = response11.method(method51);
        org.jsoup.Connection.Request request55 = request0.method(method51);
        boolean boolean57 = request0.hasCookie("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1048576 + "'", int5 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        java.lang.String str22 = response1.charset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.toString();
        keyVal0.value = "";
        keyVal0.value = "null=hi!";
        keyVal0.key = "null=null";
        java.lang.String str8 = keyVal0.toString();
        java.lang.String str9 = keyVal0.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = keyVal0.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = keyVal0.value("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = keyVal13.value("hi!=null");
        java.lang.String str16 = keyVal13.toString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null" + "'", str1.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=null=null=hi!" + "'", str8.equals("null=null=null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=hi!" + "'", str9.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null=null=hi!=null" + "'", str16.equals("null=null=hi!=null"));
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.cookies();
        boolean boolean17 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal18.key = "hi!";
        java.lang.String str21 = keyVal18.key;
        org.jsoup.helper.HttpConnection.Request request22 = request0.data((org.jsoup.Connection.KeyVal) keyVal18);
        java.lang.String str23 = keyVal18.toString();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!=null" + "'", str23.equals("hi!=null"));
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request7.data();
        java.lang.String str12 = request7.header("hi!");
        boolean boolean14 = request7.hasHeader("null=");
        request7.ignoreContentType = true;
        java.lang.String str18 = request7.cookie("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str5 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal4.value("hi!");
        java.lang.String str8 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal4.value("hi!");
        java.lang.String str11 = keyVal4.key();
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal4);
        org.jsoup.Connection.Request request14 = request0.maxBodySize((int) (byte) 0);
        boolean boolean15 = request0.followRedirects;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.maxBodySize((int) (short) 1);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request6 = null;
        org.jsoup.Connection connection7 = httpConnection5.request(request6);
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        org.jsoup.Connection.Request request10 = httpConnection8.request();
        org.jsoup.Connection connection11 = httpConnection5.request(request10);
        org.jsoup.Connection connection14 = httpConnection5.cookie("null=null", "null=null");
        org.jsoup.Connection connection16 = httpConnection5.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.cookies();
        org.jsoup.Connection connection23 = httpConnection5.data(strMap22);
        org.jsoup.Connection connection24 = httpConnection0.data(strMap22);
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.followRedirects = false;
        java.lang.String str31 = request25.cookie("");
        boolean boolean32 = request25.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request33.headers();
        request33.followRedirects = false;
        boolean boolean38 = request33.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection39 = request33.data();
        request25.data = keyValCollection39;
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = keyVal43.key("null=null");
        org.jsoup.helper.HttpConnection.Request request46 = request25.data((org.jsoup.Connection.KeyVal) keyVal45);
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = request47.headers();
        request47.followRedirects = false;
        boolean boolean52 = request47.ignoreHttpErrors;
        org.jsoup.Connection.Method method53 = request47.method();
        int int54 = request47.maxBodySizeBytes;
        org.jsoup.Connection.Method method55 = request47.method();
        org.jsoup.Connection.Request request56 = request25.method(method55);
        org.jsoup.Connection connection57 = httpConnection0.request((org.jsoup.Connection.Request) request25);
        request25.ignoreContentType = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1048576 + "'", int54 == 1048576);
        org.junit.Assert.assertTrue("'" + method55 + "' != '" + org.jsoup.Connection.Method.GET + "'", method55.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean3 = request0.hasHeader("null=null");
        org.jsoup.Connection.Request request6 = request0.cookie("null=null=null=hi!", "hi!=");
        java.net.URL uRL7 = request0.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        response1.statusCode = 10;
        int int10 = response1.numRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response1.scanHeaders("null=");
        java.nio.ByteBuffer byteBuffer18 = response1.byteData;
        boolean boolean19 = response1.executed;
        java.nio.ByteBuffer byteBuffer20 = null;
        response1.byteData = byteBuffer20;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.followRedirects = false;
        java.lang.String str10 = request0.header("null=null=null=hi!");
        int int11 = request0.timeoutMilliseconds;
        org.jsoup.Connection.Request request14 = request0.header("null=null", "");
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request0.headers();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3000 + "'", int11 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.parser.Parser parser7 = null;
        org.jsoup.Connection connection8 = httpConnection0.parser(parser7);
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = request9.headers();
        request9.followRedirects = false;
        boolean boolean14 = request9.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request9.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.Connection connection18 = httpConnection0.maxBodySize((int) ' ');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        org.jsoup.Connection connection7 = httpConnection4.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        httpConnection4.res = response9;
        httpConnection0.res = response9;
        org.jsoup.Connection connection14 = httpConnection0.header("hi!", "");
        java.net.URL uRL15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection16 = httpConnection0.url(uRL15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.Connection connection32 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection35 = httpConnection0.data("null=null=null=hi!=hi!", "hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection connection5 = httpConnection0.response(response4);
        org.jsoup.helper.HttpConnection.Response response6 = null;
        org.jsoup.helper.HttpConnection.Response response7 = new org.jsoup.helper.HttpConnection.Response(response6);
        int int8 = response7.statusCode();
        int int9 = response7.numRedirects;
        java.lang.String str10 = response7.charset;
        java.lang.String str11 = response7.statusMessage;
        java.util.Map<java.lang.String, java.lang.String> strMap12 = response7.headers();
        org.jsoup.Connection connection13 = httpConnection0.cookies(strMap12);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection15 = httpConnection0.timeout((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeUrl("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null=hi!" + "'", str1.equals("null=null=hi!"));
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.ignoreContentType(false);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection9 = httpConnection0.header("", "hi!=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!=null", "hi!=null");
        java.lang.String str3 = keyVal2.key;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!=null" + "'", str3.equals("hi!=null"));
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        org.jsoup.Connection.Request request7 = response1.req;
        response1.statusMessage = "hi!=null";
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response1);
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        response11.statusMessage = "hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        response1.charset = "hi!=null";
        org.jsoup.Connection.Response response6 = response1.removeHeader("hi!=");
        java.lang.String str7 = response1.contentType();
        boolean boolean9 = response1.hasCookie("hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection.Request request5 = httpConnection0.request();
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        request6.maxBodySizeBytes = (-1);
        org.jsoup.Connection.Request request11 = request6.header("null=null=null=hi!", "null=hi!");
        httpConnection0.req = request6;
        org.jsoup.Connection connection14 = httpConnection0.userAgent("");
        org.jsoup.helper.HttpConnection.Response response15 = null;
        org.jsoup.helper.HttpConnection.Response response16 = new org.jsoup.helper.HttpConnection.Response(response15);
        java.lang.String str17 = response16.contentType();
        java.net.URL uRL18 = response16.url();
        httpConnection0.res = response16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL18);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.Connection connection7 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection10 = httpConnection0.cookie("null=null", "null=null=null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Response response13 = httpConnection0.res;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response13);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response1);
        org.jsoup.Connection.Response response10 = response1.removeHeader("null=hi!");
        java.lang.String str12 = response1.getHeaderCaseInsensitive("null=");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry14 = response1.scanHeaders("null=null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry14);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request0.followRedirects();
        org.jsoup.Connection.Request request10 = request0.removeHeader("null=null=null=hi!");
        org.jsoup.Connection.Request request12 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request14 = request0.ignoreContentType(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.Connection.Request request8 = request0.cookie("null=null=", "null=null=null=hi!=hi!");
        int int9 = request0.timeout();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3000 + "'", int9 == 3000);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.value("hi!=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal4.key("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        boolean boolean4 = request0.hasCookie("null=hi!");
        request0.timeoutMilliseconds = (byte) -1;
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str8 = keyVal7.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal7.value("hi!");
        java.lang.String str11 = keyVal7.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = keyVal7.value("hi!");
        org.jsoup.helper.HttpConnection.Request request14 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        request0.maxBodySizeBytes = 0;
        org.jsoup.helper.HttpConnection httpConnection17 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response18 = httpConnection17.response();
        org.jsoup.Connection connection20 = httpConnection17.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response22 = httpConnection21.response();
        httpConnection17.res = response22;
        org.jsoup.parser.Parser parser24 = null;
        org.jsoup.Connection connection25 = httpConnection17.parser(parser24);
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.followRedirects = false;
        boolean boolean31 = request26.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection32 = request26.data();
        org.jsoup.Connection connection33 = httpConnection17.data(keyValCollection32);
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method35 = request34.method();
        boolean boolean36 = request34.followRedirects;
        org.jsoup.Connection.Request request38 = request34.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request34.headers();
        request34.timeoutMilliseconds = 307;
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request42.headers();
        request42.followRedirects = false;
        boolean boolean47 = request42.ignoreHttpErrors;
        org.jsoup.Connection.Method method48 = request42.method();
        int int49 = request42.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        boolean boolean52 = request50.followRedirects;
        org.jsoup.Connection.Request request54 = request50.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = request50.headers();
        boolean boolean56 = request50.ignoreContentType;
        boolean boolean57 = request50.followRedirects();
        org.jsoup.helper.HttpConnection.Request request58 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method59 = request58.method();
        org.jsoup.Connection.Request request60 = request50.method(method59);
        org.jsoup.Connection.Request request61 = request42.method(method59);
        org.jsoup.Connection.Request request62 = request34.method(method59);
        org.jsoup.Connection connection63 = httpConnection17.method(method59);
        org.jsoup.Connection.Request request64 = request0.method(method59);
        org.jsoup.Connection.Request request66 = request0.ignoreHttpErrors(false);
        int int67 = request0.timeoutMilliseconds;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1048576 + "'", int49 == 1048576);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.followRedirects();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry10 = request7.scanHeaders("");
        java.lang.String str12 = request7.cookie("null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal13.key = "hi!";
        java.lang.String str16 = keyVal13.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = keyVal13.key("hi!");
        java.lang.String str19 = keyVal13.value();
        keyVal13.key = "null=";
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = keyVal13.value("null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request24 = request7.data((org.jsoup.Connection.KeyVal) keyVal13);
        org.jsoup.helper.HttpConnection httpConnection25 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response26 = httpConnection25.response();
        org.jsoup.Connection connection28 = httpConnection25.followRedirects(false);
        org.jsoup.Connection connection30 = httpConnection25.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.followRedirects = false;
        boolean boolean36 = request31.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request38 = request31.timeout((int) ' ');
        boolean boolean39 = request38.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal42 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal42.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal50 = keyVal48.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal51 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal51.key = "hi!";
        java.lang.String str54 = keyVal51.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal56 = keyVal51.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal59 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal60 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal60.key = "hi!";
        java.lang.String str63 = keyVal60.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal64 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str65 = keyVal64.toString();
        keyVal64.value = "";
        keyVal64.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal70 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal70.key = "hi!";
        java.lang.String str73 = keyVal70.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal75 = keyVal70.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal76 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str77 = keyVal76.key();
        org.jsoup.Connection.KeyVal[] keyValArray78 = new org.jsoup.Connection.KeyVal[] { keyVal42, keyVal45, keyVal50, keyVal51, keyVal59, keyVal60, keyVal64, keyVal70, keyVal76 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList79 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList79, keyValArray78);
        request38.data = keyValList79;
        org.jsoup.Connection connection82 = httpConnection25.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList79);
        request7.data = keyValList79;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "hi!" + "'", str54.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "hi!" + "'", str63.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "null=null" + "'", str65.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "hi!" + "'", str73.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection82);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.Connection connection21 = httpConnection0.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.lang.String str30 = request24.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request33 = request24.method(method32);
        org.jsoup.Connection.Request request34 = request22.method(method32);
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str36 = keyVal35.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal38 = keyVal35.value("");
        java.lang.String str39 = keyVal35.value();
        org.jsoup.helper.HttpConnection.Request request40 = request22.data((org.jsoup.Connection.KeyVal) keyVal35);
        int int41 = request40.timeout();
        request40.maxBodySizeBytes = 3000;
        httpConnection0.req = request40;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null=null" + "'", str36.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "" + "'", str39.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3000 + "'", int41 == 3000);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser8 = request0.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        boolean boolean11 = request0.followRedirects();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        keyVal0.value = "null=null=null=hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection.Response response5 = httpConnection0.response();
        org.jsoup.Connection connection7 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Request request8 = httpConnection0.request();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection connection6 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request8 = null;
        org.jsoup.Connection connection9 = httpConnection7.request(request8);
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection.Request request12 = httpConnection10.request();
        org.jsoup.Connection connection13 = httpConnection7.request(request12);
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection16 = httpConnection14.followRedirects(false);
        org.jsoup.Connection connection18 = httpConnection14.referrer("");
        org.jsoup.Connection.Response response19 = httpConnection14.response();
        org.jsoup.Connection connection20 = httpConnection7.response(response19);
        org.jsoup.Connection connection22 = httpConnection7.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        boolean boolean25 = request23.ignoreHttpErrors();
        org.jsoup.Connection.Request request28 = request23.cookie("hi!", "");
        java.lang.String str30 = request23.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        boolean boolean33 = request31.followRedirects;
        org.jsoup.Connection.Request request35 = request31.followRedirects(true);
        java.lang.String str37 = request31.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request38 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method39 = request38.method();
        org.jsoup.Connection.Request request40 = request31.method(method39);
        org.jsoup.Connection.Request request41 = request23.method(method39);
        org.jsoup.Connection connection42 = httpConnection7.method(method39);
        org.jsoup.Connection connection43 = httpConnection0.method(method39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + method39 + "' != '" + org.jsoup.Connection.Method.GET + "'", method39.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        org.jsoup.Connection.Request request10 = request0.removeCookie("null=hi!");
        boolean boolean11 = request0.followRedirects();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = request0.hasHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        java.lang.String str8 = response1.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=null=null=hi!" + "'", str8.equals("null=null=null=hi!"));
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.lang.String str19 = request13.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        org.jsoup.Connection.Request request22 = request13.method(method21);
        org.jsoup.Connection.Request request23 = request11.method(method21);
        org.jsoup.helper.HttpConnection.KeyVal keyVal24 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str25 = keyVal24.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = keyVal24.value("");
        java.lang.String str28 = keyVal24.value();
        org.jsoup.helper.HttpConnection.Request request29 = request11.data((org.jsoup.Connection.KeyVal) keyVal24);
        int int30 = request29.timeout();
        response10.req = request29;
        httpConnection0.res = response10;
        org.jsoup.Connection.Method method33 = response10.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null=null" + "'", str25.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3000 + "'", int30 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method33);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.Connection connection7 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection10 = httpConnection0.cookie("null=null", "null=null=null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Request request13 = httpConnection0.req;
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        org.jsoup.Connection connection17 = httpConnection14.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection18 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response19 = httpConnection18.response();
        httpConnection14.res = response19;
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request21.headers();
        org.jsoup.Connection connection23 = httpConnection14.request((org.jsoup.Connection.Request) request21);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry25 = request21.scanHeaders("null=null");
        org.jsoup.Connection connection26 = httpConnection0.request((org.jsoup.Connection.Request) request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.jsoup.helper.HttpConnection.HTTP_TEMP_REDIR = (byte) 100;
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.parser.Parser parser4 = null;
        request0.parser = parser4;
        int int6 = request0.timeoutMilliseconds;
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request0.headers();
        java.lang.String str9 = request0.cookie("null=null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3000 + "'", int6 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.lang.String str3 = response1.contentType();
        response1.numRedirects = 1;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document6 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        java.net.URL uRL15 = request0.url();
        org.jsoup.Connection.Request request17 = request0.removeCookie("");
        int int18 = request0.timeout();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3000 + "'", int18 == 3000);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "null=null");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("hi!=");
        org.jsoup.Connection.Request request14 = request0.cookie("null=hi!", "hi!=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.Connection.Request request9 = request0.removeHeader("null=null=null=hi!=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        java.lang.String str8 = response1.statusMessage;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        boolean boolean6 = request0.hasHeader("hi!=null");
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        request7.followRedirects = false;
        boolean boolean12 = request7.ignoreHttpErrors;
        org.jsoup.Connection.Method method13 = request7.method();
        int int14 = request7.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        boolean boolean17 = request15.followRedirects;
        org.jsoup.Connection.Request request19 = request15.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request15.headers();
        boolean boolean21 = request15.ignoreContentType;
        boolean boolean22 = request15.followRedirects();
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        org.jsoup.Connection.Request request25 = request15.method(method24);
        org.jsoup.Connection.Request request26 = request7.method(method24);
        org.jsoup.Connection.Request request27 = request0.method(method24);
        org.jsoup.helper.HttpConnection.Response response28 = null;
        org.jsoup.helper.HttpConnection.Response response29 = new org.jsoup.helper.HttpConnection.Response(response28);
        int int30 = response29.statusCode();
        int int31 = response29.numRedirects;
        java.lang.String str32 = response29.charset;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response33 = org.jsoup.helper.HttpConnection.Response.execute(request27, response29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1048576 + "'", int14 == 1048576);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        java.lang.String str7 = request0.cookie("null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.cookies();
        int int9 = request0.maxBodySize();
        org.jsoup.Connection.Request request12 = request0.header("hi!", "null=null=null=hi!=hi!");
        boolean boolean13 = request0.ignoreHttpErrors();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1048576 + "'", int9 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request0.scanHeaders("null=null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.contentType = "null=hi!";
        java.lang.String str6 = response1.statusMessage;
        response1.executed = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.maxBodySize((int) (short) 1);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request6 = null;
        org.jsoup.Connection connection7 = httpConnection5.request(request6);
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        org.jsoup.Connection.Request request10 = httpConnection8.request();
        org.jsoup.Connection connection11 = httpConnection5.request(request10);
        org.jsoup.Connection connection14 = httpConnection5.cookie("null=null", "null=null");
        org.jsoup.Connection connection16 = httpConnection5.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.cookies();
        org.jsoup.Connection connection23 = httpConnection5.data(strMap22);
        org.jsoup.Connection connection24 = httpConnection0.data(strMap22);
        org.jsoup.Connection connection26 = httpConnection0.referrer("null=null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        org.jsoup.Connection.Request request16 = request0.removeCookie("");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection17 = request0.data();
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection17, outputStream18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection17);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("hi!");
        boolean boolean11 = request0.hasHeader("null=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        org.jsoup.Connection.Response response8 = response1.header("null=null=hi!", "null=null=hi!");
        java.nio.ByteBuffer byteBuffer9 = response1.byteData;
        response1.charset = "null=null=";
        response1.statusMessage = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer9);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        java.lang.String str3 = response1.contentType();
        boolean boolean5 = response1.hasCookie("null=null=hi!");
        boolean boolean6 = response1.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser5 = request0.parser;
        org.jsoup.Connection.Request request7 = request0.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.headers();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry10 = request0.scanHeaders("null=hi!");
        int int11 = request0.timeout();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3000 + "'", int11 == 3000);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean13 = request0.followRedirects;
        boolean boolean14 = request0.ignoreContentType();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry16 = request0.scanHeaders("hi!=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry16);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        java.lang.String str9 = response8.contentType();
        java.lang.String str10 = response8.contentType();
        int int11 = response8.statusCode();
        httpConnection0.res = response8;
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request13.headers();
        boolean boolean19 = request13.ignoreContentType;
        request13.ignoreHttpErrors = true;
        java.net.URL uRL22 = request13.url();
        org.jsoup.Connection.Request request24 = request13.ignoreContentType(false);
        org.jsoup.Connection.Request request26 = request13.ignoreContentType(false);
        httpConnection0.req = request13;
        org.jsoup.Connection connection30 = httpConnection0.cookie("hi!=null", "null=");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.followRedirects = false;
        boolean boolean36 = request31.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request38 = request31.timeout((int) ' ');
        boolean boolean39 = request38.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection40 = request38.data;
        org.jsoup.Connection connection41 = httpConnection0.data(keyValCollection40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        org.jsoup.Connection.Response response7 = response1.removeCookie("hi!");
        int int8 = response1.numRedirects;
        java.lang.String str10 = response1.cookie("hi!");
        java.lang.String str12 = response1.header("hi!=");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.statusMessage();
        response1.contentType = "null=";
        java.lang.String str5 = response1.contentType;
        java.nio.ByteBuffer byteBuffer6 = null;
        response1.byteData = byteBuffer6;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null=" + "'", str5.equals("null="));
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request17.cookies();
        httpConnection0.req = request17;
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request22.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request22.headers();
        org.jsoup.Connection connection27 = httpConnection0.data(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request9 = request0.timeout((int) (byte) 0);
        org.jsoup.parser.Parser parser10 = request9.parser;
        java.net.URL uRL11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request12 = request9.url(uRL11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser10);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.maxBodySize((int) (short) 1);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request6 = null;
        org.jsoup.Connection connection7 = httpConnection5.request(request6);
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        org.jsoup.Connection.Request request10 = httpConnection8.request();
        org.jsoup.Connection connection11 = httpConnection5.request(request10);
        org.jsoup.Connection connection14 = httpConnection5.cookie("null=null", "null=null");
        org.jsoup.Connection connection16 = httpConnection5.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.cookies();
        org.jsoup.Connection connection23 = httpConnection5.data(strMap22);
        org.jsoup.Connection connection24 = httpConnection0.data(strMap22);
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.followRedirects = false;
        java.lang.String str31 = request25.cookie("");
        boolean boolean32 = request25.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request33.headers();
        request33.followRedirects = false;
        boolean boolean38 = request33.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection39 = request33.data();
        request25.data = keyValCollection39;
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = keyVal43.key("null=null");
        org.jsoup.helper.HttpConnection.Request request46 = request25.data((org.jsoup.Connection.KeyVal) keyVal45);
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = request47.headers();
        request47.followRedirects = false;
        boolean boolean52 = request47.ignoreHttpErrors;
        org.jsoup.Connection.Method method53 = request47.method();
        int int54 = request47.maxBodySizeBytes;
        org.jsoup.Connection.Method method55 = request47.method();
        org.jsoup.Connection.Request request56 = request25.method(method55);
        org.jsoup.Connection connection57 = httpConnection0.request((org.jsoup.Connection.Request) request25);
        org.jsoup.helper.HttpConnection.Response response58 = null;
        org.jsoup.helper.HttpConnection.Response response59 = new org.jsoup.helper.HttpConnection.Response(response58);
        int int60 = response59.statusCode();
        int int61 = response59.numRedirects;
        java.lang.String str62 = response59.charset;
        boolean boolean63 = response59.executed;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response64 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request25, response59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1048576 + "'", int54 == 1048576);
        org.junit.Assert.assertTrue("'" + method55 + "' != '" + org.jsoup.Connection.Method.GET + "'", method55.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection19 = request0.data;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection19);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection13 = httpConnection0.referrer("null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        org.jsoup.Connection.Request request16 = httpConnection14.request();
        org.jsoup.Connection.Request request17 = httpConnection14.req;
        org.jsoup.Connection.Request request18 = httpConnection14.request();
        org.jsoup.Connection.Response response19 = httpConnection14.res;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.followRedirects = false;
        boolean boolean25 = request20.ignoreHttpErrors;
        org.jsoup.Connection.Method method26 = request20.method();
        java.net.URL uRL27 = request20.url();
        boolean boolean28 = request20.followRedirects;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request20.headers();
        org.jsoup.Connection connection30 = httpConnection14.data(strMap29);
        org.jsoup.Connection connection31 = httpConnection0.data(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        boolean boolean10 = request7.ignoreContentType;
        org.jsoup.Connection.Request request12 = request7.removeHeader("null=null");
        int int13 = request7.maxBodySize();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1048576 + "'", int13 == 1048576);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        java.lang.String str12 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request7);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str6 = response1.contentType;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("hi!=");
        response1.statusMessage = "null=null";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        org.jsoup.Connection.Request request8 = response1.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request8);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.Connection.Request request11 = request7.ignoreContentType(true);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.headers();
        int int13 = request7.timeout();
        java.lang.String str15 = request7.header("hi!=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        java.lang.String str7 = request0.cookie("null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.cookies();
        int int9 = request0.maxBodySize();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.headers();
        boolean boolean11 = request0.followRedirects;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1048576 + "'", int9 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        org.jsoup.Connection.Request request30 = request27.method(method29);
        org.jsoup.Connection.Method method31 = request27.method();
        java.lang.String str33 = request27.header("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        java.lang.String str6 = response1.getHeaderCaseInsensitive("null=null");
        java.lang.String str7 = response1.statusMessage;
        java.util.Map<java.lang.String, java.lang.String> strMap8 = response1.headers();
        java.nio.ByteBuffer byteBuffer9 = response1.byteData;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = response1.scanHeaders("null=null=hi!");
        int int12 = response1.numRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = response1.cookies();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry46 = response1.scanHeaders("null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry46);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("hi!");
        java.lang.String str7 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.value("null=null");
        java.lang.String str10 = keyVal9.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal9.value("");
        keyVal9.value = "hi!";
        java.lang.String str15 = keyVal9.value();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null=null" + "'", str10.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        org.jsoup.Connection.Response response8 = response1.header("null=null=hi!", "null=null=hi!");
        response1.executed = false;
        int int11 = response1.statusCode();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = response1.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        int int8 = response1.statusCode;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.net.URL uRL4 = response1.url();
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        org.jsoup.helper.HttpConnection.Request request9 = request5.timeout(1048576);
        java.lang.String str11 = request5.getHeaderCaseInsensitive("hi!=null");
        response1.req = request5;
        response1.contentType = "hi!=";
        boolean boolean16 = response1.hasCookie("null=hi!");
        org.jsoup.Connection.Response response19 = response1.cookie("null=null=", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
    }
}

