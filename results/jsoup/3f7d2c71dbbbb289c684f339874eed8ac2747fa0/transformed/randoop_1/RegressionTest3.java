import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null=", "null=hi!=null=null");
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.net.URL uRL5 = request0.url();
        int int6 = request0.timeoutMilliseconds;
        org.jsoup.Connection.Request request9 = request0.header("null=null=hi!=null", "hi!=null=hi!=null");
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection connection13 = httpConnection10.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        httpConnection10.res = response15;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request17.headers();
        org.jsoup.Connection connection19 = httpConnection10.request((org.jsoup.Connection.Request) request17);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry21 = request17.scanHeaders("null=null");
        org.jsoup.Connection.Request request23 = request17.ignoreContentType(false);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection24 = request17.data;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        org.jsoup.Connection.Request request28 = request25.ignoreContentType(false);
        org.jsoup.Connection.Request request30 = request25.removeCookie("");
        int int31 = request25.maxBodySize();
        org.jsoup.Connection.Request request33 = request25.followRedirects(false);
        java.lang.String str35 = request25.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = request36.headers();
        request36.followRedirects = false;
        boolean boolean41 = request36.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request43 = request36.timeout((int) ' ');
        java.lang.String str45 = request43.cookie("hi!");
        java.lang.String str47 = request43.header("null=null");
        request43.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = request50.headers();
        request50.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser55 = request50.parser;
        request43.parser = parser55;
        request25.parser = parser55;
        org.jsoup.helper.HttpConnection.Request request58 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method59 = request58.method();
        boolean boolean60 = request58.ignoreHttpErrors();
        org.jsoup.Connection.Request request63 = request58.cookie("hi!", "");
        boolean boolean64 = request58.ignoreContentType;
        org.jsoup.parser.Parser parser65 = request58.parser();
        request25.parser = parser65;
        request17.parser = parser65;
        request0.parser = parser65;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3000 + "'", int6 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1048576 + "'", int31 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser55);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser65);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.Connection connection13 = httpConnection0.ignoreContentType(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!=", "hi!=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal4.value("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.cookies();
        boolean boolean17 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal18.key = "hi!";
        java.lang.String str21 = keyVal18.key;
        org.jsoup.helper.HttpConnection.Request request22 = request0.data((org.jsoup.Connection.KeyVal) keyVal18);
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request23.headers();
        request23.followRedirects = false;
        boolean boolean28 = request23.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request30 = request23.timeout((int) ' ');
        java.lang.String str32 = request30.cookie("hi!");
        org.jsoup.Connection.Request request35 = request30.cookie("null=null", "null=null=null=hi!");
        boolean boolean37 = request30.hasCookie("null=null=null=hi!");
        org.jsoup.Connection.Request request39 = request30.ignoreHttpErrors(false);
        org.jsoup.Connection.Request request41 = request30.followRedirects(true);
        org.jsoup.Connection.Method method42 = request30.method();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection43 = request30.data;
        request0.data = keyValCollection43;
        org.jsoup.Connection.Request request46 = request0.removeHeader("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response1);
        org.jsoup.Connection.Response response11 = response8.header("hi!=null", "");
        java.lang.String str12 = response8.charset;
        boolean boolean13 = response8.executed;
        response8.charset = "null=null=hi!";
        response8.statusMessage = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        org.jsoup.Connection.Method method8 = request7.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        org.jsoup.Connection.Response response11 = response1.removeCookie("null=hi!");
        response1.contentType = "";
        java.lang.String str14 = response1.contentType;
        response1.numRedirects = '4';
        boolean boolean18 = response1.hasCookie("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.Connection.Request request9 = httpConnection0.request();
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection.Request request12 = httpConnection10.request();
        org.jsoup.Connection.Request request13 = httpConnection10.req;
        org.jsoup.Connection connection15 = httpConnection10.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.ignoreHttpErrors();
        org.jsoup.Connection.Request request21 = request16.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        request22.followRedirects = false;
        boolean boolean27 = request22.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request29 = request22.timeout((int) ' ');
        java.lang.String str31 = request29.cookie("hi!");
        java.lang.String str33 = request29.header("null=null");
        request29.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = request36.headers();
        request36.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser41 = request36.parser;
        request29.parser = parser41;
        org.jsoup.helper.HttpConnection.Request request43 = request16.parser(parser41);
        org.jsoup.Connection connection44 = httpConnection10.request((org.jsoup.Connection.Request) request43);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection45 = request43.data;
        org.jsoup.Connection connection46 = httpConnection0.data(keyValCollection45);
        org.jsoup.helper.HttpConnection httpConnection47 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response48 = httpConnection47.response();
        org.jsoup.Connection connection50 = httpConnection47.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection51 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response52 = httpConnection51.response();
        httpConnection47.res = response52;
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = request54.headers();
        org.jsoup.Connection connection56 = httpConnection47.request((org.jsoup.Connection.Request) request54);
        org.jsoup.Connection connection57 = httpConnection0.request((org.jsoup.Connection.Request) request54);
        org.jsoup.Connection connection60 = httpConnection0.cookie("hi!=null", "null=null=");
        org.jsoup.Connection connection62 = httpConnection0.ignoreHttpErrors(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        org.jsoup.Connection.Response response10 = response1.cookie("hi!=", "hi!");
        java.lang.String str11 = response1.charset;
        java.lang.String str12 = response1.charset;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray13 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection9 = httpConnection7.followRedirects(false);
        org.jsoup.Connection connection11 = httpConnection7.referrer("");
        org.jsoup.Connection.Response response12 = httpConnection7.response();
        org.jsoup.Connection connection13 = httpConnection0.response(response12);
        org.jsoup.Connection connection15 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.ignoreHttpErrors();
        org.jsoup.Connection.Request request21 = request16.cookie("hi!", "");
        java.lang.String str23 = request16.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.lang.String str30 = request24.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request33 = request24.method(method32);
        org.jsoup.Connection.Request request34 = request16.method(method32);
        org.jsoup.Connection connection35 = httpConnection0.method(method32);
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        boolean boolean38 = request36.followRedirects;
        org.jsoup.Connection.Request request40 = request36.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request36.headers();
        boolean boolean42 = request36.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method44 = request43.method();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = request43.headers();
        request43.followRedirects = false;
        boolean boolean48 = request43.ignoreHttpErrors;
        org.jsoup.Connection.Method method49 = request43.method();
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        boolean boolean52 = request50.followRedirects;
        org.jsoup.Connection.Request request54 = request50.followRedirects(true);
        java.lang.String str56 = request50.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method58 = request57.method();
        org.jsoup.Connection.Request request59 = request50.method(method58);
        org.jsoup.Connection.Request request60 = request43.method(method58);
        org.jsoup.Connection.Request request61 = request36.method(method58);
        boolean boolean63 = request36.hasHeader("null=null=");
        org.jsoup.Connection connection64 = httpConnection0.request((org.jsoup.Connection.Request) request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + method58 + "' != '" + org.jsoup.Connection.Method.GET + "'", method58.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection64);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean7 = request0.ignoreContentType();
        java.lang.String str9 = request0.header("hi!=null");
        org.jsoup.Connection.Request request12 = request0.cookie("null=null=null=hi!", "null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request0.headers();
        org.jsoup.Connection.Method method14 = request0.method();
        java.lang.String str16 = request0.cookie("null=null=hi!=null");
        org.jsoup.helper.HttpConnection.Request request18 = request0.timeout(52);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("hi!");
        java.lang.String str7 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.value("null=null");
        java.lang.String str10 = keyVal9.value();
        keyVal9.key = "null=null";
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal9.value("null=null=");
        java.lang.String str15 = keyVal14.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = keyVal14.value("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null=null" + "'", str10.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "null=null" + "'", str15.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal17);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Request request2 = request0.removeHeader("null=hi!=null=null");
        org.jsoup.Connection.Request request4 = request0.maxBodySize(10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!=", "null=null=null=hi!=hi!");
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(1048576);
        org.jsoup.helper.HttpConnection.Request request6 = request0.timeout((int) '#');
        int int7 = request6.timeoutMilliseconds;
        request6.followRedirects = false;
        org.jsoup.Connection.Request request11 = request6.removeHeader("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection.Request request5 = httpConnection0.request();
        org.jsoup.Connection connection7 = httpConnection0.referrer("null=hi!");
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request9 = null;
        org.jsoup.Connection connection10 = httpConnection8.request(request9);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        org.jsoup.Connection.Request request13 = httpConnection11.request();
        org.jsoup.Connection connection14 = httpConnection8.request(request13);
        org.jsoup.helper.HttpConnection httpConnection15 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection17 = httpConnection15.followRedirects(false);
        org.jsoup.Connection connection19 = httpConnection15.referrer("");
        org.jsoup.Connection.Response response20 = httpConnection15.response();
        org.jsoup.Connection connection21 = httpConnection8.response(response20);
        org.jsoup.Connection connection23 = httpConnection8.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.ignoreHttpErrors();
        org.jsoup.Connection.Request request29 = request24.cookie("hi!", "");
        java.lang.String str31 = request24.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        boolean boolean34 = request32.followRedirects;
        org.jsoup.Connection.Request request36 = request32.followRedirects(true);
        java.lang.String str38 = request32.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request32.method(method40);
        org.jsoup.Connection.Request request42 = request24.method(method40);
        org.jsoup.Connection connection43 = httpConnection8.method(method40);
        org.jsoup.Connection connection45 = httpConnection8.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection46 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response47 = httpConnection46.response();
        org.jsoup.Connection connection49 = httpConnection46.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection50 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response51 = httpConnection50.response();
        httpConnection46.res = response51;
        java.lang.String[] strArray55 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection56 = httpConnection46.data(strArray55);
        org.jsoup.Connection connection57 = httpConnection8.data(strArray55);
        org.jsoup.Connection connection58 = httpConnection0.data(strArray55);
        org.jsoup.Connection connection60 = httpConnection0.ignoreHttpErrors(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean6 = request0.hasCookie("null=null");
        java.lang.String str8 = request0.getHeaderCaseInsensitive("null=hi!");
        java.lang.String str10 = request0.header("");
        java.lang.String str11 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        java.lang.String str13 = request0.header("");
        request0.timeoutMilliseconds = 97;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean9 = request3.hasCookie("null=null");
        java.lang.String str11 = request3.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.request((org.jsoup.Connection.Request) request3);
        org.jsoup.Connection connection14 = httpConnection0.maxBodySize(0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        boolean boolean4 = response1.hasCookie("");
        boolean boolean6 = response1.hasCookie("null=");
        int int7 = response1.statusCode;
        java.lang.String str8 = response1.charset();
        java.nio.ByteBuffer byteBuffer9 = null;
        response1.byteData = byteBuffer9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        boolean boolean37 = request35.followRedirects;
        org.jsoup.Connection.Request request39 = request35.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = request35.headers();
        boolean boolean41 = request35.ignoreContentType;
        request35.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request35.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = request35.cookies();
        java.lang.String str47 = request35.getHeaderCaseInsensitive("null=null");
        java.lang.String str49 = request35.cookie("hi!");
        boolean boolean51 = request35.hasCookie("null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap52 = request35.headers();
        org.jsoup.Connection connection53 = httpConnection0.data(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        org.jsoup.Connection.Response response7 = response1.removeCookie("hi!");
        int int8 = response1.numRedirects;
        java.lang.String str9 = response1.charset;
        java.nio.ByteBuffer byteBuffer10 = response1.byteData;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer10);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str6 = response1.contentType;
        response1.statusCode = ' ';
        response1.numRedirects = 32;
        java.lang.String str11 = response1.contentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        java.lang.String str22 = response1.charset();
        java.lang.String str23 = response1.statusMessage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response17 = httpConnection16.response();
        org.jsoup.Connection connection19 = httpConnection16.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection23 = httpConnection20.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request24.headers();
        int int27 = request24.timeout();
        org.jsoup.parser.Parser parser28 = request24.parser();
        org.jsoup.Connection connection29 = httpConnection20.parser(parser28);
        org.jsoup.Connection connection30 = httpConnection16.parser(parser28);
        request15.parser = parser28;
        org.jsoup.parser.Parser parser32 = request15.parser;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3000 + "'", int27 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser32);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection connection5 = httpConnection0.response(response4);
        org.jsoup.helper.HttpConnection.Response response6 = null;
        org.jsoup.helper.HttpConnection.Response response7 = new org.jsoup.helper.HttpConnection.Response(response6);
        int int8 = response7.statusCode();
        int int9 = response7.numRedirects;
        java.lang.String str10 = response7.charset;
        java.lang.String str11 = response7.statusMessage;
        java.util.Map<java.lang.String, java.lang.String> strMap12 = response7.headers();
        org.jsoup.Connection connection13 = httpConnection0.cookies(strMap12);
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request14.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request14.headers();
        java.lang.String str19 = request14.getHeaderCaseInsensitive("null=hi!");
        boolean boolean21 = request14.hasCookie("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal24 = org.jsoup.helper.HttpConnection.KeyVal.create("null=hi!", "null=hi!");
        org.jsoup.helper.HttpConnection.Request request25 = request14.data((org.jsoup.Connection.KeyVal) keyVal24);
        org.jsoup.Connection connection26 = httpConnection0.request((org.jsoup.Connection.Request) request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection30 = httpConnection27.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection31 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection34 = httpConnection31.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = request35.headers();
        int int38 = request35.timeout();
        org.jsoup.parser.Parser parser39 = request35.parser();
        org.jsoup.Connection connection40 = httpConnection31.parser(parser39);
        org.jsoup.Connection connection41 = httpConnection27.parser(parser39);
        org.jsoup.Connection connection42 = httpConnection0.parser(parser39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3000 + "'", int38 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        response1.charset = "null=null";
        java.net.URL uRL9 = response1.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection9 = httpConnection0.header("hi!", "");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.Connection.Method method23 = request17.method();
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.lang.String str30 = request24.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request33 = request24.method(method32);
        org.jsoup.Connection.Request request34 = request17.method(method32);
        org.jsoup.Connection.Request request35 = request10.method(method32);
        org.jsoup.Connection.Request request37 = request10.removeHeader("hi!=null");
        httpConnection0.req = request10;
        org.jsoup.parser.Parser parser39 = request10.parser;
        java.lang.String str41 = request10.getHeaderCaseInsensitive("hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        request0.parser = parser30;
        int int33 = request0.timeoutMilliseconds;
        org.jsoup.Connection.Request request36 = request0.cookie("null=null=null=hi!", "hi!=null");
        int int37 = request0.maxBodySizeBytes;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3000 + "'", int33 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1048576 + "'", int37 == 1048576);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.followRedirects;
        org.jsoup.Connection.Request request16 = request12.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request12.cookies();
        org.jsoup.Connection connection18 = httpConnection0.data(strMap17);
        org.jsoup.Connection connection21 = httpConnection0.data("null=hi!", "hi!=null=hi!=null");
        org.jsoup.Connection.Request request22 = httpConnection0.req;
        org.jsoup.Connection connection24 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection httpConnection25 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request26 = null;
        org.jsoup.Connection connection27 = httpConnection25.request(request26);
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response29 = httpConnection28.response();
        org.jsoup.Connection.Request request30 = httpConnection28.request();
        org.jsoup.Connection connection31 = httpConnection25.request(request30);
        org.jsoup.Connection connection33 = httpConnection25.ignoreContentType(true);
        org.jsoup.Connection connection36 = httpConnection25.cookie("hi!=null", "null=null");
        org.jsoup.Connection connection38 = httpConnection25.referrer("null=");
        org.jsoup.helper.HttpConnection httpConnection39 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request40 = null;
        org.jsoup.Connection connection41 = httpConnection39.request(request40);
        org.jsoup.helper.HttpConnection httpConnection42 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response43 = httpConnection42.response();
        org.jsoup.Connection.Request request44 = httpConnection42.request();
        org.jsoup.Connection connection45 = httpConnection39.request(request44);
        org.jsoup.helper.HttpConnection httpConnection46 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection48 = httpConnection46.followRedirects(false);
        org.jsoup.Connection connection50 = httpConnection46.referrer("");
        org.jsoup.Connection.Response response51 = httpConnection46.response();
        org.jsoup.Connection connection52 = httpConnection39.response(response51);
        org.jsoup.Connection connection54 = httpConnection39.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request55 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method56 = request55.method();
        boolean boolean57 = request55.ignoreHttpErrors();
        org.jsoup.Connection.Request request60 = request55.cookie("hi!", "");
        java.lang.String str62 = request55.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method64 = request63.method();
        boolean boolean65 = request63.followRedirects;
        org.jsoup.Connection.Request request67 = request63.followRedirects(true);
        java.lang.String str69 = request63.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request70 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method71 = request70.method();
        org.jsoup.Connection.Request request72 = request63.method(method71);
        org.jsoup.Connection.Request request73 = request55.method(method71);
        org.jsoup.Connection connection74 = httpConnection39.method(method71);
        org.jsoup.Connection connection76 = httpConnection39.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection77 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response78 = httpConnection77.response();
        org.jsoup.Connection connection80 = httpConnection77.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection81 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response82 = httpConnection81.response();
        httpConnection77.res = response82;
        java.lang.String[] strArray86 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection87 = httpConnection77.data(strArray86);
        org.jsoup.Connection connection88 = httpConnection39.data(strArray86);
        org.jsoup.Connection connection89 = httpConnection25.data(strArray86);
        org.jsoup.Connection connection90 = httpConnection0.data(strArray86);
        org.jsoup.Connection connection92 = httpConnection0.ignoreHttpErrors(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
        org.junit.Assert.assertTrue("'" + method56 + "' != '" + org.jsoup.Connection.Method.GET + "'", method56.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + method64 + "' != '" + org.jsoup.Connection.Method.GET + "'", method64.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + method71 + "' != '" + org.jsoup.Connection.Method.GET + "'", method71.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection92);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        boolean boolean5 = response1.executed;
        response1.executed = true;
        response1.contentType = "hi!=";
        java.lang.String str11 = response1.cookie("null=");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.ignoreHttpErrors();
        org.jsoup.Connection.Request request17 = request12.cookie("hi!", "");
        boolean boolean18 = request12.ignoreContentType;
        org.jsoup.Connection.Request request21 = request12.cookie("null=hi!", "hi!");
        response1.req = request12;
        int int23 = response1.numRedirects;
        java.lang.String str24 = response1.statusMessage;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.Connection.Response response4 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        boolean boolean9 = request7.followRedirects;
        org.jsoup.Connection.Request request11 = request7.followRedirects(true);
        java.lang.String str13 = request7.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        org.jsoup.Connection.Request request16 = request7.method(method15);
        org.jsoup.Connection.Request request17 = request5.method(method15);
        org.jsoup.parser.Parser parser18 = request5.parser;
        org.jsoup.Connection connection19 = httpConnection0.parser(parser18);
        org.jsoup.helper.HttpConnection.Response response20 = null;
        org.jsoup.helper.HttpConnection.Response response21 = new org.jsoup.helper.HttpConnection.Response(response20);
        int int22 = response21.statusCode();
        int int23 = response21.numRedirects;
        java.lang.String str24 = response21.charset;
        java.lang.String str25 = response21.charset;
        org.jsoup.Connection.Response response28 = response21.header("null=", "hi!");
        java.lang.String str30 = response21.cookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap31 = response21.cookies();
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.followRedirects = false;
        boolean boolean37 = request32.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request39 = request32.timeout((int) ' ');
        boolean boolean40 = request39.ignoreHttpErrors;
        org.jsoup.Connection.Method method41 = request39.method();
        org.jsoup.Connection.Response response42 = response21.method(method41);
        java.lang.String str44 = response21.getHeaderCaseInsensitive("null=null=");
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method46 = request45.method();
        boolean boolean47 = request45.ignoreHttpErrors();
        org.jsoup.Connection.Request request50 = request45.cookie("hi!", "");
        java.lang.String str52 = request45.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request53 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method54 = request53.method();
        boolean boolean55 = request53.followRedirects;
        org.jsoup.Connection.Request request57 = request53.followRedirects(true);
        java.lang.String str59 = request53.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request60 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method61 = request60.method();
        org.jsoup.Connection.Request request62 = request53.method(method61);
        org.jsoup.Connection.Request request63 = request45.method(method61);
        org.jsoup.Connection.Response response64 = response21.method(method61);
        org.jsoup.Connection connection65 = httpConnection0.method(method61);
        org.jsoup.Connection connection67 = httpConnection0.ignoreContentType(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + method54 + "' != '" + org.jsoup.Connection.Method.GET + "'", method54.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + method61 + "' != '" + org.jsoup.Connection.Method.GET + "'", method61.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        response1.numRedirects = (byte) 10;
        java.util.Map<java.lang.String, java.lang.String> strMap5 = response1.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection35 = request33.data;
        org.jsoup.Connection.Request request38 = request33.cookie("null=hi!", "null=null=hi!");
        org.jsoup.Connection.Request request40 = request33.followRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection6 = httpConnection0.cookie("null=null=null=hi!", "hi!=");
        org.jsoup.Connection connection8 = httpConnection0.maxBodySize(1048576);
        org.jsoup.Connection connection10 = httpConnection0.timeout(0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        request0.timeoutMilliseconds = 20;
        org.jsoup.helper.HttpConnection.Request request4 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method5 = request4.method();
        boolean boolean6 = request4.followRedirects;
        org.jsoup.Connection.Request request8 = request4.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request4.headers();
        boolean boolean10 = request4.ignoreContentType;
        boolean boolean11 = request4.followRedirects();
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        org.jsoup.Connection.Request request14 = request4.method(method13);
        org.jsoup.Connection.Request request15 = request0.method(method13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.parser.Parser parser13 = request0.parser;
        org.jsoup.Connection.Request request15 = request0.removeHeader("null=null=hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request18 = request0.header("", "null=null=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection6 = httpConnection0.header("null=null=null=hi!", "");
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null=hi!", "null=hi!");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request10.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str15 = keyVal14.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = keyVal14.value("hi!");
        java.lang.String str18 = keyVal14.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = keyVal14.value("hi!");
        java.lang.String str21 = keyVal14.key();
        org.jsoup.helper.HttpConnection.Request request22 = request10.data((org.jsoup.Connection.KeyVal) keyVal14);
        java.net.URL uRL23 = request22.url();
        org.jsoup.Connection connection24 = httpConnection0.request((org.jsoup.Connection.Request) request22);
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        boolean boolean27 = request25.ignoreHttpErrors();
        org.jsoup.Connection.Request request30 = request25.cookie("hi!", "");
        boolean boolean31 = request25.ignoreContentType;
        org.jsoup.Connection.Request request34 = request25.cookie("null=hi!", "hi!");
        java.lang.String str36 = request25.getHeaderCaseInsensitive("");
        java.lang.String str38 = request25.cookie("");
        request25.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request25.cookies();
        org.jsoup.Connection connection42 = httpConnection0.cookies(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.lang.String str8 = response1.cookie("");
        java.lang.String str10 = response1.getHeaderCaseInsensitive("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        java.lang.String str22 = response1.statusMessage;
        int int23 = response1.numRedirects;
        java.nio.ByteBuffer byteBuffer24 = null;
        response1.byteData = byteBuffer24;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document26 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection httpConnection6 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response7 = httpConnection6.response();
        org.jsoup.Connection.Request request8 = httpConnection6.request();
        org.jsoup.Connection connection10 = httpConnection6.ignoreContentType(true);
        org.jsoup.Connection.Request request11 = httpConnection6.request();
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        org.jsoup.Connection.Method method15 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request12.cookies();
        org.jsoup.Connection connection17 = httpConnection6.cookies(strMap16);
        org.jsoup.helper.HttpConnection httpConnection18 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response19 = httpConnection18.response();
        org.jsoup.Connection.Request request20 = httpConnection18.request();
        org.jsoup.Connection connection22 = httpConnection18.ignoreContentType(true);
        org.jsoup.Connection.Request request23 = httpConnection18.request();
        org.jsoup.Connection connection25 = httpConnection18.referrer("null=hi!");
        org.jsoup.helper.HttpConnection httpConnection26 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request27 = null;
        org.jsoup.Connection connection28 = httpConnection26.request(request27);
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        org.jsoup.Connection.Request request31 = httpConnection29.request();
        org.jsoup.Connection connection32 = httpConnection26.request(request31);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection35 = httpConnection33.followRedirects(false);
        org.jsoup.Connection connection37 = httpConnection33.referrer("");
        org.jsoup.Connection.Response response38 = httpConnection33.response();
        org.jsoup.Connection connection39 = httpConnection26.response(response38);
        org.jsoup.Connection connection41 = httpConnection26.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        boolean boolean44 = request42.ignoreHttpErrors();
        org.jsoup.Connection.Request request47 = request42.cookie("hi!", "");
        java.lang.String str49 = request42.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        boolean boolean52 = request50.followRedirects;
        org.jsoup.Connection.Request request54 = request50.followRedirects(true);
        java.lang.String str56 = request50.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method58 = request57.method();
        org.jsoup.Connection.Request request59 = request50.method(method58);
        org.jsoup.Connection.Request request60 = request42.method(method58);
        org.jsoup.Connection connection61 = httpConnection26.method(method58);
        org.jsoup.Connection connection63 = httpConnection26.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection64 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response65 = httpConnection64.response();
        org.jsoup.Connection connection67 = httpConnection64.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection68 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response69 = httpConnection68.response();
        httpConnection64.res = response69;
        java.lang.String[] strArray73 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection74 = httpConnection64.data(strArray73);
        org.jsoup.Connection connection75 = httpConnection26.data(strArray73);
        org.jsoup.Connection connection76 = httpConnection18.data(strArray73);
        org.jsoup.Connection connection77 = httpConnection6.data(strArray73);
        org.jsoup.Connection connection78 = httpConnection0.data(strArray73);
        org.jsoup.helper.HttpConnection.Response response79 = null;
        org.jsoup.helper.HttpConnection.Response response80 = new org.jsoup.helper.HttpConnection.Response(response79);
        int int81 = response80.statusCode();
        int int82 = response80.numRedirects;
        java.lang.String str83 = response80.charset;
        java.net.URL uRL84 = response80.url();
        response80.charset = "hi!=null";
        java.lang.String str87 = response80.statusMessage;
        org.jsoup.Connection.Response response89 = response80.removeHeader("null=");
        java.lang.String str91 = response80.getHeaderCaseInsensitive("hi!");
        int int92 = response80.numRedirects;
        org.jsoup.Connection connection93 = httpConnection0.response((org.jsoup.Connection.Response) response80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + method58 + "' != '" + org.jsoup.Connection.Method.GET + "'", method58.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection93);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        response1.statusMessage = "null=";
        java.lang.String str7 = response1.statusMessage;
        int int8 = response1.statusCode;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=" + "'", str7.equals("null="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=hi!");
        int int8 = request0.maxBodySize();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection9 = request0.data;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1048576 + "'", int8 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection9);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.Connection connection32 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection34 = httpConnection0.ignoreContentType(true);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document35 = httpConnection0.post();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("null=null=hi!");
        java.lang.String str6 = keyVal0.value;
        keyVal0.value = "null=null=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        request6.maxBodySizeBytes = 0;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.statusMessage();
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.Connection.Method method9 = request3.method();
        int int10 = request3.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        boolean boolean18 = request11.followRedirects();
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        org.jsoup.Connection.Request request21 = request11.method(method20);
        org.jsoup.Connection.Request request22 = request3.method(method20);
        org.jsoup.Connection.Response response23 = response1.method(method20);
        java.nio.ByteBuffer byteBuffer24 = null;
        response1.byteData = byteBuffer24;
        org.jsoup.Connection.Response response27 = response1.removeHeader("null=");
        java.util.Map<java.lang.String, java.lang.String> strMap28 = response1.headers();
        org.jsoup.Connection.Response response30 = response1.removeCookie("null=hi!");
        boolean boolean31 = response1.executed;
        java.lang.String str32 = response1.contentType();
        int int33 = response1.statusCode;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry35 = response1.scanHeaders("hi!=null=hi!=null");
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        boolean boolean38 = request36.followRedirects;
        org.jsoup.Connection.Request request40 = request36.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request36.headers();
        boolean boolean42 = request36.ignoreContentType;
        boolean boolean43 = request36.followRedirects();
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method45 = request44.method();
        org.jsoup.Connection.Request request46 = request36.method(method45);
        boolean boolean47 = request36.followRedirects();
        response1.req = request36;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1048576 + "'", int10 == 1048576);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry35);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + method45 + "' != '" + org.jsoup.Connection.Method.GET + "'", method45.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("null=null");
        org.jsoup.Connection.Request request11 = request0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.ignoreHttpErrors();
        org.jsoup.Connection.Request request17 = request12.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.headers();
        request18.followRedirects = false;
        boolean boolean23 = request18.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request25 = request18.timeout((int) ' ');
        java.lang.String str27 = request25.cookie("hi!");
        java.lang.String str29 = request25.header("null=null");
        request25.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser37 = request32.parser;
        request25.parser = parser37;
        org.jsoup.helper.HttpConnection.Request request39 = request12.parser(parser37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        org.jsoup.Connection.Request request42 = request39.method(method41);
        org.jsoup.Connection.Request request43 = request0.method(method41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request0.cookies();
        org.jsoup.helper.HttpConnection.Request request46 = request0.timeout((int) (byte) 100);
        java.net.URL uRL47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request48 = request0.url(uRL47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response10 = httpConnection9.response();
        org.jsoup.Connection connection12 = httpConnection9.followRedirects(false);
        org.jsoup.Connection connection14 = httpConnection9.ignoreHttpErrors(true);
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request15.headers();
        request15.followRedirects = false;
        boolean boolean20 = request15.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request22 = request15.timeout((int) ' ');
        boolean boolean23 = request22.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal26 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal26.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal32 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal34 = keyVal32.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal35 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal35.key = "hi!";
        java.lang.String str38 = keyVal35.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal40 = keyVal35.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal43 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal44.key = "hi!";
        java.lang.String str47 = keyVal44.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal48 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str49 = keyVal48.toString();
        keyVal48.value = "";
        keyVal48.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal54 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal54.key = "hi!";
        java.lang.String str57 = keyVal54.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal59 = keyVal54.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal60 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str61 = keyVal60.key();
        org.jsoup.Connection.KeyVal[] keyValArray62 = new org.jsoup.Connection.KeyVal[] { keyVal26, keyVal29, keyVal34, keyVal35, keyVal43, keyVal44, keyVal48, keyVal54, keyVal60 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList63 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList63, keyValArray62);
        request22.data = keyValList63;
        org.jsoup.Connection connection66 = httpConnection9.data((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList63);
        request0.data = keyValList63;
        org.jsoup.helper.HttpConnection.Request request68 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method69 = request68.method();
        boolean boolean70 = request68.followRedirects;
        org.jsoup.Connection.Request request72 = request68.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = request68.cookies();
        boolean boolean75 = request68.hasCookie("");
        int int76 = request68.timeout();
        org.jsoup.Connection.Request request78 = request68.followRedirects(true);
        org.jsoup.parser.Parser parser79 = request68.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = request68.cookies();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection81 = request68.data();
        request0.data = keyValCollection81;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "hi!" + "'", str47.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null=null" + "'", str49.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "hi!" + "'", str57.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection66);
        org.junit.Assert.assertTrue("'" + method69 + "' != '" + org.jsoup.Connection.Method.GET + "'", method69.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 3000 + "'", int76 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection81);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.cookies();
        boolean boolean17 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str19 = keyVal18.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = keyVal18.value("hi!");
        java.lang.String str22 = keyVal21.toString();
        org.jsoup.helper.HttpConnection.Request request23 = request0.data((org.jsoup.Connection.KeyVal) keyVal21);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request25 = request23.removeHeader("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null=hi!" + "'", str22.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        request0.ignoreContentType = false;
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        request10.followRedirects = false;
        boolean boolean15 = request10.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request17 = request10.timeout((int) ' ');
        boolean boolean18 = request17.ignoreHttpErrors;
        org.jsoup.Connection.Method method19 = request17.method();
        org.jsoup.Connection.Request request20 = request0.method(method19);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection9 = httpConnection0.header("hi!", "");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.Connection.Method method23 = request17.method();
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.lang.String str30 = request24.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request33 = request24.method(method32);
        org.jsoup.Connection.Request request34 = request17.method(method32);
        org.jsoup.Connection.Request request35 = request10.method(method32);
        org.jsoup.Connection.Request request37 = request10.removeHeader("hi!=null");
        httpConnection0.req = request10;
        org.jsoup.helper.HttpConnection.Response response39 = null;
        org.jsoup.helper.HttpConnection.Response response40 = new org.jsoup.helper.HttpConnection.Response(response39);
        int int41 = response40.statusCode();
        int int42 = response40.numRedirects;
        java.lang.String str43 = response40.charset;
        response40.contentType = "null=null=null=hi!";
        response40.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = response40.headers();
        org.jsoup.helper.HttpConnection.Request request49 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method50 = request49.method();
        boolean boolean51 = request49.followRedirects;
        org.jsoup.Connection.Request request53 = request49.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = request49.headers();
        boolean boolean55 = request49.ignoreContentType;
        boolean boolean56 = request49.followRedirects();
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method58 = request57.method();
        org.jsoup.Connection.Request request59 = request49.method(method58);
        org.jsoup.Connection.Response response60 = response40.method(method58);
        int int61 = response40.numRedirects;
        org.jsoup.Connection.Response response63 = response40.removeCookie("null=null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap64 = response40.cookies();
        org.jsoup.Connection connection65 = httpConnection0.data(strMap64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + method50 + "' != '" + org.jsoup.Connection.Method.GET + "'", method50.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + method58 + "' != '" + org.jsoup.Connection.Method.GET + "'", method58.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection65);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request9 = request0.timeout((int) (byte) 0);
        java.lang.String str11 = request0.getHeaderCaseInsensitive("null=null");
        java.lang.String str13 = request0.header("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection0 = null;
        java.io.OutputStream outputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection0, outputStream1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection.Request request5 = httpConnection0.request();
        org.jsoup.Connection.Request request6 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("");
        int int8 = request0.timeout();
        org.jsoup.Connection.Request request10 = request0.followRedirects(true);
        org.jsoup.parser.Parser parser11 = request0.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request0.cookies();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection13 = request0.data();
        java.lang.String str15 = request0.header("null=null=null=hi!=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        keyVal18.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = keyVal18.value("null=null=hi!");
        java.lang.String str23 = keyVal22.key;
        org.jsoup.helper.HttpConnection.Request request24 = request0.data((org.jsoup.Connection.KeyVal) keyVal22);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3000 + "'", int8 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request10 = request3.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry12 = request3.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request3.headers();
        org.jsoup.Connection connection14 = httpConnection0.data(strMap13);
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request15.headers();
        request15.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser20 = request15.parser;
        org.jsoup.Connection.Request request22 = request15.removeCookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap23 = request15.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request15.cookies();
        org.jsoup.Connection connection25 = httpConnection0.data(strMap24);
        org.jsoup.Connection connection27 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        org.jsoup.helper.HttpConnection.Request request30 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method31 = request30.method();
        boolean boolean32 = request30.followRedirects;
        org.jsoup.Connection.Request request34 = request30.followRedirects(true);
        java.lang.String str36 = request30.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        org.jsoup.Connection.Request request39 = request30.method(method38);
        org.jsoup.Connection.Request request40 = request28.method(method38);
        org.jsoup.parser.Parser parser41 = request28.parser;
        org.jsoup.Connection connection42 = httpConnection0.parser(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        org.jsoup.Connection.Response response11 = response1.removeCookie("null=hi!");
        response1.contentType = "";
        java.nio.ByteBuffer byteBuffer14 = null;
        response1.byteData = byteBuffer14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection9 = httpConnection0.header("hi!", "");
        org.jsoup.Connection.Request request10 = httpConnection0.req;
        org.jsoup.Connection connection12 = httpConnection0.timeout((int) (short) 10);
        org.jsoup.Connection connection14 = httpConnection0.followRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        org.jsoup.Connection.Response response7 = response1.removeCookie("hi!");
        int int8 = response1.numRedirects;
        java.lang.String str10 = response1.cookie("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap11 = response1.cookies();
        org.jsoup.Connection.Response response14 = response1.header("null=null=null=hi!", "");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry16 = response1.scanHeaders("");
        int int17 = response1.numRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        java.util.Map<java.lang.String, java.lang.String> strMap6 = response1.headers();
        boolean boolean8 = response1.hasHeader("null=null=hi!");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry10 = response1.scanHeaders("hi!=null=hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry10);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.lang.String str16 = response1.charset();
        java.net.URL uRL17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response18 = response1.url(uRL17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.toString();
        keyVal0.value = "null=null=null=hi!=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = keyVal0.value("hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null=hi!" + "'", str4.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal8);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request4 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method5 = request4.method();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request4.headers();
        request4.followRedirects = false;
        boolean boolean9 = request4.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request11 = request4.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry13 = request4.scanHeaders("null=null");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request4.headers();
        httpConnection0.req = request4;
        org.jsoup.Connection.Method method16 = request4.method();
        org.jsoup.Connection.Request request18 = request4.removeHeader("null=");
        java.lang.String str20 = request4.header("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.Connection connection19 = httpConnection0.header("null=null", "hi!");
        org.jsoup.Connection connection21 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection connection24 = httpConnection0.header("null=", "null=null=");
        org.jsoup.Connection connection26 = httpConnection0.referrer("null=hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.lang.String str3 = response1.contentType();
        response1.contentType = "null=null=null=hi!=hi!";
        java.util.Map<java.lang.String, java.lang.String> strMap6 = response1.cookies();
        java.lang.String str7 = response1.charset;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request3.headers();
        org.jsoup.Connection.Method method7 = request3.method();
        org.jsoup.Connection connection8 = httpConnection0.method(method7);
        org.jsoup.Connection connection10 = httpConnection0.userAgent("null=hi!=null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        java.lang.String str7 = request0.cookie("null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.headers();
        java.lang.String str11 = request0.cookie("null=null=hi!");
        java.lang.String str13 = request0.getHeaderCaseInsensitive("null=");
        boolean boolean14 = request0.followRedirects();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        int int10 = response1.numRedirects;
        org.jsoup.Connection.Method method11 = response1.method();
        java.lang.String str12 = response1.contentType;
        response1.numRedirects = (byte) 10;
        response1.statusMessage = "";
        java.lang.String str17 = response1.contentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        org.jsoup.Connection.Response response11 = response1.removeCookie("null=hi!");
        java.nio.ByteBuffer byteBuffer12 = null;
        response1.byteData = byteBuffer12;
        org.jsoup.Connection.Response response15 = response1.removeHeader("null=null=null=hi!=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.followRedirects;
        org.jsoup.Connection.Request request16 = request12.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request12.cookies();
        org.jsoup.Connection connection18 = httpConnection0.data(strMap17);
        org.jsoup.Connection connection21 = httpConnection0.data("null=hi!", "hi!=null=hi!=null");
        org.jsoup.Connection.Request request22 = httpConnection0.req;
        org.jsoup.Connection connection24 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection httpConnection25 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request26 = null;
        org.jsoup.Connection connection27 = httpConnection25.request(request26);
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response29 = httpConnection28.response();
        org.jsoup.Connection.Request request30 = httpConnection28.request();
        org.jsoup.Connection connection31 = httpConnection25.request(request30);
        org.jsoup.Connection connection33 = httpConnection25.ignoreContentType(true);
        org.jsoup.Connection connection36 = httpConnection25.cookie("hi!=null", "null=null");
        org.jsoup.Connection connection38 = httpConnection25.referrer("null=");
        org.jsoup.helper.HttpConnection httpConnection39 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request40 = null;
        org.jsoup.Connection connection41 = httpConnection39.request(request40);
        org.jsoup.helper.HttpConnection httpConnection42 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response43 = httpConnection42.response();
        org.jsoup.Connection.Request request44 = httpConnection42.request();
        org.jsoup.Connection connection45 = httpConnection39.request(request44);
        org.jsoup.helper.HttpConnection httpConnection46 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection48 = httpConnection46.followRedirects(false);
        org.jsoup.Connection connection50 = httpConnection46.referrer("");
        org.jsoup.Connection.Response response51 = httpConnection46.response();
        org.jsoup.Connection connection52 = httpConnection39.response(response51);
        org.jsoup.Connection connection54 = httpConnection39.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request55 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method56 = request55.method();
        boolean boolean57 = request55.ignoreHttpErrors();
        org.jsoup.Connection.Request request60 = request55.cookie("hi!", "");
        java.lang.String str62 = request55.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method64 = request63.method();
        boolean boolean65 = request63.followRedirects;
        org.jsoup.Connection.Request request67 = request63.followRedirects(true);
        java.lang.String str69 = request63.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request70 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method71 = request70.method();
        org.jsoup.Connection.Request request72 = request63.method(method71);
        org.jsoup.Connection.Request request73 = request55.method(method71);
        org.jsoup.Connection connection74 = httpConnection39.method(method71);
        org.jsoup.Connection connection76 = httpConnection39.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection77 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response78 = httpConnection77.response();
        org.jsoup.Connection connection80 = httpConnection77.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection81 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response82 = httpConnection81.response();
        httpConnection77.res = response82;
        java.lang.String[] strArray86 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection87 = httpConnection77.data(strArray86);
        org.jsoup.Connection connection88 = httpConnection39.data(strArray86);
        org.jsoup.Connection connection89 = httpConnection25.data(strArray86);
        org.jsoup.Connection connection90 = httpConnection0.data(strArray86);
        org.jsoup.Connection connection92 = httpConnection0.referrer("null=null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
        org.junit.Assert.assertTrue("'" + method56 + "' != '" + org.jsoup.Connection.Method.GET + "'", method56.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + method64 + "' != '" + org.jsoup.Connection.Method.GET + "'", method64.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + method71 + "' != '" + org.jsoup.Connection.Method.GET + "'", method71.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection92);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.Connection.Request request7 = httpConnection5.request();
        org.jsoup.Connection.Request request8 = httpConnection5.req;
        org.jsoup.Connection.Request request9 = httpConnection5.request();
        org.jsoup.Connection.Response response10 = httpConnection5.res;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.lang.String str19 = request13.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        org.jsoup.Connection.Request request22 = request13.method(method21);
        org.jsoup.Connection.Request request23 = request11.method(method21);
        boolean boolean25 = request11.hasHeader("hi!");
        org.jsoup.Connection.Request request27 = request11.removeCookie("");
        httpConnection5.req = request27;
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request30 = null;
        org.jsoup.Connection connection31 = httpConnection29.request(request30);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response33 = httpConnection32.response();
        org.jsoup.Connection connection34 = httpConnection29.response(response33);
        httpConnection5.res = response33;
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        boolean boolean38 = request36.ignoreHttpErrors();
        org.jsoup.Connection.Request request41 = request36.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request42.headers();
        request42.followRedirects = false;
        boolean boolean47 = request42.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request49 = request42.timeout((int) ' ');
        java.lang.String str51 = request49.cookie("hi!");
        java.lang.String str53 = request49.header("null=null");
        request49.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method57 = request56.method();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = request56.headers();
        request56.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser61 = request56.parser;
        request49.parser = parser61;
        org.jsoup.helper.HttpConnection.Request request63 = request36.parser(parser61);
        org.jsoup.helper.HttpConnection.Request request64 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method65 = request64.method();
        org.jsoup.Connection.Request request66 = request63.method(method65);
        org.jsoup.Connection connection67 = httpConnection5.method(method65);
        org.jsoup.Connection.Request request68 = request4.method(method65);
        boolean boolean69 = request4.followRedirects();
        org.jsoup.helper.HttpConnection.Request request70 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method71 = request70.method();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = request70.headers();
        request70.followRedirects = false;
        boolean boolean75 = request70.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request77 = request70.timeout((int) ' ');
        boolean boolean78 = request77.followRedirects();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry80 = request77.scanHeaders("");
        java.lang.String str82 = request77.cookie("null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal83 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal83.key = "hi!";
        java.lang.String str86 = keyVal83.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal88 = keyVal83.key("hi!");
        java.lang.String str89 = keyVal83.value();
        keyVal83.key = "null=";
        org.jsoup.helper.HttpConnection.KeyVal keyVal93 = keyVal83.value("null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request94 = request77.data((org.jsoup.Connection.KeyVal) keyVal83);
        org.jsoup.helper.HttpConnection.Request request95 = request4.data((org.jsoup.Connection.KeyVal) keyVal83);
        org.jsoup.Connection.Request request98 = request4.header("null=null=null=hi!=hi!", "null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + method57 + "' != '" + org.jsoup.Connection.Method.GET + "'", method57.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertTrue("'" + method65 + "' != '" + org.jsoup.Connection.Method.GET + "'", method65.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + method71 + "' != '" + org.jsoup.Connection.Method.GET + "'", method71.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "hi!" + "'", str86.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request98);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.followRedirects = false;
        boolean boolean13 = request8.ignoreHttpErrors;
        org.jsoup.Connection.Method method14 = request8.method();
        int int15 = request8.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.followRedirects;
        org.jsoup.Connection.Request request20 = request16.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request16.headers();
        boolean boolean22 = request16.ignoreContentType;
        boolean boolean23 = request16.followRedirects();
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        org.jsoup.Connection.Request request26 = request16.method(method25);
        org.jsoup.Connection.Request request27 = request8.method(method25);
        org.jsoup.Connection.Request request28 = request0.method(method25);
        boolean boolean30 = request0.hasHeader("null=null=null=hi!=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1048576 + "'", int15 == 1048576);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        boolean boolean7 = request5.ignoreHttpErrors();
        org.jsoup.Connection.Request request10 = request5.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        org.jsoup.helper.HttpConnection.Request request32 = request5.parser(parser30);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        org.jsoup.Connection.Request request35 = request32.method(method34);
        org.jsoup.Connection.Request request36 = request0.method(method34);
        boolean boolean37 = request0.ignoreHttpErrors();
        java.lang.String str39 = request0.header("hi!=null");
        org.jsoup.Connection.Method method40 = request0.method();
        org.jsoup.Connection.Request request42 = request0.removeCookie("null=null=");
        org.jsoup.Connection.Request request44 = request0.ignoreHttpErrors(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.Connection connection7 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection11 = httpConnection8.data("hi!", "hi!");
        org.jsoup.Connection.Response response12 = httpConnection8.res;
        org.jsoup.Connection connection13 = httpConnection0.response(response12);
        java.lang.Class<?> wildcardClass14 = httpConnection0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        java.lang.String str9 = response8.contentType();
        java.lang.String str10 = response8.contentType();
        int int11 = response8.statusCode();
        httpConnection0.res = response8;
        org.jsoup.Connection.Response response15 = response8.header("hi!=", "null=null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("", "null=hi!=");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.net.URL uRL9 = request0.url();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request0.scanHeaders("hi!");
        java.lang.String str12 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        request0.ignoreContentType = true;
        org.jsoup.Connection.Request request17 = request0.cookie("null=hi!", "null=null=null=hi!");
        boolean boolean19 = request0.hasHeader("null=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.lang.String str4 = response1.cookie("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.parser.Parser parser6 = request0.parser;
        java.lang.String str8 = request0.cookie("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser8 = request0.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        org.jsoup.Connection.Request request11 = request0.followRedirects(false);
        boolean boolean12 = request0.followRedirects();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        org.jsoup.Connection.Response response8 = response1.header("null=null=hi!", "null=null=hi!");
        java.nio.ByteBuffer byteBuffer9 = null;
        response1.byteData = byteBuffer9;
        java.lang.String str11 = response1.contentType;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document12 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        request7.followRedirects = false;
        boolean boolean12 = request7.ignoreHttpErrors;
        org.jsoup.Connection.Method method13 = request7.method();
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        boolean boolean16 = request14.followRedirects;
        org.jsoup.Connection.Request request18 = request14.followRedirects(true);
        java.lang.String str20 = request14.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        org.jsoup.Connection.Request request23 = request14.method(method22);
        org.jsoup.Connection.Request request24 = request7.method(method22);
        org.jsoup.Connection.Request request25 = request0.method(method22);
        java.lang.String str27 = request0.cookie("null=null");
        boolean boolean29 = request0.hasCookie("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        java.net.URL uRL15 = request0.url();
        org.jsoup.Connection.Request request17 = request0.removeCookie("");
        boolean boolean18 = request0.ignoreHttpErrors;
        request0.maxBodySizeBytes = 32;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        org.jsoup.Connection.Request request8 = request0.maxBodySize((int) (byte) 0);
        org.jsoup.Connection.Request request10 = request0.removeCookie("hi!");
        org.jsoup.Connection.Request request12 = request0.ignoreContentType(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        boolean boolean9 = request0.hasHeader("null=hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=null");
        org.jsoup.Connection.Request request13 = request0.ignoreContentType(false);
        request0.timeoutMilliseconds = (short) 0;
        org.jsoup.parser.Parser parser16 = request0.parser;
        org.jsoup.helper.HttpConnection httpConnection17 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request18 = null;
        org.jsoup.Connection connection19 = httpConnection17.request(request18);
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response21 = httpConnection20.response();
        org.jsoup.Connection.Request request22 = httpConnection20.request();
        org.jsoup.Connection connection23 = httpConnection17.request(request22);
        org.jsoup.Connection.Request request24 = httpConnection17.req;
        org.jsoup.Connection connection26 = httpConnection17.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method28 = request27.method();
        boolean boolean29 = request27.followRedirects;
        org.jsoup.Connection.Request request31 = request27.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = request27.headers();
        boolean boolean33 = request27.ignoreContentType;
        request27.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request27.cookies();
        httpConnection17.req = request27;
        boolean boolean39 = request27.hasCookie("null=null=null=hi!");
        org.jsoup.Connection.Request request42 = request27.header("null=null=hi!", "null=hi!");
        org.jsoup.Connection.Method method43 = request27.method();
        org.jsoup.Connection.Request request44 = request0.method(method43);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        org.junit.Assert.assertTrue("'" + method28 + "' != '" + org.jsoup.Connection.Method.GET + "'", method28.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        boolean boolean9 = request7.followRedirects;
        org.jsoup.Connection.Request request11 = request7.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.headers();
        org.jsoup.Connection connection13 = httpConnection0.data(strMap12);
        org.jsoup.Connection connection15 = httpConnection0.ignoreHttpErrors(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection9 = httpConnection0.header("hi!", "");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.Connection.Method method23 = request17.method();
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.lang.String str30 = request24.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        org.jsoup.Connection.Request request33 = request24.method(method32);
        org.jsoup.Connection.Request request34 = request17.method(method32);
        org.jsoup.Connection.Request request35 = request10.method(method32);
        org.jsoup.Connection.Request request37 = request10.removeHeader("hi!=null");
        httpConnection0.req = request10;
        boolean boolean40 = request10.hasHeader("null=hi!");
        java.lang.String str42 = request10.cookie("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap43 = request10.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = request0.headers();
        java.net.URL uRL5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request6 = request0.url(uRL5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        org.jsoup.Connection.Method method3 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = request0.cookies();
        java.lang.String str6 = request0.cookie("null=null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response29 = httpConnection28.response();
        org.jsoup.Connection connection31 = httpConnection28.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection35 = httpConnection32.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = request36.headers();
        int int39 = request36.timeout();
        org.jsoup.parser.Parser parser40 = request36.parser();
        org.jsoup.Connection connection41 = httpConnection32.parser(parser40);
        org.jsoup.Connection connection42 = httpConnection28.parser(parser40);
        request27.parser = parser40;
        org.jsoup.parser.Parser parser44 = request27.parser;
        int int45 = request27.timeout();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3000 + "'", int39 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3000 + "'", int45 == 3000);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("");
        int int8 = request0.timeout();
        org.jsoup.Connection.Request request10 = request0.followRedirects(true);
        org.jsoup.Connection.Method method11 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3000 + "'", int8 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request0.followRedirects();
        org.jsoup.Connection.Request request10 = request0.removeHeader("null=null=null=hi!");
        boolean boolean11 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request13 = request0.followRedirects(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        keyVal3.value = "";
        keyVal3.value = "hi!";
        java.lang.String str8 = keyVal3.toString();
        java.lang.String str9 = keyVal3.key();
        java.lang.String str10 = keyVal3.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=hi!" + "'", str8.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        int int10 = request0.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request12 = request0.timeout(0);
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request13.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request22 = request13.data((org.jsoup.Connection.KeyVal) keyVal21);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection23 = request13.data();
        request12.data = keyValCollection23;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1048576 + "'", int10 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection23);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean3 = request0.hasHeader("null=null");
        request0.ignoreContentType = true;
        int int6 = request0.maxBodySize();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal7.key = "hi!";
        java.lang.String str10 = keyVal7.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal7.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal12.key("null=hi!");
        java.lang.String str15 = keyVal12.value;
        java.lang.String str16 = keyVal12.key();
        org.jsoup.helper.HttpConnection.Request request17 = request0.data((org.jsoup.Connection.KeyVal) keyVal12);
        java.net.URL uRL18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request19 = request17.url(uRL18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null=hi!" + "'", str16.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        java.lang.String str7 = request0.header("");
        request0.followRedirects = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal11.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = keyVal17.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal20.key = "hi!";
        java.lang.String str23 = keyVal20.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = keyVal20.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal29.key = "hi!";
        java.lang.String str32 = keyVal29.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str34 = keyVal33.toString();
        keyVal33.value = "";
        keyVal33.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal39.key = "hi!";
        java.lang.String str42 = keyVal39.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = keyVal39.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str46 = keyVal45.key();
        org.jsoup.Connection.KeyVal[] keyValArray47 = new org.jsoup.Connection.KeyVal[] { keyVal11, keyVal14, keyVal19, keyVal20, keyVal28, keyVal29, keyVal33, keyVal39, keyVal45 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList48 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList48, keyValArray47);
        request7.data = keyValList48;
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = request51.headers();
        request51.followRedirects = false;
        java.lang.String str57 = request51.cookie("");
        boolean boolean58 = request51.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method60 = request59.method();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = request59.headers();
        request59.followRedirects = false;
        boolean boolean64 = request59.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection65 = request59.data();
        request51.data = keyValCollection65;
        request7.data = keyValCollection65;
        org.jsoup.Connection.Request request69 = request7.removeHeader("hi!=null");
        org.jsoup.Connection.Method method70 = request7.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null=null" + "'", str34.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "hi!" + "'", str42.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request69);
        org.junit.Assert.assertTrue("'" + method70 + "' != '" + org.jsoup.Connection.Method.GET + "'", method70.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        org.jsoup.Connection.Response response8 = response1.header("null=null=hi!", "null=null=hi!");
        java.nio.ByteBuffer byteBuffer9 = null;
        response1.byteData = byteBuffer9;
        java.lang.String str11 = response1.contentType;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry13 = response1.scanHeaders("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry13);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection6 = request0.data();
        boolean boolean7 = request0.ignoreHttpErrors;
        request0.ignoreContentType = true;
        boolean boolean10 = request0.ignoreHttpErrors;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        java.lang.String str8 = response1.statusMessage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response1.scanHeaders("null=");
        java.nio.ByteBuffer byteBuffer18 = response1.byteData;
        boolean boolean19 = response1.executed;
        boolean boolean20 = response1.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        response1.statusCode = 10;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        java.net.URL uRL11 = response1.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL11);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.charset;
        org.jsoup.Connection.Response response8 = response1.header("null=", "hi!");
        java.lang.String str10 = response1.cookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap11 = response1.cookies();
        response1.statusCode = 1048576;
        boolean boolean14 = response1.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.Connection.Request request44 = response1.req;
        response1.statusCode = (byte) 10;
        java.util.Map<java.lang.String, java.lang.String> strMap47 = response1.headers();
        response1.executed = true;
        int int50 = response1.statusCode;
        response1.executed = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.net.URL uRL4 = response1.url();
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        org.jsoup.helper.HttpConnection.Request request9 = request5.timeout(1048576);
        java.lang.String str11 = request5.getHeaderCaseInsensitive("hi!=null");
        response1.req = request5;
        response1.contentType = "hi!=";
        boolean boolean16 = response1.hasCookie("null=hi!");
        java.nio.ByteBuffer byteBuffer17 = response1.byteData;
        java.lang.String str18 = response1.statusMessage();
        boolean boolean20 = response1.hasCookie("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean13 = request0.followRedirects;
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        org.jsoup.Connection connection17 = httpConnection14.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection18 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection21 = httpConnection18.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        int int25 = request22.timeout();
        org.jsoup.parser.Parser parser26 = request22.parser();
        org.jsoup.Connection connection27 = httpConnection18.parser(parser26);
        org.jsoup.Connection connection28 = httpConnection14.parser(parser26);
        request0.parser = parser26;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3000 + "'", int25 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        java.lang.String str9 = response8.contentType();
        java.lang.String str10 = response8.contentType();
        int int11 = response8.statusCode();
        httpConnection0.res = response8;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document13 = httpConnection0.post();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        boolean boolean5 = response1.executed;
        org.jsoup.Connection.Request request6 = response1.req;
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        int int3 = request0.timeout();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = request0.cookies();
        java.lang.String str6 = request0.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        request7.followRedirects = false;
        boolean boolean12 = request7.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request14 = request7.timeout((int) ' ');
        boolean boolean15 = request14.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request14.headers();
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        int int20 = request17.timeout();
        org.jsoup.parser.Parser parser21 = request17.parser();
        org.jsoup.helper.HttpConnection.Request request22 = request14.parser(parser21);
        org.jsoup.helper.HttpConnection httpConnection23 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response24 = httpConnection23.response();
        org.jsoup.Connection connection26 = httpConnection23.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection30 = httpConnection27.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        int int34 = request31.timeout();
        org.jsoup.parser.Parser parser35 = request31.parser();
        org.jsoup.Connection connection36 = httpConnection27.parser(parser35);
        org.jsoup.Connection connection37 = httpConnection23.parser(parser35);
        request22.parser = parser35;
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        boolean boolean43 = request41.followRedirects;
        org.jsoup.Connection.Request request45 = request41.followRedirects(true);
        java.lang.String str47 = request41.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request48 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method49 = request48.method();
        org.jsoup.Connection.Request request50 = request41.method(method49);
        org.jsoup.Connection.Request request51 = request39.method(method49);
        org.jsoup.helper.HttpConnection.KeyVal keyVal52 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str53 = keyVal52.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal55 = keyVal52.value("");
        java.lang.String str56 = keyVal52.value();
        org.jsoup.helper.HttpConnection.Request request57 = request39.data((org.jsoup.Connection.KeyVal) keyVal52);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry59 = request57.scanHeaders("");
        org.jsoup.Connection.Method method60 = request57.method();
        org.jsoup.Connection.Request request61 = request22.method(method60);
        org.jsoup.Connection.Request request62 = request0.method(method60);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3000 + "'", int20 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 3000 + "'", int34 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null=null" + "'", str53.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry59);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.maxBodySize((int) (byte) 1);
        org.jsoup.Connection.Request request9 = httpConnection0.req;
        org.jsoup.Connection connection11 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection.Response response12 = httpConnection0.res;
        org.jsoup.Connection connection15 = httpConnection0.data("hi!=null", "null=null=null=hi!");
        org.jsoup.Connection.Request request16 = httpConnection0.request();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry20 = request18.scanHeaders("");
        org.jsoup.Connection.Method method21 = request18.method();
        boolean boolean22 = request18.ignoreContentType;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry20);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response29 = httpConnection28.response();
        org.jsoup.Connection connection31 = httpConnection28.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection35 = httpConnection32.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = request36.headers();
        int int39 = request36.timeout();
        org.jsoup.parser.Parser parser40 = request36.parser();
        org.jsoup.Connection connection41 = httpConnection32.parser(parser40);
        org.jsoup.Connection connection42 = httpConnection28.parser(parser40);
        request27.parser = parser40;
        org.jsoup.parser.Parser parser44 = request27.parser;
        request27.followRedirects = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3000 + "'", int39 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser44);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null=null=hi!=hi!", "hi!=");
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection6 = httpConnection0.header("null=null=null=hi!", "");
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null=hi!", "null=hi!");
        org.jsoup.Connection connection11 = httpConnection0.timeout((int) (byte) 1);
        org.jsoup.Connection connection13 = httpConnection0.maxBodySize(97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.contentType = "null=hi!";
        org.jsoup.Connection.Request request6 = response1.req;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = response1.scanHeaders("hi!=null");
        java.lang.String str9 = response1.charset;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.Connection connection19 = httpConnection0.header("null=null", "hi!");
        org.jsoup.Connection connection21 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection.Response response22 = httpConnection0.res;
        org.jsoup.Connection.Request request23 = httpConnection0.request();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.Connection connection6 = httpConnection0.data("null=null", "null=null");
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection9 = httpConnection7.followRedirects(false);
        org.jsoup.Connection connection11 = httpConnection7.referrer("");
        org.jsoup.Connection connection13 = httpConnection7.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        boolean boolean16 = request14.followRedirects;
        org.jsoup.Connection.Request request18 = request14.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request14.headers();
        org.jsoup.Connection connection20 = httpConnection7.data(strMap19);
        org.jsoup.Connection connection21 = httpConnection0.data(strMap19);
        org.jsoup.helper.HttpConnection.Response response22 = null;
        org.jsoup.helper.HttpConnection.Response response23 = new org.jsoup.helper.HttpConnection.Response(response22);
        int int24 = response23.statusCode();
        int int25 = response23.numRedirects;
        java.lang.String str26 = response23.charset;
        java.net.URL uRL27 = response23.url();
        response23.charset = "hi!=null";
        response23.statusMessage = "hi!=null";
        boolean boolean33 = response23.hasCookie("hi!=");
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method35 = request34.method();
        boolean boolean36 = request34.followRedirects;
        org.jsoup.Connection.Request request38 = request34.followRedirects(true);
        java.lang.String str40 = request34.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        org.jsoup.Connection.Request request43 = request34.method(method42);
        org.jsoup.Connection.Response response44 = response23.method(method42);
        org.jsoup.Connection connection45 = httpConnection0.method(method42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection23 = httpConnection21.followRedirects(false);
        org.jsoup.Connection connection25 = httpConnection21.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection26 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response27 = httpConnection26.response();
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response29 = httpConnection28.response();
        org.jsoup.Connection connection31 = httpConnection28.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response33 = httpConnection32.response();
        httpConnection28.res = response33;
        httpConnection26.res = response33;
        org.jsoup.Connection connection36 = httpConnection21.response(response33);
        httpConnection0.res = response33;
        org.jsoup.Connection connection40 = httpConnection0.data("null=null=null=hi!", "null=hi!");
        org.jsoup.Connection connection42 = httpConnection0.ignoreContentType(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request4 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method5 = request4.method();
        boolean boolean6 = request4.ignoreHttpErrors();
        org.jsoup.Connection.Request request9 = request4.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        request10.followRedirects = false;
        boolean boolean15 = request10.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request17 = request10.timeout((int) ' ');
        java.lang.String str19 = request17.cookie("hi!");
        java.lang.String str21 = request17.header("null=null");
        request17.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request24.headers();
        request24.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser29 = request24.parser;
        request17.parser = parser29;
        org.jsoup.helper.HttpConnection.Request request31 = request4.parser(parser29);
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        org.jsoup.Connection.Request request34 = request31.method(method33);
        org.jsoup.Connection connection35 = httpConnection0.method(method33);
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        boolean boolean38 = request36.followRedirects;
        org.jsoup.Connection.Request request40 = request36.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request36.headers();
        boolean boolean42 = request36.ignoreContentType;
        request36.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = request36.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = request36.cookies();
        java.lang.String str48 = request36.getHeaderCaseInsensitive("null=null");
        org.jsoup.parser.Parser parser49 = request36.parser;
        org.jsoup.Connection.Request request51 = request36.removeHeader("null=null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap52 = request36.headers();
        org.jsoup.Connection connection53 = httpConnection0.data(strMap52);
        org.jsoup.Connection connection56 = httpConnection0.cookie("null=null", "null=");
        org.jsoup.Connection connection58 = httpConnection0.userAgent("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection58);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        request6.ignoreHttpErrors = true;
        boolean boolean18 = request6.ignoreContentType();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request6.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "null=null=");
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        int int3 = response1.statusCode();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=null");
        org.jsoup.Connection.Request request13 = request7.ignoreContentType(false);
        org.jsoup.Connection.Request request15 = request7.removeHeader("null=null=null=hi!");
        java.net.URL uRL16 = request7.url();
        java.net.URL uRL17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request18 = request7.url(uRL17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL16);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.numRedirects = 0;
        response1.numRedirects = 307;
        boolean boolean9 = response1.executed;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response21 = httpConnection20.response();
        org.jsoup.Connection connection23 = httpConnection20.followRedirects(false);
        org.jsoup.Connection.Response response24 = httpConnection20.response();
        httpConnection0.res = response24;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request26.headers();
        org.jsoup.Connection.Method method30 = request26.method();
        org.jsoup.Connection connection31 = httpConnection0.method(method30);
        org.jsoup.Connection connection33 = httpConnection0.timeout((int) (byte) 0);
        org.jsoup.Connection.Request request34 = httpConnection0.request();
        org.jsoup.Connection connection37 = httpConnection0.data("null=", "null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        java.nio.ByteBuffer byteBuffer8 = null;
        response1.byteData = byteBuffer8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response22 = httpConnection21.response();
        org.jsoup.Connection.Request request23 = httpConnection21.request();
        org.jsoup.parser.Parser parser24 = null;
        org.jsoup.Connection connection25 = httpConnection21.parser(parser24);
        org.jsoup.Connection.Response response26 = httpConnection21.res;
        httpConnection0.res = response26;
        org.jsoup.Connection connection29 = httpConnection0.referrer("hi!");
        org.jsoup.helper.HttpConnection.Response response30 = null;
        org.jsoup.helper.HttpConnection.Response response31 = new org.jsoup.helper.HttpConnection.Response(response30);
        int int32 = response31.statusCode();
        int int33 = response31.numRedirects;
        java.net.URL uRL34 = response31.url();
        java.lang.String str35 = response31.statusMessage();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry37 = response31.scanHeaders("null=");
        httpConnection0.res = response31;
        response31.contentType = "null=null=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry37);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        java.lang.String str5 = request0.getHeaderCaseInsensitive("null=hi!");
        boolean boolean7 = request0.hasCookie("hi!");
        int int8 = request0.timeout();
        org.jsoup.Connection.Request request11 = request0.header("null=null=hi!", "null=");
        boolean boolean13 = request0.hasHeader("null=null=null=hi!=hi!");
        java.lang.String str15 = request0.getHeaderCaseInsensitive("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3000 + "'", int8 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str6 = response1.contentType;
        response1.statusCode = ' ';
        response1.statusCode = 10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        org.jsoup.Connection.Request request12 = request7.cookie("null=null", "null=null=null=hi!");
        boolean boolean14 = request7.hasCookie("null=null=null=hi!");
        int int15 = request7.timeoutMilliseconds;
        org.jsoup.Connection.Request request18 = request7.cookie("null=null=null=hi!=hi!", "hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection.Response response1 = null;
        org.jsoup.helper.HttpConnection.Response response2 = new org.jsoup.helper.HttpConnection.Response(response1);
        int int3 = response2.statusCode();
        int int4 = response2.numRedirects;
        response2.charset = "";
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        request7.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.ignoreHttpErrors();
        org.jsoup.Connection.Request request17 = request12.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.headers();
        request18.followRedirects = false;
        boolean boolean23 = request18.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request25 = request18.timeout((int) ' ');
        java.lang.String str27 = request25.cookie("hi!");
        java.lang.String str29 = request25.header("null=null");
        request25.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser37 = request32.parser;
        request25.parser = parser37;
        org.jsoup.helper.HttpConnection.Request request39 = request12.parser(parser37);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        org.jsoup.Connection.Request request42 = request39.method(method41);
        org.jsoup.Connection.Request request43 = request7.method(method41);
        org.jsoup.Connection.Response response44 = response2.method(method41);
        org.jsoup.Connection.Request request45 = request0.method(method41);
        request0.ignoreContentType = true;
        org.jsoup.helper.HttpConnection.Request request48 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method49 = request48.method();
        org.jsoup.Connection.Request request51 = request48.ignoreContentType(false);
        org.jsoup.Connection.Request request53 = request48.removeCookie("");
        int int54 = request48.maxBodySize();
        org.jsoup.Connection.Request request56 = request48.followRedirects(false);
        java.lang.String str58 = request48.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.Connection.Method method59 = request48.method();
        org.jsoup.Connection.Request request60 = request0.method(method59);
        org.jsoup.Connection.Request request63 = request0.cookie("null=null=hi!", "hi!=");
        org.jsoup.Connection.Request request65 = request0.ignoreHttpErrors(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1048576 + "'", int54 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request65);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.Connection.Request request9 = httpConnection0.request();
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection.Request request12 = httpConnection10.request();
        org.jsoup.parser.Parser parser13 = null;
        org.jsoup.Connection connection14 = httpConnection10.parser(parser13);
        org.jsoup.Connection.Response response15 = httpConnection10.res;
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response17 = httpConnection16.response();
        org.jsoup.Connection.Request request18 = httpConnection16.request();
        org.jsoup.parser.Parser parser19 = null;
        org.jsoup.Connection connection20 = httpConnection16.parser(parser19);
        org.jsoup.Connection.Response response21 = httpConnection16.res;
        org.jsoup.Connection connection22 = httpConnection10.response(response21);
        org.jsoup.Connection connection23 = httpConnection0.response(response21);
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response25 = httpConnection24.response();
        org.jsoup.Connection.Request request26 = httpConnection24.request();
        org.jsoup.Connection.Request request27 = httpConnection24.req;
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response29 = httpConnection28.response();
        org.jsoup.Connection connection31 = httpConnection28.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response33 = httpConnection32.response();
        httpConnection28.res = response33;
        org.jsoup.Connection connection36 = httpConnection28.userAgent("null=null");
        org.jsoup.Connection.Request request37 = httpConnection28.request();
        org.jsoup.helper.HttpConnection httpConnection38 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response39 = httpConnection38.response();
        org.jsoup.Connection.Request request40 = httpConnection38.request();
        org.jsoup.parser.Parser parser41 = null;
        org.jsoup.Connection connection42 = httpConnection38.parser(parser41);
        org.jsoup.Connection.Response response43 = httpConnection38.res;
        org.jsoup.helper.HttpConnection httpConnection44 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response45 = httpConnection44.response();
        org.jsoup.Connection.Request request46 = httpConnection44.request();
        org.jsoup.parser.Parser parser47 = null;
        org.jsoup.Connection connection48 = httpConnection44.parser(parser47);
        org.jsoup.Connection.Response response49 = httpConnection44.res;
        org.jsoup.Connection connection50 = httpConnection38.response(response49);
        org.jsoup.Connection connection51 = httpConnection28.response(response49);
        org.jsoup.helper.HttpConnection httpConnection52 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response53 = httpConnection52.response();
        httpConnection28.res = response53;
        org.jsoup.Connection connection55 = httpConnection24.response(response53);
        httpConnection0.res = response53;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document57 = httpConnection0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.maxBodySize((int) (byte) 1);
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection11 = httpConnection9.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean18 = request12.hasCookie("null=null");
        java.lang.String str20 = request12.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection21 = httpConnection9.request((org.jsoup.Connection.Request) request12);
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response23 = httpConnection22.response();
        httpConnection9.res = response23;
        org.jsoup.Connection.Response response25 = httpConnection9.response();
        org.jsoup.helper.HttpConnection.Response response26 = null;
        org.jsoup.helper.HttpConnection.Response response27 = new org.jsoup.helper.HttpConnection.Response(response26);
        int int28 = response27.statusCode();
        int int29 = response27.numRedirects;
        java.lang.String str30 = response27.charset;
        java.lang.String str31 = response27.charset;
        org.jsoup.Connection.Response response34 = response27.header("null=", "hi!");
        java.lang.String str36 = response27.cookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap37 = response27.cookies();
        response27.statusCode = 1048576;
        httpConnection9.res = response27;
        org.jsoup.helper.HttpConnection.Response response41 = null;
        org.jsoup.helper.HttpConnection.Response response42 = new org.jsoup.helper.HttpConnection.Response(response41);
        int int43 = response42.statusCode();
        int int44 = response42.numRedirects;
        java.lang.String str45 = response42.charset;
        java.lang.String str46 = response42.charset;
        org.jsoup.Connection.Response response49 = response42.header("null=", "hi!");
        java.lang.String str51 = response42.cookie("");
        java.util.Map<java.lang.String, java.lang.String> strMap52 = response42.cookies();
        org.jsoup.helper.HttpConnection.Request request53 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method54 = request53.method();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = request53.headers();
        request53.followRedirects = false;
        boolean boolean58 = request53.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request60 = request53.timeout((int) ' ');
        boolean boolean61 = request60.ignoreHttpErrors;
        org.jsoup.Connection.Method method62 = request60.method();
        org.jsoup.Connection.Response response63 = response42.method(method62);
        org.jsoup.Connection.Response response64 = response27.method(method62);
        httpConnection0.res = response64;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertTrue("'" + method54 + "' != '" + org.jsoup.Connection.Method.GET + "'", method54.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + method62 + "' != '" + org.jsoup.Connection.Method.GET + "'", method62.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response64);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=null");
        org.jsoup.Connection.Request request13 = request7.ignoreContentType(false);
        org.jsoup.Connection.Request request15 = request7.removeHeader("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request16.headers();
        request16.followRedirects = false;
        boolean boolean21 = request16.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request23 = request16.timeout((int) ' ');
        boolean boolean24 = request16.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection25 = request16.data();
        boolean boolean26 = request16.ignoreContentType;
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection.Request request29 = httpConnection27.request();
        org.jsoup.Connection.Request request30 = httpConnection27.req;
        org.jsoup.Connection.Request request31 = httpConnection27.request();
        org.jsoup.Connection.Response response32 = httpConnection27.res;
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        boolean boolean37 = request35.followRedirects;
        org.jsoup.Connection.Request request39 = request35.followRedirects(true);
        java.lang.String str41 = request35.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        org.jsoup.Connection.Request request44 = request35.method(method43);
        org.jsoup.Connection.Request request45 = request33.method(method43);
        boolean boolean47 = request33.hasHeader("hi!");
        org.jsoup.Connection.Request request49 = request33.removeCookie("");
        httpConnection27.req = request49;
        org.jsoup.helper.HttpConnection httpConnection51 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request52 = null;
        org.jsoup.Connection connection53 = httpConnection51.request(request52);
        org.jsoup.helper.HttpConnection httpConnection54 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response55 = httpConnection54.response();
        org.jsoup.Connection connection56 = httpConnection51.response(response55);
        httpConnection27.res = response55;
        org.jsoup.Connection connection59 = httpConnection27.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request60 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method61 = request60.method();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = request60.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = request60.headers();
        org.jsoup.Connection.Method method64 = request60.method();
        org.jsoup.Connection connection65 = httpConnection27.method(method64);
        org.jsoup.helper.HttpConnection.Request request66 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method67 = request66.method();
        boolean boolean68 = request66.followRedirects;
        org.jsoup.Connection.Request request70 = request66.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = request66.headers();
        boolean boolean72 = request66.ignoreContentType;
        request66.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap75 = request66.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = request66.cookies();
        java.lang.String str78 = request66.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request80 = request66.timeout(0);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection81 = request66.data();
        org.jsoup.Connection connection82 = httpConnection27.data(keyValCollection81);
        request16.data = keyValCollection81;
        request7.data = keyValCollection81;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response32);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection59);
        org.junit.Assert.assertTrue("'" + method61 + "' != '" + org.jsoup.Connection.Method.GET + "'", method61.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertTrue("'" + method64 + "' != '" + org.jsoup.Connection.Method.GET + "'", method64.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection65);
        org.junit.Assert.assertTrue("'" + method67 + "' != '" + org.jsoup.Connection.Method.GET + "'", method67.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection82);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.userAgent("null=hi!");
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        boolean boolean9 = request7.followRedirects;
        org.jsoup.Connection.Request request11 = request7.followRedirects(true);
        java.lang.String str13 = request7.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        org.jsoup.Connection.Request request16 = request7.method(method15);
        org.jsoup.Connection.Request request17 = request5.method(method15);
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str19 = keyVal18.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal21 = keyVal18.value("");
        java.lang.String str22 = keyVal18.value();
        org.jsoup.helper.HttpConnection.Request request23 = request5.data((org.jsoup.Connection.KeyVal) keyVal18);
        int int24 = request23.timeout();
        httpConnection0.req = request23;
        org.jsoup.Connection.Response response26 = httpConnection0.response();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null=null" + "'", str19.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3000 + "'", int24 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request0.cookies();
        request0.ignoreContentType = true;
        org.jsoup.Connection.Request request20 = request0.removeHeader("null=");
        java.lang.String str22 = request0.getHeaderCaseInsensitive("hi!=null");
        org.jsoup.Connection.Request request24 = request0.removeCookie("hi!=null");
        org.jsoup.Connection.Request request26 = request0.ignoreHttpErrors(false);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str6 = response1.statusMessage;
        java.nio.ByteBuffer byteBuffer7 = response1.byteData;
        org.jsoup.Connection.Request request8 = response1.req;
        java.lang.String str10 = response1.getHeaderCaseInsensitive("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.followRedirects(true);
        org.jsoup.Connection connection19 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection22 = httpConnection20.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request23.headers();
        request23.followRedirects = false;
        boolean boolean29 = request23.hasCookie("null=null");
        java.lang.String str31 = request23.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection32 = httpConnection20.request((org.jsoup.Connection.Request) request23);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response34 = httpConnection33.response();
        httpConnection20.res = response34;
        org.jsoup.Connection connection36 = httpConnection0.response(response34);
        org.jsoup.Connection connection38 = httpConnection0.timeout((int) (byte) 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        request7.ignoreHttpErrors = false;
        boolean boolean12 = request7.hasHeader("null=null=");
        java.net.URL uRL13 = request7.url();
        request7.followRedirects = true;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL13);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        boolean boolean11 = request0.ignoreContentType;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        boolean boolean22 = request20.followRedirects;
        org.jsoup.Connection.Request request24 = request20.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request20.headers();
        request20.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser28 = request20.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request20.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request20.cookies();
        org.jsoup.Connection connection31 = httpConnection0.cookies(strMap30);
        org.jsoup.helper.HttpConnection.Response response32 = null;
        org.jsoup.helper.HttpConnection.Response response33 = new org.jsoup.helper.HttpConnection.Response(response32);
        int int34 = response33.statusCode();
        response33.charset = "hi!=null";
        org.jsoup.Connection.Response response38 = response33.removeHeader("hi!=");
        java.lang.String str39 = response33.contentType();
        httpConnection0.res = response33;
        org.jsoup.Connection.Response response43 = response33.header("null=null", "null=null=hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        org.jsoup.Connection.Request request14 = request7.header("null=null=null=hi!", "");
        boolean boolean15 = request7.followRedirects;
        org.jsoup.Connection.Request request17 = request7.ignoreHttpErrors(false);
        org.jsoup.parser.Parser parser18 = request7.parser;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser18);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.lang.String str13 = request0.cookie("");
        request0.ignoreContentType = false;
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.followRedirects;
        org.jsoup.Connection.Request request20 = request16.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request16.cookies();
        boolean boolean23 = request16.hasCookie("null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry25 = request16.scanHeaders("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection26 = request16.data;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection27 = request16.data();
        request0.data = keyValCollection27;
        java.lang.String str30 = request0.cookie("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        java.lang.String str6 = keyVal0.value();
        keyVal0.value = "null=null=hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        boolean boolean22 = request10.hasCookie("null=null=null=hi!");
        request10.maxBodySizeBytes = 32;
        boolean boolean26 = request10.hasHeader("hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=null");
        org.jsoup.Connection.Request request13 = request7.ignoreContentType(false);
        org.jsoup.Connection.Request request15 = request7.removeHeader("null=null=null=hi!");
        boolean boolean16 = request7.followRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection25 = httpConnection0.url("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Must supply a valid URL");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection connection6 = httpConnection0.timeout(100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        org.jsoup.Connection.Method method2 = response1.method();
        boolean boolean4 = response1.hasCookie("");
        java.net.URL uRL5 = response1.url();
        response1.statusCode = (short) 0;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = response1.scanHeaders("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        java.net.URL uRL7 = request0.url();
        boolean boolean8 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str10 = keyVal9.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal12 = keyVal9.value("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal9.key("hi!");
        java.lang.String str15 = keyVal9.value;
        org.jsoup.helper.HttpConnection.Request request16 = request0.data((org.jsoup.Connection.KeyVal) keyVal9);
        org.jsoup.Connection.Request request18 = request16.removeCookie("hi!=null");
        org.jsoup.Connection.Request request20 = request16.removeHeader("null=null=null=hi!=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str7 = response1.cookie("null=null");
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response1);
        org.jsoup.Connection.Response response11 = response8.header("hi!=null", "");
        java.lang.String str12 = response8.charset;
        java.lang.String str13 = response8.statusMessage;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal11.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal17 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal19 = keyVal17.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal20.key = "hi!";
        java.lang.String str23 = keyVal20.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = keyVal20.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal28 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal29.key = "hi!";
        java.lang.String str32 = keyVal29.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str34 = keyVal33.toString();
        keyVal33.value = "";
        keyVal33.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal39.key = "hi!";
        java.lang.String str42 = keyVal39.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal44 = keyVal39.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal45 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str46 = keyVal45.key();
        org.jsoup.Connection.KeyVal[] keyValArray47 = new org.jsoup.Connection.KeyVal[] { keyVal11, keyVal14, keyVal19, keyVal20, keyVal28, keyVal29, keyVal33, keyVal39, keyVal45 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList48 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList48, keyValArray47);
        request7.data = keyValList48;
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = request51.headers();
        request51.followRedirects = false;
        java.lang.String str57 = request51.cookie("");
        boolean boolean58 = request51.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method60 = request59.method();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = request59.headers();
        request59.followRedirects = false;
        boolean boolean64 = request59.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection65 = request59.data();
        request51.data = keyValCollection65;
        request7.data = keyValCollection65;
        java.lang.String str69 = request7.getHeaderCaseInsensitive("hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null=null" + "'", str34.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "hi!" + "'", str42.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.maxBodySize((int) (byte) 1);
        org.jsoup.Connection connection10 = httpConnection0.maxBodySize((int) ' ');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request9 = request0.timeout((int) (byte) 0);
        java.net.URL uRL10 = request0.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL10);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        org.jsoup.Connection.Request request10 = request0.method(method9);
        boolean boolean11 = request0.followRedirects();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request0.cookies();
        java.lang.String str14 = request0.getHeaderCaseInsensitive("null=");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection.Response response16 = null;
        org.jsoup.helper.HttpConnection.Response response17 = new org.jsoup.helper.HttpConnection.Response(response16);
        int int18 = response17.statusCode();
        int int19 = response17.numRedirects;
        response17.charset = "";
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        request22.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method28 = request27.method();
        boolean boolean29 = request27.ignoreHttpErrors();
        org.jsoup.Connection.Request request32 = request27.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request33.headers();
        request33.followRedirects = false;
        boolean boolean38 = request33.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request40 = request33.timeout((int) ' ');
        java.lang.String str42 = request40.cookie("hi!");
        java.lang.String str44 = request40.header("null=null");
        request40.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = request47.headers();
        request47.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser52 = request47.parser;
        request40.parser = parser52;
        org.jsoup.helper.HttpConnection.Request request54 = request27.parser(parser52);
        org.jsoup.helper.HttpConnection.Request request55 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method56 = request55.method();
        org.jsoup.Connection.Request request57 = request54.method(method56);
        org.jsoup.Connection.Request request58 = request22.method(method56);
        org.jsoup.Connection.Response response59 = response17.method(method56);
        org.jsoup.Connection.Request request60 = request15.method(method56);
        request15.ignoreContentType = true;
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method64 = request63.method();
        org.jsoup.Connection.Request request66 = request63.ignoreContentType(false);
        org.jsoup.Connection.Request request68 = request63.removeCookie("");
        int int69 = request63.maxBodySize();
        org.jsoup.Connection.Request request71 = request63.followRedirects(false);
        java.lang.String str73 = request63.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.Connection.Method method74 = request63.method();
        org.jsoup.Connection.Request request75 = request15.method(method74);
        org.jsoup.Connection.Request request76 = request0.method(method74);
        org.jsoup.helper.HttpConnection.Request request78 = request0.timeout(97);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + method28 + "' != '" + org.jsoup.Connection.Method.GET + "'", method28.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        org.junit.Assert.assertTrue("'" + method56 + "' != '" + org.jsoup.Connection.Method.GET + "'", method56.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        org.junit.Assert.assertTrue("'" + method64 + "' != '" + org.jsoup.Connection.Method.GET + "'", method64.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1048576 + "'", int69 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + method74 + "' != '" + org.jsoup.Connection.Method.GET + "'", method74.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("null=null=null=hi!", "null=hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        boolean boolean9 = request0.hasHeader("null=hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=null");
        int int12 = request0.timeout();
        org.jsoup.parser.Parser parser13 = request0.parser;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3000 + "'", int12 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser13);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        org.jsoup.Connection.Request request7 = response1.req;
        response1.statusMessage = "hi!=null";
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response1);
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        response11.charset = "hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request7);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.helper.HttpConnection httpConnection20 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request21 = null;
        org.jsoup.Connection connection22 = httpConnection20.request(request21);
        org.jsoup.helper.HttpConnection httpConnection23 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response24 = httpConnection23.response();
        org.jsoup.Connection.Request request25 = httpConnection23.request();
        org.jsoup.Connection connection26 = httpConnection20.request(request25);
        org.jsoup.helper.HttpConnection.Response response27 = null;
        org.jsoup.helper.HttpConnection.Response response28 = new org.jsoup.helper.HttpConnection.Response(response27);
        java.lang.String str29 = response28.contentType();
        java.lang.String str30 = response28.contentType();
        int int31 = response28.statusCode();
        httpConnection20.res = response28;
        boolean boolean34 = response28.hasCookie("");
        httpConnection0.res = response28;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        org.jsoup.Connection.Response response9 = response1.removeCookie("");
        java.lang.String str10 = response1.statusMessage();
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request4 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method5 = request4.method();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request4.headers();
        int int7 = request4.timeout();
        org.jsoup.parser.Parser parser8 = request4.parser();
        org.jsoup.Connection connection9 = httpConnection0.parser(parser8);
        org.jsoup.helper.HttpConnection.Response response10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        int int12 = response11.statusCode();
        int int13 = response11.numRedirects;
        java.lang.String str14 = response11.charset;
        java.net.URL uRL15 = response11.url();
        response11.charset = "hi!=null";
        response11.statusMessage = "hi!=null";
        java.lang.String str20 = response11.contentType;
        org.jsoup.Connection connection21 = httpConnection0.response((org.jsoup.Connection.Response) response11);
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        org.jsoup.Connection connection25 = httpConnection0.cookies(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3000 + "'", int7 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        java.lang.String str5 = request0.getHeaderCaseInsensitive("null=hi!");
        boolean boolean7 = request0.hasCookie("hi!");
        int int8 = request0.timeout();
        org.jsoup.Connection.Request request11 = request0.header("null=null=hi!", "null=");
        boolean boolean12 = request0.followRedirects;
        int int13 = request0.timeoutMilliseconds;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3000 + "'", int8 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection1 = org.jsoup.helper.HttpConnection.connect("null=null=null=hi!=hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=null=null=hi!=hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        java.lang.String str22 = response1.statusMessage;
        java.lang.String str23 = response1.contentType;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null=null=null=hi!" + "'", str23.equals("null=null=null=hi!"));
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.lang.String str17 = request11.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request11.method(method19);
        org.jsoup.Connection.Request request21 = request9.method(method19);
        boolean boolean23 = request9.hasHeader("hi!");
        org.jsoup.Connection.Request request25 = request9.removeCookie("");
        java.net.URL uRL26 = request9.url();
        org.jsoup.Connection.Method method27 = request9.method();
        boolean boolean29 = request9.hasCookie("hi!=null=hi!=null");
        java.lang.String str31 = request9.cookie("null=");
        boolean boolean33 = request9.hasHeader("null=null=hi!");
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL26);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.userAgent("null=hi!");
        org.jsoup.Connection connection8 = httpConnection0.timeout((int) (short) 0);
        org.jsoup.Connection connection10 = httpConnection0.timeout((int) '#');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection7 = httpConnection0.data("hi!=null", "null=null=");
        org.jsoup.Connection connection9 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Response response10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        int int12 = response11.statusCode();
        int int13 = response11.numRedirects;
        java.lang.String str14 = response11.charset;
        response11.contentType = "null=null=null=hi!";
        response11.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = response11.headers();
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        boolean boolean22 = request20.followRedirects;
        org.jsoup.Connection.Request request24 = request20.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request20.headers();
        boolean boolean26 = request20.ignoreContentType;
        boolean boolean27 = request20.followRedirects();
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        org.jsoup.Connection.Request request30 = request20.method(method29);
        org.jsoup.Connection.Response response31 = response11.method(method29);
        java.lang.String str32 = response11.charset();
        org.jsoup.Connection.Method method33 = response11.method();
        org.jsoup.Connection connection34 = httpConnection0.method(method33);
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        boolean boolean37 = request35.ignoreHttpErrors();
        org.jsoup.Connection.Request request40 = request35.cookie("hi!", "");
        boolean boolean41 = request35.ignoreContentType;
        org.jsoup.parser.Parser parser42 = request35.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = request35.headers();
        org.jsoup.Connection connection44 = httpConnection0.cookies(strMap43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        org.jsoup.Connection.Method method8 = response1.method();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method8);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        java.lang.String str3 = response1.contentType();
        boolean boolean5 = response1.hasCookie("null=null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = response1.cookies();
        response1.numRedirects = (byte) 0;
        java.nio.ByteBuffer byteBuffer9 = null;
        response1.byteData = byteBuffer9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        boolean boolean16 = request14.hasHeader("null=null");
        request14.ignoreContentType = true;
        org.jsoup.Connection.Method method19 = request14.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.jsoup.helper.HttpConnection.Response.MAX_REDIRECTS = 0;
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        org.jsoup.Connection.Response response7 = response1.removeCookie("hi!");
        int int8 = response1.numRedirects;
        java.lang.String str10 = response1.cookie("hi!");
        java.lang.String str12 = response1.header("hi!=");
        response1.statusCode = 1;
        response1.numRedirects = 100;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        request7.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request14.headers();
        request14.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser19 = request14.parser;
        request7.parser = parser19;
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        boolean boolean23 = request21.ignoreHttpErrors();
        org.jsoup.Connection.Request request26 = request21.cookie("hi!", "");
        boolean boolean27 = request21.ignoreContentType;
        org.jsoup.parser.Parser parser28 = request21.parser();
        request7.parser = parser28;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser28);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal4.value("hi!=null");
        keyVal4.value = "hi!=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        org.jsoup.Connection.Request request6 = response1.req;
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.parser.Parser parser3 = null;
        org.jsoup.Connection connection4 = httpConnection0.parser(parser3);
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection httpConnection6 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response7 = httpConnection6.response();
        org.jsoup.Connection.Request request8 = httpConnection6.request();
        org.jsoup.parser.Parser parser9 = null;
        org.jsoup.Connection connection10 = httpConnection6.parser(parser9);
        org.jsoup.Connection.Response response11 = httpConnection6.res;
        org.jsoup.Connection connection12 = httpConnection0.response(response11);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection14 = httpConnection0.url("null=null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Malformed URL: null=null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        java.lang.String str11 = request0.getHeaderCaseInsensitive("");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection12 = null;
        request0.data = keyValCollection12;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.cookies();
        org.jsoup.Connection.Response response10 = response1.cookie("hi!=", "hi!");
        java.lang.String str11 = response1.statusMessage();
        java.lang.String str12 = response1.contentType;
        org.jsoup.Connection.Request request13 = response1.req;
        response1.contentType = "null=null";
        response1.executed = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request13);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null=null=hi!", "hi!=null=hi!=null");
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null=hi!=null", "null=null");
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        java.lang.String str10 = request0.header("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.lang.String str10 = request7.header("hi!");
        org.jsoup.Connection.Request request12 = request7.removeHeader("null=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        java.net.URL uRL7 = request0.url();
        boolean boolean8 = request0.followRedirects;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.headers();
        int int10 = request0.timeout();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3000 + "'", int10 == 3000);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        boolean boolean28 = request0.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response30 = httpConnection29.response();
        org.jsoup.Connection connection32 = httpConnection29.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection36 = httpConnection33.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = request37.headers();
        int int40 = request37.timeout();
        org.jsoup.parser.Parser parser41 = request37.parser();
        org.jsoup.Connection connection42 = httpConnection33.parser(parser41);
        org.jsoup.Connection connection43 = httpConnection29.parser(parser41);
        org.jsoup.helper.HttpConnection.Request request44 = request0.parser(parser41);
        boolean boolean46 = request44.hasCookie("hi!");
        org.jsoup.Connection.Request request48 = request44.removeCookie("null=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3000 + "'", int40 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.followRedirects = false;
        java.lang.String str10 = request0.cookie("hi!=null");
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request12 = null;
        org.jsoup.Connection connection13 = httpConnection11.request(request12);
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        org.jsoup.Connection.Request request16 = httpConnection14.request();
        org.jsoup.Connection connection17 = httpConnection11.request(request16);
        org.jsoup.Connection.Request request18 = httpConnection11.req;
        org.jsoup.Connection connection20 = httpConnection11.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        boolean boolean23 = request21.followRedirects;
        org.jsoup.Connection.Request request25 = request21.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request21.headers();
        boolean boolean27 = request21.ignoreContentType;
        request21.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request21.cookies();
        httpConnection11.req = request21;
        org.jsoup.Connection.Response response32 = httpConnection11.response();
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response34 = httpConnection33.response();
        org.jsoup.Connection connection36 = httpConnection33.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection37 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response38 = httpConnection37.response();
        httpConnection33.res = response38;
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request40.headers();
        org.jsoup.Connection connection42 = httpConnection33.request((org.jsoup.Connection.Request) request40);
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method44 = request43.method();
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method46 = request45.method();
        boolean boolean47 = request45.followRedirects;
        org.jsoup.Connection.Request request49 = request45.followRedirects(true);
        java.lang.String str51 = request45.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request52 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method53 = request52.method();
        org.jsoup.Connection.Request request54 = request45.method(method53);
        org.jsoup.Connection.Request request55 = request43.method(method53);
        org.jsoup.Connection.Request request56 = request40.method(method53);
        org.jsoup.Connection connection57 = httpConnection11.method(method53);
        org.jsoup.Connection.Request request58 = request0.method(method53);
        boolean boolean59 = request0.ignoreContentType();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        boolean boolean22 = request20.followRedirects;
        org.jsoup.Connection.Request request24 = request20.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request20.headers();
        request20.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser28 = request20.parser();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request20.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request20.cookies();
        org.jsoup.Connection connection31 = httpConnection0.cookies(strMap30);
        org.jsoup.helper.HttpConnection.Response response32 = null;
        org.jsoup.helper.HttpConnection.Response response33 = new org.jsoup.helper.HttpConnection.Response(response32);
        int int34 = response33.statusCode();
        response33.charset = "hi!=null";
        org.jsoup.Connection.Response response38 = response33.removeHeader("hi!=");
        java.lang.String str39 = response33.contentType();
        httpConnection0.res = response33;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = response33.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection5 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.Connection connection7 = httpConnection0.userAgent("null=");
        org.jsoup.Connection connection9 = httpConnection0.timeout((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection.Request request12 = httpConnection10.request();
        org.jsoup.parser.Parser parser13 = null;
        org.jsoup.Connection connection14 = httpConnection10.parser(parser13);
        org.jsoup.Connection.Response response15 = httpConnection10.res;
        org.jsoup.Connection connection18 = httpConnection10.header("null=null", "null=null");
        org.jsoup.helper.HttpConnection httpConnection19 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response20 = httpConnection19.response();
        org.jsoup.Connection.Request request21 = httpConnection19.request();
        org.jsoup.Connection.Request request22 = httpConnection19.req;
        org.jsoup.Connection connection24 = httpConnection19.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        boolean boolean27 = request25.ignoreHttpErrors();
        org.jsoup.Connection.Request request30 = request25.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.followRedirects = false;
        boolean boolean36 = request31.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request38 = request31.timeout((int) ' ');
        java.lang.String str40 = request38.cookie("hi!");
        java.lang.String str42 = request38.header("null=null");
        request38.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method46 = request45.method();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = request45.headers();
        request45.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser50 = request45.parser;
        request38.parser = parser50;
        org.jsoup.helper.HttpConnection.Request request52 = request25.parser(parser50);
        org.jsoup.Connection connection53 = httpConnection19.request((org.jsoup.Connection.Request) request52);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection54 = request52.data;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = request52.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = request52.cookies();
        org.jsoup.Connection connection57 = httpConnection10.data(strMap56);
        org.jsoup.helper.HttpConnection httpConnection58 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection60 = httpConnection58.followRedirects(false);
        org.jsoup.Connection connection62 = httpConnection58.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection63 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response64 = httpConnection63.response();
        org.jsoup.helper.HttpConnection httpConnection65 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response66 = httpConnection65.response();
        org.jsoup.Connection connection68 = httpConnection65.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection69 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response70 = httpConnection69.response();
        httpConnection65.res = response70;
        httpConnection63.res = response70;
        org.jsoup.Connection connection73 = httpConnection58.response(response70);
        org.jsoup.helper.HttpConnection.Request request74 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method75 = request74.method();
        boolean boolean76 = request74.followRedirects;
        org.jsoup.Connection.Request request78 = request74.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = request74.cookies();
        org.jsoup.Connection connection80 = httpConnection58.cookies(strMap79);
        org.jsoup.Connection connection81 = httpConnection10.cookies(strMap79);
        org.jsoup.helper.HttpConnection.Request request82 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method83 = request82.method();
        org.jsoup.Connection.Request request85 = request82.ignoreContentType(false);
        org.jsoup.parser.Parser parser86 = null;
        request82.parser = parser86;
        int int88 = request82.timeoutMilliseconds;
        java.util.Map<java.lang.String, java.lang.String> strMap89 = request82.headers();
        org.jsoup.Connection connection90 = httpConnection10.cookies(strMap89);
        org.jsoup.Connection connection91 = httpConnection0.cookies(strMap89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection73);
        org.junit.Assert.assertTrue("'" + method75 + "' != '" + org.jsoup.Connection.Method.GET + "'", method75.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection81);
        org.junit.Assert.assertTrue("'" + method83 + "' != '" + org.jsoup.Connection.Method.GET + "'", method83.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 3000 + "'", int88 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection91);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.Connection connection11 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        boolean boolean14 = request12.followRedirects;
        org.jsoup.Connection.Request request16 = request12.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request12.cookies();
        org.jsoup.Connection connection18 = httpConnection0.data(strMap17);
        org.jsoup.Connection connection21 = httpConnection0.data("null=", "hi!=null");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection23 = httpConnection0.maxBodySize((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxSize must be 0 (unlimited) or larger");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        org.jsoup.Connection.Request request10 = request0.method(method9);
        org.jsoup.Connection.Request request12 = request0.ignoreContentType(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        boolean boolean2 = request0.followRedirects;
        request0.ignoreContentType = true;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = request0.scanHeaders("null=");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry8 = request0.scanHeaders("hi!");
        java.net.URL uRL9 = request0.url();
        int int10 = request0.timeoutMilliseconds;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3000 + "'", int10 == 3000);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.lang.String str16 = response1.statusMessage();
        response1.statusMessage = "null=null=hi!=null";
        response1.contentType = "hi!=null=hi!=null";
        java.lang.String str21 = response1.statusMessage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null=null=hi!=null" + "'", str21.equals("null=null=hi!=null"));
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        boolean boolean8 = request0.followRedirects;
        org.jsoup.helper.HttpConnection httpConnection9 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response10 = httpConnection9.response();
        org.jsoup.Connection connection12 = httpConnection9.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request13 = httpConnection9.req;
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection16 = httpConnection14.followRedirects(false);
        org.jsoup.Connection connection18 = httpConnection14.referrer("");
        org.jsoup.Connection connection20 = httpConnection14.userAgent("null=hi!");
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        boolean boolean23 = request21.followRedirects;
        org.jsoup.Connection.Request request25 = request21.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request21.headers();
        boolean boolean27 = request21.ignoreContentType;
        boolean boolean28 = request21.followRedirects();
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method30 = request29.method();
        org.jsoup.Connection.Request request31 = request21.method(method30);
        boolean boolean32 = request21.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection33 = request21.data();
        org.jsoup.Connection connection34 = httpConnection14.data(keyValCollection33);
        org.jsoup.Connection connection35 = httpConnection9.data(keyValCollection33);
        request0.data = keyValCollection33;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        response1.statusCode = '4';
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        boolean boolean11 = request7.hasCookie("null=hi!");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry13 = request7.scanHeaders("null=null=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry13);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser8 = request0.parser();
        org.jsoup.Connection.Method method9 = request0.method();
        request0.maxBodySizeBytes = 0;
        request0.maxBodySizeBytes = 35;
        org.jsoup.Connection.Request request15 = request0.removeCookie("null=null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser8);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        response1.statusCode = 10;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.cookies();
        boolean boolean18 = request11.hasCookie("null=null");
        boolean boolean20 = request11.hasHeader("null=hi!");
        org.jsoup.Connection.Request request22 = request11.removeCookie("null=null");
        request11.maxBodySizeBytes = (short) -1;
        java.net.URL uRL25 = request11.url();
        response1.req = request11;
        java.net.URL uRL27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response28 = response1.url(uRL27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL25);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        boolean boolean19 = request0.ignoreContentType();
        request0.maxBodySizeBytes = 0;
        int int22 = request0.timeout();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3000 + "'", int22 == 3000);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request1);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry13 = request7.scanHeaders("hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry13);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection8 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection connection11 = httpConnection0.data("null=hi!", "null=hi!");
        org.jsoup.Connection connection13 = httpConnection0.userAgent("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        org.jsoup.Connection connection17 = httpConnection14.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection18 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response19 = httpConnection18.response();
        httpConnection14.res = response19;
        org.jsoup.Connection connection22 = httpConnection14.userAgent("null=null");
        org.jsoup.Connection.Request request23 = httpConnection14.request();
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response25 = httpConnection24.response();
        org.jsoup.Connection.Request request26 = httpConnection24.request();
        org.jsoup.parser.Parser parser27 = null;
        org.jsoup.Connection connection28 = httpConnection24.parser(parser27);
        org.jsoup.Connection.Response response29 = httpConnection24.res;
        org.jsoup.helper.HttpConnection httpConnection30 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response31 = httpConnection30.response();
        org.jsoup.Connection.Request request32 = httpConnection30.request();
        org.jsoup.parser.Parser parser33 = null;
        org.jsoup.Connection connection34 = httpConnection30.parser(parser33);
        org.jsoup.Connection.Response response35 = httpConnection30.res;
        org.jsoup.Connection connection36 = httpConnection24.response(response35);
        org.jsoup.Connection connection37 = httpConnection14.response(response35);
        org.jsoup.helper.HttpConnection httpConnection38 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response39 = httpConnection38.response();
        httpConnection14.res = response39;
        httpConnection0.res = response39;
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request42.headers();
        request42.followRedirects = false;
        boolean boolean47 = request42.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request49 = request42.timeout((int) ' ');
        boolean boolean50 = request49.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap51 = request49.headers();
        org.jsoup.Connection.Request request53 = request49.ignoreContentType(true);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = request49.headers();
        org.jsoup.Connection connection55 = httpConnection0.cookies(strMap54);
        org.jsoup.Connection.Request request56 = httpConnection0.req;
        org.jsoup.Connection.Request request57 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response39);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        int int3 = request0.timeout();
        int int4 = request0.timeout();
        boolean boolean6 = request0.hasCookie("null=null=");
        org.jsoup.Connection.Method method7 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3000 + "'", int4 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean6 = request0.hasCookie("null=null");
        int int7 = request0.timeout();
        org.jsoup.Connection.Method method8 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3000 + "'", int7 == 3000);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.ignoreHttpErrors();
        org.jsoup.Connection.Request request16 = request11.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        request17.followRedirects = false;
        boolean boolean22 = request17.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request24 = request17.timeout((int) ' ');
        java.lang.String str26 = request24.cookie("hi!");
        java.lang.String str28 = request24.header("null=null");
        request24.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser36 = request31.parser;
        request24.parser = parser36;
        org.jsoup.helper.HttpConnection.Request request38 = request11.parser(parser36);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request38.method(method40);
        org.jsoup.Connection.Request request42 = request6.method(method40);
        org.jsoup.Connection.Response response43 = response1.method(method40);
        org.jsoup.Connection.Request request44 = response1.req;
        java.lang.String str45 = response1.contentType;
        java.lang.String str47 = response1.cookie("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str6 = response1.statusMessage;
        java.nio.ByteBuffer byteBuffer7 = response1.byteData;
        java.lang.String str9 = response1.cookie("null=null=hi!");
        java.lang.String str10 = response1.statusMessage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection6 = httpConnection0.header("hi!=null", "null=null=null=hi!=hi!");
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        int int9 = response8.statusCode();
        int int10 = response8.numRedirects;
        java.lang.String str11 = response8.charset;
        java.lang.String str12 = response8.contentType();
        org.jsoup.Connection.Request request13 = response8.req;
        java.net.URL uRL14 = response8.url();
        org.jsoup.Connection.Response response16 = response8.removeCookie("null=null");
        httpConnection0.res = response8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        org.jsoup.Connection connection7 = httpConnection4.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        httpConnection4.res = response9;
        httpConnection0.res = response9;
        org.jsoup.Connection connection14 = httpConnection0.data("hi!=", "null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.Connection connection17 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection19 = httpConnection0.referrer("hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        org.jsoup.Connection connection26 = httpConnection0.parser(parser25);
        org.jsoup.Connection.Request request27 = httpConnection0.request();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        httpConnection5.res = response12;
        org.jsoup.Connection connection15 = httpConnection0.response(response12);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.followRedirects;
        org.jsoup.Connection.Request request20 = request16.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request16.cookies();
        org.jsoup.Connection connection22 = httpConnection0.cookies(strMap21);
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request23.headers();
        request23.followRedirects = false;
        boolean boolean28 = request23.ignoreHttpErrors;
        org.jsoup.Connection.Method method29 = request23.method();
        int int30 = request23.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        boolean boolean33 = request31.followRedirects;
        org.jsoup.Connection.Request request35 = request31.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request31.headers();
        boolean boolean37 = request31.ignoreContentType;
        boolean boolean38 = request31.followRedirects();
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request31.method(method40);
        org.jsoup.Connection.Request request42 = request23.method(method40);
        org.jsoup.Connection connection43 = httpConnection0.method(method40);
        org.jsoup.Connection connection46 = httpConnection0.cookie("null=hi!", "");
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        org.jsoup.Connection.Request request50 = request47.ignoreContentType(false);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection51 = request47.data;
        org.jsoup.Connection connection52 = httpConnection0.data(keyValCollection51);
        java.io.OutputStream outputStream53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection51, outputStream53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1048576 + "'", int30 == 1048576);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection52);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!=null=hi!=null", "null=null=null=hi!");
        java.lang.String str3 = keyVal2.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!=null=hi!=null" + "'", str3.equals("hi!=null=hi!=null"));
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.lang.String str3 = response1.contentType();
        int int4 = response1.statusCode();
        java.lang.String str6 = response1.getHeaderCaseInsensitive("null=null=null=hi!");
        response1.statusCode = 3000;
        java.net.URL uRL9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response10 = response1.url(uRL9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        request11.maxBodySizeBytes = (short) 100;
        org.jsoup.parser.Parser parser20 = request11.parser;
        org.jsoup.helper.HttpConnection.Request request21 = request0.parser(parser20);
        java.lang.String str23 = request0.header("hi!=null");
        boolean boolean24 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        boolean boolean27 = request25.followRedirects;
        org.jsoup.Connection.Request request29 = request25.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request25.cookies();
        boolean boolean32 = request25.hasCookie("");
        org.jsoup.helper.HttpConnection.KeyVal keyVal33 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str34 = keyVal33.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal36 = keyVal33.value("hi!");
        java.lang.String str37 = keyVal33.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal39 = keyVal33.value("hi!");
        java.lang.String str40 = keyVal33.key();
        org.jsoup.helper.HttpConnection.Request request41 = request25.data((org.jsoup.Connection.KeyVal) keyVal33);
        org.jsoup.helper.HttpConnection.Request request42 = request0.data((org.jsoup.Connection.KeyVal) keyVal33);
        java.lang.String str44 = request42.getHeaderCaseInsensitive("hi!");
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method46 = request45.method();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = request45.headers();
        request45.followRedirects = false;
        boolean boolean50 = request45.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request52 = request45.timeout((int) ' ');
        boolean boolean53 = request52.ignoreContentType;
        org.jsoup.helper.HttpConnection.KeyVal keyVal56 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        keyVal56.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal59 = new org.jsoup.helper.HttpConnection.KeyVal();
        org.jsoup.helper.HttpConnection.KeyVal keyVal62 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal64 = keyVal62.key("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal65 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal65.key = "hi!";
        java.lang.String str68 = keyVal65.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal70 = keyVal65.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal73 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal74 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal74.key = "hi!";
        java.lang.String str77 = keyVal74.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal78 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str79 = keyVal78.toString();
        keyVal78.value = "";
        keyVal78.value = "null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal84 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal84.key = "hi!";
        java.lang.String str87 = keyVal84.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal89 = keyVal84.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal90 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str91 = keyVal90.key();
        org.jsoup.Connection.KeyVal[] keyValArray92 = new org.jsoup.Connection.KeyVal[] { keyVal56, keyVal59, keyVal64, keyVal65, keyVal73, keyVal74, keyVal78, keyVal84, keyVal90 };
        java.util.ArrayList<org.jsoup.Connection.KeyVal> keyValList93 = new java.util.ArrayList<org.jsoup.Connection.KeyVal>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<org.jsoup.Connection.KeyVal>) keyValList93, keyValArray92);
        request52.data = keyValList93;
        request42.data = keyValList93;
        int int97 = request42.timeoutMilliseconds;
        boolean boolean98 = request42.followRedirects;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "hi!" + "'", str68.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "hi!" + "'", str77.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "null=null" + "'", str79.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "hi!" + "'", str87.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 3000 + "'", int97 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection9 = httpConnection7.followRedirects(false);
        org.jsoup.Connection connection11 = httpConnection7.referrer("");
        org.jsoup.Connection.Response response12 = httpConnection7.response();
        org.jsoup.Connection connection13 = httpConnection0.response(response12);
        org.jsoup.Connection connection15 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Request request16 = httpConnection0.request();
        org.jsoup.Connection connection18 = httpConnection0.maxBodySize(52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = request0.headers();
        int int2 = request0.maxBodySizeBytes;
        java.lang.String str4 = request0.cookie("null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1048576 + "'", int2 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        java.lang.String str3 = response1.contentType();
        java.lang.String str4 = response1.statusMessage;
        response1.executed = true;
        java.lang.String str7 = response1.contentType();
        java.net.URL uRL8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response9 = response1.url(uRL8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection7 = httpConnection4.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        int int11 = request8.timeout();
        org.jsoup.parser.Parser parser12 = request8.parser();
        org.jsoup.Connection connection13 = httpConnection4.parser(parser12);
        org.jsoup.Connection connection14 = httpConnection0.parser(parser12);
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        boolean boolean17 = request15.ignoreHttpErrors();
        org.jsoup.Connection.Request request20 = request15.cookie("hi!", "");
        boolean boolean21 = request15.ignoreContentType;
        org.jsoup.Connection.Request request24 = request15.cookie("null=hi!", "hi!");
        java.lang.String str26 = request15.getHeaderCaseInsensitive("");
        java.lang.String str28 = request15.cookie("");
        request15.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = request15.cookies();
        org.jsoup.Connection connection32 = httpConnection0.data(strMap31);
        org.jsoup.Connection connection34 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection36 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Response response37 = null;
        org.jsoup.helper.HttpConnection.Response response38 = new org.jsoup.helper.HttpConnection.Response(response37);
        int int39 = response38.statusCode();
        int int40 = response38.numRedirects;
        response38.charset = "";
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method44 = request43.method();
        org.jsoup.Connection.Request request46 = request43.ignoreContentType(false);
        org.jsoup.Connection.Request request48 = request43.removeCookie("");
        int int49 = request43.maxBodySize();
        org.jsoup.Connection.Request request51 = request43.followRedirects(false);
        response38.req = request43;
        java.lang.String str54 = response38.cookie("null=null=hi!");
        boolean boolean56 = response38.hasHeader("null=");
        httpConnection0.res = response38;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3000 + "'", int11 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1048576 + "'", int49 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.headers();
        org.jsoup.Connection connection9 = httpConnection0.request((org.jsoup.Connection.Request) request7);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request7.scanHeaders("null=null");
        boolean boolean12 = request7.ignoreContentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        java.lang.String str4 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal0.value("hi!");
        java.lang.String str7 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal0.value("null=null");
        java.lang.String str10 = keyVal9.value();
        keyVal9.key = "null=null";
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal9.value("null=null=");
        java.lang.String str15 = keyVal14.key;
        keyVal14.value = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null=null" + "'", str10.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "null=null" + "'", str15.equals("null=null"));
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        org.jsoup.Connection.Request request30 = request27.method(method29);
        org.jsoup.parser.Parser parser31 = request27.parser();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.Connection.Request request9 = httpConnection0.request();
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection.Request request12 = httpConnection10.request();
        org.jsoup.Connection.Request request13 = httpConnection10.req;
        org.jsoup.Connection connection15 = httpConnection10.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.ignoreHttpErrors();
        org.jsoup.Connection.Request request21 = request16.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        request22.followRedirects = false;
        boolean boolean27 = request22.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request29 = request22.timeout((int) ' ');
        java.lang.String str31 = request29.cookie("hi!");
        java.lang.String str33 = request29.header("null=null");
        request29.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = request36.headers();
        request36.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser41 = request36.parser;
        request29.parser = parser41;
        org.jsoup.helper.HttpConnection.Request request43 = request16.parser(parser41);
        org.jsoup.Connection connection44 = httpConnection10.request((org.jsoup.Connection.Request) request43);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection45 = request43.data;
        org.jsoup.Connection connection46 = httpConnection0.data(keyValCollection45);
        org.jsoup.helper.HttpConnection httpConnection47 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response48 = httpConnection47.response();
        org.jsoup.Connection connection50 = httpConnection47.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection51 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response52 = httpConnection51.response();
        httpConnection47.res = response52;
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = request54.headers();
        org.jsoup.Connection connection56 = httpConnection47.request((org.jsoup.Connection.Request) request54);
        org.jsoup.Connection connection57 = httpConnection0.request((org.jsoup.Connection.Request) request54);
        org.jsoup.Connection.Request request60 = request54.header("hi!", "null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.net.URL uRL3 = response1.url();
        java.lang.String str5 = response1.cookie("null=null=null=hi!=hi!");
        boolean boolean7 = response1.hasCookie("hi!=null");
        java.lang.String str9 = response1.cookie("null=hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        int int5 = response1.numRedirects;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        org.jsoup.Connection.Response response21 = httpConnection0.response();
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response23 = httpConnection22.response();
        org.jsoup.Connection connection25 = httpConnection22.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection26 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response27 = httpConnection26.response();
        httpConnection22.res = response27;
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request29.headers();
        org.jsoup.Connection connection31 = httpConnection22.request((org.jsoup.Connection.Request) request29);
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        org.jsoup.helper.HttpConnection.Request request34 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method35 = request34.method();
        boolean boolean36 = request34.followRedirects;
        org.jsoup.Connection.Request request38 = request34.followRedirects(true);
        java.lang.String str40 = request34.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        org.jsoup.Connection.Request request43 = request34.method(method42);
        org.jsoup.Connection.Request request44 = request32.method(method42);
        org.jsoup.Connection.Request request45 = request29.method(method42);
        org.jsoup.Connection connection46 = httpConnection0.method(method42);
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        boolean boolean49 = request47.ignoreHttpErrors();
        org.jsoup.Connection.Request request52 = request47.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request53 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method54 = request53.method();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = request53.headers();
        request53.followRedirects = false;
        boolean boolean58 = request53.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request60 = request53.timeout((int) ' ');
        java.lang.String str62 = request60.cookie("hi!");
        java.lang.String str64 = request60.header("null=null");
        request60.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request67 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method68 = request67.method();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = request67.headers();
        request67.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser72 = request67.parser;
        request60.parser = parser72;
        org.jsoup.helper.HttpConnection.Request request74 = request47.parser(parser72);
        org.jsoup.Connection.Method method75 = request74.method();
        org.jsoup.Connection connection76 = httpConnection0.request((org.jsoup.Connection.Request) request74);
        java.lang.String str78 = request74.header("null=null=");
        java.lang.String str80 = request74.cookie("null=hi!=null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method35 + "' != '" + org.jsoup.Connection.Method.GET + "'", method35.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertTrue("'" + method54 + "' != '" + org.jsoup.Connection.Method.GET + "'", method54.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + method68 + "' != '" + org.jsoup.Connection.Method.GET + "'", method68.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request74);
        org.junit.Assert.assertTrue("'" + method75 + "' != '" + org.jsoup.Connection.Method.GET + "'", method75.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        org.jsoup.Connection.Response response8 = response1.header("null=null=hi!", "null=null=hi!");
        response1.executed = false;
        int int11 = response1.numRedirects;
        java.net.URL uRL12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response13 = response1.url(uRL12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection9 = httpConnection0.cookie("null=null", "null=null");
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection12 = httpConnection10.followRedirects(false);
        org.jsoup.Connection connection14 = httpConnection10.referrer("");
        org.jsoup.Connection connection16 = httpConnection10.ignoreContentType(false);
        org.jsoup.Connection.Request request17 = httpConnection10.req;
        org.jsoup.helper.HttpConnection httpConnection18 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response19 = httpConnection18.response();
        org.jsoup.Connection connection21 = httpConnection18.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection22 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response23 = httpConnection22.response();
        httpConnection18.res = response23;
        java.lang.String[] strArray27 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection28 = httpConnection18.data(strArray27);
        org.jsoup.Connection connection29 = httpConnection10.data(strArray27);
        org.jsoup.Connection connection30 = httpConnection0.data(strArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.followRedirects = false;
        java.lang.String str10 = request0.cookie("hi!=null");
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request12 = null;
        org.jsoup.Connection connection13 = httpConnection11.request(request12);
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        org.jsoup.Connection.Request request16 = httpConnection14.request();
        org.jsoup.Connection connection17 = httpConnection11.request(request16);
        org.jsoup.Connection.Request request18 = httpConnection11.req;
        org.jsoup.Connection connection20 = httpConnection11.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        boolean boolean23 = request21.followRedirects;
        org.jsoup.Connection.Request request25 = request21.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request21.headers();
        boolean boolean27 = request21.ignoreContentType;
        request21.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request21.cookies();
        httpConnection11.req = request21;
        org.jsoup.Connection.Response response32 = httpConnection11.response();
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response34 = httpConnection33.response();
        org.jsoup.Connection connection36 = httpConnection33.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection37 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response38 = httpConnection37.response();
        httpConnection33.res = response38;
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request40.headers();
        org.jsoup.Connection connection42 = httpConnection33.request((org.jsoup.Connection.Request) request40);
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method44 = request43.method();
        org.jsoup.helper.HttpConnection.Request request45 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method46 = request45.method();
        boolean boolean47 = request45.followRedirects;
        org.jsoup.Connection.Request request49 = request45.followRedirects(true);
        java.lang.String str51 = request45.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request52 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method53 = request52.method();
        org.jsoup.Connection.Request request54 = request45.method(method53);
        org.jsoup.Connection.Request request55 = request43.method(method53);
        org.jsoup.Connection.Request request56 = request40.method(method53);
        org.jsoup.Connection connection57 = httpConnection11.method(method53);
        org.jsoup.Connection.Request request58 = request0.method(method53);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = request0.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request5.headers();
        httpConnection0.req = request5;
        org.jsoup.parser.Parser parser8 = request5.parser();
        org.jsoup.parser.Parser parser9 = request5.parser();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser9);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        boolean boolean7 = request0.followRedirects();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        org.jsoup.Connection.Request request10 = request0.method(method9);
        boolean boolean11 = request0.followRedirects();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request0.cookies();
        java.lang.String str14 = request0.getHeaderCaseInsensitive("null=");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection.Response response16 = null;
        org.jsoup.helper.HttpConnection.Response response17 = new org.jsoup.helper.HttpConnection.Response(response16);
        int int18 = response17.statusCode();
        int int19 = response17.numRedirects;
        response17.charset = "";
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        request22.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method28 = request27.method();
        boolean boolean29 = request27.ignoreHttpErrors();
        org.jsoup.Connection.Request request32 = request27.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request33.headers();
        request33.followRedirects = false;
        boolean boolean38 = request33.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request40 = request33.timeout((int) ' ');
        java.lang.String str42 = request40.cookie("hi!");
        java.lang.String str44 = request40.header("null=null");
        request40.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = request47.headers();
        request47.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser52 = request47.parser;
        request40.parser = parser52;
        org.jsoup.helper.HttpConnection.Request request54 = request27.parser(parser52);
        org.jsoup.helper.HttpConnection.Request request55 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method56 = request55.method();
        org.jsoup.Connection.Request request57 = request54.method(method56);
        org.jsoup.Connection.Request request58 = request22.method(method56);
        org.jsoup.Connection.Response response59 = response17.method(method56);
        org.jsoup.Connection.Request request60 = request15.method(method56);
        request15.ignoreContentType = true;
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method64 = request63.method();
        org.jsoup.Connection.Request request66 = request63.ignoreContentType(false);
        org.jsoup.Connection.Request request68 = request63.removeCookie("");
        int int69 = request63.maxBodySize();
        org.jsoup.Connection.Request request71 = request63.followRedirects(false);
        java.lang.String str73 = request63.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.Connection.Method method74 = request63.method();
        org.jsoup.Connection.Request request75 = request15.method(method74);
        org.jsoup.Connection.Request request76 = request0.method(method74);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.serialiseRequestUrl(request76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + method28 + "' != '" + org.jsoup.Connection.Method.GET + "'", method28.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        org.junit.Assert.assertTrue("'" + method56 + "' != '" + org.jsoup.Connection.Method.GET + "'", method56.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        org.junit.Assert.assertTrue("'" + method64 + "' != '" + org.jsoup.Connection.Method.GET + "'", method64.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1048576 + "'", int69 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + method74 + "' != '" + org.jsoup.Connection.Method.GET + "'", method74.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request76);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean9 = request3.hasCookie("null=null");
        java.lang.String str11 = request3.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.request((org.jsoup.Connection.Request) request3);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        keyVal13.value = "";
        keyVal13.value = "null=hi!";
        keyVal13.key = "null=null";
        java.lang.String str21 = keyVal13.toString();
        java.lang.String str22 = keyVal13.value();
        org.jsoup.helper.HttpConnection.KeyVal keyVal24 = keyVal13.key("null=null");
        org.jsoup.helper.HttpConnection.Request request25 = request3.data((org.jsoup.Connection.KeyVal) keyVal24);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = request25.cookies();
        int int27 = request25.maxBodySize();
        org.jsoup.parser.Parser parser28 = request25.parser;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry30 = request25.scanHeaders("null=null=null=hi!=hi!");
        java.lang.String str32 = request25.cookie("null=hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null=null=null=hi!" + "'", str21.equals("null=null=null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null=hi!" + "'", str22.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1048576 + "'", int27 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("null=null");
        boolean boolean10 = request0.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = request0.cookies();
        org.jsoup.Connection.Method method12 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!=", "hi!=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.key("null=null=hi!");
        java.lang.String str5 = keyVal2.value();
        java.lang.String str6 = keyVal2.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!=null" + "'", str5.equals("hi!=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!=null" + "'", str6.equals("hi!=null"));
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.maxBodySize((int) (byte) 1);
        org.jsoup.Connection.Request request9 = httpConnection0.req;
        org.jsoup.Connection connection12 = httpConnection0.cookie("null=null=null=hi!", "null=");
        org.jsoup.Connection.Request request13 = httpConnection0.request();
        org.jsoup.helper.HttpConnection.Request request14 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method15 = request14.method();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request14.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request14.headers();
        java.lang.String str19 = request14.getHeaderCaseInsensitive("null=hi!");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry21 = request14.scanHeaders("null=null");
        org.jsoup.Connection.Request request23 = request14.ignoreHttpErrors(false);
        httpConnection0.req = request14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.lang.String str10 = request7.header("hi!");
        int int11 = request7.timeout();
        org.jsoup.Connection.Request request13 = request7.ignoreHttpErrors(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.Connection.Request request9 = httpConnection0.request();
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection.Request request12 = httpConnection10.request();
        org.jsoup.parser.Parser parser13 = null;
        org.jsoup.Connection connection14 = httpConnection10.parser(parser13);
        org.jsoup.Connection.Response response15 = httpConnection10.res;
        org.jsoup.helper.HttpConnection httpConnection16 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response17 = httpConnection16.response();
        org.jsoup.Connection.Request request18 = httpConnection16.request();
        org.jsoup.parser.Parser parser19 = null;
        org.jsoup.Connection connection20 = httpConnection16.parser(parser19);
        org.jsoup.Connection.Response response21 = httpConnection16.res;
        org.jsoup.Connection connection22 = httpConnection10.response(response21);
        org.jsoup.Connection connection23 = httpConnection0.response(response21);
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response25 = httpConnection24.response();
        org.jsoup.Connection.Request request26 = httpConnection24.request();
        org.jsoup.Connection.Request request27 = httpConnection24.req;
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response29 = httpConnection28.response();
        org.jsoup.Connection connection31 = httpConnection28.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response33 = httpConnection32.response();
        httpConnection28.res = response33;
        org.jsoup.Connection connection36 = httpConnection28.userAgent("null=null");
        org.jsoup.Connection.Request request37 = httpConnection28.request();
        org.jsoup.helper.HttpConnection httpConnection38 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response39 = httpConnection38.response();
        org.jsoup.Connection.Request request40 = httpConnection38.request();
        org.jsoup.parser.Parser parser41 = null;
        org.jsoup.Connection connection42 = httpConnection38.parser(parser41);
        org.jsoup.Connection.Response response43 = httpConnection38.res;
        org.jsoup.helper.HttpConnection httpConnection44 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response45 = httpConnection44.response();
        org.jsoup.Connection.Request request46 = httpConnection44.request();
        org.jsoup.parser.Parser parser47 = null;
        org.jsoup.Connection connection48 = httpConnection44.parser(parser47);
        org.jsoup.Connection.Response response49 = httpConnection44.res;
        org.jsoup.Connection connection50 = httpConnection38.response(response49);
        org.jsoup.Connection connection51 = httpConnection28.response(response49);
        org.jsoup.helper.HttpConnection httpConnection52 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response53 = httpConnection52.response();
        httpConnection28.res = response53;
        org.jsoup.Connection connection55 = httpConnection24.response(response53);
        httpConnection0.res = response53;
        org.jsoup.Connection connection58 = httpConnection0.ignoreContentType(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection58);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        request0.parser = parser30;
        int int33 = request0.timeoutMilliseconds;
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request0.headers();
        request0.ignoreContentType = false;
        org.jsoup.helper.HttpConnection.Request request38 = request0.timeout(35);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3000 + "'", int33 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response1.scanHeaders("hi!=");
        int int18 = response1.numRedirects;
        java.lang.String str19 = response1.statusMessage;
        java.net.URL uRL20 = response1.url();
        java.nio.ByteBuffer byteBuffer21 = response1.byteData;
        response1.contentType = "hi!=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer21);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        boolean boolean9 = request7.ignoreHttpErrors;
        org.jsoup.Connection.Request request11 = request7.removeHeader("null=null=null=hi!=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        java.lang.String str3 = response1.contentType();
        java.lang.String str4 = response1.statusMessage;
        response1.contentType = "null=null=";
        boolean boolean8 = response1.hasHeader("hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal0.key = "hi!";
        java.lang.String str3 = keyVal0.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal5.key("null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal9 = keyVal5.value("hi!=null=hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal9);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection5 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response6 = httpConnection5.response();
        org.jsoup.Connection.Request request7 = httpConnection5.request();
        org.jsoup.Connection.Request request8 = httpConnection5.req;
        org.jsoup.Connection.Request request9 = httpConnection5.request();
        org.jsoup.Connection.Response response10 = httpConnection5.res;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.lang.String str19 = request13.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        org.jsoup.Connection.Request request22 = request13.method(method21);
        org.jsoup.Connection.Request request23 = request11.method(method21);
        boolean boolean25 = request11.hasHeader("hi!");
        org.jsoup.Connection.Request request27 = request11.removeCookie("");
        httpConnection5.req = request27;
        org.jsoup.helper.HttpConnection httpConnection29 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request30 = null;
        org.jsoup.Connection connection31 = httpConnection29.request(request30);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response33 = httpConnection32.response();
        org.jsoup.Connection connection34 = httpConnection29.response(response33);
        httpConnection5.res = response33;
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        boolean boolean38 = request36.ignoreHttpErrors();
        org.jsoup.Connection.Request request41 = request36.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request42.headers();
        request42.followRedirects = false;
        boolean boolean47 = request42.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request49 = request42.timeout((int) ' ');
        java.lang.String str51 = request49.cookie("hi!");
        java.lang.String str53 = request49.header("null=null");
        request49.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method57 = request56.method();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = request56.headers();
        request56.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser61 = request56.parser;
        request49.parser = parser61;
        org.jsoup.helper.HttpConnection.Request request63 = request36.parser(parser61);
        org.jsoup.helper.HttpConnection.Request request64 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method65 = request64.method();
        org.jsoup.Connection.Request request66 = request63.method(method65);
        org.jsoup.Connection connection67 = httpConnection5.method(method65);
        org.jsoup.Connection.Request request68 = request4.method(method65);
        boolean boolean69 = request4.followRedirects();
        int int70 = request4.maxBodySize();
        request4.ignoreHttpErrors = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + method57 + "' != '" + org.jsoup.Connection.Method.GET + "'", method57.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertTrue("'" + method65 + "' != '" + org.jsoup.Connection.Method.GET + "'", method65.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1048576 + "'", int70 == 1048576);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection connection8 = httpConnection0.referrer("null=hi!");
        org.jsoup.Connection connection11 = httpConnection0.data("null=hi!", "null=hi!=null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str5 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal4.value("hi!");
        java.lang.String str8 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal4.value("hi!");
        java.lang.String str11 = keyVal4.key();
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal4);
        request12.ignoreContentType = false;
        java.net.URL uRL15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request16 = request12.url(uRL15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        java.lang.String str6 = response1.contentType();
        java.lang.String str7 = response1.statusMessage;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        int int22 = response1.numRedirects;
        org.jsoup.Connection.Method method23 = response1.method();
        int int24 = response1.statusCode;
        org.jsoup.Connection.Request request25 = response1.req;
        java.lang.String str26 = response1.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null=null=null=hi!" + "'", str26.equals("null=null=null=hi!"));
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        java.lang.String str3 = response1.contentType();
        boolean boolean5 = response1.hasCookie("null=null=hi!");
        java.lang.String str7 = response1.getHeaderCaseInsensitive("null=hi!");
        response1.statusMessage = "hi!=null=hi!=null";
        java.lang.String str10 = response1.contentType;
        org.jsoup.Connection.Response response12 = response1.removeHeader("hi!=null");
        java.lang.String str13 = response1.statusMessage();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray14 = response1.bodyAsBytes();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!=null=hi!=null" + "'", str13.equals("hi!=null=hi!=null"));
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=null");
        org.jsoup.Connection.Request request13 = request0.removeHeader("null=hi!=");
        boolean boolean15 = request0.hasCookie("null=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        java.lang.String str6 = response1.statusMessage;
        java.nio.ByteBuffer byteBuffer7 = response1.byteData;
        java.lang.String str9 = response1.cookie("null=null=hi!");
        org.jsoup.Connection.Response response12 = response1.cookie("null=hi!=", "null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("null=null");
        boolean boolean10 = request0.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.helper.HttpConnection.Response response12 = null;
        org.jsoup.helper.HttpConnection.Response response13 = new org.jsoup.helper.HttpConnection.Response(response12);
        int int14 = response13.statusCode();
        int int15 = response13.numRedirects;
        response13.charset = "";
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = request18.headers();
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        boolean boolean25 = request23.ignoreHttpErrors();
        org.jsoup.Connection.Request request28 = request23.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request29 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method30 = request29.method();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = request29.headers();
        request29.followRedirects = false;
        boolean boolean34 = request29.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request36 = request29.timeout((int) ' ');
        java.lang.String str38 = request36.cookie("hi!");
        java.lang.String str40 = request36.header("null=null");
        request36.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method44 = request43.method();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = request43.headers();
        request43.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser48 = request43.parser;
        request36.parser = parser48;
        org.jsoup.helper.HttpConnection.Request request50 = request23.parser(parser48);
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        org.jsoup.Connection.Request request53 = request50.method(method52);
        org.jsoup.Connection.Request request54 = request18.method(method52);
        org.jsoup.Connection.Response response55 = response13.method(method52);
        org.jsoup.Connection.Request request56 = request11.method(method52);
        request11.ignoreContentType = true;
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method60 = request59.method();
        org.jsoup.Connection.Request request62 = request59.ignoreContentType(false);
        org.jsoup.Connection.Request request64 = request59.removeCookie("");
        int int65 = request59.maxBodySize();
        org.jsoup.Connection.Request request67 = request59.followRedirects(false);
        java.lang.String str69 = request59.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.Connection.Method method70 = request59.method();
        org.jsoup.Connection.Request request71 = request11.method(method70);
        org.jsoup.Connection.Request request72 = request0.method(method70);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection73 = request0.data;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        org.junit.Assert.assertTrue("'" + method30 + "' != '" + org.jsoup.Connection.Method.GET + "'", method30.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request56);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1048576 + "'", int65 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + method70 + "' != '" + org.jsoup.Connection.Method.GET + "'", method70.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection73);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = request0.headers();
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str5 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal4.value("hi!");
        java.lang.String str8 = keyVal4.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal10 = keyVal4.value("hi!");
        java.lang.String str11 = keyVal4.key();
        org.jsoup.helper.HttpConnection.Request request12 = request0.data((org.jsoup.Connection.KeyVal) keyVal4);
        org.jsoup.Connection.Request request14 = request0.maxBodySize((int) (byte) 0);
        java.lang.String str16 = request0.cookie("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = keyVal13.value("null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal22 = keyVal13.value("null=null=null=hi!=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal22);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.lang.String str7 = response1.charset;
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        org.jsoup.Connection.Request request11 = request8.ignoreContentType(false);
        org.jsoup.Connection.Request request13 = request8.removeCookie("");
        int int14 = request8.maxBodySize();
        org.jsoup.Connection.Request request16 = request8.followRedirects(false);
        java.lang.String str18 = request8.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        boolean boolean21 = request19.followRedirects;
        org.jsoup.Connection.Request request23 = request19.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request19.headers();
        boolean boolean25 = request19.ignoreContentType;
        request19.maxBodySizeBytes = (short) 100;
        org.jsoup.parser.Parser parser28 = request19.parser;
        org.jsoup.helper.HttpConnection.Request request29 = request8.parser(parser28);
        java.lang.String str31 = request8.header("hi!=null");
        request8.ignoreHttpErrors = false;
        org.jsoup.Connection.Method method34 = request8.method();
        org.jsoup.Connection.Response response35 = response1.method(method34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1048576 + "'", int14 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response35);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        org.jsoup.Connection.Request request7 = request0.removeHeader("hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.lang.String str16 = response1.statusMessage();
        boolean boolean18 = response1.hasCookie("null=null=hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        java.lang.String str7 = request0.cookie("null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.headers();
        java.lang.String str11 = request0.cookie("null=null=hi!");
        boolean boolean13 = request0.hasHeader("hi!=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        boolean boolean19 = request17.followRedirects;
        org.jsoup.Connection.Request request21 = request17.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request17.headers();
        request17.timeoutMilliseconds = 307;
        org.jsoup.parser.Parser parser25 = request17.parser();
        org.jsoup.Connection connection26 = httpConnection0.parser(parser25);
        org.jsoup.Connection connection28 = httpConnection0.userAgent("hi!=null");
        java.lang.String[] strArray29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection30 = httpConnection0.data(strArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key value pairs must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection28);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.statusMessage();
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.Connection.Method method9 = request3.method();
        int int10 = request3.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        boolean boolean18 = request11.followRedirects();
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        org.jsoup.Connection.Request request21 = request11.method(method20);
        org.jsoup.Connection.Request request22 = request3.method(method20);
        org.jsoup.Connection.Response response23 = response1.method(method20);
        java.nio.ByteBuffer byteBuffer24 = null;
        response1.byteData = byteBuffer24;
        org.jsoup.Connection.Response response27 = response1.removeHeader("null=");
        java.util.Map<java.lang.String, java.lang.String> strMap28 = response1.headers();
        org.jsoup.Connection.Response response30 = response1.removeCookie("null=hi!");
        boolean boolean31 = response1.executed;
        java.net.URL uRL32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response33 = response1.url(uRL32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1048576 + "'", int10 == 1048576);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        java.net.URL uRL7 = request0.url();
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection11 = httpConnection8.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        int int15 = request12.timeout();
        org.jsoup.parser.Parser parser16 = request12.parser();
        org.jsoup.Connection connection17 = httpConnection8.parser(parser16);
        request0.parser = parser16;
        java.net.URL uRL19 = request0.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3000 + "'", int15 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL19);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        boolean boolean16 = request7.ignoreHttpErrors;
        org.jsoup.Connection.Method method17 = request7.method();
        java.lang.String str19 = request7.getHeaderCaseInsensitive("null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.lang.String str3 = response1.contentType();
        int int4 = response1.statusCode();
        java.lang.String str6 = response1.getHeaderCaseInsensitive("null=null=null=hi!");
        boolean boolean8 = response1.hasHeader("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request9 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        org.jsoup.helper.HttpConnection httpConnection10 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response11 = httpConnection10.response();
        org.jsoup.Connection.Request request12 = httpConnection10.request();
        org.jsoup.Connection.Request request13 = httpConnection10.req;
        org.jsoup.Connection connection15 = httpConnection10.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.ignoreHttpErrors();
        org.jsoup.Connection.Request request21 = request16.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request22 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method23 = request22.method();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = request22.headers();
        request22.followRedirects = false;
        boolean boolean27 = request22.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request29 = request22.timeout((int) ' ');
        java.lang.String str31 = request29.cookie("hi!");
        java.lang.String str33 = request29.header("null=null");
        request29.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = request36.headers();
        request36.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser41 = request36.parser;
        request29.parser = parser41;
        org.jsoup.helper.HttpConnection.Request request43 = request16.parser(parser41);
        org.jsoup.Connection connection44 = httpConnection10.request((org.jsoup.Connection.Request) request43);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection45 = request43.data;
        request0.data = keyValCollection45;
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        boolean boolean49 = request47.followRedirects;
        org.jsoup.Connection.Request request51 = request47.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = request47.headers();
        boolean boolean53 = request47.ignoreContentType;
        request47.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap56 = request47.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = request47.cookies();
        java.lang.String str59 = request47.getHeaderCaseInsensitive("null=null");
        org.jsoup.parser.Parser parser60 = request47.parser;
        request0.parser = parser60;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = request0.headers();
        boolean boolean63 = request0.followRedirects();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection45);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        org.jsoup.Connection.Response response8 = response1.header("null=null=hi!", "null=null=hi!");
        java.nio.ByteBuffer byteBuffer9 = null;
        response1.byteData = byteBuffer9;
        java.lang.String str11 = response1.contentType;
        java.lang.String str13 = response1.header("null=null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        request0.followRedirects = false;
        boolean boolean17 = request0.ignoreContentType();
        int int18 = request0.maxBodySizeBytes;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry20 = request0.scanHeaders("hi!=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1048576 + "'", int18 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry20);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str14 = keyVal13.toString();
        org.jsoup.helper.HttpConnection.KeyVal keyVal16 = keyVal13.value("");
        java.lang.String str17 = keyVal13.value();
        org.jsoup.helper.HttpConnection.Request request18 = request0.data((org.jsoup.Connection.KeyVal) keyVal13);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry20 = request18.scanHeaders("");
        boolean boolean21 = request18.followRedirects;
        org.jsoup.parser.Parser parser22 = request18.parser();
        java.lang.String str24 = request18.cookie("hi!=");
        org.jsoup.helper.HttpConnection.KeyVal keyVal27 = new org.jsoup.helper.HttpConnection.KeyVal("null=null", "null=null");
        org.jsoup.helper.HttpConnection.KeyVal keyVal29 = keyVal27.value("");
        org.jsoup.helper.HttpConnection.Request request30 = request18.data((org.jsoup.Connection.KeyVal) keyVal29);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null=null" + "'", str14.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection.Request request5 = httpConnection0.request();
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        request6.maxBodySizeBytes = (-1);
        org.jsoup.Connection.Request request11 = request6.header("null=null=null=hi!", "null=hi!");
        httpConnection0.req = request6;
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.ignoreHttpErrors();
        org.jsoup.Connection.Request request18 = request13.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = request19.headers();
        request19.followRedirects = false;
        boolean boolean24 = request19.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request26 = request19.timeout((int) ' ');
        java.lang.String str28 = request26.cookie("hi!");
        java.lang.String str30 = request26.header("null=null");
        request26.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request33.headers();
        request33.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser38 = request33.parser;
        request26.parser = parser38;
        org.jsoup.helper.HttpConnection.Request request40 = request13.parser(parser38);
        org.jsoup.helper.HttpConnection httpConnection41 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response42 = httpConnection41.response();
        org.jsoup.Connection connection44 = httpConnection41.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection45 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection48 = httpConnection45.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request49 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method50 = request49.method();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = request49.headers();
        int int52 = request49.timeout();
        org.jsoup.parser.Parser parser53 = request49.parser();
        org.jsoup.Connection connection54 = httpConnection45.parser(parser53);
        org.jsoup.Connection connection55 = httpConnection41.parser(parser53);
        request40.parser = parser53;
        org.jsoup.parser.Parser parser57 = request40.parser;
        request6.parser = parser57;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection48);
        org.junit.Assert.assertTrue("'" + method50 + "' != '" + org.jsoup.Connection.Method.GET + "'", method50.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 3000 + "'", int52 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser57);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str6 = response1.header("null=hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request7.data();
        java.lang.String str12 = request7.header("hi!");
        boolean boolean14 = request7.hasHeader("null=");
        request7.ignoreContentType = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("");
        int int8 = request0.timeout();
        org.jsoup.Connection.Method method9 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3000 + "'", int8 == 3000);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        org.jsoup.Connection.Request request16 = request0.removeCookie("");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection17 = request0.data();
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal18.key = "hi!";
        java.lang.String str21 = keyVal18.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal23 = keyVal18.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal25 = keyVal23.key("null=hi!");
        java.lang.String str26 = keyVal23.value;
        java.lang.String str27 = keyVal23.key();
        java.lang.String str28 = keyVal23.value;
        org.jsoup.helper.HttpConnection.KeyVal keyVal30 = keyVal23.value("");
        org.jsoup.helper.HttpConnection.Request request31 = request0.data((org.jsoup.Connection.KeyVal) keyVal30);
        boolean boolean32 = request31.ignoreHttpErrors;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null=hi!" + "'", str27.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.Connection.Response response4 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Response response5 = null;
        org.jsoup.helper.HttpConnection.Response response6 = new org.jsoup.helper.HttpConnection.Response(response5);
        int int7 = response6.statusCode();
        int int8 = response6.numRedirects;
        java.lang.String str9 = response6.charset;
        boolean boolean10 = response6.executed;
        response6.executed = true;
        response6.contentType = "hi!=";
        java.lang.String str16 = response6.cookie("hi!");
        httpConnection0.res = response6;
        java.nio.ByteBuffer byteBuffer18 = response6.byteData;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer18);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        java.lang.String str22 = request10.header("hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        org.jsoup.Connection.Request request16 = request0.removeCookie("");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection17 = request0.data();
        org.jsoup.Connection.Request request20 = request0.header("null=hi!", "");
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response22 = httpConnection21.response();
        org.jsoup.Connection connection24 = httpConnection21.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection25 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response26 = httpConnection25.response();
        httpConnection21.res = response26;
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request28.headers();
        request28.followRedirects = false;
        boolean boolean33 = request28.ignoreHttpErrors;
        org.jsoup.Connection.Method method34 = request28.method();
        org.jsoup.Connection connection35 = httpConnection21.method(method34);
        org.jsoup.Connection.Request request36 = request0.method(method34);
        request0.maxBodySizeBytes = '4';
        org.jsoup.helper.HttpConnection.Request request40 = request0.timeout((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request43 = request0.header("", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        org.jsoup.helper.HttpConnection.Request request9 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        org.jsoup.Connection.Request request12 = request9.header("null=hi!", "");
        request9.ignoreContentType = false;
        java.net.URL uRL15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request16 = request9.url(uRL15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        httpConnection0.res = response5;
        org.jsoup.Connection connection8 = httpConnection0.userAgent("null=null");
        org.jsoup.Connection.Request request9 = httpConnection0.request();
        org.jsoup.Connection connection11 = httpConnection0.timeout(20);
        org.jsoup.Connection connection13 = httpConnection0.ignoreHttpErrors(false);
        org.jsoup.Connection connection15 = httpConnection0.timeout((int) (short) 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.followRedirects(true);
        org.jsoup.Connection.Request request4 = null;
        httpConnection0.req = request4;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        boolean boolean10 = request6.hasCookie("null=null");
        org.jsoup.Connection connection11 = httpConnection0.request((org.jsoup.Connection.Request) request6);
        org.jsoup.Connection connection14 = httpConnection0.data("null=hi!", "null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        int int7 = request0.maxBodySizeBytes;
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1048576 + "'", int7 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.net.URL uRL9 = request0.url();
        org.jsoup.Connection.Request request11 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request13 = request0.ignoreContentType(false);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request0.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection9 = httpConnection7.followRedirects(false);
        org.jsoup.Connection connection11 = httpConnection7.referrer("");
        org.jsoup.Connection.Response response12 = httpConnection7.response();
        org.jsoup.Connection connection13 = httpConnection0.response(response12);
        org.jsoup.Connection connection15 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection17 = httpConnection0.referrer("hi!=null=hi!=null");
        org.jsoup.Connection.Request request18 = httpConnection0.request();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.lang.String str8 = response1.cookie("");
        java.lang.String str10 = response1.header("null=null");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        boolean boolean18 = request11.followRedirects();
        org.jsoup.helper.HttpConnection.Request request20 = request11.timeout((int) (byte) 0);
        request11.timeoutMilliseconds = 0;
        org.jsoup.parser.Parser parser23 = request11.parser;
        java.lang.String str24 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request11);
        response1.req = request11;
        org.jsoup.Connection.Response response27 = response1.removeHeader("null=hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.charset;
        org.jsoup.Connection.Response response8 = response1.header("null=", "hi!");
        java.net.URL uRL9 = response1.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        org.jsoup.Connection.Response response11 = response1.header("null=null", "");
        java.lang.String str12 = response1.contentType();
        int int13 = response1.statusCode;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null=null=null=hi!" + "'", str12.equals("null=null=null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.net.URL uRL9 = request0.url();
        request0.followRedirects = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL9);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.ignoreContentType(false);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request9 = null;
        org.jsoup.Connection connection10 = httpConnection8.request(request9);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        org.jsoup.Connection.Request request13 = httpConnection11.request();
        org.jsoup.Connection connection14 = httpConnection8.request(request13);
        org.jsoup.Connection connection17 = httpConnection8.cookie("null=null", "null=null");
        org.jsoup.Connection connection19 = httpConnection8.followRedirects(true);
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        boolean boolean22 = request20.followRedirects;
        org.jsoup.Connection.Request request24 = request20.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = request20.cookies();
        org.jsoup.Connection connection26 = httpConnection8.data(strMap25);
        org.jsoup.Connection connection29 = httpConnection8.data("null=hi!", "hi!=null=hi!=null");
        org.jsoup.Connection.Request request30 = httpConnection8.req;
        org.jsoup.Connection connection32 = httpConnection8.ignoreContentType(true);
        org.jsoup.helper.HttpConnection httpConnection33 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request34 = null;
        org.jsoup.Connection connection35 = httpConnection33.request(request34);
        org.jsoup.helper.HttpConnection httpConnection36 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response37 = httpConnection36.response();
        org.jsoup.Connection.Request request38 = httpConnection36.request();
        org.jsoup.Connection connection39 = httpConnection33.request(request38);
        org.jsoup.Connection connection41 = httpConnection33.ignoreContentType(true);
        org.jsoup.Connection connection44 = httpConnection33.cookie("hi!=null", "null=null");
        org.jsoup.Connection connection46 = httpConnection33.referrer("null=");
        org.jsoup.helper.HttpConnection httpConnection47 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request48 = null;
        org.jsoup.Connection connection49 = httpConnection47.request(request48);
        org.jsoup.helper.HttpConnection httpConnection50 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response51 = httpConnection50.response();
        org.jsoup.Connection.Request request52 = httpConnection50.request();
        org.jsoup.Connection connection53 = httpConnection47.request(request52);
        org.jsoup.helper.HttpConnection httpConnection54 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection56 = httpConnection54.followRedirects(false);
        org.jsoup.Connection connection58 = httpConnection54.referrer("");
        org.jsoup.Connection.Response response59 = httpConnection54.response();
        org.jsoup.Connection connection60 = httpConnection47.response(response59);
        org.jsoup.Connection connection62 = httpConnection47.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method64 = request63.method();
        boolean boolean65 = request63.ignoreHttpErrors();
        org.jsoup.Connection.Request request68 = request63.cookie("hi!", "");
        java.lang.String str70 = request63.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request71 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method72 = request71.method();
        boolean boolean73 = request71.followRedirects;
        org.jsoup.Connection.Request request75 = request71.followRedirects(true);
        java.lang.String str77 = request71.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request78 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method79 = request78.method();
        org.jsoup.Connection.Request request80 = request71.method(method79);
        org.jsoup.Connection.Request request81 = request63.method(method79);
        org.jsoup.Connection connection82 = httpConnection47.method(method79);
        org.jsoup.Connection connection84 = httpConnection47.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection85 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response86 = httpConnection85.response();
        org.jsoup.Connection connection88 = httpConnection85.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection89 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response90 = httpConnection89.response();
        httpConnection85.res = response90;
        java.lang.String[] strArray94 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection95 = httpConnection85.data(strArray94);
        org.jsoup.Connection connection96 = httpConnection47.data(strArray94);
        org.jsoup.Connection connection97 = httpConnection33.data(strArray94);
        org.jsoup.Connection connection98 = httpConnection8.data(strArray94);
        org.jsoup.Connection connection99 = httpConnection0.data(strArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        org.junit.Assert.assertTrue("'" + method64 + "' != '" + org.jsoup.Connection.Method.GET + "'", method64.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + method72 + "' != '" + org.jsoup.Connection.Method.GET + "'", method72.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + method79 + "' != '" + org.jsoup.Connection.Method.GET + "'", method79.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection99);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        java.lang.String str17 = request15.header("");
        int int18 = request15.maxBodySize();
        request15.ignoreContentType = false;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1048576 + "'", int18 == 1048576);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        response1.charset = "";
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.Connection.Request request9 = request6.ignoreContentType(false);
        org.jsoup.Connection.Request request11 = request6.removeCookie("");
        int int12 = request6.maxBodySize();
        org.jsoup.Connection.Request request14 = request6.followRedirects(false);
        response1.req = request6;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry17 = response1.scanHeaders("hi!=");
        int int18 = response1.numRedirects;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = response1.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean7 = request0.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request8.headers();
        request8.followRedirects = false;
        boolean boolean13 = request8.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection14 = request8.data();
        request0.data = keyValCollection14;
        org.jsoup.helper.HttpConnection.KeyVal keyVal18 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = keyVal18.key("null=null");
        org.jsoup.helper.HttpConnection.Request request21 = request0.data((org.jsoup.Connection.KeyVal) keyVal20);
        java.net.URL uRL22 = request0.url();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL22);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        request0.ignoreContentType = false;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        org.jsoup.Connection.Request request12 = request0.ignoreContentType(true);
        request0.ignoreHttpErrors = false;
        org.jsoup.helper.HttpConnection.KeyVal keyVal15 = new org.jsoup.helper.HttpConnection.KeyVal();
        keyVal15.key = "hi!";
        java.lang.String str18 = keyVal15.key;
        org.jsoup.helper.HttpConnection.KeyVal keyVal20 = keyVal15.key("hi!");
        java.lang.String str21 = keyVal20.value;
        org.jsoup.helper.HttpConnection.Request request22 = request0.data((org.jsoup.Connection.KeyVal) keyVal20);
        java.net.URL uRL23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request24 = request0.url(uRL23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.Connection.Method method11 = request0.method();
        org.jsoup.Connection.Request request13 = request0.ignoreContentType(false);
        request0.maxBodySizeBytes = 1;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        boolean boolean11 = request7.hasCookie("null=hi!");
        request7.maxBodySizeBytes = (byte) 1;
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request7.headers();
        org.jsoup.Connection.Request request16 = request7.removeCookie("");
        org.jsoup.helper.HttpConnection.Response response17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response18 = org.jsoup.helper.HttpConnection.Response.execute((org.jsoup.Connection.Request) request7, response17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal3 = keyVal0.value("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal5 = keyVal0.key("hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal7 = keyVal0.value("null=");
        keyVal7.key = "null=null=null=hi!";
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = keyVal7.key("null=");
        org.jsoup.helper.HttpConnection.KeyVal keyVal13 = keyVal7.value("null=hi!=null=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal13);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request6.headers();
        request6.followRedirects = false;
        boolean boolean11 = request6.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request13 = request6.timeout((int) ' ');
        java.lang.String str15 = request13.cookie("hi!");
        java.lang.String str17 = request13.header("null=null");
        request13.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request20 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method21 = request20.method();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = request20.headers();
        request20.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser25 = request20.parser;
        request13.parser = parser25;
        org.jsoup.helper.HttpConnection.Request request27 = request0.parser(parser25);
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        org.jsoup.Connection.Request request30 = request27.method(method29);
        boolean boolean31 = request27.ignoreContentType();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + method21 + "' != '" + org.jsoup.Connection.Method.GET + "'", method21.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("null=null");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = request0.scanHeaders("hi!");
        int int10 = request0.maxBodySizeBytes;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1048576 + "'", int10 == 1048576);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        request0.timeoutMilliseconds = 307;
        org.jsoup.Connection.Request request9 = request0.removeHeader("null=hi!");
        request0.maxBodySizeBytes = (byte) 100;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout((int) (short) 0);
        boolean boolean5 = request4.ignoreHttpErrors;
        int int6 = request4.timeoutMilliseconds;
        boolean boolean7 = request4.ignoreHttpErrors;
        org.jsoup.Connection.Request request9 = request4.followRedirects(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = request4.scanHeaders("null=hi!=null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        java.lang.String str3 = response1.contentType();
        boolean boolean5 = response1.hasCookie("null=null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = response1.cookies();
        int int7 = response1.statusCode();
        java.net.URL uRL8 = response1.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL8);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("null=hi!", "null=hi!");
        java.lang.String str3 = keyVal2.key;
        java.lang.String str4 = keyVal2.key();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null=hi!" + "'", str3.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null=hi!" + "'", str4.equals("null=hi!"));
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.maxBodySize((int) (short) 1);
        org.jsoup.Connection connection6 = httpConnection0.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        httpConnection7.res = response12;
        org.jsoup.parser.Parser parser14 = null;
        org.jsoup.Connection connection15 = httpConnection7.parser(parser14);
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request16.headers();
        request16.followRedirects = false;
        boolean boolean21 = request16.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection22 = request16.data();
        org.jsoup.Connection connection23 = httpConnection7.data(keyValCollection22);
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request24.headers();
        request24.timeoutMilliseconds = 307;
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = request32.headers();
        request32.followRedirects = false;
        boolean boolean37 = request32.ignoreHttpErrors;
        org.jsoup.Connection.Method method38 = request32.method();
        int int39 = request32.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        boolean boolean42 = request40.followRedirects;
        org.jsoup.Connection.Request request44 = request40.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = request40.headers();
        boolean boolean46 = request40.ignoreContentType;
        boolean boolean47 = request40.followRedirects();
        org.jsoup.helper.HttpConnection.Request request48 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method49 = request48.method();
        org.jsoup.Connection.Request request50 = request40.method(method49);
        org.jsoup.Connection.Request request51 = request32.method(method49);
        org.jsoup.Connection.Request request52 = request24.method(method49);
        org.jsoup.Connection connection53 = httpConnection7.method(method49);
        org.jsoup.Connection connection54 = httpConnection0.method(method49);
        org.jsoup.Connection.Response response55 = httpConnection0.response();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection15);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1048576 + "'", int39 == 1048576);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response55);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        org.jsoup.helper.HttpConnection.Request request4 = request0.timeout(1048576);
        boolean boolean5 = request0.ignoreContentType;
        org.jsoup.Connection.Request request7 = request0.ignoreHttpErrors(true);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request0.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection9 = request0.data();
        boolean boolean10 = request0.ignoreContentType;
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        org.jsoup.Connection.Request request13 = httpConnection11.request();
        org.jsoup.Connection.Request request14 = httpConnection11.req;
        org.jsoup.Connection.Request request15 = httpConnection11.request();
        org.jsoup.Connection.Response response16 = httpConnection11.res;
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        boolean boolean21 = request19.followRedirects;
        org.jsoup.Connection.Request request23 = request19.followRedirects(true);
        java.lang.String str25 = request19.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        org.jsoup.Connection.Request request28 = request19.method(method27);
        org.jsoup.Connection.Request request29 = request17.method(method27);
        boolean boolean31 = request17.hasHeader("hi!");
        org.jsoup.Connection.Request request33 = request17.removeCookie("");
        httpConnection11.req = request33;
        org.jsoup.helper.HttpConnection httpConnection35 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request36 = null;
        org.jsoup.Connection connection37 = httpConnection35.request(request36);
        org.jsoup.helper.HttpConnection httpConnection38 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response39 = httpConnection38.response();
        org.jsoup.Connection connection40 = httpConnection35.response(response39);
        httpConnection11.res = response39;
        org.jsoup.Connection connection43 = httpConnection11.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request44 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method45 = request44.method();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = request44.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = request44.headers();
        org.jsoup.Connection.Method method48 = request44.method();
        org.jsoup.Connection connection49 = httpConnection11.method(method48);
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        boolean boolean52 = request50.followRedirects;
        org.jsoup.Connection.Request request54 = request50.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = request50.headers();
        boolean boolean56 = request50.ignoreContentType;
        request50.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap59 = request50.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = request50.cookies();
        java.lang.String str62 = request50.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request64 = request50.timeout(0);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection65 = request50.data();
        org.jsoup.Connection connection66 = httpConnection11.data(keyValCollection65);
        request0.data = keyValCollection65;
        java.lang.String str69 = request0.header("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        org.junit.Assert.assertTrue("'" + method45 + "' != '" + org.jsoup.Connection.Method.GET + "'", method45.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        response1.charset = "hi!=null";
        response1.statusMessage = "null=";
        java.lang.String str7 = response1.statusMessage;
        boolean boolean8 = response1.executed;
        java.lang.String str9 = response1.statusMessage;
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        org.jsoup.Connection.Request request13 = request10.ignoreContentType(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry15 = request10.scanHeaders("hi!");
        response1.req = request10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null=" + "'", str7.equals("null="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=" + "'", str9.equals("null="));
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry15);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        java.lang.String str10 = request0.getHeaderCaseInsensitive("null=null=null=hi!");
        org.jsoup.Connection.Method method11 = request0.method();
        org.jsoup.Connection.Request request13 = request0.ignoreContentType(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry15 = request0.scanHeaders("hi!=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry15);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean6 = request0.hasCookie("null=null");
        request0.timeoutMilliseconds = ' ';
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.parser.Parser parser3 = null;
        org.jsoup.Connection connection4 = httpConnection0.parser(parser3);
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.Connection.Response response6 = httpConnection0.response();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection9 = httpConnection0.header("", "hi!=null=hi!=null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Header name must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response6);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.helper.HttpConnection httpConnection4 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response5 = httpConnection4.response();
        org.jsoup.Connection connection7 = httpConnection4.maxBodySize((int) (short) 0);
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response9 = httpConnection8.response();
        httpConnection4.res = response9;
        httpConnection0.res = response9;
        org.jsoup.Connection connection14 = httpConnection0.header("null=null=hi!", "hi!=null=hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection.Response response7 = null;
        org.jsoup.helper.HttpConnection.Response response8 = new org.jsoup.helper.HttpConnection.Response(response7);
        java.lang.String str9 = response8.contentType();
        java.lang.String str10 = response8.contentType();
        int int11 = response8.statusCode();
        httpConnection0.res = response8;
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request13.headers();
        boolean boolean19 = request13.ignoreContentType;
        request13.ignoreHttpErrors = true;
        java.net.URL uRL22 = request13.url();
        org.jsoup.Connection.Request request24 = request13.ignoreContentType(false);
        org.jsoup.Connection.Request request26 = request13.ignoreContentType(false);
        httpConnection0.req = request13;
        org.jsoup.Connection connection30 = httpConnection0.cookie("hi!=null", "null=");
        org.jsoup.helper.HttpConnection.Request request31 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method32 = request31.method();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request31.headers();
        request31.followRedirects = false;
        java.lang.String str37 = request31.cookie("");
        boolean boolean38 = request31.ignoreContentType();
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request39.headers();
        request39.followRedirects = false;
        boolean boolean44 = request39.ignoreHttpErrors;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection45 = request39.data();
        request31.data = keyValCollection45;
        org.jsoup.helper.HttpConnection.KeyVal keyVal49 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal51 = keyVal49.key("null=null");
        org.jsoup.helper.HttpConnection.Request request52 = request31.data((org.jsoup.Connection.KeyVal) keyVal51);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection53 = request52.data;
        org.jsoup.Connection connection54 = httpConnection0.data(keyValCollection53);
        java.lang.Class<?> wildcardClass55 = httpConnection0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection30);
        org.junit.Assert.assertTrue("'" + method32 + "' != '" + org.jsoup.Connection.Method.GET + "'", method32.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request8 = request0.removeCookie("null=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection.Request request5 = httpConnection0.request();
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        request6.maxBodySizeBytes = (-1);
        org.jsoup.Connection.Request request11 = request6.header("null=null=null=hi!", "null=hi!");
        httpConnection0.req = request6;
        org.jsoup.helper.HttpConnection.Request request13 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method14 = request13.method();
        boolean boolean15 = request13.followRedirects;
        org.jsoup.Connection.Request request17 = request13.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = request13.headers();
        boolean boolean19 = request13.ignoreContentType;
        boolean boolean20 = request13.followRedirects();
        org.jsoup.helper.HttpConnection.Request request22 = request13.timeout((int) (byte) 0);
        org.jsoup.Connection.Request request24 = request22.removeCookie("hi!");
        org.jsoup.Connection connection25 = httpConnection0.request((org.jsoup.Connection.Request) request22);
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        boolean boolean28 = request26.followRedirects;
        org.jsoup.Connection.Request request30 = request26.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = request26.cookies();
        boolean boolean33 = request26.hasCookie("null=null");
        java.lang.String str35 = request26.cookie("hi!=null");
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        boolean boolean38 = request36.followRedirects;
        org.jsoup.Connection.Request request40 = request36.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = request36.headers();
        boolean boolean42 = request36.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method44 = request43.method();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = request43.headers();
        request43.followRedirects = false;
        boolean boolean48 = request43.ignoreHttpErrors;
        org.jsoup.Connection.Method method49 = request43.method();
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        boolean boolean52 = request50.followRedirects;
        org.jsoup.Connection.Request request54 = request50.followRedirects(true);
        java.lang.String str56 = request50.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method58 = request57.method();
        org.jsoup.Connection.Request request59 = request50.method(method58);
        org.jsoup.Connection.Request request60 = request43.method(method58);
        org.jsoup.Connection.Request request61 = request36.method(method58);
        org.jsoup.Connection.Request request62 = request26.method(method58);
        org.jsoup.Connection.Request request63 = request22.method(method58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method14 + "' != '" + org.jsoup.Connection.Method.GET + "'", method14.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + method49 + "' != '" + org.jsoup.Connection.Method.GET + "'", method49.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + method58 + "' != '" + org.jsoup.Connection.Method.GET + "'", method58.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=null", "null=null");
        keyVal2.value = "";
        java.lang.String str5 = keyVal2.value();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.lang.String str3 = response1.contentType();
        int int4 = response1.statusCode();
        java.lang.String str6 = response1.getHeaderCaseInsensitive("null=null=null=hi!");
        response1.statusCode = 3000;
        org.jsoup.helper.HttpConnection.Response response9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = new org.jsoup.helper.HttpConnection.Response(response9);
        int int11 = response10.statusCode();
        int int12 = response10.numRedirects;
        java.lang.String str13 = response10.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry15 = response10.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = response10.headers();
        org.jsoup.helper.HttpConnection.Request request17 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method18 = request17.method();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request17.headers();
        org.jsoup.Connection.Method method20 = request17.method();
        org.jsoup.Connection.Response response21 = response10.method(method20);
        org.jsoup.Connection.Response response22 = response1.method(method20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + method18 + "' != '" + org.jsoup.Connection.Method.GET + "'", method18.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        org.jsoup.Connection.Response response7 = response1.removeCookie("hi!");
        int int8 = response1.numRedirects;
        java.lang.String str10 = response1.cookie("hi!");
        java.lang.String str12 = response1.header("hi!=");
        response1.statusCode = 1;
        int int15 = response1.statusCode();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.contentType();
        org.jsoup.Connection.Request request6 = response1.req;
        org.jsoup.Connection.Response response8 = response1.removeCookie("null=null");
        java.net.HttpURLConnection httpURLConnection9 = null;
        org.jsoup.helper.HttpConnection.Response response10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = new org.jsoup.helper.HttpConnection.Response(response10);
        int int12 = response11.statusCode();
        int int13 = response11.numRedirects;
        java.lang.String str14 = response11.charset;
        java.lang.String str15 = response11.contentType();
        int int16 = response11.statusCode();
        int int17 = response11.statusCode;
        java.lang.String str18 = response11.contentType;
        org.jsoup.Connection.Response response21 = response11.header("hi!=null=hi!=null", "hi!=null=hi!=null");
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection9, (org.jsoup.Connection.Response) response11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        org.jsoup.Connection.Response response7 = response1.removeCookie("hi!");
        int int8 = response1.numRedirects;
        java.lang.String str9 = response1.charset;
        response1.executed = true;
        org.jsoup.helper.HttpConnection httpConnection12 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request13 = null;
        org.jsoup.Connection connection14 = httpConnection12.request(request13);
        org.jsoup.helper.HttpConnection httpConnection15 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response16 = httpConnection15.response();
        org.jsoup.Connection.Request request17 = httpConnection15.request();
        org.jsoup.Connection connection18 = httpConnection12.request(request17);
        org.jsoup.helper.HttpConnection httpConnection19 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection21 = httpConnection19.followRedirects(false);
        org.jsoup.Connection connection23 = httpConnection19.referrer("");
        org.jsoup.Connection.Response response24 = httpConnection19.response();
        org.jsoup.Connection connection25 = httpConnection12.response(response24);
        org.jsoup.Connection connection27 = httpConnection12.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        boolean boolean30 = request28.ignoreHttpErrors();
        org.jsoup.Connection.Request request33 = request28.cookie("hi!", "");
        java.lang.String str35 = request28.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request36 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method37 = request36.method();
        boolean boolean38 = request36.followRedirects;
        org.jsoup.Connection.Request request40 = request36.followRedirects(true);
        java.lang.String str42 = request36.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request43 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method44 = request43.method();
        org.jsoup.Connection.Request request45 = request36.method(method44);
        org.jsoup.Connection.Request request46 = request28.method(method44);
        org.jsoup.Connection connection47 = httpConnection12.method(method44);
        org.jsoup.Connection.Response response48 = response1.method(method44);
        java.lang.String str49 = response1.statusMessage;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection27);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        request7.followRedirects = false;
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request15 = null;
        org.jsoup.Connection connection16 = httpConnection14.request(request15);
        org.jsoup.helper.HttpConnection httpConnection17 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response18 = httpConnection17.response();
        org.jsoup.Connection.Request request19 = httpConnection17.request();
        org.jsoup.Connection connection20 = httpConnection14.request(request19);
        org.jsoup.Connection.Request request21 = httpConnection14.req;
        org.jsoup.Connection connection23 = httpConnection14.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.followRedirects;
        org.jsoup.Connection.Request request28 = request24.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request24.headers();
        boolean boolean30 = request24.ignoreContentType;
        request24.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap33 = request24.cookies();
        httpConnection14.req = request24;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection35 = request24.data;
        org.jsoup.Connection.Request request38 = request24.cookie("null=null", "hi!");
        int int39 = request24.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        boolean boolean42 = request40.followRedirects;
        org.jsoup.Connection.Request request44 = request40.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = request40.cookies();
        boolean boolean47 = request40.hasCookie("null=null");
        java.lang.String str49 = request40.cookie("hi!=null");
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        boolean boolean52 = request50.followRedirects;
        org.jsoup.Connection.Request request54 = request50.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = request50.headers();
        boolean boolean56 = request50.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request57 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method58 = request57.method();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = request57.headers();
        request57.followRedirects = false;
        boolean boolean62 = request57.ignoreHttpErrors;
        org.jsoup.Connection.Method method63 = request57.method();
        org.jsoup.helper.HttpConnection.Request request64 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method65 = request64.method();
        boolean boolean66 = request64.followRedirects;
        org.jsoup.Connection.Request request68 = request64.followRedirects(true);
        java.lang.String str70 = request64.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request71 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method72 = request71.method();
        org.jsoup.Connection.Request request73 = request64.method(method72);
        org.jsoup.Connection.Request request74 = request57.method(method72);
        org.jsoup.Connection.Request request75 = request50.method(method72);
        org.jsoup.Connection.Request request76 = request40.method(method72);
        org.jsoup.Connection.Request request77 = request24.method(method72);
        org.jsoup.Connection.Request request78 = request7.method(method72);
        boolean boolean79 = request7.ignoreContentType();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1048576 + "'", int39 == 1048576);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + method58 + "' != '" + org.jsoup.Connection.Method.GET + "'", method58.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + method63 + "' != '" + org.jsoup.Connection.Method.GET + "'", method63.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method65 + "' != '" + org.jsoup.Connection.Method.GET + "'", method65.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + method72 + "' != '" + org.jsoup.Connection.Method.GET + "'", method72.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        org.jsoup.Connection.Method method15 = request14.method();
        request14.maxBodySizeBytes = (short) -1;
        org.jsoup.Connection.Request request20 = request14.cookie("null=null=null=hi!=hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request21 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method22 = request21.method();
        boolean boolean23 = request21.ignoreHttpErrors();
        org.jsoup.Connection.Request request26 = request21.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method28 = request27.method();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = request27.headers();
        request27.followRedirects = false;
        boolean boolean32 = request27.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request34 = request27.timeout((int) ' ');
        java.lang.String str36 = request34.cookie("hi!");
        java.lang.String str38 = request34.header("null=null");
        request34.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request41 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method42 = request41.method();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = request41.headers();
        request41.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser46 = request41.parser;
        request34.parser = parser46;
        org.jsoup.helper.HttpConnection.Request request48 = request21.parser(parser46);
        boolean boolean49 = request21.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection httpConnection50 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response51 = httpConnection50.response();
        org.jsoup.Connection connection53 = httpConnection50.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection54 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection57 = httpConnection54.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request58 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method59 = request58.method();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = request58.headers();
        int int61 = request58.timeout();
        org.jsoup.parser.Parser parser62 = request58.parser();
        org.jsoup.Connection connection63 = httpConnection54.parser(parser62);
        org.jsoup.Connection connection64 = httpConnection50.parser(parser62);
        org.jsoup.helper.HttpConnection.Request request65 = request21.parser(parser62);
        request14.parser = parser62;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        org.junit.Assert.assertTrue("'" + method22 + "' != '" + org.jsoup.Connection.Method.GET + "'", method22.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertTrue("'" + method28 + "' != '" + org.jsoup.Connection.Method.GET + "'", method28.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + method42 + "' != '" + org.jsoup.Connection.Method.GET + "'", method42.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 3000 + "'", int61 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request65);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.cookies();
        boolean boolean10 = request7.hasHeader("null=null");
        java.lang.String str11 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request7);
        org.jsoup.Connection.Request request13 = request7.removeCookie("null=null=hi!");
        org.jsoup.Connection.Request request15 = request7.maxBodySize(97);
        java.lang.String str17 = request7.getHeaderCaseInsensitive("");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request7.cookies();
        boolean boolean10 = request7.hasHeader("null=null");
        java.lang.String str11 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request7);
        request7.followRedirects = false;
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection14 = request7.data();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection14);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = response1.headers();
        response1.contentType = "null=null=";
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.headers();
        org.jsoup.Connection.Method method11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response12 = response1.method(method11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Method must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        java.lang.String str7 = response1.statusMessage;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry9 = response1.scanHeaders("null=null=hi!");
        org.jsoup.Connection.Response response11 = response1.removeHeader("hi!");
        response1.statusMessage = "null=hi!=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection3 = httpConnection0.data("hi!", "hi!");
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection connection6 = httpConnection0.ignoreContentType(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Response response6 = null;
        org.jsoup.helper.HttpConnection.Response response7 = new org.jsoup.helper.HttpConnection.Response(response6);
        int int8 = response7.statusCode();
        int int9 = response7.numRedirects;
        java.lang.String str10 = response7.charset;
        java.net.URL uRL11 = response7.url();
        org.jsoup.Connection.Response response14 = response7.header("null=null=hi!", "null=null=hi!");
        java.lang.String str16 = response7.getHeaderCaseInsensitive("null=hi!");
        response7.charset = "null=hi!";
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response response19 = org.jsoup.helper.HttpConnection.Response.execute(request5, response7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        response1.charset = "hi!=null";
        response1.statusMessage = "hi!=null";
        org.jsoup.Connection.Response response11 = response1.removeCookie("null=hi!");
        response1.contentType = "";
        java.lang.String str14 = response1.contentType;
        response1.numRedirects = '4';
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document17 = response1.parse();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before parsing response");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        java.lang.String str3 = response1.statusMessage;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        java.lang.String str1 = org.jsoup.helper.HttpConnection.encodeUrl("null=null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null=" + "'", str1.equals("null=null="));
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        boolean boolean6 = request0.ignoreContentType;
        org.jsoup.Connection.Request request9 = request0.cookie("null=hi!", "hi!");
        org.jsoup.Connection.Request request11 = request0.removeCookie("null=hi!");
        org.jsoup.Connection.Request request13 = request0.maxBodySize(307);
        org.jsoup.Connection.Request request15 = request0.ignoreHttpErrors(false);
        int int16 = request0.maxBodySize();
        int int17 = request0.maxBodySize();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 307 + "'", int16 == 307);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 307 + "'", int17 == 307);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        org.jsoup.helper.HttpConnection.KeyVal keyVal0 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str1 = keyVal0.toString();
        keyVal0.value = "";
        keyVal0.value = "null=hi!";
        keyVal0.key = "null=null";
        java.lang.String str8 = keyVal0.toString();
        java.lang.String str9 = keyVal0.value();
        java.lang.String str10 = keyVal0.toString();
        java.lang.String str11 = keyVal0.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "null=null" + "'", str1.equals("null=null"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null=null=null=hi!" + "'", str8.equals("null=null=null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null=hi!" + "'", str9.equals("null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null=null=null=hi!" + "'", str10.equals("null=null=null=hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null=hi!" + "'", str11.equals("null=hi!"));
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        boolean boolean14 = request0.hasHeader("hi!");
        org.jsoup.Connection.Request request16 = request0.removeCookie("");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection17 = request0.data();
        org.jsoup.Connection.Request request20 = request0.header("null=hi!", "");
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response22 = httpConnection21.response();
        org.jsoup.Connection connection24 = httpConnection21.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection25 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response26 = httpConnection25.response();
        httpConnection21.res = response26;
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request28.headers();
        request28.followRedirects = false;
        boolean boolean33 = request28.ignoreHttpErrors;
        org.jsoup.Connection.Method method34 = request28.method();
        org.jsoup.Connection connection35 = httpConnection21.method(method34);
        org.jsoup.Connection.Request request36 = request0.method(method34);
        org.jsoup.helper.HttpConnection.Request request37 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method38 = request37.method();
        boolean boolean39 = request37.ignoreHttpErrors();
        org.jsoup.Connection.Request request42 = request37.cookie("hi!", "");
        boolean boolean43 = request37.ignoreContentType;
        org.jsoup.Connection.Request request46 = request37.cookie("null=hi!", "hi!");
        java.lang.String str48 = request37.getHeaderCaseInsensitive("");
        java.lang.String str50 = request37.cookie("");
        org.jsoup.helper.HttpConnection.Request request51 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method52 = request51.method();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = request51.headers();
        request51.followRedirects = false;
        boolean boolean56 = request51.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request58 = request51.timeout((int) ' ');
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry60 = request51.scanHeaders("null=null");
        org.jsoup.Connection.Request request62 = request51.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request63 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method64 = request63.method();
        boolean boolean65 = request63.ignoreHttpErrors();
        org.jsoup.Connection.Request request68 = request63.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request69 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method70 = request69.method();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = request69.headers();
        request69.followRedirects = false;
        boolean boolean74 = request69.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request76 = request69.timeout((int) ' ');
        java.lang.String str78 = request76.cookie("hi!");
        java.lang.String str80 = request76.header("null=null");
        request76.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request83 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method84 = request83.method();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = request83.headers();
        request83.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser88 = request83.parser;
        request76.parser = parser88;
        org.jsoup.helper.HttpConnection.Request request90 = request63.parser(parser88);
        org.jsoup.helper.HttpConnection.Request request91 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method92 = request91.method();
        org.jsoup.Connection.Request request93 = request90.method(method92);
        org.jsoup.Connection.Request request94 = request51.method(method92);
        org.jsoup.Connection.Request request95 = request37.method(method92);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection96 = request37.data();
        request0.data = keyValCollection96;
        boolean boolean99 = request0.hasHeader("null=hi!=null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response26);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertTrue("'" + method38 + "' != '" + org.jsoup.Connection.Method.GET + "'", method38.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + method52 + "' != '" + org.jsoup.Connection.Method.GET + "'", method52.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
        org.junit.Assert.assertTrue("'" + method64 + "' != '" + org.jsoup.Connection.Method.GET + "'", method64.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request68);
        org.junit.Assert.assertTrue("'" + method70 + "' != '" + org.jsoup.Connection.Method.GET + "'", method70.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + method84 + "' != '" + org.jsoup.Connection.Method.GET + "'", method84.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request90);
        org.junit.Assert.assertTrue("'" + method92 + "' != '" + org.jsoup.Connection.Method.GET + "'", method92.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.charset;
        org.jsoup.Connection.Response response8 = response1.header("null=", "hi!");
        java.lang.String str10 = response1.cookie("");
        java.net.URL uRL11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Response response12 = response1.url(uRL11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.statusMessage();
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean8 = request3.ignoreHttpErrors;
        org.jsoup.Connection.Method method9 = request3.method();
        int int10 = request3.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        boolean boolean13 = request11.followRedirects;
        org.jsoup.Connection.Request request15 = request11.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request11.headers();
        boolean boolean17 = request11.ignoreContentType;
        boolean boolean18 = request11.followRedirects();
        org.jsoup.helper.HttpConnection.Request request19 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method20 = request19.method();
        org.jsoup.Connection.Request request21 = request11.method(method20);
        org.jsoup.Connection.Request request22 = request3.method(method20);
        org.jsoup.Connection.Response response23 = response1.method(method20);
        java.nio.ByteBuffer byteBuffer24 = null;
        response1.byteData = byteBuffer24;
        org.jsoup.Connection.Response response28 = response1.header("null=null=hi!", "null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1048576 + "'", int10 == 1048576);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + method20 + "' != '" + org.jsoup.Connection.Method.GET + "'", method20.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        response1.charset = "hi!=null";
        boolean boolean6 = response1.hasCookie("null=");
        java.lang.String str8 = response1.header("null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.ignoreContentType;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request7.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request10.headers();
        int int13 = request10.timeout();
        org.jsoup.parser.Parser parser14 = request10.parser();
        org.jsoup.helper.HttpConnection.Request request15 = request7.parser(parser14);
        int int16 = request7.maxBodySize();
        org.jsoup.Connection.Request request19 = request7.header("null=null=hi!", "null=");
        boolean boolean20 = request7.ignoreHttpErrors;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3000 + "'", int13 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1048576 + "'", int16 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection35 = request33.data;
        org.jsoup.Connection.Request request38 = request33.cookie("null=hi!", "null=null=hi!");
        java.lang.String str40 = request33.getHeaderCaseInsensitive("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        java.lang.String str14 = request0.cookie("hi!");
        boolean boolean16 = request0.hasCookie("null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request0.headers();
        boolean boolean19 = request0.hasCookie("hi!=null=hi!=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean7 = request0.ignoreContentType();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.cookies();
        org.jsoup.Connection.Request request11 = request0.header("hi!=null", "");
        int int12 = request0.maxBodySizeBytes;
        java.lang.String str14 = request0.header("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1048576 + "'", int12 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.numRedirects;
        java.lang.String str4 = response1.header("hi!=");
        java.net.URL uRL5 = response1.url();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        int int3 = request0.timeout();
        int int4 = request0.timeout();
        org.jsoup.Connection.Request request7 = request0.cookie("hi!=null=hi!=null", "null=null");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3000 + "'", int4 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.Connection.Method method6 = request0.method();
        int int7 = request0.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request8.headers();
        boolean boolean14 = request8.ignoreContentType;
        boolean boolean15 = request8.followRedirects();
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        org.jsoup.Connection.Request request18 = request8.method(method17);
        org.jsoup.Connection.Request request19 = request0.method(method17);
        java.lang.String str20 = org.jsoup.helper.HttpConnection.Response.getRequestCookieString((org.jsoup.Connection.Request) request0);
        org.jsoup.Connection.Request request23 = request0.header("null=null", "hi!=");
        org.jsoup.Connection.Request request25 = request0.removeCookie("null=null=null=hi!=hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1048576 + "'", int7 == 1048576);
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("null=", "null=");
        org.jsoup.helper.HttpConnection.KeyVal keyVal4 = keyVal2.value("null=null=null=hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal4);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        request7.followRedirects = false;
        org.jsoup.parser.Parser parser14 = request7.parser;
        java.lang.String str16 = request7.header("");
        org.jsoup.Connection.Request request18 = request7.ignoreHttpErrors(true);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection10 = request7.data();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection11 = request7.data();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.Response.writePost(keyValCollection11, outputStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection11);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        boolean boolean7 = request5.ignoreHttpErrors();
        org.jsoup.Connection.Request request10 = request5.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request11 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method12 = request11.method();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = request11.headers();
        request11.followRedirects = false;
        boolean boolean16 = request11.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request18 = request11.timeout((int) ' ');
        java.lang.String str20 = request18.cookie("hi!");
        java.lang.String str22 = request18.header("null=null");
        request18.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser30 = request25.parser;
        request18.parser = parser30;
        org.jsoup.helper.HttpConnection.Request request32 = request5.parser(parser30);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        org.jsoup.Connection.Request request35 = request32.method(method34);
        org.jsoup.Connection.Request request36 = request0.method(method34);
        org.jsoup.Connection.Method method37 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        org.junit.Assert.assertTrue("'" + method12 + "' != '" + org.jsoup.Connection.Method.GET + "'", method12.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.net.URL uRL5 = response1.url();
        org.jsoup.Connection.Response response8 = response1.header("null=null=hi!", "null=null=hi!");
        java.nio.ByteBuffer byteBuffer9 = response1.byteData;
        response1.charset = "null=null=";
        response1.contentType = "null=";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(byteBuffer9);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry11 = response1.scanHeaders("null=null=");
        int int12 = response1.numRedirects;
        int int13 = response1.statusCode;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("", "null=null=hi!=null");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Data key must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        java.lang.String str6 = request0.cookie("");
        boolean boolean7 = request0.ignoreContentType();
        java.lang.String str9 = request0.header("hi!=null");
        org.jsoup.Connection.Request request12 = request0.cookie("null=null", "null=null=null=hi!");
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry14 = request0.scanHeaders("null=hi!=");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry14);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request0.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection9 = request0.data();
        org.jsoup.Connection.Request request12 = request0.cookie("hi!=", "hi!=null=hi!=null");
        request0.timeoutMilliseconds = 307;
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!=null", "hi!");
        java.lang.String str3 = keyVal2.value();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "hi!" + "'", str3.equals("hi!"));
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("hi!", "null=null");
        keyVal2.key = "";
        org.jsoup.helper.HttpConnection.KeyVal keyVal6 = keyVal2.value("null=null=hi!");
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = keyVal6.key("null=null=hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal8);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.headers();
        boolean boolean6 = request0.ignoreContentType;
        request0.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = request0.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = request0.cookies();
        java.lang.String str12 = request0.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request14 = request0.timeout(0);
        request14.followRedirects = true;
        org.jsoup.Connection.Method method17 = request14.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection7 = httpConnection0.data("hi!=null", "null=null=");
        org.jsoup.Connection connection9 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection11 = httpConnection0.referrer("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection11);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.lang.String str5 = response1.statusMessage;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry7 = response1.scanHeaders("null=null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry7);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.net.URL uRL4 = response1.url();
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        org.jsoup.helper.HttpConnection.Request request9 = request5.timeout(1048576);
        java.lang.String str11 = request5.getHeaderCaseInsensitive("hi!=null");
        response1.req = request5;
        response1.contentType = "hi!=";
        boolean boolean15 = response1.executed;
        java.lang.String str17 = response1.getHeaderCaseInsensitive("null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        org.jsoup.Connection.Request request5 = request0.removeCookie("");
        int int6 = request0.maxBodySize();
        org.jsoup.Connection.Request request8 = request0.followRedirects(false);
        boolean boolean10 = request0.hasHeader("hi!=null");
        java.net.URL uRL11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection.Request request12 = request0.url(uRL11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1048576 + "'", int6 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        response1.charset = "hi!=null";
        boolean boolean6 = response1.hasCookie("null=");
        java.lang.String str8 = response1.header("null=hi!=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        org.jsoup.Connection connection9 = httpConnection0.ignoreContentType(true);
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        request10.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = request10.cookies();
        httpConnection0.req = request10;
        org.jsoup.helper.HttpConnection httpConnection21 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection23 = httpConnection21.followRedirects(false);
        org.jsoup.Connection connection25 = httpConnection21.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection26 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response27 = httpConnection26.response();
        org.jsoup.helper.HttpConnection httpConnection28 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response29 = httpConnection28.response();
        org.jsoup.Connection connection31 = httpConnection28.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection32 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response33 = httpConnection32.response();
        httpConnection28.res = response33;
        httpConnection26.res = response33;
        org.jsoup.Connection connection36 = httpConnection21.response(response33);
        httpConnection0.res = response33;
        org.jsoup.helper.HttpConnection.Request request38 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method39 = request38.method();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = request38.headers();
        request38.followRedirects = false;
        boolean boolean43 = request38.ignoreHttpErrors;
        org.jsoup.Connection.Method method44 = request38.method();
        int int45 = request38.maxBodySizeBytes;
        org.jsoup.Connection.Method method46 = request38.method();
        org.jsoup.Connection connection47 = httpConnection0.method(method46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection36);
        org.junit.Assert.assertTrue("'" + method39 + "' != '" + org.jsoup.Connection.Method.GET + "'", method39.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + method44 + "' != '" + org.jsoup.Connection.Method.GET + "'", method44.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1048576 + "'", int45 == 1048576);
        org.junit.Assert.assertTrue("'" + method46 + "' != '" + org.jsoup.Connection.Method.GET + "'", method46.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection47);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.referrer("");
        org.jsoup.Connection connection6 = httpConnection0.ignoreContentType(false);
        org.jsoup.helper.HttpConnection.Request request7 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method8 = request7.method();
        boolean boolean9 = request7.followRedirects;
        org.jsoup.Connection.Request request11 = request7.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = request7.headers();
        org.jsoup.Connection connection13 = httpConnection0.data(strMap12);
        org.jsoup.Connection connection16 = httpConnection0.header("hi!", "null=hi!");
        org.jsoup.Connection connection18 = httpConnection0.timeout(0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        org.junit.Assert.assertTrue("'" + method8 + "' != '" + org.jsoup.Connection.Method.GET + "'", method8.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = org.jsoup.helper.HttpConnection.KeyVal.create("null=", "null=null=");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal2);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        boolean boolean8 = request7.followRedirects();
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry10 = request7.scanHeaders("");
        request7.ignoreContentType = false;
        org.jsoup.Connection.Method method13 = request7.method();
        org.jsoup.helper.HttpConnection httpConnection14 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response15 = httpConnection14.response();
        org.jsoup.Connection.Request request16 = httpConnection14.req;
        org.jsoup.Connection connection18 = httpConnection14.ignoreContentType(false);
        org.jsoup.helper.HttpConnection httpConnection19 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection21 = httpConnection19.followRedirects(false);
        org.jsoup.Connection connection23 = httpConnection19.followRedirects(false);
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response25 = httpConnection24.response();
        org.jsoup.helper.HttpConnection httpConnection26 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response27 = httpConnection26.response();
        org.jsoup.Connection connection29 = httpConnection26.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection30 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response31 = httpConnection30.response();
        httpConnection26.res = response31;
        httpConnection24.res = response31;
        org.jsoup.Connection connection34 = httpConnection19.response(response31);
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        boolean boolean37 = request35.followRedirects;
        org.jsoup.Connection.Request request39 = request35.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = request35.cookies();
        org.jsoup.Connection connection41 = httpConnection19.cookies(strMap40);
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request42.headers();
        request42.followRedirects = false;
        boolean boolean47 = request42.ignoreHttpErrors;
        org.jsoup.Connection.Method method48 = request42.method();
        int int49 = request42.maxBodySizeBytes;
        org.jsoup.helper.HttpConnection.Request request50 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method51 = request50.method();
        boolean boolean52 = request50.followRedirects;
        org.jsoup.Connection.Request request54 = request50.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = request50.headers();
        boolean boolean56 = request50.ignoreContentType;
        boolean boolean57 = request50.followRedirects();
        org.jsoup.helper.HttpConnection.Request request58 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method59 = request58.method();
        org.jsoup.Connection.Request request60 = request50.method(method59);
        org.jsoup.Connection.Request request61 = request42.method(method59);
        org.jsoup.Connection connection62 = httpConnection19.method(method59);
        org.jsoup.Connection connection63 = httpConnection14.method(method59);
        org.jsoup.Connection.Request request64 = request7.method(method59);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry10);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection41);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1048576 + "'", int49 == 1048576);
        org.junit.Assert.assertTrue("'" + method51 + "' != '" + org.jsoup.Connection.Method.GET + "'", method51.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + method59 + "' != '" + org.jsoup.Connection.Method.GET + "'", method59.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        java.lang.String str2 = response1.contentType();
        java.net.URL uRL3 = response1.url();
        java.lang.String str4 = response1.charset;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = response1.body();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Request must be executed (with .execute(), .get(), or .post() before getting response body");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request0.cookies();
        boolean boolean7 = request0.hasCookie("");
        org.jsoup.helper.HttpConnection.KeyVal keyVal8 = new org.jsoup.helper.HttpConnection.KeyVal();
        java.lang.String str9 = keyVal8.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal11 = keyVal8.value("hi!");
        java.lang.String str12 = keyVal8.key();
        org.jsoup.helper.HttpConnection.KeyVal keyVal14 = keyVal8.value("hi!");
        java.lang.String str15 = keyVal8.key();
        org.jsoup.helper.HttpConnection.Request request16 = request0.data((org.jsoup.Connection.KeyVal) keyVal8);
        request16.ignoreContentType = true;
        boolean boolean19 = request16.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request21 = request16.timeout(32);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry23 = request16.scanHeaders("null=null");
        java.lang.String str25 = request16.cookie("null=null=");
        org.jsoup.Connection.Method method26 = request16.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyVal14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection.Response response5 = httpConnection0.res;
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        org.jsoup.helper.HttpConnection.Request request8 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method9 = request8.method();
        boolean boolean10 = request8.followRedirects;
        org.jsoup.Connection.Request request12 = request8.followRedirects(true);
        java.lang.String str14 = request8.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        org.jsoup.Connection.Request request17 = request8.method(method16);
        org.jsoup.Connection.Request request18 = request6.method(method16);
        boolean boolean20 = request6.hasHeader("hi!");
        org.jsoup.Connection.Request request22 = request6.removeCookie("");
        httpConnection0.req = request22;
        org.jsoup.helper.HttpConnection httpConnection24 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request25 = null;
        org.jsoup.Connection connection26 = httpConnection24.request(request25);
        org.jsoup.helper.HttpConnection httpConnection27 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response28 = httpConnection27.response();
        org.jsoup.Connection connection29 = httpConnection24.response(response28);
        httpConnection0.res = response28;
        org.jsoup.Connection connection32 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request33.headers();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = request33.headers();
        org.jsoup.Connection.Method method37 = request33.method();
        org.jsoup.Connection connection38 = httpConnection0.method(method37);
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        boolean boolean41 = request39.followRedirects;
        org.jsoup.Connection.Request request43 = request39.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request39.headers();
        boolean boolean45 = request39.ignoreContentType;
        request39.ignoreHttpErrors = true;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = request39.cookies();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = request39.cookies();
        java.lang.String str51 = request39.getHeaderCaseInsensitive("null=null");
        org.jsoup.helper.HttpConnection.Request request53 = request39.timeout(0);
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection54 = request39.data();
        org.jsoup.Connection connection55 = httpConnection0.data(keyValCollection54);
        org.jsoup.Connection connection57 = httpConnection0.ignoreHttpErrors(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method9 + "' != '" + org.jsoup.Connection.Method.GET + "'", method9.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection32);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + method37 + "' != '" + org.jsoup.Connection.Method.GET + "'", method37.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection connection5 = httpConnection0.timeout((int) 'a');
        org.jsoup.helper.HttpConnection.Request request6 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method7 = request6.method();
        boolean boolean8 = request6.ignoreHttpErrors();
        org.jsoup.Connection.Request request11 = request6.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request12 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method13 = request12.method();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request12.headers();
        request12.followRedirects = false;
        boolean boolean17 = request12.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request19 = request12.timeout((int) ' ');
        java.lang.String str21 = request19.cookie("hi!");
        java.lang.String str23 = request19.header("null=null");
        request19.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request26 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method27 = request26.method();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = request26.headers();
        request26.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser31 = request26.parser;
        request19.parser = parser31;
        org.jsoup.helper.HttpConnection.Request request33 = request6.parser(parser31);
        org.jsoup.Connection connection34 = httpConnection0.request((org.jsoup.Connection.Request) request33);
        org.jsoup.helper.HttpConnection.Request request35 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method36 = request35.method();
        boolean boolean37 = request35.followRedirects;
        org.jsoup.Connection.Request request39 = request35.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = request35.headers();
        boolean boolean41 = request35.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request42 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method43 = request42.method();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = request42.headers();
        request42.followRedirects = false;
        boolean boolean47 = request42.ignoreHttpErrors;
        org.jsoup.Connection.Method method48 = request42.method();
        org.jsoup.helper.HttpConnection.Request request49 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method50 = request49.method();
        boolean boolean51 = request49.followRedirects;
        org.jsoup.Connection.Request request53 = request49.followRedirects(true);
        java.lang.String str55 = request49.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request56 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method57 = request56.method();
        org.jsoup.Connection.Request request58 = request49.method(method57);
        org.jsoup.Connection.Request request59 = request42.method(method57);
        org.jsoup.Connection.Request request60 = request35.method(method57);
        org.jsoup.Connection connection61 = httpConnection0.method(method57);
        org.jsoup.Connection.Request request62 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection5);
        org.junit.Assert.assertTrue("'" + method7 + "' != '" + org.jsoup.Connection.Method.GET + "'", method7.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        org.junit.Assert.assertTrue("'" + method13 + "' != '" + org.jsoup.Connection.Method.GET + "'", method13.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + method27 + "' != '" + org.jsoup.Connection.Method.GET + "'", method27.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection34);
        org.junit.Assert.assertTrue("'" + method36 + "' != '" + org.jsoup.Connection.Method.GET + "'", method36.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + method43 + "' != '" + org.jsoup.Connection.Method.GET + "'", method43.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method50 + "' != '" + org.jsoup.Connection.Method.GET + "'", method50.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + method57 + "' != '" + org.jsoup.Connection.Method.GET + "'", method57.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request62);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.followRedirects;
        org.jsoup.Connection.Request request4 = request0.followRedirects(true);
        java.lang.String str6 = request0.header("null=hi!");
        java.lang.String str8 = request0.cookie("null=null=null=hi!");
        org.jsoup.Connection.Request request10 = request0.removeCookie("null=hi!");
        java.lang.String str12 = request0.getHeaderCaseInsensitive("hi!");
        org.jsoup.Connection.Request request15 = request0.cookie("null=null=null=hi!", "null=null=null=hi!=hi!");
        int int16 = request0.maxBodySize();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1048576 + "'", int16 == 1048576);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Response response3 = null;
        org.jsoup.helper.HttpConnection.Response response4 = new org.jsoup.helper.HttpConnection.Response(response3);
        int int5 = response4.statusCode();
        int int6 = response4.numRedirects;
        java.lang.String str7 = response4.charset;
        httpConnection0.res = response4;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        response1.statusCode = (short) -1;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = response1.headers();
        org.jsoup.helper.HttpConnection.Request request10 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method11 = request10.method();
        boolean boolean12 = request10.followRedirects;
        org.jsoup.Connection.Request request14 = request10.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = request10.headers();
        boolean boolean16 = request10.ignoreContentType;
        boolean boolean17 = request10.followRedirects();
        org.jsoup.helper.HttpConnection.Request request18 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method19 = request18.method();
        org.jsoup.Connection.Request request20 = request10.method(method19);
        org.jsoup.Connection.Response response21 = response1.method(method19);
        int int22 = response1.numRedirects;
        org.jsoup.Connection.Method method23 = response1.method();
        int int24 = response1.statusCode;
        org.jsoup.helper.HttpConnection.Request request25 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method26 = request25.method();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = request25.headers();
        request25.followRedirects = false;
        boolean boolean30 = request25.ignoreHttpErrors;
        org.jsoup.Connection.Method method31 = request25.method();
        int int32 = request25.maxBodySizeBytes;
        boolean boolean33 = request25.followRedirects();
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection34 = request25.data;
        response1.req = request25;
        java.lang.String str37 = response1.cookie("null=hi!");
        java.lang.String str38 = response1.contentType();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + method11 + "' != '" + org.jsoup.Connection.Method.GET + "'", method11.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + method19 + "' != '" + org.jsoup.Connection.Method.GET + "'", method19.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + method23 + "' != '" + org.jsoup.Connection.Method.GET + "'", method23.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + method26 + "' != '" + org.jsoup.Connection.Method.GET + "'", method26.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + method31 + "' != '" + org.jsoup.Connection.Method.GET + "'", method31.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1048576 + "'", int32 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null=null=null=hi!" + "'", str38.equals("null=null=null=hi!"));
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request3 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method4 = request3.method();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = request3.headers();
        request3.followRedirects = false;
        boolean boolean9 = request3.hasCookie("null=null");
        java.lang.String str11 = request3.getHeaderCaseInsensitive("null=hi!");
        org.jsoup.Connection connection12 = httpConnection0.request((org.jsoup.Connection.Request) request3);
        org.jsoup.Connection.Request request14 = request3.maxBodySize(0);
        java.net.URL uRL15 = request3.url();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = request3.cookies();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        org.junit.Assert.assertTrue("'" + method4 + "' != '" + org.jsoup.Connection.Method.GET + "'", method4.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.Connection.Request request3 = request0.ignoreContentType(false);
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry5 = request0.scanHeaders("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = request0.headers();
        java.net.URL uRL7 = request0.url();
        int int8 = request0.maxBodySizeBytes;
        java.lang.String str10 = request0.header("null=null=");
        org.jsoup.Connection.Request request12 = request0.removeCookie("hi!");
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1048576 + "'", int8 == 1048576);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        int int3 = request0.timeout();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = request0.cookies();
        org.jsoup.Connection.Method method5 = request0.method();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3000 + "'", int3 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + method5 + "' != '" + org.jsoup.Connection.Method.GET + "'", method5.equals(org.jsoup.Connection.Method.GET));
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        java.util.Map.Entry<java.lang.String, java.lang.String> strEntry6 = response1.scanHeaders("");
        java.net.URL uRL7 = response1.url();
        int int8 = response1.statusCode();
        boolean boolean9 = response1.executed;
        java.net.HttpURLConnection httpURLConnection10 = null;
        org.jsoup.helper.HttpConnection.Response response11 = null;
        org.jsoup.helper.HttpConnection.Response response12 = new org.jsoup.helper.HttpConnection.Response(response11);
        org.jsoup.Connection.Method method13 = response12.method();
        boolean boolean15 = response12.hasCookie("");
        boolean boolean17 = response12.hasCookie("null=");
        org.jsoup.Connection.Response response20 = response12.cookie("null=null=", "null=null=hi!");
        response12.statusMessage = "null=hi!=";
        // The following exception was thrown during execution in test generation
        try {
            response1.setupFromConnection(httpURLConnection10, (org.jsoup.Connection.Response) response12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strEntry6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uRL7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(method13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        org.jsoup.helper.HttpConnection.Request request2 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method3 = request2.method();
        boolean boolean4 = request2.followRedirects;
        org.jsoup.Connection.Request request6 = request2.followRedirects(true);
        java.lang.String str8 = request2.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        org.jsoup.Connection.Request request11 = request2.method(method10);
        org.jsoup.Connection.Request request12 = request0.method(method10);
        org.jsoup.parser.Parser parser13 = request0.parser;
        java.util.Map<java.lang.String, java.lang.String> strMap14 = request0.cookies();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method3 + "' != '" + org.jsoup.Connection.Method.GET + "'", method3.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection.Request request3 = httpConnection0.req;
        org.jsoup.Connection.Request request4 = httpConnection0.request();
        org.jsoup.Connection connection6 = httpConnection0.maxBodySize((int) (short) 0);
        java.net.URL uRL7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.Connection connection8 = httpConnection0.url(uRL7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: URL must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection.Request request2 = httpConnection0.request();
        org.jsoup.Connection connection4 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection.Request request5 = httpConnection0.request();
        org.jsoup.Connection connection7 = httpConnection0.referrer("null=hi!");
        org.jsoup.helper.HttpConnection httpConnection8 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request9 = null;
        org.jsoup.Connection connection10 = httpConnection8.request(request9);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response12 = httpConnection11.response();
        org.jsoup.Connection.Request request13 = httpConnection11.request();
        org.jsoup.Connection connection14 = httpConnection8.request(request13);
        org.jsoup.helper.HttpConnection httpConnection15 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection17 = httpConnection15.followRedirects(false);
        org.jsoup.Connection connection19 = httpConnection15.referrer("");
        org.jsoup.Connection.Response response20 = httpConnection15.response();
        org.jsoup.Connection connection21 = httpConnection8.response(response20);
        org.jsoup.Connection connection23 = httpConnection8.followRedirects(false);
        org.jsoup.helper.HttpConnection.Request request24 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method25 = request24.method();
        boolean boolean26 = request24.ignoreHttpErrors();
        org.jsoup.Connection.Request request29 = request24.cookie("hi!", "");
        java.lang.String str31 = request24.cookie("null=hi!");
        org.jsoup.helper.HttpConnection.Request request32 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method33 = request32.method();
        boolean boolean34 = request32.followRedirects;
        org.jsoup.Connection.Request request36 = request32.followRedirects(true);
        java.lang.String str38 = request32.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request39 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method40 = request39.method();
        org.jsoup.Connection.Request request41 = request32.method(method40);
        org.jsoup.Connection.Request request42 = request24.method(method40);
        org.jsoup.Connection connection43 = httpConnection8.method(method40);
        org.jsoup.Connection connection45 = httpConnection8.referrer("null=null=null=hi!");
        org.jsoup.helper.HttpConnection httpConnection46 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response47 = httpConnection46.response();
        org.jsoup.Connection connection49 = httpConnection46.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection50 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response51 = httpConnection50.response();
        httpConnection46.res = response51;
        java.lang.String[] strArray55 = new java.lang.String[] { "null=null", "null=null" };
        org.jsoup.Connection connection56 = httpConnection46.data(strArray55);
        org.jsoup.Connection connection57 = httpConnection8.data(strArray55);
        org.jsoup.Connection connection58 = httpConnection0.data(strArray55);
        org.jsoup.helper.HttpConnection.Request request59 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method60 = request59.method();
        boolean boolean61 = request59.followRedirects;
        org.jsoup.Connection.Request request63 = request59.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = request59.cookies();
        boolean boolean66 = request59.hasCookie("null=null");
        boolean boolean68 = request59.hasHeader("null=hi!");
        org.jsoup.Connection.Request request70 = request59.removeCookie("null=null");
        org.jsoup.Connection connection71 = httpConnection0.request((org.jsoup.Connection.Request) request59);
        org.jsoup.Connection.Request request73 = request59.ignoreContentType(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection23);
        org.junit.Assert.assertTrue("'" + method25 + "' != '" + org.jsoup.Connection.Method.GET + "'", method25.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + method33 + "' != '" + org.jsoup.Connection.Method.GET + "'", method33.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + method40 + "' != '" + org.jsoup.Connection.Method.GET + "'", method40.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection58);
        org.junit.Assert.assertTrue("'" + method60 + "' != '" + org.jsoup.Connection.Method.GET + "'", method60.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request73);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        org.jsoup.helper.HttpConnection.KeyVal keyVal2 = new org.jsoup.helper.HttpConnection.KeyVal("hi!", "");
        java.lang.String str3 = keyVal2.value();
        java.lang.String str4 = keyVal2.value;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = request0.headers();
        request0.followRedirects = false;
        boolean boolean5 = request0.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request7 = request0.timeout((int) ' ');
        java.lang.String str9 = request7.cookie("hi!");
        java.lang.String str11 = request7.header("null=null");
        request7.followRedirects = false;
        java.lang.String str15 = request7.header("null=null=hi!");
        int int16 = request7.timeout();
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response1 = httpConnection0.response();
        org.jsoup.Connection connection3 = httpConnection0.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request4 = httpConnection0.req;
        org.jsoup.helper.HttpConnection.Request request5 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method6 = request5.method();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = request5.headers();
        request5.followRedirects = false;
        boolean boolean10 = request5.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request12 = request5.timeout((int) ' ');
        java.lang.String str14 = request12.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection15 = request12.data();
        org.jsoup.Connection connection16 = httpConnection0.data(keyValCollection15);
        org.jsoup.Connection connection18 = httpConnection0.ignoreContentType(true);
        org.jsoup.Connection connection20 = httpConnection0.ignoreHttpErrors(true);
        org.jsoup.Connection connection22 = httpConnection0.followRedirects(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request4);
        org.junit.Assert.assertTrue("'" + method6 + "' != '" + org.jsoup.Connection.Method.GET + "'", method6.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Request request1 = null;
        org.jsoup.Connection connection2 = httpConnection0.request(request1);
        org.jsoup.helper.HttpConnection httpConnection3 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response4 = httpConnection3.response();
        org.jsoup.Connection.Request request5 = httpConnection3.request();
        org.jsoup.Connection connection6 = httpConnection0.request(request5);
        org.jsoup.helper.HttpConnection httpConnection7 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response8 = httpConnection7.response();
        org.jsoup.Connection connection10 = httpConnection7.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection11 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection14 = httpConnection11.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request15 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method16 = request15.method();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = request15.headers();
        int int18 = request15.timeout();
        org.jsoup.parser.Parser parser19 = request15.parser();
        org.jsoup.Connection connection20 = httpConnection11.parser(parser19);
        org.jsoup.Connection connection21 = httpConnection7.parser(parser19);
        org.jsoup.Connection connection22 = httpConnection0.parser(parser19);
        org.jsoup.helper.HttpConnection httpConnection23 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response24 = httpConnection23.response();
        org.jsoup.Connection connection26 = httpConnection23.maxBodySize((int) (short) 0);
        org.jsoup.Connection.Request request27 = httpConnection23.req;
        org.jsoup.helper.HttpConnection.Request request28 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method29 = request28.method();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = request28.headers();
        request28.followRedirects = false;
        boolean boolean33 = request28.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request35 = request28.timeout((int) ' ');
        java.lang.String str37 = request35.cookie("hi!");
        java.util.Collection<org.jsoup.Connection.KeyVal> keyValCollection38 = request35.data();
        org.jsoup.Connection connection39 = httpConnection23.data(keyValCollection38);
        org.jsoup.helper.HttpConnection.Request request40 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method41 = request40.method();
        boolean boolean42 = request40.followRedirects;
        org.jsoup.Connection.Request request44 = request40.followRedirects(true);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = request40.headers();
        boolean boolean46 = request40.ignoreContentType;
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = request47.headers();
        request47.followRedirects = false;
        boolean boolean52 = request47.ignoreHttpErrors;
        org.jsoup.Connection.Method method53 = request47.method();
        org.jsoup.helper.HttpConnection.Request request54 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method55 = request54.method();
        boolean boolean56 = request54.followRedirects;
        org.jsoup.Connection.Request request58 = request54.followRedirects(true);
        java.lang.String str60 = request54.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request61 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method62 = request61.method();
        org.jsoup.Connection.Request request63 = request54.method(method62);
        org.jsoup.Connection.Request request64 = request47.method(method62);
        org.jsoup.Connection.Request request65 = request40.method(method62);
        org.jsoup.Connection connection66 = httpConnection23.method(method62);
        org.jsoup.Connection connection67 = httpConnection0.method(method62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection14);
        org.junit.Assert.assertTrue("'" + method16 + "' != '" + org.jsoup.Connection.Method.GET + "'", method16.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3000 + "'", int18 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request27);
        org.junit.Assert.assertTrue("'" + method29 + "' != '" + org.jsoup.Connection.Method.GET + "'", method29.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(keyValCollection38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection39);
        org.junit.Assert.assertTrue("'" + method41 + "' != '" + org.jsoup.Connection.Method.GET + "'", method41.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + method53 + "' != '" + org.jsoup.Connection.Method.GET + "'", method53.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method55 + "' != '" + org.jsoup.Connection.Method.GET + "'", method55.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + method62 + "' != '" + org.jsoup.Connection.Method.GET + "'", method62.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection67);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        org.jsoup.helper.HttpConnection.Request request0 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method1 = request0.method();
        boolean boolean2 = request0.ignoreHttpErrors();
        org.jsoup.Connection.Request request5 = request0.cookie("hi!", "");
        java.lang.String str7 = request0.cookie("null=hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = request0.cookies();
        org.jsoup.helper.HttpConnection.Request request9 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method10 = request9.method();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = request9.headers();
        request9.followRedirects = false;
        boolean boolean14 = request9.ignoreHttpErrors;
        org.jsoup.Connection.Method method15 = request9.method();
        org.jsoup.helper.HttpConnection.Request request16 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method17 = request16.method();
        boolean boolean18 = request16.followRedirects;
        org.jsoup.Connection.Request request20 = request16.followRedirects(true);
        java.lang.String str22 = request16.header("null=hi!");
        org.jsoup.helper.HttpConnection.Request request23 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method24 = request23.method();
        org.jsoup.Connection.Request request25 = request16.method(method24);
        org.jsoup.Connection.Request request26 = request9.method(method24);
        org.jsoup.helper.HttpConnection.Request request27 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method28 = request27.method();
        boolean boolean29 = request27.ignoreHttpErrors();
        org.jsoup.Connection.Request request32 = request27.cookie("hi!", "");
        org.jsoup.helper.HttpConnection.Request request33 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method34 = request33.method();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = request33.headers();
        request33.followRedirects = false;
        boolean boolean38 = request33.ignoreHttpErrors;
        org.jsoup.helper.HttpConnection.Request request40 = request33.timeout((int) ' ');
        java.lang.String str42 = request40.cookie("hi!");
        java.lang.String str44 = request40.header("null=null");
        request40.followRedirects = false;
        org.jsoup.helper.HttpConnection.Request request47 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method48 = request47.method();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = request47.headers();
        request47.ignoreHttpErrors = false;
        org.jsoup.parser.Parser parser52 = request47.parser;
        request40.parser = parser52;
        org.jsoup.helper.HttpConnection.Request request54 = request27.parser(parser52);
        boolean boolean55 = request27.ignoreHttpErrors();
        org.jsoup.helper.HttpConnection httpConnection56 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection.Response response57 = httpConnection56.response();
        org.jsoup.Connection connection59 = httpConnection56.followRedirects(true);
        org.jsoup.helper.HttpConnection httpConnection60 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection63 = httpConnection60.data("hi!", "hi!");
        org.jsoup.helper.HttpConnection.Request request64 = new org.jsoup.helper.HttpConnection.Request();
        org.jsoup.Connection.Method method65 = request64.method();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = request64.headers();
        int int67 = request64.timeout();
        org.jsoup.parser.Parser parser68 = request64.parser();
        org.jsoup.Connection connection69 = httpConnection60.parser(parser68);
        org.jsoup.Connection connection70 = httpConnection56.parser(parser68);
        org.jsoup.helper.HttpConnection.Request request71 = request27.parser(parser68);
        org.jsoup.Connection.Request request74 = request71.header("hi!=null", "null=null=null=hi!");
        org.jsoup.Connection.Method method75 = request71.method();
        org.jsoup.Connection.Request request76 = request9.method(method75);
        org.jsoup.Connection.Request request77 = request0.method(method75);
        org.junit.Assert.assertTrue("'" + method1 + "' != '" + org.jsoup.Connection.Method.GET + "'", method1.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + method10 + "' != '" + org.jsoup.Connection.Method.GET + "'", method10.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + method15 + "' != '" + org.jsoup.Connection.Method.GET + "'", method15.equals(org.jsoup.Connection.Method.GET));
        org.junit.Assert.assertTrue("'" + method17 + "' != '" + org.jsoup.Connection.Method.GET + "'", method17.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + method24 + "' != '" + org.jsoup.Connection.Method.GET + "'", method24.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request26);
        org.junit.Assert.assertTrue("'" + method28 + "' != '" + org.jsoup.Connection.Method.GET + "'", method28.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertTrue("'" + method34 + "' != '" + org.jsoup.Connection.Method.GET + "'", method34.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + method48 + "' != '" + org.jsoup.Connection.Method.GET + "'", method48.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(response57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection63);
        org.junit.Assert.assertTrue("'" + method65 + "' != '" + org.jsoup.Connection.Method.GET + "'", method65.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 3000 + "'", int67 == 3000);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parser68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request74);
        org.junit.Assert.assertTrue("'" + method75 + "' != '" + org.jsoup.Connection.Method.GET + "'", method75.equals(org.jsoup.Connection.Method.GET));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request77);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        org.jsoup.helper.HttpConnection.Response response0 = null;
        org.jsoup.helper.HttpConnection.Response response1 = new org.jsoup.helper.HttpConnection.Response(response0);
        int int2 = response1.statusCode();
        int int3 = response1.numRedirects;
        java.lang.String str4 = response1.charset;
        response1.contentType = "null=null=null=hi!";
        java.lang.String str7 = response1.statusMessage();
        java.nio.ByteBuffer byteBuffer8 = null;
        response1.byteData = byteBuffer8;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = response1.cookies();
        boolean boolean12 = response1.hasCookie("hi!=null");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        org.jsoup.helper.HttpConnection httpConnection0 = new org.jsoup.helper.HttpConnection();
        org.jsoup.Connection connection2 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection4 = httpConnection0.followRedirects(false);
        org.jsoup.Connection connection6 = httpConnection0.userAgent("null=null");
        org.jsoup.Connection.Request request7 = httpConnection0.req;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(connection6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(request7);
    }
}

