/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 29 15:08:52 GMT 2020
 */

package org.elasticsearch.river.mongodb;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mongodb.BasicDBList;
import com.mongodb.BasicDBObject;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.LazyWriteableDBObject;
import com.mongodb.ServerAddress;
import com.mongodb.WriteConcern;
import com.mongodb.gridfs.GridFSDBFile;
import java.util.concurrent.atomic.AtomicLong;
import java.util.function.Function;
import org.elasticsearch.common.logging.ESLoggerFactory;
import org.elasticsearch.river.mongodb.MongoDBRiverDefinition;
import org.elasticsearch.river.mongodb.Operation;
import org.elasticsearch.river.mongodb.Slurper;
import org.elasticsearch.river.mongodb.Timestamp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Slurper_ESTest extends Slurper_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      BasicDBObject basicDBObject0 = MongoDBRiverDefinition.convertToBasicDBObject(slurper0.cmdOplogNamespace);
      // Undeclared exception!
      try { 
        slurper0.assignCollections();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      BasicDBObject basicDBObject0 = null;
      DBCollection dBCollection0 = slurper0.oplogCollection;
      // Undeclared exception!
      try { 
        slurper0.doInitialImport(dBCollection0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      String string0 = "p>]PcU`qlZ`@d";
      BasicDBList basicDBList0 = new BasicDBList();
      BasicDBObject basicDBObject0 = new BasicDBObject(string0, basicDBList0);
      int int0 = 2330;
      basicDBList0.ensureCapacity(int0);
      String string1 = ".files";
      BasicDBObject basicDBObject1 = slurper0.getFilterForInitialImport(basicDBObject0, string1);
      ESLoggerFactory eSLoggerFactory0 = mock(ESLoggerFactory.class, new ViolatedAssumptionAnswer());
      ESLoggerFactory.setDefaultFactory(eSLoggerFactory0);
      String string2 = "collection: {}";
      // Undeclared exception!
      try { 
        slurper0.getCollectionFromNamespace(string2);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }

  @Test(timeout = 11000)
  public void test3()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      // Undeclared exception!
      try { 
        slurper0.processFullOplog();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }

  @Test(timeout = 11000)
  public void test4()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      // Undeclared exception!
      try { 
        slurper0.getCurrentOplogTimestamp();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }

  @Test(timeout = 11000)
  public void test5()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      long long0 = 1L;
      AtomicLong atomicLong0 = new AtomicLong(long0);
      slurper0.totalDocuments = atomicLong0;
      // Undeclared exception!
      try { 
        slurper0.isIndexEmpty();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiver", e);
      }
  }
}
