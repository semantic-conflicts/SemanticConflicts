/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 29 15:25:39 GMT 2020
 */

package org.elasticsearch.river.mongodb;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mongodb.BasicDBObject;
import com.mongodb.CommandResult;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.LazyDBList;
import com.mongodb.LazyDBObject;
import com.mongodb.Mongo;
import com.mongodb.WriteConcern;
import com.mongodb.gridfs.GridFSInputFile;
import com.spatial4j.core.context.SpatialContext;
import com.spatial4j.core.context.SpatialContextFactory;
import com.spatial4j.core.shape.impl.PointImpl;
import java.util.Map;
import java.util.function.BiFunction;
import org.bson.LazyBSONCallback;
import org.bson.io.BSONByteBuffer;
import org.elasticsearch.common.logging.ESLoggerFactory;
import org.elasticsearch.river.mongodb.Operation;
import org.elasticsearch.river.mongodb.Slurper;
import org.elasticsearch.river.mongodb.Timestamp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Slurper_ESTest extends Slurper_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      String string0 = null;
      Slurper.SlurperException slurper_SlurperException0 = slurper0.new SlurperException(string0);
      DBObject dBObject0 = null;
      // Undeclared exception!
      try { 
        slurper0.applyFieldFilter(dBObject0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      // Undeclared exception!
      try { 
        slurper0.processFullOplog();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      // Undeclared exception!
      try { 
        slurper0.run();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)7;
      byteArray0[0] = byte0;
      byte byte1 = (byte)119;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-117);
      byteArray0[3] = byte3;
      byte byte4 = (byte)62;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-12);
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-102);
      byteArray0[6] = byte6;
      LazyBSONCallback lazyBSONCallback0 = new LazyBSONCallback();
      LazyDBList lazyDBList0 = new LazyDBList(byteArray0, lazyBSONCallback0);
      // Undeclared exception!
      try { 
        slurper0.flattenOps(lazyDBList0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      // Undeclared exception!
      try { 
        slurper0.isIndexEmpty();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiver", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      // Undeclared exception!
      try { 
        slurper0.getCurrentOplogTimestamp();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      int int0 = (-3028);
      DBCollection dBCollection0 = slurper0.oplogCollection;
      slurper0.oplogCollection = dBCollection0;
      String string0 = ",&Q1S0hG(4";
      // Undeclared exception!
      try { 
        slurper0.updateIndexRefresh(string0, dBCollection0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      String string0 = "collection: {}";
      // Undeclared exception!
      try { 
        slurper0.getCollectionFromNamespace(string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      ESLoggerFactory eSLoggerFactory0 = mock(ESLoggerFactory.class, new ViolatedAssumptionAnswer());
      ESLoggerFactory.setDefaultFactory(eSLoggerFactory0);
      DBCollection dBCollection0 = slurper0.oplogCollection;
      String string0 = "9G #<jvdI/g";
      // Undeclared exception!
      try { 
        slurper0.getCollectionFromNamespace(string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      String string0 = "^NP";
      slurper0.cmdOplogNamespace = string0;
      BasicDBObject basicDBObject0 = new BasicDBObject(slurper0.gridfsOplogNamespace, slurper0);
      BiFunction<Object, Object, GridFSInputFile> biFunction0 = (BiFunction<Object, Object, GridFSInputFile>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , any());
      basicDBObject0.replaceAll(biFunction0);
      slurper0.findKeys = basicDBObject0;
      Slurper.SlurperException slurper_SlurperException0 = slurper0.new SlurperException();
      slurper0.flattenOps(basicDBObject0);
      DBCollection dBCollection0 = slurper0.oplogCollection;
      // Undeclared exception!
      try { 
        slurper0.doInitialImport(dBCollection0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      Slurper slurper0 = new Slurper();
      byte[] byteArray0 = new byte[1];
      String string0 = "";
      slurper0.gridfsOplogNamespace = string0;
      byte byte0 = (byte)74;
      DBObject dBObject0 = null;
      // Undeclared exception!
      try { 
        slurper0.filterMatch(dBObject0, dBObject0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }
}
