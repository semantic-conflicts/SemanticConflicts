/*
 * This file was automatically generated by EvoSuite
 * Fri May 01 17:00:42 GMT 2020
 */

package org.springframework.boot.loader.archive;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;
import org.springframework.boot.loader.archive.Archive;
import org.springframework.boot.loader.archive.ExplodedArchive;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExplodedArchive_ESTest extends ExplodedArchive_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ExplodedArchive explodedArchive0 = new ExplodedArchive(mockFile0, false);
      // EXCEPTION DIFF:
      // The original version did not exhibit this exception:
      //     java.lang.IllegalArgumentException : object is not an instance of declaring class
      explodedArchive0.iterator();
      Archive.Entry archive_Entry0 = mock(Archive.Entry.class, new ViolatedAssumptionAnswer());
      // EXCEPTION DIFF:
      // The modified version did not exhibit this exception:
      //     java.lang.ClassCastException : org.springframework.boot.loader.archive.Archive$Entry$MockitoMock$54522957 cannot be cast to org.springframework.boot.loader.archive.ExplodedArchive$FileEntry
      // Undeclared exception!
      try { 
        explodedArchive0.getNestedArchive(archive_Entry0);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.springframework.boot.loader.archive.Archive$Entry$MockitoMock$54522957 cannot be cast to org.springframework.boot.loader.archive.ExplodedArchive$FileEntry
         //
         verifyException("org.springframework.boot.loader.archive.ExplodedArchive", e);
         assertTrue(e.getMessage().equals("org.springframework.boot.loader.archive.Archive$Entry$MockitoMock$54522957 cannot be cast to org.springframework.boot.loader.archive.ExplodedArchive$FileEntry"));   
      }
  }
}
