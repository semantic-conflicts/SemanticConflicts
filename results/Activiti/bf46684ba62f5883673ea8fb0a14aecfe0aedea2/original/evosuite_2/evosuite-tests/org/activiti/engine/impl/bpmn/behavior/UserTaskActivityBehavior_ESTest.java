/*
 * This file was automatically generated by EvoSuite
 * Tue May 26 08:43:14 GMT 2020
 */

package org.activiti.engine.impl.bpmn.behavior;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.Charset;
import java.util.Date;
import java.util.List;
import org.activiti.bpmn.model.InclusiveGateway;
import org.activiti.bpmn.model.ReceiveTask;
import org.activiti.bpmn.model.SendTask;
import org.activiti.bpmn.model.ServiceTask;
import org.activiti.bpmn.model.UserTask;
import org.activiti.engine.delegate.Expression;
import org.activiti.engine.form.TaskFormData;
import org.activiti.engine.impl.bpmn.behavior.InclusiveGatewayActivityBehavior;
import org.activiti.engine.impl.bpmn.behavior.MailActivityBehavior;
import org.activiti.engine.impl.bpmn.behavior.MultiInstanceActivityBehavior;
import org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior;
import org.activiti.engine.impl.bpmn.diagram.DefaultProcessDiagramGenerator;
import org.activiti.engine.impl.bpmn.parser.BpmnParse;
import org.activiti.engine.impl.bpmn.parser.BpmnParser;
import org.activiti.engine.impl.bpmn.parser.factory.DefaultActivityBehaviorFactory;
import org.activiti.engine.impl.el.ActivitiFunctionMapper;
import org.activiti.engine.impl.el.FixedValue;
import org.activiti.engine.impl.el.JuelExpression;
import org.activiti.engine.impl.form.DefaultStartFormHandler;
import org.activiti.engine.impl.form.DefaultTaskFormHandler;
import org.activiti.engine.impl.form.TaskElContext;
import org.activiti.engine.impl.form.TaskFormHandler;
import org.activiti.engine.impl.form.TaskVariableMapper;
import org.activiti.engine.impl.history.parse.ProcessHistoryParseHandler;
import org.activiti.engine.impl.javax.el.ValueExpression;
import org.activiti.engine.impl.juel.Builder;
import org.activiti.engine.impl.juel.TreeCache;
import org.activiti.engine.impl.juel.TreeStore;
import org.activiti.engine.impl.juel.TreeValueExpression;
import org.activiti.engine.impl.juel.TypeConverter;
import org.activiti.engine.impl.juel.TypeConverterImpl;
import org.activiti.engine.impl.persistence.entity.DeploymentEntity;
import org.activiti.engine.impl.persistence.entity.ExecutionEntity;
import org.activiti.engine.impl.persistence.entity.HistoricDetailAssignmentEntity;
import org.activiti.engine.impl.persistence.entity.IdentityLinkEntity;
import org.activiti.engine.impl.persistence.entity.TaskEntity;
import org.activiti.engine.impl.pvm.delegate.ActivityExecution;
import org.activiti.engine.impl.pvm.process.ActivityImpl;
import org.activiti.engine.impl.pvm.process.ProcessDefinitionImpl;
import org.activiti.engine.impl.pvm.runtime.AtomicOperationTransitionNotifyListenerTake;
import org.activiti.engine.impl.pvm.runtime.ExecutionImpl;
import org.activiti.engine.impl.task.TaskDefinition;
import org.activiti.engine.impl.test.NoOpServiceTask;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserTaskActivityBehavior_ESTest extends UserTaskActivityBehavior_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      String string0 = "V";
      Expression expression0 = taskDefinition0.getNameExpression();
      taskDefinition0.addCandidateGroupIdExpression(expression0);
      String string1 = "dueDate";
      userTaskActivityBehavior0.taskDefinition = taskDefinition0;
      TaskEntity taskEntity0 = new TaskEntity(string1);
      TaskFormData taskFormData0 = defaultTaskFormHandler0.createTaskForm(taskEntity0);
      ExecutionEntity executionEntity0 = taskEntity0.getProcessInstance();
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      TaskDefinition taskDefinition1 = userTaskActivityBehavior0.getTaskDefinition();
      String string0 = "[[~uy";
      List<String> list0 = userTaskActivityBehavior0.extractCandidates(string0);
      ExecutionImpl executionImpl0 = new ExecutionImpl();
      ExecutionImpl executionImpl1 = executionImpl0.getParent();
      String string1 = "Zm<zy";
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      boolean boolean1 = true;
      HistoricDetailAssignmentEntity historicDetailAssignmentEntity0 = new HistoricDetailAssignmentEntity();
      Date date0 = historicDetailAssignmentEntity0.getTime();
      TaskEntity taskEntity0 = TaskEntity.create(date0);
      userTaskActivityBehavior0.handleAssignments(taskEntity0, executionImpl0);
      boolean boolean2 = false;
      boolean boolean3 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean1, boolean2);
      TaskEntity taskEntity1 = new TaskEntity();
      ExecutionEntity executionEntity0 = taskEntity1.getExecution();
      try { 
        userTaskActivityBehavior0.signal(executionImpl1, string1, executionEntity0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      TaskEntity taskEntity0 = null;
      ActivityImpl activityImpl0 = null;
      ExecutionImpl executionImpl0 = new ExecutionImpl(activityImpl0);
      DefaultStartFormHandler defaultStartFormHandler0 = new DefaultStartFormHandler();
      Expression expression0 = defaultStartFormHandler0.getFormKey();
      boolean boolean0 = false;
      executionImpl0.setActive(boolean0);
      userTaskActivityBehavior0.handleAssignments(taskEntity0, executionImpl0);
      DefaultProcessDiagramGenerator defaultProcessDiagramGenerator0 = new DefaultProcessDiagramGenerator();
      Charset charset0 = Charset.defaultCharset();
      long long0 = 0L;
      System.setCurrentTimeMillis(long0);
      System.setCurrentTimeMillis(long0);
      try { 
        userTaskActivityBehavior0.execute(executionImpl0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.entity.TaskEntity", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      String string0 = "1";
      NoOpServiceTask noOpServiceTask0 = new NoOpServiceTask();
      Expression expression0 = noOpServiceTask0.getName();
      taskDefinition0.addCandidateGroupIdExpression(expression0);
      TaskDefinition taskDefinition1 = userTaskActivityBehavior0.getTaskDefinition();
      String string1 = "dueDate";
      TaskEntity taskEntity0 = new TaskEntity(string1);
      ExecutionEntity executionEntity0 = taskEntity0.getProcessInstance();
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      int int0 = (-1928);
      int int1 = (-76);
      int int2 = (-1059);
      int int3 = 1;
      MockDate mockDate0 = new MockDate(int0, int1, int2, int1, int2, int3);
      TaskEntity taskEntity0 = TaskEntity.create(mockDate0);
      TaskElContext taskElContext0 = new TaskElContext(taskEntity0);
      Builder builder0 = new Builder();
      TreeCache treeCache0 = null;
      TreeStore treeStore0 = new TreeStore(builder0, treeCache0);
      ActivitiFunctionMapper activitiFunctionMapper0 = new ActivitiFunctionMapper();
      TaskVariableMapper taskVariableMapper0 = new TaskVariableMapper(taskEntity0);
      TypeConverterImpl typeConverterImpl0 = (TypeConverterImpl)TypeConverter.DEFAULT;
      Class<Double> class0 = Double.class;
      long long0 = (-267L);
      System.setCurrentTimeMillis(long0);
      TreeValueExpression treeValueExpression0 = new TreeValueExpression(treeStore0, activitiFunctionMapper0, taskVariableMapper0, typeConverterImpl0, taskEntity0.DELETE_REASON_COMPLETED, class0);
      ValueExpression valueExpression0 = taskElContext0.setVariable(taskEntity0.DELETE_REASON_DELETED, treeValueExpression0);
      JuelExpression juelExpression0 = new JuelExpression(valueExpression0, taskEntity0.DELETE_REASON_COMPLETED);
      taskDefinition0.setOwnerExpression(juelExpression0);
      TaskEntity taskEntity1 = null;
      ActivityImpl activityImpl0 = null;
      ExecutionImpl executionImpl0 = new ExecutionImpl(activityImpl0);
      DefaultStartFormHandler defaultStartFormHandler0 = new DefaultStartFormHandler();
      Expression expression0 = defaultStartFormHandler0.getFormKey();
      boolean boolean0 = false;
      executionImpl0.setActive(boolean0);
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity1, executionImpl0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.el.JuelExpression", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      UserTask userTask0 = new UserTask();
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = defaultActivityBehaviorFactory0.createUserTaskActivityBehavior(userTask0, taskDefinition0);
      ActivityExecution activityExecution0 = null;
      String string0 = null;
      try { 
        userTaskActivityBehavior0.signal(activityExecution0, string0, defaultTaskFormHandler0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      ProcessHistoryParseHandler processHistoryParseHandler0 = new ProcessHistoryParseHandler();
      BpmnParser bpmnParser0 = new BpmnParser();
      BpmnParse bpmnParse0 = new BpmnParse(bpmnParser0);
      ReceiveTask receiveTask0 = new ReceiveTask();
      String string0 = "";
      String string1 = null;
      ProcessDefinitionImpl processDefinitionImpl0 = new ProcessDefinitionImpl(string1);
      String string2 = "";
      ActivityImpl activityImpl0 = new ActivityImpl(string2, processDefinitionImpl0);
      ActivityImpl activityImpl1 = AtomicOperationTransitionNotifyListenerTake.findNextScope(processDefinitionImpl0, activityImpl0);
      ActivityImpl activityImpl2 = processHistoryParseHandler0.createActivityOnScope(bpmnParse0, receiveTask0, string0, activityImpl1);
      ExecutionImpl executionImpl0 = new ExecutionImpl(activityImpl2);
      ExecutionImpl executionImpl1 = executionImpl0.getSuperExecution();
      String string3 = "";
      try { 
        userTaskActivityBehavior0.signal(executionImpl1, string3, receiveTask0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      ActivityExecution activityExecution0 = null;
      try { 
        userTaskActivityBehavior0.execute(activityExecution0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.entity.TaskEntity", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      UserTask userTask0 = null;
      MockDate mockDate0 = new MockDate();
      InclusiveGateway inclusiveGateway0 = new InclusiveGateway();
      InclusiveGateway inclusiveGateway1 = inclusiveGateway0.clone();
      InclusiveGatewayActivityBehavior inclusiveGatewayActivityBehavior0 = defaultActivityBehaviorFactory0.createInclusiveGatewayActivityBehavior(inclusiveGateway1);
      TaskEntity taskEntity0 = TaskEntity.create(mockDate0);
      TaskDefinition taskDefinition0 = taskEntity0.getTaskDefinition();
      UserTaskActivityBehavior userTaskActivityBehavior0 = defaultActivityBehaviorFactory0.createUserTaskActivityBehavior(userTask0, taskDefinition0);
      String string0 = "`bz";
      taskEntity0.setId(string0);
      ExecutionEntity executionEntity0 = taskEntity0.getProcessInstance();
      try { 
        userTaskActivityBehavior0.execute(executionEntity0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.entity.TaskEntity", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      TaskEntity taskEntity0 = new TaskEntity();
      TaskDefinition taskDefinition0 = taskEntity0.getTaskDefinition();
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      ActivityExecution activityExecution0 = null;
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity0, activityExecution0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      TaskFormHandler taskFormHandler0 = null;
      TaskDefinition taskDefinition0 = new TaskDefinition(taskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      String string0 = "?[>4BuQHTJB\\b=N";
      List<String> list0 = userTaskActivityBehavior0.extractCandidates(string0);
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      UserTask userTask0 = new UserTask();
      Date date0 = null;
      TaskEntity taskEntity0 = TaskEntity.create(date0);
      TaskDefinition taskDefinition0 = taskEntity0.getTaskDefinition();
      UserTaskActivityBehavior userTaskActivityBehavior0 = defaultActivityBehaviorFactory0.createUserTaskActivityBehavior(userTask0, taskDefinition0);
      String string0 = "";
      TaskEntity taskEntity1 = new TaskEntity(string0);
      ExecutionEntity executionEntity0 = taskEntity1.getProcessInstance();
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity1, executionEntity0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      DeploymentEntity deploymentEntity0 = new DeploymentEntity();
      Date date0 = deploymentEntity0.getDeploymentTime();
      TaskEntity taskEntity0 = TaskEntity.create(date0);
      ExecutionImpl executionImpl0 = new ExecutionImpl();
      ExecutionImpl executionImpl1 = executionImpl0.createExecution();
      ExecutionImpl executionImpl2 = executionImpl1.getProcessInstance();
      userTaskActivityBehavior0.handleAssignments(taskEntity0, executionImpl2);
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      TaskEntity taskEntity0 = new TaskEntity();
      TaskDefinition taskDefinition0 = taskEntity0.getTaskDefinition();
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      MultiInstanceActivityBehavior multiInstanceActivityBehavior0 = userTaskActivityBehavior0.getMultiInstanceActivityBehavior();
      userTaskActivityBehavior0.setMultiInstanceActivityBehavior(multiInstanceActivityBehavior0);
      String string0 = null;
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.extractCandidates(string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      UserTask userTask0 = new UserTask();
      UserTask userTask1 = userTask0.clone();
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = defaultActivityBehaviorFactory0.createUserTaskActivityBehavior(userTask1, taskDefinition0);
      ExecutionImpl executionImpl0 = new ExecutionImpl();
      SendTask sendTask0 = new SendTask();
      SendTask sendTask1 = sendTask0.clone();
      String string0 = "hist.detail.var-";
      sendTask1.setDocumentation(string0);
      MailActivityBehavior mailActivityBehavior0 = defaultActivityBehaviorFactory0.createMailActivityBehavior(sendTask1);
      Expression expression0 = mailActivityBehavior0.text;
      taskDefinition0.setDescriptionExpression(expression0);
      ServiceTask serviceTask0 = new ServiceTask();
      MailActivityBehavior mailActivityBehavior1 = defaultActivityBehaviorFactory0.createMailActivityBehavior(serviceTask0);
      Expression expression1 = mailActivityBehavior1.charset;
      taskDefinition0.setPriorityExpression(expression1);
      String string1 = "Cannot parse list index: ";
      int int0 = 0;
      Integer integer0 = new Integer(int0);
      try { 
        userTaskActivityBehavior0.signal(executionImpl0, string1, integer0);
      } catch(ClassCastException e) {
         //
         // org.activiti.engine.impl.pvm.runtime.ExecutionImpl cannot be cast to org.activiti.engine.impl.persistence.entity.ExecutionEntity
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      String string0 = "1";
      List<String> list0 = userTaskActivityBehavior0.extractCandidates(string0);
      TaskDefinition taskDefinition1 = userTaskActivityBehavior0.getTaskDefinition();
      String string1 = "dueDate";
      TaskEntity taskEntity0 = new TaskEntity(string1);
      FixedValue fixedValue0 = new FixedValue(taskEntity0);
      taskDefinition0.setAssigneeExpression(fixedValue0);
      ExecutionEntity executionEntity0 = new ExecutionEntity();
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
      } catch(ClassCastException e) {
         //
         // org.activiti.engine.impl.persistence.entity.TaskEntity cannot be cast to java.lang.String
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      String string0 = "1";
      NoOpServiceTask noOpServiceTask0 = new NoOpServiceTask();
      Expression expression0 = noOpServiceTask0.getName();
      taskDefinition0.addCandidateGroupIdExpression(expression0);
      List<String> list0 = userTaskActivityBehavior0.extractCandidates(string0);
      TaskDefinition taskDefinition1 = userTaskActivityBehavior0.getTaskDefinition();
      String string1 = "dueDate";
      userTaskActivityBehavior0.taskDefinition = taskDefinition1;
      TaskEntity taskEntity0 = new TaskEntity(string1);
      TaskFormData taskFormData0 = defaultTaskFormHandler0.createTaskForm(taskEntity0);
      ExecutionEntity executionEntity0 = taskEntity0.getProcessInstance();
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }
}
