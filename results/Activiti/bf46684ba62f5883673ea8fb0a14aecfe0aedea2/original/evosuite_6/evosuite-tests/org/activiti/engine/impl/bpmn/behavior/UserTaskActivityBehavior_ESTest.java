/*
 * This file was automatically generated by EvoSuite
 * Tue May 26 09:01:24 GMT 2020
 */

package org.activiti.engine.impl.bpmn.behavior;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import java.util.List;
import java.util.Map;
import org.activiti.bpmn.model.FormProperty;
import org.activiti.bpmn.model.ServiceTask;
import org.activiti.bpmn.model.StartEvent;
import org.activiti.bpmn.model.UserTask;
import org.activiti.engine.delegate.Expression;
import org.activiti.engine.form.TaskFormData;
import org.activiti.engine.impl.ManagementServiceImpl;
import org.activiti.engine.impl.bpmn.behavior.MailActivityBehavior;
import org.activiti.engine.impl.bpmn.behavior.ShellActivityBehavior;
import org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior;
import org.activiti.engine.impl.bpmn.parser.BpmnParse;
import org.activiti.engine.impl.bpmn.parser.BpmnParser;
import org.activiti.engine.impl.bpmn.parser.factory.DefaultActivityBehaviorFactory;
import org.activiti.engine.impl.bpmn.parser.factory.ListenerFactory;
import org.activiti.engine.impl.cfg.JtaProcessEngineConfiguration;
import org.activiti.engine.impl.el.JuelExpression;
import org.activiti.engine.impl.form.DefaultStartFormHandler;
import org.activiti.engine.impl.form.DefaultTaskFormHandler;
import org.activiti.engine.impl.form.FormPropertyHandler;
import org.activiti.engine.impl.form.TaskVariableMapper;
import org.activiti.engine.impl.javax.el.ValueExpression;
import org.activiti.engine.impl.persistence.deploy.DeploymentManager;
import org.activiti.engine.impl.persistence.entity.DeploymentEntity;
import org.activiti.engine.impl.persistence.entity.ExecutionEntity;
import org.activiti.engine.impl.persistence.entity.IdentityLinkEntity;
import org.activiti.engine.impl.persistence.entity.ModelEntity;
import org.activiti.engine.impl.persistence.entity.ProcessDefinitionEntity;
import org.activiti.engine.impl.persistence.entity.TaskEntity;
import org.activiti.engine.impl.pvm.delegate.ActivityExecution;
import org.activiti.engine.impl.pvm.process.ActivityImpl;
import org.activiti.engine.impl.pvm.process.TransitionImpl;
import org.activiti.engine.impl.pvm.runtime.AtomicOperationTransitionNotifyListenerTake;
import org.activiti.engine.impl.pvm.runtime.ExecutionImpl;
import org.activiti.engine.impl.task.TaskDefinition;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserTaskActivityBehavior_ESTest extends UserTaskActivityBehavior_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      TaskDefinition taskDefinition0 = null;
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      TaskEntity taskEntity0 = new TaskEntity();
      String string0 = "$3QgwzkFz%Y1_:\"";
      // Undeclared exception!
      try { 
        taskEntity0.addIdentityLink(string0, string0, string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.entity.TaskEntity", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      UserTask userTask0 = new UserTask();
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = defaultActivityBehaviorFactory0.createUserTaskActivityBehavior(userTask0, taskDefinition0);
      String string0 = "vjWoMHdG";
      List<String> list0 = userTaskActivityBehavior0.extractCandidates(string0);
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      UserTask userTask0 = new UserTask();
      String string0 = "AUaD";
      TaskEntity taskEntity0 = new TaskEntity(string0);
      TaskDefinition taskDefinition0 = taskEntity0.getTaskDefinition();
      UserTaskActivityBehavior userTaskActivityBehavior0 = defaultActivityBehaviorFactory0.createUserTaskActivityBehavior(userTask0, taskDefinition0);
      TaskDefinition taskDefinition1 = userTaskActivityBehavior0.getTaskDefinition();
      ProcessDefinitionEntity processDefinitionEntity0 = new ProcessDefinitionEntity();
      ActivityImpl activityImpl0 = new ActivityImpl(taskEntity0.DELETE_REASON_COMPLETED, processDefinitionEntity0);
      ActivityImpl activityImpl1 = AtomicOperationTransitionNotifyListenerTake.findNextScope(processDefinitionEntity0, activityImpl0);
      ExecutionImpl executionImpl0 = new ExecutionImpl(activityImpl1);
      ExecutionImpl executionImpl1 = executionImpl0.createExecution();
      ExecutionImpl executionImpl2 = executionImpl1.getSubProcessInstance();
      // Undeclared exception!
      try { 
        processDefinitionEntity0.createProcessInstance(taskEntity0.DELETE_REASON_COMPLETED, activityImpl0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.entity.ExecutionEntity", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      UserTask userTask0 = new UserTask();
      UserTask userTask1 = userTask0.clone();
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = defaultActivityBehaviorFactory0.createUserTaskActivityBehavior(userTask1, taskDefinition0);
      TaskEntity taskEntity0 = null;
      BpmnParser bpmnParser0 = new BpmnParser();
      BpmnParse bpmnParse0 = new BpmnParse(bpmnParser0);
      ActivityImpl activityImpl0 = bpmnParse0.getCurrentActivity();
      JtaProcessEngineConfiguration jtaProcessEngineConfiguration0 = new JtaProcessEngineConfiguration();
      ListenerFactory listenerFactory0 = jtaProcessEngineConfiguration0.getListenerFactory();
      bpmnParser0.setListenerFactory(listenerFactory0);
      ExecutionImpl executionImpl0 = new ExecutionImpl(activityImpl0);
      ExecutionImpl executionImpl1 = executionImpl0.createExecution();
      userTaskActivityBehavior0.handleAssignments(taskEntity0, executionImpl1);
      try { 
        userTaskActivityBehavior0.signal(executionImpl1, bpmnParse0.PROPERTYNAME_TIMER_DECLARATION, bpmnParser0);
      } catch(ClassCastException e) {
         //
         // org.activiti.engine.impl.pvm.runtime.ExecutionImpl cannot be cast to org.activiti.engine.impl.persistence.entity.ExecutionEntity
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      String string0 = "*)6CWtlOO<y@";
      TaskEntity taskEntity0 = new TaskEntity(string0);
      ExecutionEntity executionEntity0 = taskEntity0.getExecution();
      try { 
        userTaskActivityBehavior0.execute(executionEntity0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.entity.TaskEntity", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      TaskEntity taskEntity0 = TaskEntity.create(mockDate0);
      TaskDefinition taskDefinition0 = taskEntity0.getTaskDefinition();
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      ActivityExecution activityExecution0 = null;
      try { 
        userTaskActivityBehavior0.signal(activityExecution0, taskEntity0.DELETE_REASON_COMPLETED, mockDate0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      UserTask userTask0 = new UserTask();
      UserTask userTask1 = userTask0.clone();
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = defaultActivityBehaviorFactory0.createUserTaskActivityBehavior(userTask1, taskDefinition0);
      TaskDefinition taskDefinition1 = userTaskActivityBehavior0.getTaskDefinition();
      ActivityExecution activityExecution0 = null;
      String string0 = "Category expression does not resolve to a string: ";
      long long0 = 4830L;
      Long long1 = Long.valueOf(long0);
      try { 
        userTaskActivityBehavior0.signal(activityExecution0, string0, long1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      String string0 = "";
      TaskEntity taskEntity0 = new TaskEntity(string0);
      ExecutionEntity executionEntity0 = taskEntity0.getExecution();
      userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      UserTask userTask0 = new UserTask();
      UserTask userTask1 = userTask0.clone();
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = defaultActivityBehaviorFactory0.createUserTaskActivityBehavior(userTask1, taskDefinition0);
      ExecutionImpl executionImpl0 = new ExecutionImpl();
      String string0 = "select * from ( select a.*, ROWNUM rnum from (";
      try { 
        userTaskActivityBehavior0.signal(executionImpl0, string0, defaultTaskFormHandler0);
      } catch(ClassCastException e) {
         //
         // org.activiti.engine.impl.pvm.runtime.ExecutionImpl cannot be cast to org.activiti.engine.impl.persistence.entity.ExecutionEntity
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      UserTask userTask0 = null;
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      Expression expression0 = taskDefinition0.getAssigneeExpression();
      taskDefinition0.addCandidateGroupIdExpression(expression0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = defaultActivityBehaviorFactory0.createUserTaskActivityBehavior(userTask0, taskDefinition0);
      String string0 = "OX0w} <]i$][/)w&p";
      List<String> list0 = userTaskActivityBehavior0.extractCandidates(string0);
      String string1 = null;
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.extractCandidates(string1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      UserTask userTask0 = new UserTask();
      UserTask userTask1 = userTask0.clone();
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskEntity taskEntity0 = new TaskEntity();
      String string0 = "\" does not exist";
      taskEntity0.setProcessInstanceId(string0);
      TaskFormData taskFormData0 = defaultTaskFormHandler0.createTaskForm(taskEntity0);
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = defaultActivityBehaviorFactory0.createUserTaskActivityBehavior(userTask1, taskDefinition0);
      ShellActivityBehavior shellActivityBehavior0 = new ShellActivityBehavior();
      Expression expression0 = shellActivityBehavior0.outputVariable;
      taskDefinition0.addCandidateGroupIdExpression(expression0);
      ServiceTask serviceTask0 = new ServiceTask();
      ServiceTask serviceTask1 = serviceTask0.clone();
      MailActivityBehavior mailActivityBehavior0 = defaultActivityBehaviorFactory0.createMailActivityBehavior(serviceTask1);
      Expression expression1 = mailActivityBehavior0.bcc;
      shellActivityBehavior0.outputVariable = expression1;
      Expression expression2 = shellActivityBehavior0.redirectError;
      taskDefinition0.setOwnerExpression(expression2);
      List<FormPropertyHandler> list0 = null;
      defaultTaskFormHandler0.setFormPropertyHandlers(list0);
      String string1 = "q";
      TaskEntity taskEntity1 = new TaskEntity(string1);
      ExecutionEntity executionEntity0 = taskEntity1.getProcessInstance();
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity1, executionEntity0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }
}
