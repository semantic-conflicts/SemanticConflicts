/*
 * This file was automatically generated by EvoSuite
 * Mon May 25 23:53:15 GMT 2020
 */

package org.activiti.engine.impl.bpmn.behavior;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import org.activiti.bpmn.model.ServiceTask;
import org.activiti.bpmn.model.UserTask;
import org.activiti.engine.delegate.Expression;
import org.activiti.engine.impl.bpmn.behavior.ShellActivityBehavior;
import org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior;
import org.activiti.engine.impl.bpmn.parser.BpmnParse;
import org.activiti.engine.impl.bpmn.parser.BpmnParser;
import org.activiti.engine.impl.bpmn.parser.factory.DefaultActivityBehaviorFactory;
import org.activiti.engine.impl.cfg.DefaultBpmnParseFactory;
import org.activiti.engine.impl.cfg.JtaProcessEngineConfiguration;
import org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl;
import org.activiti.engine.impl.form.DefaultStartFormHandler;
import org.activiti.engine.impl.form.DefaultTaskFormHandler;
import org.activiti.engine.impl.form.FormTypes;
import org.activiti.engine.impl.form.TaskFormHandler;
import org.activiti.engine.impl.persistence.deploy.DeploymentManager;
import org.activiti.engine.impl.persistence.entity.ExecutionEntity;
import org.activiti.engine.impl.persistence.entity.IdentityLinkEntity;
import org.activiti.engine.impl.persistence.entity.MessageEntity;
import org.activiti.engine.impl.persistence.entity.ProcessDefinitionEntity;
import org.activiti.engine.impl.persistence.entity.TaskEntity;
import org.activiti.engine.impl.pvm.delegate.ActivityExecution;
import org.activiti.engine.impl.pvm.process.ActivityImpl;
import org.activiti.engine.impl.pvm.process.ProcessDefinitionImpl;
import org.activiti.engine.impl.pvm.runtime.AtomicOperationTransitionNotifyListenerTake;
import org.activiti.engine.impl.pvm.runtime.ExecutionImpl;
import org.activiti.engine.impl.task.TaskDefinition;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserTaskActivityBehavior_ESTest extends UserTaskActivityBehavior_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      UserTask userTask0 = new UserTask();
      TaskFormHandler taskFormHandler0 = null;
      TaskDefinition taskDefinition0 = new TaskDefinition(taskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = defaultActivityBehaviorFactory0.createUserTaskActivityBehavior(userTask0, taskDefinition0);
      String string0 = "Lc6C:4Rocz[$#rU";
      List<String> list0 = userTaskActivityBehavior0.extractCandidates(string0);
      List<String> list1 = userTaskActivityBehavior0.extractCandidates(string0);
      List<String> list2 = userTask0.getCandidateGroups();
      TaskDefinition taskDefinition1 = userTaskActivityBehavior0.getTaskDefinition();
      DeploymentManager deploymentManager0 = new DeploymentManager();
      String string1 = null;
      String string2 = "`|NE\"vh~aODCf@_Y-s";
      DefaultBpmnParseFactory defaultBpmnParseFactory0 = new DefaultBpmnParseFactory();
      BpmnParser bpmnParser0 = new BpmnParser();
      BpmnParse bpmnParse0 = defaultBpmnParseFactory0.createBpmnParse(bpmnParser0);
      URL uRL0 = MockURL.getFileExample();
      URL uRL1 = MockURL.URL(uRL0, bpmnParse0.PROPERTYNAME_COMPENSATION_HANDLER_ID);
      String string3 = "r? !81cB";
      URLStreamHandler uRLStreamHandler0 = null;
      URL uRL2 = MockURL.URL(uRL1, string3, uRLStreamHandler0);
      BpmnParse bpmnParse1 = bpmnParse0.sourceUrl(uRL2);
      ActivityImpl activityImpl0 = bpmnParse1.getCurrentActivity();
      String string4 = null;
      List<String> list3 = userTaskActivityBehavior0.extractCandidates(string2);
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      UserTask userTask0 = new UserTask();
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = defaultActivityBehaviorFactory0.createUserTaskActivityBehavior(userTask0, taskDefinition0);
      String string0 = "DH#^=Wk73\"";
      ProcessDefinitionEntity processDefinitionEntity0 = new ProcessDefinitionEntity();
      ActivityImpl activityImpl0 = new ActivityImpl(string0, processDefinitionEntity0);
      ExecutionImpl executionImpl0 = new ExecutionImpl(activityImpl0);
      ExecutionImpl executionImpl1 = executionImpl0.createExecution();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      executionImpl1.setProcessInstance(executionImpl0);
      Delayed delayed0 = delayQueue0.peek();
      try { 
        userTaskActivityBehavior0.signal(executionImpl1, string0, delayed0);
      } catch(ClassCastException e) {
         //
         // org.activiti.engine.impl.pvm.runtime.ExecutionImpl cannot be cast to org.activiti.engine.impl.persistence.entity.ExecutionEntity
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      ExecutionEntity executionEntity0 = new ExecutionEntity();
      String string0 = "Category expression does not resolve to a string: ";
      String string1 = "pHdv:9RoEGr1PdgyF[";
      DefaultStartFormHandler defaultStartFormHandler0 = new DefaultStartFormHandler();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ExecutionEntity executionEntity1 = defaultStartFormHandler0.submitStartFormData(executionEntity0, hashMap0);
      String string2 = "";
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      String string0 = "FormKey expression does not resolve to a string: ";
      TaskEntity taskEntity0 = new TaskEntity(string0);
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      ServiceTask serviceTask0 = new ServiceTask();
      ShellActivityBehavior shellActivityBehavior0 = defaultActivityBehaviorFactory0.createShellActivityBehavior(serviceTask0);
      ExecutionEntity executionEntity0 = taskEntity0.getProcessInstance();
      userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
      String string1 = "Ytb!\"p";
      try { 
        userTaskActivityBehavior0.signal(executionEntity0, string1, string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior();
      IdentityLinkEntity identityLinkEntity0 = new IdentityLinkEntity();
      ExecutionEntity executionEntity0 = identityLinkEntity0.getProcessInstance();
      String string0 = identityLinkEntity0.toString();
      JtaProcessEngineConfiguration jtaProcessEngineConfiguration0 = new JtaProcessEngineConfiguration();
      FormTypes formTypes0 = new FormTypes();
      ProcessEngineConfigurationImpl processEngineConfigurationImpl0 = jtaProcessEngineConfiguration0.setFormTypes(formTypes0);
      DeploymentManager deploymentManager0 = jtaProcessEngineConfiguration0.getDeploymentManager();
      int int0 = 0;
      try { 
        userTaskActivityBehavior0.execute(executionEntity0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.entity.TaskEntity", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      String string0 = "FormKey expression does not resolve to a string: ";
      TaskEntity taskEntity0 = new TaskEntity();
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      ServiceTask serviceTask0 = new ServiceTask();
      ShellActivityBehavior shellActivityBehavior0 = defaultActivityBehaviorFactory0.createShellActivityBehavior(serviceTask0);
      Expression expression0 = shellActivityBehavior0.cleanEnv;
      taskDefinition0.addCandidateUserIdExpression(expression0);
      ExecutionEntity executionEntity0 = taskEntity0.getProcessInstance();
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior();
      String string0 = "/SUv0wFd-BE'hMi";
      List<String> list0 = userTaskActivityBehavior0.extractCandidates(string0);
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior();
      TaskDefinition taskDefinition0 = userTaskActivityBehavior0.getTaskDefinition();
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior();
      ActivityExecution activityExecution0 = null;
      try { 
        userTaskActivityBehavior0.execute(activityExecution0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.entity.TaskEntity", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior();
      String string0 = "UserTask should not be signalled before complete";
      ProcessDefinitionImpl processDefinitionImpl0 = new ProcessDefinitionImpl(string0);
      String string1 = "org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior";
      ActivityImpl activityImpl0 = new ActivityImpl(string1, processDefinitionImpl0);
      ActivityImpl activityImpl1 = AtomicOperationTransitionNotifyListenerTake.findNextScope(processDefinitionImpl0, activityImpl0);
      ActivityImpl activityImpl2 = activityImpl1.findActivity(string0);
      ExecutionEntity executionEntity0 = new ExecutionEntity(activityImpl2);
      try { 
        userTaskActivityBehavior0.execute(executionEntity0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.entity.TaskEntity", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior();
      ActivityExecution activityExecution0 = null;
      String string0 = ";sa GOQry GIc?[";
      short short0 = (short) (-2049);
      Short short1 = new Short(short0);
      try { 
        userTaskActivityBehavior0.signal(activityExecution0, string0, short1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior();
      TaskEntity taskEntity0 = null;
      String string0 = "X7?<;!$5eF|rW";
      ProcessDefinitionEntity processDefinitionEntity0 = new ProcessDefinitionEntity();
      ActivityImpl activityImpl0 = new ActivityImpl(string0, processDefinitionEntity0);
      ExecutionEntity executionEntity0 = new ExecutionEntity(activityImpl0);
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      UserTask userTask0 = new UserTask();
      UserTask userTask1 = userTask0.clone();
      String string0 = "";
      TaskEntity taskEntity0 = new TaskEntity(string0);
      TaskDefinition taskDefinition0 = taskEntity0.getTaskDefinition();
      UserTaskActivityBehavior userTaskActivityBehavior0 = defaultActivityBehaviorFactory0.createUserTaskActivityBehavior(userTask1, taskDefinition0);
      List<String> list0 = userTaskActivityBehavior0.extractCandidates(taskEntity0.DELETE_REASON_COMPLETED);
      ActivityExecution activityExecution0 = null;
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity0, activityExecution0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior();
      String string0 = null;
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.extractCandidates(string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      String string0 = "FormKey expression does not resolve to a string: ";
      TaskEntity taskEntity0 = new TaskEntity(string0);
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      ServiceTask serviceTask0 = new ServiceTask();
      ShellActivityBehavior shellActivityBehavior0 = defaultActivityBehaviorFactory0.createShellActivityBehavior(serviceTask0);
      Expression expression0 = shellActivityBehavior0.cleanEnv;
      taskDefinition0.addCandidateUserIdExpression(expression0);
      ExecutionEntity executionEntity0 = taskEntity0.getProcessInstance();
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      MessageEntity messageEntity0 = new MessageEntity();
      Date date0 = messageEntity0.getDuedate();
      TaskEntity taskEntity0 = TaskEntity.create(date0);
      ExecutionImpl executionImpl0 = new ExecutionImpl();
      userTaskActivityBehavior0.handleAssignments(taskEntity0, executionImpl0);
      Integer integer0 = new Integer(messageEntity0.DEFAULT_RETRIES);
      executionImpl0.setExecutionListenerIndex(integer0);
      TaskDefinition taskDefinition1 = userTaskActivityBehavior0.getTaskDefinition();
      userTaskActivityBehavior0.handleAssignments(taskEntity0, executionImpl0);
      TaskEntity taskEntity1 = new TaskEntity();
      userTaskActivityBehavior0.handleAssignments(taskEntity1, executionImpl0);
      TaskEntity taskEntity2 = TaskEntity.create(date0);
      userTaskActivityBehavior0.handleAssignments(taskEntity2, executionImpl0);
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      UserTask userTask0 = new UserTask();
      DefaultTaskFormHandler defaultTaskFormHandler0 = new DefaultTaskFormHandler();
      TaskDefinition taskDefinition0 = new TaskDefinition(defaultTaskFormHandler0);
      UserTaskActivityBehavior userTaskActivityBehavior0 = defaultActivityBehaviorFactory0.createUserTaskActivityBehavior(userTask0, taskDefinition0);
      String string0 = "DH#^=Wk73\"";
      ProcessDefinitionEntity processDefinitionEntity0 = new ProcessDefinitionEntity();
      ActivityImpl activityImpl0 = new ActivityImpl(string0, processDefinitionEntity0);
      ExecutionImpl executionImpl0 = new ExecutionImpl(activityImpl0);
      ExecutionImpl executionImpl1 = executionImpl0.createExecution();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      executionImpl1.setProcessInstance(executionImpl0);
      Delayed delayed0 = delayQueue0.peek();
      try { 
        userTaskActivityBehavior0.signal(executionImpl1, string0, delayed0);
      } catch(ClassCastException e) {
         //
         // org.activiti.engine.impl.pvm.runtime.ExecutionImpl cannot be cast to org.activiti.engine.impl.persistence.entity.ExecutionEntity
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }
}
