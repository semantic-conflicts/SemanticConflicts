/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 30 20:39:20 GMT 2020
 */

package com.netflix.simianarmy.basic.janitor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.amazonaws.auth.ClasspathPropertiesFileCredentialsProvider;
import com.amazonaws.regions.RegionMetadata;
import com.amazonaws.regions.RegionUtils;
import com.netflix.simianarmy.MonkeyCalendar;
import com.netflix.simianarmy.MonkeyConfiguration;
import com.netflix.simianarmy.MonkeyRecorder;
import com.netflix.simianarmy.aws.SimpleDBRecorder;
import com.netflix.simianarmy.aws.janitor.SimpleDBJanitorResourceTracker;
import com.netflix.simianarmy.aws.janitor.crawler.ASGJanitorCrawler;
import com.netflix.simianarmy.aws.janitor.crawler.EBSSnapshotJanitorCrawler;
import com.netflix.simianarmy.aws.janitor.crawler.LaunchConfigJanitorCrawler;
import com.netflix.simianarmy.aws.janitor.rule.instance.OrphanedInstanceRule;
import com.netflix.simianarmy.basic.BasicCalendar;
import com.netflix.simianarmy.basic.BasicChaosMonkeyContext;
import com.netflix.simianarmy.basic.BasicConfiguration;
import com.netflix.simianarmy.basic.BasicSimianArmyContext;
import com.netflix.simianarmy.basic.LocalDbRecorder;
import com.netflix.simianarmy.basic.conformity.BasicConformityMonkeyContext;
import com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext;
import com.netflix.simianarmy.basic.janitor.BasicJanitorRuleEngine;
import com.netflix.simianarmy.client.aws.AWSClient;
import com.netflix.simianarmy.conformity.ConformityMonkey;
import com.netflix.simianarmy.janitor.AbstractJanitor;
import com.netflix.simianarmy.janitor.JanitorCrawler;
import com.netflix.simianarmy.janitor.JanitorEmailNotifier;
import com.netflix.simianarmy.janitor.JanitorMonkey;
import com.netflix.simianarmy.janitor.JanitorResourceTracker;
import com.netflix.simianarmy.janitor.JanitorRuleEngine;
import com.netflix.simianarmy.janitor.Rule;
import java.util.List;
import java.util.Properties;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BasicJanitorMonkeyContext_ESTest extends BasicJanitorMonkeyContext_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      String string0 = ">W[";
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      AWSClient aWSClient0 = basicJanitorMonkeyContext0.awsClient();
      LaunchConfigJanitorCrawler launchConfigJanitorCrawler0 = new LaunchConfigJanitorCrawler(aWSClient0);
      SimpleDBJanitorResourceTracker simpleDBJanitorResourceTracker0 = new SimpleDBJanitorResourceTracker(aWSClient0, launchConfigJanitorCrawler0.LAUNCH_CONFIG_FIELD_USED_BY_ASG);
      int int0 = (-2820);
      int int1 = (-3359);
      int int2 = 66;
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(int2, string0);
      BasicCalendar basicCalendar0 = new BasicCalendar(int0, int1, simpleTimeZone0);
      BasicChaosMonkeyContext basicChaosMonkeyContext0 = new BasicChaosMonkeyContext();
      MonkeyConfiguration monkeyConfiguration0 = basicChaosMonkeyContext0.configuration();
      LocalDbRecorder localDbRecorder0 = new LocalDbRecorder(monkeyConfiguration0);
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext(string0, basicJanitorRuleEngine0, launchConfigJanitorCrawler0, simpleDBJanitorResourceTracker0, basicCalendar0, monkeyConfiguration0, localDbRecorder0);
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorResourceTracker();
      List<AbstractJanitor> list0 = basicJanitorMonkeyContext0.janitors();
      MonkeyCalendar monkeyCalendar0 = basicJanitorMonkeyContext_BasicJanitorContext0.calendar();
      JanitorEmailNotifier janitorEmailNotifier0 = basicJanitorMonkeyContext0.emailNotifier();
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      JanitorEmailNotifier.Context janitorEmailNotifier_Context0 = basicJanitorMonkeyContext0.getJanitorEmailNotifierContext();
      String string0 = "XY+Yku6~ ";
      BasicSimianArmyContext.GLOBAL_OWNER_TAGKEY = string0;
      JanitorEmailNotifier janitorEmailNotifier0 = basicJanitorMonkeyContext0.emailNotifier();
      String string1 = "simianarmy.janitor.rule.unusedImageRule.lastReferenceDaysThreshold";
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      Rule rule0 = null;
      BasicJanitorRuleEngine basicJanitorRuleEngine1 = basicJanitorRuleEngine0.addRule(rule0);
      JanitorCrawler janitorCrawler0 = null;
      ClasspathPropertiesFileCredentialsProvider classpathPropertiesFileCredentialsProvider0 = new ClasspathPropertiesFileCredentialsProvider();
      AWSClient aWSClient0 = new AWSClient(string1, classpathPropertiesFileCredentialsProvider0);
      MonkeyCalendar monkeyCalendar0 = basicJanitorMonkeyContext0.calendar();
      int int0 = (-1139);
      int int1 = 1398;
      int int2 = (-1292);
      boolean boolean0 = false;
      OrphanedInstanceRule orphanedInstanceRule0 = null;
      try {
        orphanedInstanceRule0 = new OrphanedInstanceRule(monkeyCalendar0, int0, int1, int2, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // The validated expression is false
         //
         verifyException("org.apache.commons.lang.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test3()  throws Throwable  {
      String string0 = "v";
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      AWSClient aWSClient0 = basicJanitorMonkeyContext0.awsClient();
      ASGJanitorCrawler aSGJanitorCrawler0 = new ASGJanitorCrawler(aWSClient0);
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
      int int0 = 8199;
      int int1 = 0;
      TimeZone timeZone0 = TimeZone.getDefault();
      BasicCalendar basicCalendar0 = new BasicCalendar(int0, int1, timeZone0);
      Properties properties0 = null;
      BasicConfiguration basicConfiguration0 = new BasicConfiguration(properties0);
      String string1 = "z;_i]>";
      SimpleDBRecorder simpleDBRecorder0 = new SimpleDBRecorder(aWSClient0, string1);
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext(string0, basicJanitorRuleEngine0, aSGJanitorCrawler0, janitorResourceTracker0, basicCalendar0, basicConfiguration0, simpleDBRecorder0);
  }

  @Test(timeout = 11000)
  public void test4()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      BasicSimianArmyContext.GLOBAL_OWNER_TAGKEY = basicJanitorMonkeyContext0.GLOBAL_OWNER_TAGKEY;
      basicJanitorMonkeyContext0.resetEventReport();
      JanitorEmailNotifier.Context janitorEmailNotifier_Context0 = basicJanitorMonkeyContext0.getJanitorEmailNotifierContext();
      RegionMetadata regionMetadata0 = mock(RegionMetadata.class, new ViolatedAssumptionAnswer());
      RegionUtils.initializeWithMetadata(regionMetadata0);
      basicJanitorMonkeyContext0.resetEventReport();
      JanitorEmailNotifier janitorEmailNotifier0 = basicJanitorMonkeyContext0.emailNotifier();
      JanitorEmailNotifier.Context janitorEmailNotifier_Context1 = basicJanitorMonkeyContext0.getJanitorEmailNotifierContext();
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      AWSClient aWSClient0 = new AWSClient(BasicSimianArmyContext.GLOBAL_OWNER_TAGKEY);
      EBSSnapshotJanitorCrawler eBSSnapshotJanitorCrawler0 = new EBSSnapshotJanitorCrawler(aWSClient0);
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
      MonkeyCalendar monkeyCalendar0 = null;
      BasicConformityMonkeyContext basicConformityMonkeyContext0 = new BasicConformityMonkeyContext();
      MonkeyConfiguration monkeyConfiguration0 = basicConformityMonkeyContext0.configuration();
      String string0 = "";
      SimpleDBRecorder simpleDBRecorder0 = new SimpleDBRecorder(aWSClient0, string0);
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext(BasicSimianArmyContext.GLOBAL_OWNER_TAGKEY, basicJanitorRuleEngine0, eBSSnapshotJanitorCrawler0, janitorResourceTracker0, monkeyCalendar0, monkeyConfiguration0, simpleDBRecorder0);
      JanitorCrawler janitorCrawler0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorCrawler();
      JanitorEmailNotifier janitorEmailNotifier1 = basicJanitorMonkeyContext0.emailNotifier();
      JanitorEmailNotifier.Context janitorEmailNotifier_Context2 = basicJanitorMonkeyContext0.getJanitorEmailNotifierContext();
      JanitorEmailNotifier janitorEmailNotifier2 = basicJanitorMonkeyContext0.emailNotifier();
      ConformityMonkey.Type conformityMonkey_Type0 = ConformityMonkey.Type.CONFORMITY;
      JanitorMonkey.EventTypes janitorMonkey_EventTypes0 = JanitorMonkey.EventTypes.OPT_OUT_RESOURCE;
      String string1 = "simianarmy.janitor.rule.orphanedInstanceRule.enabled";
      MonkeyRecorder.Event monkeyRecorder_Event0 = simpleDBRecorder0.newEvent(conformityMonkey_Type0, janitorMonkey_EventTypes0, string1, basicConformityMonkeyContext0.GLOBAL_OWNER_TAGKEY);
      JanitorRuleEngine janitorRuleEngine0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorRuleEngine();
      String string2 = basicJanitorMonkeyContext_BasicJanitorContext0.region();
      JanitorResourceTracker janitorResourceTracker1 = basicJanitorMonkeyContext0.resourceTracker();
      JanitorEmailNotifier.Context janitorEmailNotifier_Context3 = basicJanitorMonkeyContext0.getJanitorEmailNotifierContext();
      JanitorResourceTracker janitorResourceTracker2 = basicJanitorMonkeyContext0.resourceTracker();
      JanitorRuleEngine janitorRuleEngine1 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorRuleEngine();
      MonkeyConfiguration monkeyConfiguration1 = basicJanitorMonkeyContext_BasicJanitorContext0.configuration();
      String string3 = basicJanitorMonkeyContext_BasicJanitorContext0.region();
      JanitorCrawler janitorCrawler1 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorCrawler();
      MonkeyConfiguration monkeyConfiguration2 = basicJanitorMonkeyContext_BasicJanitorContext0.configuration();
      JanitorEmailNotifier janitorEmailNotifier3 = basicJanitorMonkeyContext0.emailNotifier();
      JanitorResourceTracker janitorResourceTracker3 = basicJanitorMonkeyContext0.resourceTracker();
      JanitorEmailNotifier janitorEmailNotifier4 = basicJanitorMonkeyContext0.emailNotifier();
  }

  @Test(timeout = 11000)
  public void test5()  throws Throwable  {
      String string0 = "";
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      AWSClient aWSClient0 = new AWSClient(string0);
      EBSSnapshotJanitorCrawler eBSSnapshotJanitorCrawler0 = new EBSSnapshotJanitorCrawler(aWSClient0);
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
      MonkeyConfiguration monkeyConfiguration0 = basicJanitorMonkeyContext0.configuration();
      BasicCalendar basicCalendar0 = new BasicCalendar(monkeyConfiguration0);
      LocalDbRecorder localDbRecorder0 = new LocalDbRecorder(monkeyConfiguration0);
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext(string0, basicJanitorRuleEngine0, eBSSnapshotJanitorCrawler0, janitorResourceTracker0, basicCalendar0, monkeyConfiguration0, localDbRecorder0);
      MonkeyRecorder monkeyRecorder0 = basicJanitorMonkeyContext_BasicJanitorContext0.recorder();
  }
}
