/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 29 18:34:08 GMT 2020
 */

package com.netflix.simianarmy.basic.janitor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.amazonaws.regions.RegionMetadata;
import com.amazonaws.regions.RegionUtils;
import com.amazonaws.services.dynamodbv2.model.ComparisonOperator;
import com.amazonaws.services.dynamodbv2.model.Condition;
import com.amazonaws.services.dynamodbv2.model.ScanRequest;
import com.netflix.simianarmy.MonkeyCalendar;
import com.netflix.simianarmy.MonkeyConfiguration;
import com.netflix.simianarmy.MonkeyRecorder;
import com.netflix.simianarmy.Resource;
import com.netflix.simianarmy.ResourceType;
import com.netflix.simianarmy.aws.AWSResource;
import com.netflix.simianarmy.aws.janitor.ASGJanitor;
import com.netflix.simianarmy.aws.janitor.EBSSnapshotJanitor;
import com.netflix.simianarmy.aws.janitor.EBSVolumeJanitor;
import com.netflix.simianarmy.aws.janitor.ImageJanitor;
import com.netflix.simianarmy.aws.janitor.InstanceJanitor;
import com.netflix.simianarmy.aws.janitor.LaunchConfigJanitor;
import com.netflix.simianarmy.aws.janitor.crawler.InstanceJanitorCrawler;
import com.netflix.simianarmy.basic.BasicChaosMonkeyContext;
import com.netflix.simianarmy.basic.BasicSimianArmyContext;
import com.netflix.simianarmy.basic.LocalDbRecorder;
import com.netflix.simianarmy.basic.janitor.BasicJanitorEmailBuilder;
import com.netflix.simianarmy.basic.janitor.BasicJanitorMonkey;
import com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext;
import com.netflix.simianarmy.basic.janitor.BasicJanitorRuleEngine;
import com.netflix.simianarmy.client.aws.AWSClient;
import com.netflix.simianarmy.client.edda.EddaClient;
import com.netflix.simianarmy.janitor.AbstractJanitor;
import com.netflix.simianarmy.janitor.JanitorCrawler;
import com.netflix.simianarmy.janitor.JanitorEmailBuilder;
import com.netflix.simianarmy.janitor.JanitorEmailNotifier;
import com.netflix.simianarmy.janitor.JanitorMonkey;
import com.netflix.simianarmy.janitor.JanitorResourceTracker;
import com.netflix.simianarmy.janitor.JanitorRuleEngine;
import com.netflix.simianarmy.janitor.Rule;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BasicJanitorMonkeyContext_ESTest extends BasicJanitorMonkeyContext_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      InstanceJanitor instanceJanitor0 = basicJanitorMonkeyContext0.getInstanceJanitor();
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      EddaClient eddaClient0 = basicJanitorMonkeyContext0.createEddaClient();
      MonkeyCalendar monkeyCalendar0 = basicJanitorMonkeyContext_BasicJanitorContext0.calendar();
      String string0 = basicJanitorMonkeyContext_BasicJanitorContext0.region();
      ASGJanitor aSGJanitor0 = basicJanitorMonkeyContext0.getASGJanitor();
      MonkeyCalendar monkeyCalendar1 = basicJanitorMonkeyContext_BasicJanitorContext0.calendar();
      MonkeyRecorder monkeyRecorder0 = basicJanitorMonkeyContext_BasicJanitorContext0.recorder();
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      String string0 = "h=:?OP'[S|`Ak/eyf";
      String string1 = "";
      JanitorMonkey.Type janitorMonkey_Type0 = JanitorMonkey.Type.JANITOR;
      // Undeclared exception!
      try { 
        JanitorMonkey.EventTypes.valueOf(string1);
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.netflix.simianarmy.janitor.JanitorMonkey.EventTypes.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      BasicSimianArmyContext.GLOBAL_OWNER_TAGKEY = basicJanitorMonkeyContext0.ownerEmailDomain;
      BasicJanitorMonkey basicJanitorMonkey0 = new BasicJanitorMonkey(basicJanitorMonkeyContext0);
      String string0 = "rL`Pc58\\>Ki.XP$%RL";
      // Undeclared exception!
      try { 
        basicJanitorMonkey0.optOutResource(string0);
      } catch(RuntimeException e) {
         //
         // Unable to load AWS credentials from any provider in the chain
         //
         verifyException("com.amazonaws.auth.AWSCredentialsProviderChain", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      Set<String> set0 = basicJanitorMonkeyContext0.getEnabledResourceSet();
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getImageJanitor();
      } catch(RuntimeException e) {
         //
         // Image Janitor only works when Edda is enabled.
         //
         verifyException("com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      ASGJanitor aSGJanitor0 = basicJanitorMonkeyContext0.getASGJanitor();
      EddaClient eddaClient0 = basicJanitorMonkeyContext0.createEddaClient();
      InstanceJanitor instanceJanitor0 = basicJanitorMonkeyContext0.getInstanceJanitor();
      String string0 = "securityGroups";
      basicJanitorMonkeyContext0.monkeyRegion = string0;
      basicJanitorMonkeyContext0.monkeyRegion = string0;
      LaunchConfigJanitor launchConfigJanitor0 = basicJanitorMonkeyContext0.getLaunchConfigJanitor();
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
      EBSVolumeJanitor eBSVolumeJanitor0 = basicJanitorMonkeyContext0.getEBSVolumeJanitor();
      EBSSnapshotJanitor eBSSnapshotJanitor0 = basicJanitorMonkeyContext0.getEBSSnapshotJanitor();
      EBSVolumeJanitor eBSVolumeJanitor1 = basicJanitorMonkeyContext0.getEBSVolumeJanitor();
      JanitorEmailNotifier.Context janitorEmailNotifier_Context0 = basicJanitorMonkeyContext0.getJanitorEmailNotifierContext();
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      JanitorCrawler janitorCrawler0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorCrawler();
      Set<String> set0 = basicJanitorMonkeyContext0.getEnabledResourceSet();
      EBSSnapshotJanitor eBSSnapshotJanitor1 = basicJanitorMonkeyContext0.getEBSSnapshotJanitor();
      Set<String> set1 = basicJanitorMonkeyContext0.getEnabledResourceSet();
      MonkeyConfiguration monkeyConfiguration0 = basicJanitorMonkeyContext_BasicJanitorContext0.configuration();
      MonkeyRecorder monkeyRecorder0 = basicJanitorMonkeyContext_BasicJanitorContext0.recorder();
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getImageJanitor();
      } catch(RuntimeException e) {
         //
         // Image Janitor only works when Edda is enabled.
         //
         verifyException("com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      String string0 = "F9Ra}5R)&f6`pWC>";
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      Rule rule0 = null;
      BasicJanitorRuleEngine basicJanitorRuleEngine1 = basicJanitorRuleEngine0.addRule(rule0);
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      AWSClient aWSClient0 = basicJanitorMonkeyContext0.awsClient();
      InstanceJanitorCrawler instanceJanitorCrawler0 = new InstanceJanitorCrawler(aWSClient0);
      BasicJanitorRuleEngine basicJanitorRuleEngine2 = basicJanitorRuleEngine1.addRule(rule0);
      BasicChaosMonkeyContext basicChaosMonkeyContext0 = new BasicChaosMonkeyContext();
      String string1 = "SSLSupportMethod: ";
      ScanRequest scanRequest0 = new ScanRequest(string1);
      Map<String, String> map0 = scanRequest0.getExpressionAttributeNames();
      // Undeclared exception!
      try { 
        AWSResource.parseFieldtoValueMap(map0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.netflix.simianarmy.aws.AWSResource", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      MonkeyCalendar monkeyCalendar0 = basicJanitorMonkeyContext_BasicJanitorContext0.calendar();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getImageJanitor();
      } catch(RuntimeException e) {
         //
         // Image Janitor only works when Edda is enabled.
         //
         verifyException("com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      JanitorRuleEngine janitorRuleEngine0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorRuleEngine();
      JanitorCrawler janitorCrawler0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorCrawler();
      JanitorResourceTracker janitorResourceTracker0 = null;
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext1 = new BasicJanitorMonkeyContext.BasicJanitorContext(basicJanitorMonkeyContext_BasicJanitorContext0.region, basicJanitorMonkeyContext_BasicJanitorContext0.ruleEngine, basicJanitorMonkeyContext_BasicJanitorContext0.crawler, janitorResourceTracker0, basicJanitorMonkeyContext_BasicJanitorContext0.calendar, basicJanitorMonkeyContext_BasicJanitorContext0.config, basicJanitorMonkeyContext_BasicJanitorContext0.recorder);
      MonkeyConfiguration monkeyConfiguration0 = basicJanitorMonkeyContext_BasicJanitorContext1.configuration();
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      JanitorRuleEngine janitorRuleEngine0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorRuleEngine();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
      JanitorEmailNotifier janitorEmailNotifier0 = basicJanitorMonkeyContext0.emailNotifier();
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      List<AbstractJanitor> list0 = basicJanitorMonkeyContext0.janitors();
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      EBSSnapshotJanitor eBSSnapshotJanitor0 = basicJanitorMonkeyContext0.getEBSSnapshotJanitor();
      BasicSimianArmyContext.GLOBAL_OWNER_TAGKEY = basicJanitorMonkeyContext0.sourceEmail;
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      MonkeyConfiguration monkeyConfiguration0 = basicJanitorMonkeyContext_BasicJanitorContext0.configuration();
      LaunchConfigJanitor launchConfigJanitor0 = basicJanitorMonkeyContext0.getLaunchConfigJanitor();
      JanitorEmailNotifier janitorEmailNotifier0 = basicJanitorMonkeyContext0.emailNotifier();
      InstanceJanitor instanceJanitor0 = basicJanitorMonkeyContext0.getInstanceJanitor();
      String string0 = "Double";
      BasicSimianArmyContext.GLOBAL_OWNER_TAGKEY = string0;
      basicJanitorMonkeyContext0.monkeyCalendar = basicJanitorMonkeyContext_BasicJanitorContext0.calendar;
      JanitorResourceTracker janitorResourceTracker1 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorResourceTracker();
      String string1 = basicJanitorMonkeyContext_BasicJanitorContext0.region();
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getLaunchConfigJanitor();
      } catch(IllegalArgumentException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      basicJanitorMonkeyContext0.monkeyRegion = basicJanitorMonkeyContext_BasicJanitorContext0.region;
      Set<String> set0 = basicJanitorMonkeyContext0.getEnabledResourceSet();
      String string0 = basicJanitorMonkeyContext0.getEventReport();
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getEBSVolumeJanitor();
      } catch(IllegalArgumentException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      EBSSnapshotJanitor eBSSnapshotJanitor0 = basicJanitorMonkeyContext0.getEBSSnapshotJanitor();
      basicJanitorMonkeyContext0.monkeyCalendar = basicJanitorMonkeyContext_BasicJanitorContext0.calendar;
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getASGJanitor();
      } catch(IllegalArgumentException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      InstanceJanitor instanceJanitor0 = basicJanitorMonkeyContext0.getInstanceJanitor();
      BasicJanitorEmailBuilder basicJanitorEmailBuilder0 = (BasicJanitorEmailBuilder)basicJanitorMonkeyContext0.janitorEmailBuilder;
      JanitorEmailNotifier.Context janitorEmailNotifier_Context0 = basicJanitorMonkeyContext0.getJanitorEmailNotifierContext();
      basicJanitorMonkeyContext0.janitorEmailBuilder = (JanitorEmailBuilder) basicJanitorEmailBuilder0;
      EBSSnapshotJanitor eBSSnapshotJanitor0 = basicJanitorMonkeyContext0.getEBSSnapshotJanitor();
      InstanceJanitor instanceJanitor1 = basicJanitorMonkeyContext0.getInstanceJanitor();
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      EddaClient eddaClient0 = basicJanitorMonkeyContext0.createEddaClient();
      basicJanitorMonkeyContext0.janitorResourceTracker = basicJanitorMonkeyContext_BasicJanitorContext0.resourceTracker;
      JanitorCrawler janitorCrawler0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorCrawler();
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getEBSSnapshotJanitor();
      } catch(IllegalArgumentException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorResourceTracker();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      basicJanitorMonkeyContext0.monkeyRegion = basicJanitorMonkeyContext_BasicJanitorContext0.region;
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getInstanceJanitor();
      } catch(IllegalArgumentException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang.Validate", e);
      }
  }
}
