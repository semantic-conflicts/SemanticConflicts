/*
 * This file was automatically generated by EvoSuite
 * Mon May 25 08:14:14 GMT 2020
 */

package com.zaxxer.hikari;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zaxxer.hikari.HikariConfig;
import com.zaxxer.hikari.HikariDataSource;
import com.zaxxer.hikari.HikariPool;
import com.zaxxer.hikari.proxy.IHikariConnectionProxy;
import com.zaxxer.hikari.util.ConcurrentBag;
import java.sql.Connection;
import java.util.Timer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockTimer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HikariPool_ESTest extends HikariPool_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      HikariPool hikariPool0 = null;
      try {
        hikariPool0 = new HikariPool(hikariDataSource0);
      } catch(IllegalStateException e) {
         //
         // one of either dataSource or dataSourceClassName must be specified
         //
         verifyException("com.zaxxer.hikari.HikariConfig", e);
      }
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      HikariPool hikariPool0 = new HikariPool();
      // Undeclared exception!
      try { 
        hikariPool0.fillPool();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      HikariPool hikariPool0 = new HikariPool();
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iHikariConnectionProxy0).isBrokenConnection();
      // Undeclared exception!
      try { 
        hikariPool0.releaseConnection(iHikariConnectionProxy0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test3()  throws Throwable  {
      HikariPool hikariPool0 = new HikariPool();
      String[] stringArray0 = new String[8];
      stringArray0[0] = hikariPool0.catalog;
      stringArray0[1] = hikariPool0.catalog;
      stringArray0[2] = hikariPool0.catalog;
      stringArray0[3] = hikariPool0.catalog;
      stringArray0[4] = hikariPool0.catalog;
      stringArray0[5] = hikariPool0.catalog;
      stringArray0[6] = hikariPool0.catalog;
      stringArray0[7] = hikariPool0.catalog;
      // Undeclared exception!
      try { 
        hikariPool0.logPoolState(stringArray0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test4()  throws Throwable  {
      HikariPool hikariPool0 = new HikariPool();
      IHikariConnectionProxy iHikariConnectionProxy0 = mock(IHikariConnectionProxy.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        hikariPool0.closeConnection(iHikariConnectionProxy0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test5()  throws Throwable  {
      HikariConfig hikariConfig0 = new HikariConfig();
      String string0 = "Zm4t";
      hikariConfig0.dataSourceClassName = string0;
      long long0 = 10000L;
      HikariConfig.ACQUIRE_RETRY_DELAY = long0;
      HikariPool hikariPool0 = null;
      try {
        hikariPool0 = new HikariPool(hikariConfig0);
      } catch(RuntimeException e) {
         //
         // Could not create datasource instance: Zm4t
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test6()  throws Throwable  {
      HikariConfig hikariConfig0 = null;
      HikariPool hikariPool0 = null;
      try {
        hikariPool0 = new HikariPool(hikariConfig0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test7()  throws Throwable  {
      HikariPool hikariPool0 = new HikariPool();
      // Undeclared exception!
      try { 
        hikariPool0.getTotalConnections();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test8()  throws Throwable  {
      HikariPool hikariPool0 = new HikariPool();
      // Undeclared exception!
      try { 
        hikariPool0.getActiveConnections();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }
}
