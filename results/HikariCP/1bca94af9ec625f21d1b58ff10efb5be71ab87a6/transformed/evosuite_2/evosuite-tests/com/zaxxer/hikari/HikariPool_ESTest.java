/*
 * This file was automatically generated by EvoSuite
 * Mon May 25 06:46:09 GMT 2020
 */

package com.zaxxer.hikari;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zaxxer.hikari.HikariDataSource;
import com.zaxxer.hikari.HikariPool;
import com.zaxxer.hikari.proxy.IHikariConnectionProxy;
import com.zaxxer.hikari.util.ConcurrentBag;
import java.sql.Connection;
import javax.sql.DataSource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HikariPool_ESTest extends HikariPool_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      HikariPool hikariPool0 = new HikariPool();
      IHikariConnectionProxy iHikariConnectionProxy0 = null;
      long long0 = 269L;
      // Undeclared exception!
      try { 
        hikariPool0.isConnectionAlive(iHikariConnectionProxy0, long0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      HikariPool hikariPool0 = null;
      try {
        hikariPool0 = new HikariPool(hikariDataSource0);
      } catch(IllegalStateException e) {
         //
         // one of either dataSource or dataSourceClassName must be specified
         //
         verifyException("com.zaxxer.hikari.HikariConfig", e);
      }
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      HikariDataSource hikariDataSource0 = new HikariDataSource();
      String string0 = null;
      HikariPool hikariPool0 = new HikariPool();
      hikariDataSource0.pool = hikariPool0;
      hikariDataSource0.setTransactionIsolation(string0);
      DataSource dataSource0 = null;
      hikariDataSource0.dataSource = dataSource0;
      HikariPool hikariPool1 = hikariDataSource0.pool;
      // Undeclared exception!
      try { 
        hikariPool1.getActiveConnections();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.HikariPool", e);
      }
  }
}
