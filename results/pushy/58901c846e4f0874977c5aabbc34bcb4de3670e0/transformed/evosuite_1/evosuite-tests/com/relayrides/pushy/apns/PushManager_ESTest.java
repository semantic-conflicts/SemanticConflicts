/*
 * This file was automatically generated by EvoSuite
 * Mon May 25 20:23:12 GMT 2020
 */

package com.relayrides.pushy.apns;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.relayrides.pushy.apns.ApnsConnection;
import com.relayrides.pushy.apns.ApnsConnectionListener;
import com.relayrides.pushy.apns.ApnsConnectionPool;
import com.relayrides.pushy.apns.ApnsEnvironment;
import com.relayrides.pushy.apns.ExpiredToken;
import com.relayrides.pushy.apns.FailedConnectionListener;
import com.relayrides.pushy.apns.FeedbackServiceClient;
import com.relayrides.pushy.apns.KnownBadPushNotification;
import com.relayrides.pushy.apns.PushManager;
import com.relayrides.pushy.apns.RejectedNotificationListener;
import com.relayrides.pushy.apns.RejectedNotificationReason;
import io.netty.buffer.ByteBufAllocator;
import io.netty.channel.ChannelHandler;
import io.netty.channel.ChannelInboundHandlerAdapter;
import io.netty.channel.DefaultChannelProgressivePromise;
import io.netty.channel.EventLoop;
import io.netty.channel.embedded.EmbeddedChannel;
import io.netty.channel.local.LocalServerChannel;
import io.netty.channel.rxtx.RxtxChannel;
import java.nio.CharBuffer;
import java.time.Instant;
import java.util.Date;
import java.util.List;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLEngine;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PushManager_ESTest extends PushManager_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      ApnsEnvironment apnsEnvironment0 = ApnsEnvironment.getProductionEnvironment();
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      SSLContext sSLContext0 = pushManager0.sslContext;
      int int0 = 0;
      boolean boolean0 = false;
      ApnsEnvironment apnsEnvironment1 = ApnsEnvironment.getSandboxEnvironment();
      pushManager0.shutDownFinished = boolean0;
      pushManager0.createAndStartDispatchThread();
      PushManager<KnownBadPushNotification> pushManager1 = null;
      try {
        pushManager1 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, sSLContext0, int0, pushManager0.eventLoopGroup, pushManager0.eventLoopGroup, pushManager0.retryQueue);
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      long long0 = (-618L);
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      // Undeclared exception!
      try { 
        pushManager0.getExpiredTokens(long0, timeUnit0);
      } catch(IllegalStateException e) {
         //
         // Push manager has not been started yet.
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification> pushManager_DispatchThreadExceptionHandler0 = new PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification>();
      Thread thread0 = null;
      String string0 = "+G:EjEzL-HHc<PL";
      MockThrowable mockThrowable0 = new MockThrowable(string0);
      // Undeclared exception!
      try { 
        pushManager_DispatchThreadExceptionHandler0.uncaughtException(thread0, mockThrowable0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager$DispatchThreadExceptionHandler", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      boolean boolean0 = pushManager0.isStarted();
      PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification> pushManager_DispatchThreadExceptionHandler0 = new PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification>(pushManager0);
      String string0 = "5(FNKSrp*<6";
      String string1 = "AF`}M[rO";
      Throwable throwable0 = null;
      MockThrowable mockThrowable0 = new MockThrowable(string1, throwable0);
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      pushManager_DispatchThreadExceptionHandler0.uncaughtException(pushManager0.dispatchThread, mockThrowable1);
      MockThrowable mockThrowable2 = new MockThrowable(string0);
      pushManager_DispatchThreadExceptionHandler0.uncaughtException(pushManager0.dispatchThread, mockThrowable2);
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      ReentrantLock reentrantLock0 = pushManager0.connectionLock;
      pushManager0.connectionLock = reentrantLock0;
      ApnsEnvironment apnsEnvironment0 = pushManager0.environment;
      int int0 = 1538;
      int int1 = 0;
      MockDate mockDate0 = new MockDate(int0, int0, pushManager0.unfinishedConnectionCount, int1, pushManager0.unfinishedConnectionCount);
      pushManager0.waitForAllOperationsToFinish(mockDate0);
      int int2 = 6;
      PushManager<KnownBadPushNotification> pushManager1 = null;
      try {
        pushManager1 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, pushManager0.sslContext, int2, pushManager0.eventLoopGroup, pushManager0.eventLoopGroup, pushManager0.retryQueue);
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification> pushManager_DispatchThreadExceptionHandler0 = new PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification>(pushManager0);
      pushManager_DispatchThreadExceptionHandler0.manager = pushManager0;
      PushManager<KnownBadPushNotification> pushManager1 = pushManager_DispatchThreadExceptionHandler0.manager;
      PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification> pushManager_DispatchThreadExceptionHandler1 = new PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification>(pushManager1);
      // Undeclared exception!
      try { 
        pushManager0.getExpiredTokens();
      } catch(IllegalStateException e) {
         //
         // Push manager has not been started yet.
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      long long0 = 0L;
      // Undeclared exception!
      try { 
        pushManager0.getExpiredTokens();
      } catch(IllegalStateException e) {
         //
         // Push manager has not been started yet.
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      pushManager0.start();
      int int0 = (-3632);
      pushManager0.unfinishedConnectionCount = int0;
      FeedbackServiceClient feedbackServiceClient0 = new FeedbackServiceClient(pushManager0.environment, pushManager0.sslContext, pushManager0.eventLoopGroup);
      pushManager0.feedbackServiceClient = feedbackServiceClient0;
      boolean boolean0 = false;
      pushManager0.shouldShutDownListenerExecutorService = boolean0;
      boolean boolean1 = true;
      pushManager0.shutDown = boolean1;
      // Undeclared exception!
      try { 
        pushManager0.shutdown();
      } catch(IllegalStateException e) {
         //
         // Push manager has not yet been started and cannot be shut down.
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = null;
      BlockingQueue<KnownBadPushNotification> blockingQueue0 = pushManager0.getQueue();
      // Undeclared exception!
      try { 
        pushManager0.handleUnprocessedNotifications(apnsConnection0, blockingQueue0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      ApnsEnvironment apnsEnvironment0 = ApnsEnvironment.getProductionEnvironment();
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      SSLContext sSLContext0 = pushManager0.sslContext;
      int int0 = (-3357);
      PriorityBlockingQueue<KnownBadPushNotification> priorityBlockingQueue0 = new PriorityBlockingQueue<KnownBadPushNotification>();
      PushManager<KnownBadPushNotification> pushManager1 = null;
      try {
        pushManager1 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, sSLContext0, int0, pushManager0.eventLoopGroup, pushManager0.listenerExecutorService, priorityBlockingQueue0);
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      BlockingQueue<KnownBadPushNotification> blockingQueue0 = pushManager0.queue;
      pushManager0.queue = blockingQueue0;
      pushManager0.start();
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = new ApnsConnection<KnownBadPushNotification>(pushManager0.environment, pushManager0.sslContext, pushManager0.eventLoopGroup, pushManager0);
      BlockingQueue<KnownBadPushNotification> blockingQueue1 = pushManager0.getQueue();
      // Undeclared exception!
      try { 
        pushManager0.handleUnprocessedNotifications(apnsConnection0, blockingQueue1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      ApnsEnvironment apnsEnvironment0 = pushManager0.environment;
      PushManager<KnownBadPushNotification> pushManager1 = null;
      try {
        pushManager1 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, pushManager0.sslContext, pushManager0.unfinishedConnectionCount, pushManager0.eventLoopGroup, pushManager0.listenerExecutorService, pushManager0.queue);
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = null;
      boolean boolean0 = true;
      pushManager0.shutDown = boolean0;
      KnownBadPushNotification knownBadPushNotification0 = null;
      MockThrowable mockThrowable0 = new MockThrowable();
      String string0 = "E,<SLK!F7^zf";
      String string1 = "4p`DVK?7eu{][7H";
      String string2 = "<F}";
      int int0 = 1195;
      StackTraceElement stackTraceElement0 = new StackTraceElement(string0, string1, string2, int0);
      mockThrowable0.setOriginForDelegate(stackTraceElement0);
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      mockThrowable1.addSuppressed(mockThrowable0);
      Throwable[] throwableArray0 = mockThrowable1.getSuppressed();
      mockThrowable1.addSuppressed(mockThrowable0);
      // Undeclared exception!
      try { 
        pushManager0.handleWriteFailure(apnsConnection0, knownBadPushNotification0, mockThrowable1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      RejectedNotificationListener<KnownBadPushNotification> rejectedNotificationListener0 = (RejectedNotificationListener<KnownBadPushNotification>) mock(RejectedNotificationListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        pushManager0.registerRejectedNotificationListener(rejectedNotificationListener0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      long long0 = 4592L;
      // Undeclared exception!
      try { 
        pushManager0.shutdown(long0);
      } catch(IllegalStateException e) {
         //
         // Push manager has not yet been started and cannot be shut down.
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      long long0 = 1993L;
      MockDate mockDate0 = new MockDate(long0);
      long long1 = mockDate0.getTime();
      long long2 = 0L;
      mockDate0.setTime(long2);
      pushManager0.waitForAllOperationsToFinish(mockDate0);
      FailedConnectionListener<KnownBadPushNotification> failedConnectionListener0 = (FailedConnectionListener<KnownBadPushNotification>) mock(FailedConnectionListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        pushManager0.unregisterFailedConnectionListener(failedConnectionListener0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      RejectedNotificationListener<KnownBadPushNotification> rejectedNotificationListener0 = (RejectedNotificationListener<KnownBadPushNotification>) mock(RejectedNotificationListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        pushManager0.unregisterRejectedNotificationListener(rejectedNotificationListener0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      FailedConnectionListener<KnownBadPushNotification> failedConnectionListener0 = (FailedConnectionListener<KnownBadPushNotification>) mock(FailedConnectionListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        pushManager0.registerFailedConnectionListener(failedConnectionListener0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      long long0 = 0L;
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      // Undeclared exception!
      try { 
        pushManager0.getExpiredTokens(long0, timeUnit0);
      } catch(IllegalStateException e) {
         //
         // Push manager has not been started yet.
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      pushManager0.start();
      long long0 = (-2394L);
      // Undeclared exception!
      try { 
        pushManager0.shutdown(long0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      boolean boolean0 = true;
      pushManager0.shutDownFinished = boolean0;
      PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification> pushManager_DispatchThreadExceptionHandler0 = new PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification>(pushManager0);
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = null;
      // Undeclared exception!
      try { 
        pushManager0.handleConnectionClosure(apnsConnection0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification> pushManager_DispatchThreadExceptionHandler0 = new PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification>(pushManager0);
      PushManager<KnownBadPushNotification> pushManager1 = pushManager_DispatchThreadExceptionHandler0.manager;
      boolean boolean0 = pushManager1.isShutDown();
      pushManager1.retryQueue = pushManager0.retryQueue;
      RejectedNotificationListener<KnownBadPushNotification> rejectedNotificationListener0 = (RejectedNotificationListener<KnownBadPushNotification>) mock(RejectedNotificationListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        pushManager0.unregisterRejectedNotificationListener(rejectedNotificationListener0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = new ApnsConnection<KnownBadPushNotification>(pushManager0.environment, pushManager0.sslContext, pushManager0.eventLoopGroup, pushManager0);
      KnownBadPushNotification knownBadPushNotification0 = new KnownBadPushNotification();
      RejectedNotificationReason rejectedNotificationReason0 = RejectedNotificationReason.MISSING_PAYLOAD;
      // Undeclared exception!
      try { 
        pushManager0.handleRejectedNotification(apnsConnection0, knownBadPushNotification0, rejectedNotificationReason0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      ReentrantLock reentrantLock0 = new ReentrantLock(pushManager0.shutDown);
      AbstractQueuedLongSynchronizer abstractQueuedLongSynchronizer0 = mock(AbstractQueuedLongSynchronizer.class, new ViolatedAssumptionAnswer());
      AbstractQueuedLongSynchronizer.ConditionObject abstractQueuedLongSynchronizer_ConditionObject0 = abstractQueuedLongSynchronizer0.new ConditionObject();
      pushManager0.connectionsFinished = (Condition) abstractQueuedLongSynchronizer_ConditionObject0;
      pushManager0.connectionLock = reentrantLock0;
      pushManager0.createAndStartDispatchThread();
      pushManager0.start();
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = new ApnsConnection<KnownBadPushNotification>(pushManager0.environment, pushManager0.sslContext, pushManager0.eventLoopGroup, pushManager0);
      KnownBadPushNotification knownBadPushNotification0 = new KnownBadPushNotification();
      apnsConnection0.shutdownGracefully();
      apnsConnection0.shutdownGracefully();
      RejectedNotificationReason rejectedNotificationReason0 = RejectedNotificationReason.MISSING_PAYLOAD;
      // Undeclared exception!
      try { 
        pushManager0.handleRejectedNotification(apnsConnection0, knownBadPushNotification0, rejectedNotificationReason0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      Thread thread0 = pushManager0.createDispatchThread();
      ReentrantLock reentrantLock0 = null;
      pushManager0.connectionLock = reentrantLock0;
      PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification> pushManager_DispatchThreadExceptionHandler0 = new PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification>(pushManager0);
      PushManager<KnownBadPushNotification> pushManager1 = pushManager_DispatchThreadExceptionHandler0.manager;
      PushManager<KnownBadPushNotification> pushManager2 = new PushManager<KnownBadPushNotification>();
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = new ApnsConnection<KnownBadPushNotification>(pushManager0.environment, pushManager1.sslContext, pushManager1.eventLoopGroup, pushManager2);
      KnownBadPushNotification knownBadPushNotification0 = new KnownBadPushNotification();
      apnsConnection0.waitForPendingOperationsToFinish();
      // Undeclared exception!
      try { 
        apnsConnection0.connect();
      } catch(NullPointerException e) {
         //
         // group
         //
         verifyException("io.netty.bootstrap.AbstractBootstrap", e);
      }
  }
}
