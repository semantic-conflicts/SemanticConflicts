/*
 * This file was automatically generated by EvoSuite
 * Mon May 25 20:36:30 GMT 2020
 */

package com.relayrides.pushy.apns;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.relayrides.pushy.apns.ApnsConnection;
import com.relayrides.pushy.apns.ApnsConnectionPool;
import com.relayrides.pushy.apns.ApnsEnvironment;
import com.relayrides.pushy.apns.ExpiredToken;
import com.relayrides.pushy.apns.FailedConnectionListener;
import com.relayrides.pushy.apns.KnownBadPushNotification;
import com.relayrides.pushy.apns.PushManager;
import com.relayrides.pushy.apns.RejectedNotificationListener;
import com.relayrides.pushy.apns.RejectedNotificationReason;
import io.netty.channel.Channel;
import io.netty.channel.ChannelDuplexHandler;
import io.netty.channel.ChannelFuture;
import io.netty.channel.ChannelHandler;
import io.netty.channel.ChannelInboundHandlerAdapter;
import io.netty.channel.ChannelOutboundHandlerAdapter;
import io.netty.channel.ChannelProgressivePromise;
import io.netty.channel.ChannelPromise;
import io.netty.channel.CombinedChannelDuplexHandler;
import io.netty.channel.DefaultChannelProgressivePromise;
import io.netty.channel.EventLoop;
import io.netty.channel.embedded.EmbeddedChannel;
import io.netty.channel.local.LocalAddress;
import io.netty.channel.local.LocalServerChannel;
import io.netty.channel.nio.NioEventLoopGroup;
import io.netty.channel.rxtx.RxtxChannel;
import io.netty.util.Attribute;
import io.netty.util.AttributeKey;
import io.netty.util.concurrent.DefaultThreadFactory;
import java.net.SocketAddress;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.Provider;
import java.time.Instant;
import java.util.Date;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.ReentrantLock;
import java.util.function.Consumer;
import javax.net.ssl.SSLContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.security.MockSecureRandom;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PushManager_ESTest extends PushManager_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification> pushManager_DispatchThreadExceptionHandler0 = new PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification>(pushManager0);
      PushManager<KnownBadPushNotification> pushManager1 = pushManager_DispatchThreadExceptionHandler0.manager;
      ApnsEnvironment apnsEnvironment0 = pushManager1.environment;
      int int0 = 0;
      NioEventLoopGroup nioEventLoopGroup0 = null;
      try {
        nioEventLoopGroup0 = new NioEventLoopGroup(pushManager0.concurrentConnectionCount);
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      boolean boolean0 = true;
      ReentrantLock reentrantLock0 = new ReentrantLock();
      pushManager0.connectionLock = reentrantLock0;
      pushManager0.shouldShutDownEventLoopGroup = boolean0;
      pushManager0.start();
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      ApnsEnvironment apnsEnvironment0 = null;
      String string0 = "";
      long long0 = (-2129L);
      MockSecureRandom mockSecureRandom0 = new MockSecureRandom(long0);
      Provider provider0 = mockSecureRandom0.getProvider();
      try { 
        SSLContext.getInstance(string0, provider0);
      } catch(NoSuchAlgorithmException e) {
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      ApnsEnvironment apnsEnvironment0 = ApnsEnvironment.getProductionEnvironment();
      SSLContext sSLContext0 = SSLContext.getDefault();
      int int0 = 1;
      NioEventLoopGroup nioEventLoopGroup0 = null;
      LinkedBlockingQueue<KnownBadPushNotification> linkedBlockingQueue0 = new LinkedBlockingQueue<KnownBadPushNotification>();
      PushManager<KnownBadPushNotification> pushManager0 = null;
      try {
        pushManager0 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, sSLContext0, int0, nioEventLoopGroup0, nioEventLoopGroup0, linkedBlockingQueue0);
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      ApnsEnvironment apnsEnvironment0 = pushManager0.environment;
      int int0 = (-1416);
      String string0 = "oY9SKI";
      DefaultThreadFactory defaultThreadFactory0 = new DefaultThreadFactory(string0, pushManager0.shouldShutDownListenerExecutorService);
      NioEventLoopGroup nioEventLoopGroup0 = null;
      try {
        nioEventLoopGroup0 = new NioEventLoopGroup(int0, defaultThreadFactory0);
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification> pushManager_DispatchThreadExceptionHandler0 = new PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification>();
      String string0 = "NJt\"fX,8n0iOa";
      MockThread mockThread0 = new MockThread(string0);
      mockThread0.run();
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      MockThread.setDefaultUncaughtExceptionHandler(pushManager_DispatchThreadExceptionHandler0);
      StackTraceElement stackTraceElement0 = null;
      mockThrowable0.setOriginForDelegate(stackTraceElement0);
      // Undeclared exception!
      try { 
        pushManager_DispatchThreadExceptionHandler0.uncaughtException(mockThread0, mockThrowable1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager$DispatchThreadExceptionHandler", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      FailedConnectionListener<KnownBadPushNotification> failedConnectionListener0 = (FailedConnectionListener<KnownBadPushNotification>) mock(FailedConnectionListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        pushManager0.unregisterFailedConnectionListener(failedConnectionListener0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      BlockingQueue<KnownBadPushNotification> blockingQueue0 = pushManager0.getQueue();
      boolean boolean0 = pushManager0.isShutDown();
      // Undeclared exception!
      try { 
        pushManager0.shutdown();
      } catch(IllegalStateException e) {
         //
         // Push manager has not yet been started and cannot be shut down.
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      boolean boolean0 = true;
      pushManager0.shouldShutDownEventLoopGroup = boolean0;
      Thread thread0 = pushManager0.createDispatchThread();
      long long0 = 0L;
      // Undeclared exception!
      try { 
        pushManager0.shutdown(long0);
      } catch(IllegalStateException e) {
         //
         // Push manager has not yet been started and cannot be shut down.
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = null;
      // Undeclared exception!
      try { 
        pushManager0.handleConnectionClosure(apnsConnection0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = new ApnsConnection<KnownBadPushNotification>(pushManager0.environment, pushManager0.sslContext, pushManager0.eventLoopGroup, pushManager0);
      KnownBadPushNotification knownBadPushNotification0 = new KnownBadPushNotification();
      RejectedNotificationReason rejectedNotificationReason0 = RejectedNotificationReason.INVALID_TOKEN;
      // Undeclared exception!
      try { 
        pushManager0.handleRejectedNotification(apnsConnection0, knownBadPushNotification0, rejectedNotificationReason0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification> pushManager_DispatchThreadExceptionHandler0 = new PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification>(pushManager0);
      PushManager<KnownBadPushNotification> pushManager1 = pushManager_DispatchThreadExceptionHandler0.manager;
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = null;
      KnownBadPushNotification knownBadPushNotification0 = new KnownBadPushNotification();
      pushManager1.listenerExecutorService = pushManager0.listenerExecutorService;
      RejectedNotificationReason rejectedNotificationReason0 = RejectedNotificationReason.INVALID_PAYLOAD_SIZE;
      // Undeclared exception!
      try { 
        pushManager1.handleRejectedNotification(apnsConnection0, knownBadPushNotification0, rejectedNotificationReason0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      // Undeclared exception!
      try { 
        pushManager0.getExpiredTokens();
      } catch(IllegalStateException e) {
         //
         // Push manager has not been started yet.
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      long long0 = 0L;
      LinkedBlockingQueue<KnownBadPushNotification> linkedBlockingQueue0 = new LinkedBlockingQueue<KnownBadPushNotification>();
      pushManager0.retryQueue = linkedBlockingQueue0;
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      // Undeclared exception!
      try { 
        pushManager0.getExpiredTokens(long0, timeUnit0);
      } catch(IllegalStateException e) {
         //
         // Push manager has not been started yet.
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = new ApnsConnection<KnownBadPushNotification>(pushManager0.environment, pushManager0.sslContext, pushManager0.eventLoopGroup, pushManager0);
      KnownBadPushNotification knownBadPushNotification0 = new KnownBadPushNotification();
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        pushManager0.handleWriteFailure(apnsConnection0, knownBadPushNotification0, mockThrowable0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = null;
      // Undeclared exception!
      try { 
        pushManager0.handleConnectionSuccess(apnsConnection0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = new ApnsConnection<KnownBadPushNotification>(pushManager0.environment, pushManager0.sslContext, pushManager0.eventLoopGroup, pushManager0);
      KnownBadPushNotification knownBadPushNotification0 = new KnownBadPushNotification();
      Throwable throwable0 = null;
      // Undeclared exception!
      try { 
        pushManager0.handleWriteFailure(apnsConnection0, knownBadPushNotification0, throwable0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      long long0 = 978L;
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      boolean boolean0 = true;
      pushManager0.shutDown = boolean0;
      // Undeclared exception!
      try { 
        pushManager0.getExpiredTokens(long0, timeUnit0);
      } catch(IllegalStateException e) {
         //
         // Push manager has not been started yet.
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      boolean boolean0 = true;
      pushManager0.shutDownFinished = boolean0;
      boolean boolean1 = pushManager0.isStarted();
      long long0 = (-1L);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      // Undeclared exception!
      try { 
        pushManager0.getExpiredTokens(long0, timeUnit0);
      } catch(IllegalStateException e) {
         //
         // Push manager has not been started yet.
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification> pushManager_DispatchThreadExceptionHandler0 = new PushManager.DispatchThreadExceptionHandler<KnownBadPushNotification>(pushManager0);
      pushManager_DispatchThreadExceptionHandler0.manager = pushManager0;
      PushManager<KnownBadPushNotification> pushManager1 = pushManager_DispatchThreadExceptionHandler0.manager;
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = new ApnsConnection<KnownBadPushNotification>(pushManager0.environment, pushManager1.sslContext, pushManager0.eventLoopGroup, pushManager1);
      // Undeclared exception!
      try { 
        pushManager1.handleUnprocessedNotifications(apnsConnection0, pushManager0.queue);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      int int0 = 904;
      MockDate mockDate0 = new MockDate(int0, pushManager0.unfinishedConnectionCount, pushManager0.unfinishedConnectionCount);
      pushManager0.waitForAllOperationsToFinish(mockDate0);
      String string0 = "F/P]";
      String string1 = "p";
      try { 
        SSLContext.getInstance(string0, string1);
      } catch(NoSuchProviderException e) {
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = new ApnsConnection<KnownBadPushNotification>(pushManager0.environment, pushManager0.sslContext, pushManager0.eventLoopGroup, pushManager0);
      BlockingQueue<KnownBadPushNotification> blockingQueue0 = pushManager0.getQueue();
      // Undeclared exception!
      try { 
        pushManager0.handleUnprocessedNotifications(apnsConnection0, blockingQueue0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      PushManager<KnownBadPushNotification> pushManager1 = new PushManager<KnownBadPushNotification>();
      RejectedNotificationListener<KnownBadPushNotification> rejectedNotificationListener0 = (RejectedNotificationListener<KnownBadPushNotification>) mock(RejectedNotificationListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        pushManager0.unregisterRejectedNotificationListener(rejectedNotificationListener0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      PushManager<KnownBadPushNotification> pushManager0 = new PushManager<KnownBadPushNotification>();
      PushManager<KnownBadPushNotification> pushManager1 = new PushManager<KnownBadPushNotification>();
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = new ApnsConnection<KnownBadPushNotification>(pushManager0.environment, pushManager0.sslContext, pushManager0.eventLoopGroup, pushManager1);
      pushManager1.createAndStartDispatchThread();
      KnownBadPushNotification knownBadPushNotification0 = new KnownBadPushNotification();
      RejectedNotificationReason rejectedNotificationReason0 = RejectedNotificationReason.INVALID_PAYLOAD_SIZE;
      // Undeclared exception!
      try { 
        pushManager0.handleRejectedNotification(apnsConnection0, knownBadPushNotification0, rejectedNotificationReason0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.relayrides.pushy.apns.PushManager", e);
      }
  }
}
