/*
 * This file was automatically generated by EvoSuite
 * Tue May 26 03:14:39 GMT 2020
 */

package com.relayrides.pushy.apns;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.relayrides.pushy.apns.ApnsConnection;
import com.relayrides.pushy.apns.ApnsEnvironment;
import com.relayrides.pushy.apns.ExpiredToken;
import com.relayrides.pushy.apns.FailedConnectionListener;
import com.relayrides.pushy.apns.KnownBadPushNotification;
import com.relayrides.pushy.apns.PushManager;
import io.netty.channel.nio.NioEventLoopGroup;
import io.netty.util.concurrent.DefaultThreadFactory;
import java.nio.channels.spi.SelectorProvider;
import java.util.List;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.TimeUnit;
import javax.net.ssl.SSLContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PushManager_ESTest extends PushManager_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      ApnsEnvironment apnsEnvironment0 = null;
      SSLContext sSLContext0 = SSLContext.getDefault();
      NioEventLoopGroup nioEventLoopGroup0 = null;
      int int0 = (-3);
      SynchronousQueue<KnownBadPushNotification> synchronousQueue0 = new SynchronousQueue<KnownBadPushNotification>();
      PushManager<KnownBadPushNotification> pushManager0 = null;
      try {
        pushManager0 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, sSLContext0, int0, nioEventLoopGroup0, nioEventLoopGroup0, synchronousQueue0);
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      ApnsEnvironment apnsEnvironment0 = ApnsEnvironment.getSandboxEnvironment();
      SSLContext sSLContext0 = SSLContext.getDefault();
      int int0 = 100;
      NioEventLoopGroup nioEventLoopGroup0 = null;
      BlockingQueue<KnownBadPushNotification> blockingQueue0 = null;
      PushManager<KnownBadPushNotification> pushManager0 = null;
      try {
        pushManager0 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, sSLContext0, int0, nioEventLoopGroup0, nioEventLoopGroup0, blockingQueue0);
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      String string0 = "{B!%a`mkgPm";
      int int0 = (-3474);
      ApnsEnvironment apnsEnvironment0 = new ApnsEnvironment(string0, int0, string0, int0);
      SSLContext sSLContext0 = null;
      int int1 = 587;
      NioEventLoopGroup nioEventLoopGroup0 = null;
      PriorityBlockingQueue<KnownBadPushNotification> priorityBlockingQueue0 = new PriorityBlockingQueue<KnownBadPushNotification>();
      PushManager<KnownBadPushNotification> pushManager0 = null;
      try {
        pushManager0 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, sSLContext0, int1, nioEventLoopGroup0, nioEventLoopGroup0, priorityBlockingQueue0);
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test3()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = null;
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)48;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-107);
      byteArray0[2] = byte2;
      byte byte3 = (byte)73;
      byteArray0[3] = byte3;
      byte byte4 = (byte)10;
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      boolean boolean0 = NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress0, byteArray0);
      ApnsEnvironment apnsEnvironment0 = ApnsEnvironment.getSandboxEnvironment();
      SSLContext sSLContext0 = SSLContext.getDefault();
      int int0 = 5;
      int int1 = 0;
      Class<KnownBadPushNotification> class0 = KnownBadPushNotification.class;
      DefaultThreadFactory defaultThreadFactory0 = new DefaultThreadFactory(class0);
      SelectorProvider selectorProvider0 = SelectorProvider.provider();
      NioEventLoopGroup nioEventLoopGroup0 = null;
      try {
        nioEventLoopGroup0 = new NioEventLoopGroup(int1, defaultThreadFactory0, selectorProvider0);
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }
}
