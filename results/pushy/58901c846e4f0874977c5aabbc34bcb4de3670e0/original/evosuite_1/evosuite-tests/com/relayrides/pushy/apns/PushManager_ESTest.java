/*
 * This file was automatically generated by EvoSuite
 * Tue May 26 03:03:23 GMT 2020
 */

package com.relayrides.pushy.apns;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.relayrides.pushy.apns.ApnsConnection;
import com.relayrides.pushy.apns.ApnsEnvironment;
import com.relayrides.pushy.apns.ExpiredToken;
import com.relayrides.pushy.apns.KnownBadPushNotification;
import com.relayrides.pushy.apns.PushManager;
import com.relayrides.pushy.apns.RejectedNotificationListener;
import com.relayrides.pushy.apns.RejectedNotificationReason;
import io.netty.channel.nio.NioEventLoopGroup;
import java.security.NoSuchAlgorithmException;
import java.util.List;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.TimeUnit;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLEngine;
import javax.net.ssl.SSLSessionContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PushManager_ESTest extends PushManager_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      KnownBadPushNotification knownBadPushNotification0 = new KnownBadPushNotification();
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = null;
      long long0 = 4294967296L;
      RejectedNotificationReason rejectedNotificationReason0 = RejectedNotificationReason.NO_ERROR;
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      BlockingQueue<KnownBadPushNotification> blockingQueue0 = null;
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      ApnsEnvironment apnsEnvironment0 = ApnsEnvironment.getProductionEnvironment();
      SSLContext sSLContext0 = SSLContext.getDefault();
      int int0 = 31;
      NioEventLoopGroup nioEventLoopGroup0 = null;
      BlockingQueue<KnownBadPushNotification> blockingQueue0 = null;
      ApnsEnvironment apnsEnvironment1 = ApnsEnvironment.getProductionEnvironment();
      MockThread mockThread0 = new MockThread();
      mockThread0.run();
      PushManager<KnownBadPushNotification> pushManager0 = null;
      try {
        pushManager0 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, sSLContext0, int0, nioEventLoopGroup0, nioEventLoopGroup0, blockingQueue0);
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test3()  throws Throwable  {
      ApnsEnvironment apnsEnvironment0 = ApnsEnvironment.getSandboxEnvironment();
      SSLContext sSLContext0 = SSLContext.getDefault();
      int int0 = (-660);
      NioEventLoopGroup nioEventLoopGroup0 = null;
      LinkedBlockingDeque<KnownBadPushNotification> linkedBlockingDeque0 = new LinkedBlockingDeque<KnownBadPushNotification>();
      PushManager<KnownBadPushNotification> pushManager0 = null;
      try {
        pushManager0 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, sSLContext0, int0, nioEventLoopGroup0, nioEventLoopGroup0, linkedBlockingDeque0);
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test4()  throws Throwable  {
      ApnsEnvironment apnsEnvironment0 = ApnsEnvironment.getSandboxEnvironment();
      int int0 = 164;
      NioEventLoopGroup nioEventLoopGroup0 = null;
      String string0 = "{q~s/KBfz:zpG0o";
      MockThrowable mockThrowable0 = new MockThrowable(string0);
      MockThrowable mockThrowable1 = new MockThrowable(string0, mockThrowable0);
      KnownBadPushNotification knownBadPushNotification0 = new KnownBadPushNotification();
      ApnsConnection<KnownBadPushNotification> apnsConnection0 = null;
      long long0 = 4294967296L;
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      RejectedNotificationReason rejectedNotificationReason0 = RejectedNotificationReason.NO_ERROR;
      String string1 = "sO";
      try { 
        SSLContext.getInstance(string1);
      } catch(NoSuchAlgorithmException e) {
      }
  }
}
