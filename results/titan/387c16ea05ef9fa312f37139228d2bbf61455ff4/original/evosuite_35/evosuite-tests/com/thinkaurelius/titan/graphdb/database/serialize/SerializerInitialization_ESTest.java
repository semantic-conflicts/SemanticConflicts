/*
 * This file was automatically generated by EvoSuite
 * Sun May 03 05:54:57 GMT 2020
 */

package com.thinkaurelius.titan.graphdb.database.serialize;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thinkaurelius.titan.core.AttributeHandler;
import com.thinkaurelius.titan.diskstorage.util.ReadByteBuffer;
import com.thinkaurelius.titan.graphdb.database.serialize.attribute.CharacterSerializer;
import com.thinkaurelius.titan.graphdb.database.serialize.kryo.KryoSerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SerializerInitialization_ESTest extends SerializerInitialization_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KryoSerializer kryoSerializer0 = new KryoSerializer(false);
      Class<Character> class0 = Character.class;
      CharacterSerializer characterSerializer0 = new CharacterSerializer();
      byte[] byteArray0 = new byte[3];
      ReadByteBuffer readByteBuffer0 = new ReadByteBuffer(byteArray0);
      // EXCEPTION DIFF:
      // The original version did not exhibit this exception:
      //     java.lang.IllegalArgumentException : object is not an instance of declaring class
      readByteBuffer0.invert();
      // EXCEPTION DIFF:
      // The modified version did not exhibit this exception:
      //     org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException : DataType has already been registered: class java.lang.Character
      // Undeclared exception!
      try { 
        kryoSerializer0.registerClass(class0, (AttributeHandler<Character>) characterSerializer0, 125);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DataType has already been registered: class java.lang.Character
         //
         verifyException("com.google.common.base.Preconditions", e);
         assertTrue(e.getMessage().equals("DataType has already been registered: class java.lang.Character"));   
      }
  }
}
