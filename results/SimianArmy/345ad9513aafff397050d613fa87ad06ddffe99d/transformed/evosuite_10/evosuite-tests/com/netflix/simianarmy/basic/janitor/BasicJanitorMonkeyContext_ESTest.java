/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 29 18:55:48 GMT 2020
 */

package com.netflix.simianarmy.basic.janitor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.amazonaws.ClientConfiguration;
import com.amazonaws.auth.WebIdentityFederationSessionCredentialsProvider;
import com.amazonaws.regions.RegionMetadata;
import com.amazonaws.regions.RegionUtils;
import com.netflix.simianarmy.MonkeyCalendar;
import com.netflix.simianarmy.MonkeyConfiguration;
import com.netflix.simianarmy.MonkeyRecorder;
import com.netflix.simianarmy.Resource;
import com.netflix.simianarmy.aws.AWSResource;
import com.netflix.simianarmy.aws.janitor.ASGJanitor;
import com.netflix.simianarmy.aws.janitor.EBSSnapshotJanitor;
import com.netflix.simianarmy.aws.janitor.EBSVolumeJanitor;
import com.netflix.simianarmy.aws.janitor.ImageJanitor;
import com.netflix.simianarmy.aws.janitor.InstanceJanitor;
import com.netflix.simianarmy.aws.janitor.LaunchConfigJanitor;
import com.netflix.simianarmy.aws.janitor.crawler.ASGJanitorCrawler;
import com.netflix.simianarmy.aws.janitor.crawler.EBSSnapshotJanitorCrawler;
import com.netflix.simianarmy.aws.janitor.crawler.EBSVolumeJanitorCrawler;
import com.netflix.simianarmy.aws.janitor.rule.instance.OrphanedInstanceRule;
import com.netflix.simianarmy.basic.BasicCalendar;
import com.netflix.simianarmy.basic.BasicChaosMonkeyContext;
import com.netflix.simianarmy.basic.BasicConfiguration;
import com.netflix.simianarmy.basic.BasicSimianArmyContext;
import com.netflix.simianarmy.basic.janitor.BasicJanitorEmailBuilder;
import com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext;
import com.netflix.simianarmy.basic.janitor.BasicJanitorRuleEngine;
import com.netflix.simianarmy.client.aws.AWSClient;
import com.netflix.simianarmy.client.edda.EddaClient;
import com.netflix.simianarmy.janitor.AbstractJanitor;
import com.netflix.simianarmy.janitor.JanitorCrawler;
import com.netflix.simianarmy.janitor.JanitorEmailBuilder;
import com.netflix.simianarmy.janitor.JanitorEmailNotifier;
import com.netflix.simianarmy.janitor.JanitorResourceTracker;
import com.netflix.simianarmy.janitor.JanitorRuleEngine;
import com.netflix.simianarmy.janitor.Rule;
import java.util.List;
import java.util.Properties;
import java.util.Set;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jcp.xml.dsig.internal.dom.XMLDSigRI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BasicJanitorMonkeyContext_ESTest extends BasicJanitorMonkeyContext_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      String string0 = "\\0X_eI";
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      String string1 = null;
      WebIdentityFederationSessionCredentialsProvider webIdentityFederationSessionCredentialsProvider0 = new WebIdentityFederationSessionCredentialsProvider(string1, string0, string1);
      ClientConfiguration clientConfiguration0 = new ClientConfiguration();
      AWSClient aWSClient0 = new AWSClient(string0, webIdentityFederationSessionCredentialsProvider0, clientConfiguration0);
      EBSVolumeJanitorCrawler eBSVolumeJanitorCrawler0 = new EBSVolumeJanitorCrawler(aWSClient0);
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
      Properties properties0 = new Properties();
      BasicConfiguration basicConfiguration0 = new BasicConfiguration(properties0);
      MonkeyRecorder monkeyRecorder0 = null;
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext(string0, basicJanitorRuleEngine0, eBSVolumeJanitorCrawler0, janitorResourceTracker0, basicJanitorMonkeyContext0.monkeyCalendar, basicConfiguration0, monkeyRecorder0);
      String string2 = basicJanitorMonkeyContext_BasicJanitorContext0.region();
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      String string0 = "^EGW[$Y42";
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      Rule rule0 = null;
      BasicJanitorRuleEngine basicJanitorRuleEngine1 = basicJanitorRuleEngine0.addRule(rule0);
      BasicJanitorRuleEngine basicJanitorRuleEngine2 = basicJanitorRuleEngine0.addRule(rule0);
      AWSClient aWSClient0 = null;
      EBSSnapshotJanitorCrawler eBSSnapshotJanitorCrawler0 = null;
      try {
        eBSSnapshotJanitorCrawler0 = new EBSSnapshotJanitorCrawler(aWSClient0);
      } catch(IllegalArgumentException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      EddaClient eddaClient0 = basicJanitorMonkeyContext0.createEddaClient();
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getImageJanitor();
      } catch(RuntimeException e) {
         //
         // Image Janitor only works when Edda is enabled.
         //
         verifyException("com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      JanitorRuleEngine janitorRuleEngine0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorRuleEngine();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      BasicJanitorEmailBuilder basicJanitorEmailBuilder0 = new BasicJanitorEmailBuilder();
      basicJanitorMonkeyContext0.janitorEmailBuilder = (JanitorEmailBuilder) basicJanitorEmailBuilder0;
      JanitorEmailNotifier janitorEmailNotifier0 = basicJanitorMonkeyContext0.emailNotifier();
      EBSVolumeJanitor eBSVolumeJanitor0 = basicJanitorMonkeyContext0.getEBSVolumeJanitor();
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
      BasicSimianArmyContext.GLOBAL_OWNER_TAGKEY = basicJanitorMonkeyContext_BasicJanitorContext0.region;
      LaunchConfigJanitor launchConfigJanitor0 = basicJanitorMonkeyContext0.getLaunchConfigJanitor();
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getImageJanitor();
      } catch(RuntimeException e) {
         //
         // Image Janitor only works when Edda is enabled.
         //
         verifyException("com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorResourceTracker();
      String string0 = basicJanitorMonkeyContext_BasicJanitorContext0.region();
      MonkeyCalendar monkeyCalendar0 = basicJanitorMonkeyContext_BasicJanitorContext0.calendar();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      List<AbstractJanitor> list0 = basicJanitorMonkeyContext0.janitors();
      LaunchConfigJanitor launchConfigJanitor0 = basicJanitorMonkeyContext0.getLaunchConfigJanitor();
      JanitorCrawler janitorCrawler0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorCrawler();
      JanitorRuleEngine janitorRuleEngine0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorRuleEngine();
      EBSSnapshotJanitor eBSSnapshotJanitor0 = basicJanitorMonkeyContext0.getEBSSnapshotJanitor();
      EBSVolumeJanitor eBSVolumeJanitor0 = basicJanitorMonkeyContext0.getEBSVolumeJanitor();
      ASGJanitor aSGJanitor0 = basicJanitorMonkeyContext0.getASGJanitor();
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getImageJanitor();
      } catch(RuntimeException e) {
         //
         // Image Janitor only works when Edda is enabled.
         //
         verifyException("com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      String string0 = null;
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      ClientConfiguration clientConfiguration0 = new ClientConfiguration();
      ClientConfiguration clientConfiguration1 = new ClientConfiguration(clientConfiguration0);
      AWSClient aWSClient0 = new AWSClient(string0, clientConfiguration1);
      ASGJanitorCrawler aSGJanitorCrawler0 = new ASGJanitorCrawler(aWSClient0);
      MonkeyCalendar monkeyCalendar0 = null;
      int int0 = 261;
      int int1 = 0;
      int int2 = (-1355);
      OrphanedInstanceRule orphanedInstanceRule0 = null;
      try {
        orphanedInstanceRule0 = new OrphanedInstanceRule(monkeyCalendar0, int0, int1, int2);
      } catch(IllegalArgumentException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      BasicJanitorEmailBuilder basicJanitorEmailBuilder0 = (BasicJanitorEmailBuilder)basicJanitorMonkeyContext0.janitorEmailBuilder;
      basicJanitorMonkeyContext0.janitorEmailBuilder = (JanitorEmailBuilder) basicJanitorEmailBuilder0;
      EddaClient eddaClient0 = basicJanitorMonkeyContext0.createEddaClient();
      JanitorEmailNotifier.Context janitorEmailNotifier_Context0 = basicJanitorMonkeyContext0.getJanitorEmailNotifierContext();
      LaunchConfigJanitor launchConfigJanitor0 = basicJanitorMonkeyContext0.getLaunchConfigJanitor();
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
      Set<String> set0 = basicJanitorMonkeyContext0.getEnabledResourceSet();
      EBSVolumeJanitor eBSVolumeJanitor0 = basicJanitorMonkeyContext0.getEBSVolumeJanitor();
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      JanitorRuleEngine janitorRuleEngine0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorRuleEngine();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      JanitorEmailNotifier.Context janitorEmailNotifier_Context0 = basicJanitorMonkeyContext0.getJanitorEmailNotifierContext();
      LaunchConfigJanitor launchConfigJanitor0 = basicJanitorMonkeyContext0.getLaunchConfigJanitor();
      JanitorEmailNotifier janitorEmailNotifier0 = basicJanitorMonkeyContext0.emailNotifier();
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
      EddaClient eddaClient0 = basicJanitorMonkeyContext0.createEddaClient();
      EBSSnapshotJanitor eBSSnapshotJanitor0 = basicJanitorMonkeyContext0.getEBSSnapshotJanitor();
      Set<String> set0 = basicJanitorMonkeyContext0.getEnabledResourceSet();
      MonkeyConfiguration monkeyConfiguration0 = basicJanitorMonkeyContext_BasicJanitorContext0.configuration();
      EBSSnapshotJanitor eBSSnapshotJanitor1 = basicJanitorMonkeyContext0.getEBSSnapshotJanitor();
      JanitorEmailNotifier janitorEmailNotifier1 = basicJanitorMonkeyContext0.emailNotifier();
      JanitorEmailNotifier.Context janitorEmailNotifier_Context1 = basicJanitorMonkeyContext0.getJanitorEmailNotifierContext();
      MonkeyConfiguration monkeyConfiguration1 = basicJanitorMonkeyContext_BasicJanitorContext0.configuration();
      JanitorRuleEngine janitorRuleEngine1 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorRuleEngine();
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getImageJanitor();
      } catch(RuntimeException e) {
         //
         // Image Janitor only works when Edda is enabled.
         //
         verifyException("com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      MonkeyConfiguration monkeyConfiguration0 = basicJanitorMonkeyContext_BasicJanitorContext0.configuration();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      List<AbstractJanitor> list0 = null;
      basicJanitorMonkeyContext0.janitors = list0;
      RegionMetadata regionMetadata0 = null;
      // Undeclared exception!
      try { 
        RegionUtils.initializeWithMetadata(regionMetadata0);
      } catch(IllegalArgumentException e) {
         //
         // metadata cannot be null
         //
         verifyException("com.amazonaws.regions.RegionUtils", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getImageJanitor();
      } catch(RuntimeException e) {
         //
         // Image Janitor only works when Edda is enabled.
         //
         verifyException("com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      InstanceJanitor instanceJanitor0 = basicJanitorMonkeyContext0.getInstanceJanitor();
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      MonkeyRecorder monkeyRecorder0 = basicJanitorMonkeyContext_BasicJanitorContext0.recorder();
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      String string0 = basicJanitorMonkeyContext_BasicJanitorContext0.region();
      JanitorCrawler janitorCrawler0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorCrawler();
      MonkeyCalendar monkeyCalendar0 = basicJanitorMonkeyContext_BasicJanitorContext0.calendar();
      MonkeyRecorder monkeyRecorder0 = basicJanitorMonkeyContext_BasicJanitorContext0.recorder();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      basicJanitorMonkeyContext0.janitorResourceTracker = basicJanitorMonkeyContext_BasicJanitorContext0.resourceTracker;
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getEBSVolumeJanitor();
      } catch(IllegalArgumentException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext1 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      MonkeyRecorder monkeyRecorder0 = basicJanitorMonkeyContext_BasicJanitorContext0.recorder();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      EddaClient eddaClient0 = basicJanitorMonkeyContext0.createEddaClient();
      String string0 = basicJanitorMonkeyContext_BasicJanitorContext1.region();
      basicJanitorMonkeyContext0.monkeyCalendar = basicJanitorMonkeyContext_BasicJanitorContext0.calendar;
      String string1 = basicJanitorMonkeyContext_BasicJanitorContext1.region();
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getEBSSnapshotJanitor();
      } catch(IllegalArgumentException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      String string0 = basicJanitorMonkeyContext_BasicJanitorContext0.region();
      MonkeyRecorder monkeyRecorder0 = basicJanitorMonkeyContext_BasicJanitorContext0.recorder();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      basicJanitorMonkeyContext0.resetEventReport();
      Vector<AbstractJanitor> vector0 = new Vector<AbstractJanitor>();
      basicJanitorMonkeyContext0.janitors = (List<AbstractJanitor>) vector0;
      EddaClient eddaClient0 = basicJanitorMonkeyContext0.createEddaClient();
      basicJanitorMonkeyContext0.resetEventReport();
      JanitorEmailNotifier janitorEmailNotifier0 = basicJanitorMonkeyContext0.emailNotifier();
      basicJanitorMonkeyContext0.monkeyCalendar = basicJanitorMonkeyContext_BasicJanitorContext0.calendar;
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getLaunchConfigJanitor();
      } catch(IllegalArgumentException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      EddaClient eddaClient0 = basicJanitorMonkeyContext0.createEddaClient();
      JanitorEmailNotifier.Context janitorEmailNotifier_Context0 = basicJanitorMonkeyContext0.getJanitorEmailNotifierContext();
      LaunchConfigJanitor launchConfigJanitor0 = basicJanitorMonkeyContext0.getLaunchConfigJanitor();
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      JanitorEmailNotifier janitorEmailNotifier0 = basicJanitorMonkeyContext0.emailNotifier;
      basicJanitorMonkeyContext0.emailNotifier = janitorEmailNotifier0;
      JanitorRuleEngine janitorRuleEngine0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorRuleEngine();
      EddaClient eddaClient1 = basicJanitorMonkeyContext0.createEddaClient();
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
      JanitorEmailNotifier.Context janitorEmailNotifier_Context1 = basicJanitorMonkeyContext0.getJanitorEmailNotifierContext();
      EBSSnapshotJanitor eBSSnapshotJanitor0 = basicJanitorMonkeyContext0.getEBSSnapshotJanitor();
      InstanceJanitor instanceJanitor0 = basicJanitorMonkeyContext0.getInstanceJanitor();
      ASGJanitor aSGJanitor0 = basicJanitorMonkeyContext0.getASGJanitor();
      basicJanitorMonkeyContext0.janitorResourceTracker = basicJanitorMonkeyContext_BasicJanitorContext0.resourceTracker;
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getASGJanitor();
      } catch(IllegalArgumentException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext();
      MonkeyRecorder monkeyRecorder0 = basicJanitorMonkeyContext_BasicJanitorContext0.recorder();
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorResourceTracker();
      MonkeyConfiguration monkeyConfiguration0 = basicJanitorMonkeyContext_BasicJanitorContext0.configuration();
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      InstanceJanitor instanceJanitor0 = basicJanitorMonkeyContext0.getInstanceJanitor();
      RegionMetadata regionMetadata0 = mock(RegionMetadata.class, new ViolatedAssumptionAnswer());
      RegionUtils.initializeWithMetadata(regionMetadata0);
      EddaClient eddaClient0 = basicJanitorMonkeyContext0.createEddaClient();
      basicJanitorMonkeyContext0.janitorResourceTracker = janitorResourceTracker0;
      // Undeclared exception!
      try { 
        basicJanitorMonkeyContext0.getInstanceJanitor();
      } catch(IllegalArgumentException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang.Validate", e);
      }
  }
}
