/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 30 20:44:01 GMT 2020
 */

package com.netflix.simianarmy.basic.janitor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.amazonaws.ClientConfiguration;
import com.amazonaws.DefaultRequest;
import com.amazonaws.auth.InstanceProfileCredentialsProvider;
import com.amazonaws.auth.PropertiesFileCredentialsProvider;
import com.amazonaws.regions.RegionMetadata;
import com.amazonaws.regions.RegionUtils;
import com.amazonaws.services.cognitosync.model.SetCognitoEventsRequest;
import com.amazonaws.services.s3.model.GetObjectRequest;
import com.netflix.simianarmy.MonkeyCalendar;
import com.netflix.simianarmy.MonkeyConfiguration;
import com.netflix.simianarmy.MonkeyRecorder;
import com.netflix.simianarmy.MonkeyType;
import com.netflix.simianarmy.Resource;
import com.netflix.simianarmy.aws.AWSResource;
import com.netflix.simianarmy.aws.SimpleDBRecorder;
import com.netflix.simianarmy.aws.janitor.SimpleDBJanitorResourceTracker;
import com.netflix.simianarmy.aws.janitor.crawler.ASGJanitorCrawler;
import com.netflix.simianarmy.aws.janitor.crawler.EBSSnapshotJanitorCrawler;
import com.netflix.simianarmy.aws.janitor.crawler.EBSVolumeJanitorCrawler;
import com.netflix.simianarmy.aws.janitor.crawler.InstanceJanitorCrawler;
import com.netflix.simianarmy.aws.janitor.crawler.LaunchConfigJanitorCrawler;
import com.netflix.simianarmy.aws.janitor.rule.snapshot.NoGeneratedAMIRule;
import com.netflix.simianarmy.basic.BasicCalendar;
import com.netflix.simianarmy.basic.BasicChaosMonkeyContext;
import com.netflix.simianarmy.basic.BasicConfiguration;
import com.netflix.simianarmy.basic.BasicSimianArmyContext;
import com.netflix.simianarmy.basic.LocalDbRecorder;
import com.netflix.simianarmy.basic.conformity.BasicConformityMonkey;
import com.netflix.simianarmy.basic.conformity.BasicConformityMonkeyContext;
import com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext;
import com.netflix.simianarmy.basic.janitor.BasicJanitorRuleEngine;
import com.netflix.simianarmy.chaos.ChaosMonkey;
import com.netflix.simianarmy.client.aws.AWSClient;
import com.netflix.simianarmy.conformity.ConformityMonkey;
import com.netflix.simianarmy.janitor.AbstractJanitor;
import com.netflix.simianarmy.janitor.JanitorCrawler;
import com.netflix.simianarmy.janitor.JanitorEmailNotifier;
import com.netflix.simianarmy.janitor.JanitorMonkey;
import com.netflix.simianarmy.janitor.JanitorResourceTracker;
import com.netflix.simianarmy.janitor.JanitorRuleEngine;
import com.netflix.simianarmy.janitor.Rule;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jcp.xml.dsig.internal.dom.XMLDSigRI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BasicJanitorMonkeyContext_ESTest extends BasicJanitorMonkeyContext_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      boolean boolean0 = false;
      InstanceProfileCredentialsProvider instanceProfileCredentialsProvider0 = new InstanceProfileCredentialsProvider(boolean0);
      ClientConfiguration clientConfiguration0 = null;
      AWSClient aWSClient0 = new AWSClient(basicJanitorMonkeyContext0.GLOBAL_OWNER_TAGKEY, instanceProfileCredentialsProvider0, clientConfiguration0);
      String string0 = "x-amz-request-id";
      SimpleDBRecorder simpleDBRecorder0 = new SimpleDBRecorder(aWSClient0, string0);
      JanitorMonkey.Type janitorMonkey_Type0 = JanitorMonkey.Type.JANITOR;
      String string1 = "TrainingDataSourceId: ";
      // Undeclared exception!
      try { 
        ChaosMonkey.EventTypes.valueOf(string1);
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.netflix.simianarmy.chaos.ChaosMonkey.EventTypes.TrainingDataSourceId: 
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      JanitorEmailNotifier janitorEmailNotifier0 = basicJanitorMonkeyContext0.emailNotifier();
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      AWSClient aWSClient0 = basicJanitorMonkeyContext0.awsClient();
      EBSVolumeJanitorCrawler eBSVolumeJanitorCrawler0 = new EBSVolumeJanitorCrawler(aWSClient0);
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
      MonkeyCalendar monkeyCalendar0 = basicJanitorMonkeyContext0.calendar();
      BasicConformityMonkeyContext basicConformityMonkeyContext0 = new BasicConformityMonkeyContext();
      MonkeyConfiguration monkeyConfiguration0 = basicConformityMonkeyContext0.configuration();
      String string0 = "";
      SimpleDBRecorder simpleDBRecorder0 = new SimpleDBRecorder(aWSClient0, string0);
      BasicConformityMonkey basicConformityMonkey0 = new BasicConformityMonkey(basicConformityMonkeyContext0);
      basicConformityMonkeyContext0.resetEventReport();
      ConformityMonkey.Type conformityMonkey_Type0 = basicConformityMonkey0.type();
      String string1 = "";
      // Undeclared exception!
      try { 
        ConformityMonkey.Type.valueOf(basicJanitorMonkeyContext0.GLOBAL_OWNER_TAGKEY);
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.netflix.simianarmy.conformity.ConformityMonkey.Type.owner
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      List<AbstractJanitor> list0 = basicJanitorMonkeyContext0.janitors();
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      String string0 = "";
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      Rule rule0 = null;
      BasicJanitorRuleEngine basicJanitorRuleEngine1 = basicJanitorRuleEngine0.addRule(rule0);
      String string1 = "\"";
      ClientConfiguration clientConfiguration0 = new ClientConfiguration();
      AWSClient aWSClient0 = new AWSClient(string1, clientConfiguration0);
      InstanceJanitorCrawler instanceJanitorCrawler0 = new InstanceJanitorCrawler(aWSClient0);
      JanitorResourceTracker janitorResourceTracker0 = null;
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      MonkeyConfiguration monkeyConfiguration0 = basicJanitorMonkeyContext0.configuration();
      BasicCalendar basicCalendar0 = new BasicCalendar(monkeyConfiguration0);
      LocalDbRecorder localDbRecorder0 = new LocalDbRecorder(monkeyConfiguration0);
      String string2 = "C";
      GetObjectRequest getObjectRequest0 = new GetObjectRequest(string0, string2, string2);
      String string3 = "GWC\\MNj<o#jn{wA\"/-n";
      DefaultRequest<String> defaultRequest0 = new DefaultRequest<String>(getObjectRequest0, string3);
      Map<String, String> map0 = defaultRequest0.getHeaders();
      AWSResource aWSResource0 = AWSResource.parseFieldtoValueMap(map0);
      boolean boolean0 = true;
      Resource resource0 = aWSResource0.withOptOutOfJanitor(boolean0);
      boolean boolean1 = basicJanitorRuleEngine1.isValid(resource0);
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext(string0, basicJanitorRuleEngine1, instanceJanitorCrawler0, janitorResourceTracker0, basicCalendar0, monkeyConfiguration0, localDbRecorder0);
      MonkeyConfiguration monkeyConfiguration1 = basicJanitorMonkeyContext_BasicJanitorContext0.configuration();
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      String string0 = "D_9Q6=+S";
      JanitorRuleEngine janitorRuleEngine0 = null;
      PropertiesFileCredentialsProvider propertiesFileCredentialsProvider0 = new PropertiesFileCredentialsProvider(string0);
      AWSClient aWSClient0 = new AWSClient(string0, propertiesFileCredentialsProvider0);
      ASGJanitorCrawler aSGJanitorCrawler0 = new ASGJanitorCrawler(aWSClient0);
      SimpleDBJanitorResourceTracker simpleDBJanitorResourceTracker0 = null;
      try {
        simpleDBJanitorResourceTracker0 = new SimpleDBJanitorResourceTracker(aWSClient0, aSGJanitorCrawler0.ASG_FIELD_SUSPENSION_TIME);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.amazonaws.util.AwsHostNameUtils", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      String string0 = "";
      int int0 = 1172;
      String string1 = "";
      int int1 = 3;
      int int2 = 535;
      int int3 = 0;
      int int4 = 79;
      int int5 = 0;
      SimpleTimeZone simpleTimeZone0 = null;
      try {
        simpleTimeZone0 = new SimpleTimeZone(int0, string1, int1, int1, int1, int2, int3, int4, int5, int1, int1);
      } catch(IllegalArgumentException e) {
         //
         // Illegal end day 79
         //
         verifyException("java.util.SimpleTimeZone", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      String string0 = "LAUNCH_CONFIG";
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      AWSClient aWSClient0 = new AWSClient(string0);
      InstanceJanitorCrawler instanceJanitorCrawler0 = new InstanceJanitorCrawler(aWSClient0);
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
      MonkeyCalendar monkeyCalendar0 = null;
      XMLDSigRI xMLDSigRI0 = new XMLDSigRI();
      BasicConfiguration basicConfiguration0 = new BasicConfiguration(xMLDSigRI0);
      MonkeyRecorder monkeyRecorder0 = basicJanitorMonkeyContext0.recorder();
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext(string0, basicJanitorRuleEngine0, instanceJanitorCrawler0, janitorResourceTracker0, monkeyCalendar0, basicConfiguration0, monkeyRecorder0);
      JanitorResourceTracker janitorResourceTracker1 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorResourceTracker();
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      String string0 = "EBS_VOLUME";
      JanitorRuleEngine janitorRuleEngine0 = null;
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      AWSClient aWSClient0 = basicJanitorMonkeyContext0.awsClient();
      EBSSnapshotJanitorCrawler eBSSnapshotJanitorCrawler0 = new EBSSnapshotJanitorCrawler(aWSClient0);
      SimpleDBJanitorResourceTracker simpleDBJanitorResourceTracker0 = new SimpleDBJanitorResourceTracker(aWSClient0, string0);
      BasicChaosMonkeyContext basicChaosMonkeyContext0 = new BasicChaosMonkeyContext();
      MonkeyConfiguration monkeyConfiguration0 = basicChaosMonkeyContext0.configuration();
      BasicCalendar basicCalendar0 = new BasicCalendar(monkeyConfiguration0);
      SimpleDBRecorder simpleDBRecorder0 = new SimpleDBRecorder(aWSClient0, basicJanitorMonkeyContext0.GLOBAL_OWNER_TAGKEY);
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext(string0, janitorRuleEngine0, eBSSnapshotJanitorCrawler0, simpleDBJanitorResourceTracker0, basicCalendar0, monkeyConfiguration0, simpleDBRecorder0);
      JanitorCrawler janitorCrawler0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorCrawler();
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      String string0 = basicJanitorMonkeyContext0.getEventReport();
      basicJanitorMonkeyContext0.resetEventReport();
      JanitorEmailNotifier.Context janitorEmailNotifier_Context0 = basicJanitorMonkeyContext0.getJanitorEmailNotifierContext();
      String string1 = "org.jclouds.scriptbuilder.domain.SaveHttpResponseTo";
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      AWSClient aWSClient0 = new AWSClient(string1);
      LaunchConfigJanitorCrawler launchConfigJanitorCrawler0 = new LaunchConfigJanitorCrawler(aWSClient0);
      SimpleDBJanitorResourceTracker simpleDBJanitorResourceTracker0 = new SimpleDBJanitorResourceTracker(aWSClient0, string0);
      MonkeyCalendar monkeyCalendar0 = null;
      MonkeyConfiguration monkeyConfiguration0 = basicJanitorMonkeyContext0.configuration();
      MonkeyRecorder monkeyRecorder0 = basicJanitorMonkeyContext0.recorder();
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext(string1, basicJanitorRuleEngine0, launchConfigJanitorCrawler0, simpleDBJanitorResourceTracker0, monkeyCalendar0, monkeyConfiguration0, monkeyRecorder0);
      MonkeyRecorder monkeyRecorder1 = basicJanitorMonkeyContext_BasicJanitorContext0.recorder();
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
      String string0 = "Y55%Zu2w{L[";
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      AWSClient aWSClient0 = new AWSClient(basicJanitorMonkeyContext0.GLOBAL_OWNER_TAGKEY);
      InstanceJanitorCrawler instanceJanitorCrawler0 = new InstanceJanitorCrawler(aWSClient0);
      MonkeyCalendar monkeyCalendar0 = basicJanitorMonkeyContext0.calendar();
      XMLDSigRI xMLDSigRI0 = new XMLDSigRI();
      BasicConfiguration basicConfiguration0 = new BasicConfiguration(xMLDSigRI0);
      MonkeyRecorder monkeyRecorder0 = basicJanitorMonkeyContext0.recorder();
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext(string0, basicJanitorRuleEngine0, instanceJanitorCrawler0, janitorResourceTracker0, monkeyCalendar0, basicConfiguration0, monkeyRecorder0);
      JanitorRuleEngine janitorRuleEngine0 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorRuleEngine();
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      JanitorCrawler janitorCrawler0 = null;
      AWSClient aWSClient0 = basicJanitorMonkeyContext0.awsClient();
      SimpleDBJanitorResourceTracker simpleDBJanitorResourceTracker0 = new SimpleDBJanitorResourceTracker(aWSClient0, basicJanitorMonkeyContext0.GLOBAL_OWNER_TAGKEY);
      MonkeyCalendar monkeyCalendar0 = basicJanitorMonkeyContext0.calendar();
      XMLDSigRI xMLDSigRI0 = new XMLDSigRI();
      BasicConfiguration basicConfiguration0 = new BasicConfiguration(xMLDSigRI0);
      LocalDbRecorder localDbRecorder0 = new LocalDbRecorder(basicConfiguration0);
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext(basicJanitorMonkeyContext0.GLOBAL_OWNER_TAGKEY, basicJanitorRuleEngine0, janitorCrawler0, simpleDBJanitorResourceTracker0, monkeyCalendar0, basicConfiguration0, localDbRecorder0);
      MonkeyCalendar monkeyCalendar1 = basicJanitorMonkeyContext_BasicJanitorContext0.calendar();
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      BasicJanitorMonkeyContext basicJanitorMonkeyContext0 = new BasicJanitorMonkeyContext();
      JanitorResourceTracker janitorResourceTracker0 = basicJanitorMonkeyContext0.resourceTracker();
      BasicJanitorRuleEngine basicJanitorRuleEngine0 = new BasicJanitorRuleEngine();
      JanitorCrawler janitorCrawler0 = null;
      MonkeyCalendar monkeyCalendar0 = null;
      BasicChaosMonkeyContext basicChaosMonkeyContext0 = new BasicChaosMonkeyContext();
      MonkeyConfiguration monkeyConfiguration0 = basicChaosMonkeyContext0.configuration();
      LocalDbRecorder localDbRecorder0 = new LocalDbRecorder(monkeyConfiguration0);
      BasicJanitorMonkeyContext.BasicJanitorContext basicJanitorMonkeyContext_BasicJanitorContext0 = new BasicJanitorMonkeyContext.BasicJanitorContext(basicJanitorMonkeyContext0.GLOBAL_OWNER_TAGKEY, basicJanitorRuleEngine0, janitorCrawler0, janitorResourceTracker0, monkeyCalendar0, monkeyConfiguration0, localDbRecorder0);
      String string0 = basicJanitorMonkeyContext_BasicJanitorContext0.region();
      MonkeyCalendar monkeyCalendar1 = basicJanitorMonkeyContext_BasicJanitorContext0.calendar();
      JanitorResourceTracker janitorResourceTracker1 = basicJanitorMonkeyContext_BasicJanitorContext0.janitorResourceTracker();
  }
}
