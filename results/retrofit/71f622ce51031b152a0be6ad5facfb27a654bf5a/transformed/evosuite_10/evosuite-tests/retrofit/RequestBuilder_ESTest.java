/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 29 14:07:20 GMT 2020
 */

package retrofit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import retrofit.RequestBuilder;
import retrofit.client.Header;
import retrofit.client.Request;
import retrofit.converter.GsonConverter;
import retrofit.mime.MultipartTypedOutput;
import retrofit.mime.TypedOutput;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RequestBuilder_ESTest extends RequestBuilder_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      RequestBuilder requestBuilder0 = new RequestBuilder();
      String string0 = "UTF-8/";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      requestBuilder1.methodInfo = requestBuilder0.methodInfo;
      RequestBuilder requestBuilder2 = requestBuilder1.methodInfo(requestBuilder1.methodInfo);
      // Undeclared exception!
      try { 
        requestBuilder0.build();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      Gson gson0 = null;
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      RequestBuilder requestBuilder0 = new RequestBuilder();
      // Undeclared exception!
      try { 
        requestBuilder0.buildBody();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test3()  throws Throwable  {
      RequestBuilder requestBuilder0 = new RequestBuilder();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) requestBuilder0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      Object object1 = new Object();
      objectArray0[2] = object1;
      objectArray0[3] = (Object) requestBuilder0;
      objectArray0[4] = (Object) requestBuilder0;
      objectArray0[5] = (Object) requestBuilder0;
      objectArray0[6] = (Object) requestBuilder0;
      Object object2 = new Object();
      objectArray0[7] = object2;
      RequestBuilder requestBuilder1 = requestBuilder0.args(objectArray0);
      RequestBuilder requestBuilder2 = requestBuilder0.headers(requestBuilder1.headers);
      String string0 = "[h7MHi?NT";
      RequestBuilder requestBuilder3 = requestBuilder1.apiUrl(string0);
      String string1 = "";
      requestBuilder3.apiUrl = string1;
      // Undeclared exception!
      try { 
        requestBuilder1.build();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test4()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "com.google.gson.Gson$2";
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      RequestBuilder requestBuilder0 = new RequestBuilder();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) evoSuiteFile0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) requestBuilder0.apiUrl;
      objectArray0[4] = (Object) requestBuilder0;
      objectArray0[5] = (Object) requestBuilder0;
      RequestBuilder requestBuilder1 = requestBuilder0.args(objectArray0);
      RequestBuilder requestBuilder2 = requestBuilder0.apiUrl(requestBuilder0.apiUrl);
      requestBuilder0.converter = requestBuilder2.converter;
      RequestBuilder requestBuilder3 = requestBuilder2.methodInfo(requestBuilder0.methodInfo);
      RequestBuilder requestBuilder4 = requestBuilder3.apiUrl(string0);
      requestBuilder4.args = requestBuilder2.args;
      RequestBuilder requestBuilder5 = requestBuilder0.apiUrl(requestBuilder0.apiUrl);
      RequestBuilder requestBuilder6 = requestBuilder5.args(requestBuilder2.args);
      // Undeclared exception!
      try { 
        requestBuilder3.build();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test5()  throws Throwable  {
      RequestBuilder requestBuilder0 = new RequestBuilder();
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      RequestBuilder requestBuilder1 = requestBuilder0.headers(linkedList0);
      RequestBuilder requestBuilder2 = requestBuilder1.methodInfo(requestBuilder0.methodInfo);
      RequestBuilder requestBuilder3 = requestBuilder2.methodInfo(requestBuilder0.methodInfo);
  }

  @Test(timeout = 11000)
  public void test6()  throws Throwable  {
      RequestBuilder requestBuilder0 = new RequestBuilder();
      // Undeclared exception!
      try { 
        requestBuilder0.buildBody();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test7()  throws Throwable  {
      Gson gson0 = new Gson();
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      String string0 = null;
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      // Undeclared exception!
      try { 
        requestBuilder1.buildRelativeUrl();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test8()  throws Throwable  {
      Gson gson0 = new Gson();
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      Object[] objectArray0 = new Object[0];
      RequestBuilder requestBuilder1 = requestBuilder0.args(objectArray0);
      String string0 = null;
      RequestBuilder requestBuilder2 = requestBuilder1.apiUrl(string0);
      String string1 = "retrofit.RequestBuilder$1";
      RequestBuilder requestBuilder3 = requestBuilder2.apiUrl(string1);
      // Undeclared exception!
      try { 
        requestBuilder0.build();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }
}
