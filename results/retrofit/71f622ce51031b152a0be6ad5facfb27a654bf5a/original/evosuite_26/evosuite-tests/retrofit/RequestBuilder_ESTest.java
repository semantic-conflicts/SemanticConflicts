/*
 * This file was automatically generated by EvoSuite
 * Sun May 03 04:57:30 GMT 2020
 */

package retrofit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.Gson;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import retrofit.RequestBuilder;
import retrofit.RestMethodInfo;
import retrofit.client.Header;
import retrofit.client.Request;
import retrofit.converter.Converter;
import retrofit.converter.GsonConverter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RequestBuilder_ESTest extends RequestBuilder_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      Gson gson0 = new Gson();
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      RestMethodInfo restMethodInfo0 = null;
      RequestBuilder requestBuilder1 = requestBuilder0.methodInfo(restMethodInfo0);
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      Gson gson0 = new Gson();
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      Object object0 = new Object();
      String string0 = "u/";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      RequestBuilder requestBuilder2 = requestBuilder1.headers(linkedList0);
      String string1 = null;
      RequestBuilder requestBuilder3 = requestBuilder1.apiUrl(string0);
      // Undeclared exception!
      try { 
        requestBuilder1.build();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      Gson gson0 = null;
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      Object[] objectArray0 = new Object[6];
      objectArray0[1] = (Object) gson0;
      objectArray0[3] = (Object) requestBuilder0;
      objectArray0[4] = (Object) gson0;
      RequestBuilder requestBuilder1 = requestBuilder0.args(objectArray0);
      String string0 = ".";
      RequestBuilder requestBuilder2 = requestBuilder1.apiUrl(string0);
      // Undeclared exception!
      try { 
        requestBuilder2.build();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test3()  throws Throwable  {
      Converter converter0 = null;
      RequestBuilder requestBuilder0 = new RequestBuilder(converter0);
      String string0 = "retrofit.RequestBuilder";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      RequestBuilder requestBuilder2 = requestBuilder0.apiUrl(string0);
      // Undeclared exception!
      try { 
        requestBuilder0.build();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test4()  throws Throwable  {
      Gson gson0 = new Gson();
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      String string0 = "gYkJ1[3l9YOsz0amM";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      Object[] objectArray0 = new Object[0];
      RequestBuilder requestBuilder2 = requestBuilder1.args(objectArray0);
  }

  @Test(timeout = 11000)
  public void test5()  throws Throwable  {
      Gson gson0 = new Gson();
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      // Undeclared exception!
      try { 
        requestBuilder0.build();
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test6()  throws Throwable  {
      Gson gson0 = new Gson();
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) gson0;
      objectArray0[1] = (Object) requestBuilder0;
      Object object0 = new Object();
      objectArray0[2] = object0;
      RequestBuilder requestBuilder1 = requestBuilder0.args(objectArray0);
      // Undeclared exception!
      try { 
        requestBuilder1.build();
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test7()  throws Throwable  {
      Gson gson0 = new Gson();
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      RequestBuilder requestBuilder1 = requestBuilder0.headers(linkedList0);
      RequestBuilder requestBuilder2 = requestBuilder1.headers(linkedList0);
      String string0 = "/";
      RequestBuilder requestBuilder3 = requestBuilder0.apiUrl(string0);
      List<Header> list0 = null;
      RequestBuilder requestBuilder4 = requestBuilder3.headers(list0);
      // Undeclared exception!
      try { 
        requestBuilder4.build();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test8()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      Gson gson0 = new Gson();
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      RequestBuilder requestBuilder1 = requestBuilder0.headers(linkedList0);
      String string0 = "No annotations found on parameter /";
      Header header0 = null;
      boolean boolean1 = linkedList0.add(header0);
      RequestBuilder requestBuilder2 = requestBuilder1.apiUrl(string0);
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      RequestBuilder requestBuilder3 = requestBuilder1.headers(linkedList0);
      objectArray0[2] = (Object) requestBuilder2;
      EvoSuiteFile evoSuiteFile0 = null;
      String string1 = "a)x$~TR8B~%|/";
      boolean boolean2 = FileSystemHandling.appendStringToFile(evoSuiteFile0, string1);
      Object object2 = new Object();
      RequestBuilder requestBuilder4 = requestBuilder1.apiUrl(string0);
      objectArray0[3] = object2;
      objectArray0[4] = (Object) linkedList0;
      objectArray0[5] = (Object) gson0;
      EvoSuiteFile evoSuiteFile1 = null;
      boolean boolean3 = FileSystemHandling.createFolder(evoSuiteFile1);
      RequestBuilder requestBuilder5 = requestBuilder2.args(objectArray0);
      RequestBuilder requestBuilder6 = requestBuilder5.apiUrl(string0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      RequestBuilder requestBuilder7 = requestBuilder5.apiUrl(string0);
      // Undeclared exception!
      try { 
        requestBuilder5.build();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }
}
