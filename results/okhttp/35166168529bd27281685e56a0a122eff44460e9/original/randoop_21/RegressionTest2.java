import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.util.List<java.lang.String> strList12 = okHttpClient11.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.setAuthenticator(okAuthenticator16);
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = okHttpClient14.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator18);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setAuthenticator(okAuthenticator9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient5.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient5.setAuthenticator(okAuthenticator13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient5.setFollowProtocolRedirects(true);
        boolean boolean17 = okHttpClient16.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.setCookieHandler(cookieHandler18);
        java.lang.Class<?> wildcardClass20 = okHttpClient16.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ProxySelector proxySelector6 = okHttpClient2.getProxySelector();
        java.net.ResponseCache responseCache7 = okHttpClient2.getResponseCache();
        boolean boolean8 = okHttpClient2.getFollowProtocolRedirects();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxy(proxy9);
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setProxy(proxy11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.Proxy proxy3 = okHttpClient2.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setAuthenticator(okAuthenticator4);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        java.net.Proxy proxy8 = okHttpClient2.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy8);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setProxy(proxy9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setAuthenticator(okAuthenticator13);
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setProxySelector(proxySelector15);
        java.net.URL uRL17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection18 = okHttpClient14.open(uRL17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool10 = okHttpClient9.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool10);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory14);
        java.net.Proxy proxy16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setProxy(proxy16);
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setProxySelector(proxySelector18);
        com.squareup.okhttp.ConnectionPool connectionPool20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setConnectionPool(connectionPool20);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient19.setTransports((java.util.List<java.lang.String>) strList25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [, hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkAuthenticator okAuthenticator1 = okHttpClient0.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setHostnameVerifier(hostnameVerifier2);
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        boolean boolean8 = okHttpClient5.getFollowProtocolRedirects();
        boolean boolean9 = okHttpClient5.getFollowProtocolRedirects();
        java.util.List<java.lang.String> strList10 = okHttpClient5.getTransports();
        java.net.ProxySelector proxySelector11 = okHttpClient5.getProxySelector();
        java.net.Proxy proxy12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setProxy(proxy12);
        java.net.CookieHandler cookieHandler14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient5.setCookieHandler(cookieHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setCookieHandler(cookieHandler10);
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setResponseCache(responseCache12);
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setProxy(proxy14);
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setProxySelector(proxySelector16);
        java.util.List<java.lang.String> strList18 = okHttpClient13.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList18);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        java.net.CookieHandler cookieHandler2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setCookieHandler(cookieHandler2);
        com.squareup.okhttp.ConnectionPool connectionPool4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setConnectionPool(connectionPool4);
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient3.setTransports((java.util.List<java.lang.String>) strList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: []");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setProxySelector(proxySelector12);
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setConnectionPool(connectionPool14);
        java.net.ResponseCache responseCache16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setResponseCache(responseCache16);
        java.net.Proxy proxy18 = okHttpClient11.getProxy();
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient11.setProxySelector(proxySelector19);
        java.net.ResponseCache responseCache21 = okHttpClient20.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache21);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient2.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient2.getHostnameVerifier();
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        com.squareup.okhttp.ConnectionPool connectionPool11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setConnectionPool(connectionPool11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ProxySelector proxySelector6 = okHttpClient2.getProxySelector();
        java.net.ResponseCache responseCache7 = okHttpClient2.getResponseCache();
        java.util.List<java.lang.String> strList8 = okHttpClient2.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setFollowProtocolRedirects(true);
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setProxySelector(proxySelector11);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setHostnameVerifier(hostnameVerifier13);
        java.net.ProxySelector proxySelector15 = okHttpClient14.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.setConnectionPool(connectionPool16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setHostnameVerifier(hostnameVerifier7);
        java.net.ProxySelector proxySelector9 = okHttpClient2.getProxySelector();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient2.getSslSocketFactory();
        java.net.ProxySelector proxySelector11 = okHttpClient2.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector11);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory10);
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = okHttpClient11.getAuthenticator();
        java.net.URL uRL17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection18 = okHttpClient11.open(uRL17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator16);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setAuthenticator(okAuthenticator9);
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient10.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient10.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setFollowProtocolRedirects(true);
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler15);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector17 = okHttpClient11.getProxySelector();
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient11.setCookieHandler(cookieHandler18);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient19.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory22);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        boolean boolean8 = okHttpClient7.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient7.setTransports((java.util.List<java.lang.String>) strList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: []");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient6.setHostnameVerifier(hostnameVerifier7);
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setHostnameVerifier(hostnameVerifier10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient11.getSslSocketFactory();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setHostnameVerifier(hostnameVerifier13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setAuthenticator(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setAuthenticator(okAuthenticator2);
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setCookieHandler(cookieHandler4);
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setFollowProtocolRedirects(true);
        com.squareup.okhttp.ConnectionPool connectionPool8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setConnectionPool(connectionPool8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(false);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setProxySelector(proxySelector14);
        java.net.ProxySelector proxySelector16 = okHttpClient13.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector16);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        java.net.Proxy proxy7 = okHttpClient2.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setAuthenticator(okAuthenticator8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector11 = okHttpClient2.getProxySelector();
        boolean boolean12 = okHttpClient2.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler13 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient2.setProxySelector(proxySelector15);
        java.net.ResponseCache responseCache17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient2.setResponseCache(responseCache17);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setFollowProtocolRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setResponseCache(responseCache7);
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setConnectionPool(connectionPool9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        java.util.List<java.lang.String> strList13 = okHttpClient12.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setHostnameVerifier(hostnameVerifier14);
        java.net.ResponseCache responseCache16 = okHttpClient15.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool17 = okHttpClient15.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool17);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.setProxy(proxy11);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory13);
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient14.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool15);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.setAuthenticator(okAuthenticator12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory14);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient2.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory16);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ProxySelector proxySelector6 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setCookieHandler(cookieHandler7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setAuthenticator(okAuthenticator11);
        java.lang.Class<?> wildcardClass13 = okHttpClient12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        java.net.Proxy proxy10 = okHttpClient8.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient8.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool11);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkAuthenticator okAuthenticator1 = okHttpClient0.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setHostnameVerifier(hostnameVerifier2);
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setHostnameVerifier(hostnameVerifier6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setAuthenticator(okAuthenticator2);
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setCookieHandler(cookieHandler4);
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setFollowProtocolRedirects(true);
        java.lang.Class<?> wildcardClass8 = okHttpClient7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        boolean boolean13 = okHttpClient12.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setFollowProtocolRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setResponseCache(responseCache9);
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setProxySelector(proxySelector11);
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient2.setProxySelector(proxySelector13);
        java.net.CookieHandler cookieHandler15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient2.setCookieHandler(cookieHandler15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setFollowProtocolRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        java.util.List<java.lang.String> strList7 = okHttpClient6.getTransports();
        java.net.Proxy proxy8 = okHttpClient6.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient6.setFollowProtocolRedirects(true);
        java.net.Proxy proxy11 = okHttpClient10.getProxy();
        java.net.CookieHandler cookieHandler12 = okHttpClient10.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler12);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.setFollowProtocolRedirects(false);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setHostnameVerifier(hostnameVerifier13);
        com.squareup.okhttp.ConnectionPool connectionPool15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setFollowProtocolRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        java.net.CookieHandler cookieHandler2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setCookieHandler(cookieHandler2);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList6 = okHttpClient5.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList6);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setResponseCache(responseCache7);
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setConnectionPool(connectionPool9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setResponseCache(responseCache13);
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient14.getConnectionPool();
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.setProxySelector(proxySelector16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setResponseCache(responseCache7);
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setConnectionPool(connectionPool9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxySelector(proxySelector13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.getHostnameVerifier();
        java.net.CookieHandler cookieHandler16 = okHttpClient10.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler16);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setProxySelector(proxySelector14);
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setProxySelector(proxySelector16);
        java.net.ResponseCache responseCache18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setResponseCache(responseCache18);
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setCookieHandler(cookieHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setAuthenticator(okAuthenticator7);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setFollowProtocolRedirects(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setConnectionPool(connectionPool13);
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setResponseCache(responseCache15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setFollowProtocolRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setProxySelector(proxySelector3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient2.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier5);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.Proxy proxy3 = okHttpClient2.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setAuthenticator(okAuthenticator4);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setAuthenticator(okAuthenticator10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        java.util.List<java.lang.String> strList7 = okHttpClient6.getTransports();
        java.net.Proxy proxy8 = okHttpClient6.getProxy();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient6.setResponseCache(responseCache9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setAuthenticator(okAuthenticator15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setHostnameVerifier(hostnameVerifier5);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setFollowProtocolRedirects(true);
        java.net.Proxy proxy9 = okHttpClient4.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkAuthenticator okAuthenticator1 = okHttpClient0.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setHostnameVerifier(hostnameVerifier2);
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        boolean boolean8 = okHttpClient5.getFollowProtocolRedirects();
        boolean boolean9 = okHttpClient5.getFollowProtocolRedirects();
        java.util.List<java.lang.String> strList10 = okHttpClient5.getTransports();
        java.net.ProxySelector proxySelector11 = okHttpClient5.getProxySelector();
        java.net.Proxy proxy12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setProxy(proxy12);
        java.net.Proxy proxy14 = okHttpClient5.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy14);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.Proxy proxy6 = okHttpClient2.getProxy();
        java.net.ProxySelector proxySelector7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setProxySelector(proxySelector7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient8.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory9);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setConnectionPool(connectionPool9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setCookieHandler(cookieHandler11);
        java.net.ResponseCache responseCache13 = okHttpClient2.getResponseCache();
        java.net.CookieHandler cookieHandler14 = okHttpClient2.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler14);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setResponseCache(responseCache9);
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setProxySelector(proxySelector11);
        com.squareup.okhttp.ConnectionPool connectionPool13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient2.setConnectionPool(connectionPool13);
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setProxySelector(proxySelector15);
        java.net.CookieHandler cookieHandler17 = okHttpClient14.getCookieHandler();
        java.net.URL uRL18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection19 = okHttpClient14.open(uRL18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler17);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setCookieHandler(cookieHandler13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector19 = okHttpClient18.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector19);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setResponseCache(responseCache9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory11);
        boolean boolean13 = okHttpClient10.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setAuthenticator(okAuthenticator14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        java.net.CookieHandler cookieHandler8 = okHttpClient2.getCookieHandler();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxy(proxy9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient2.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient4.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient4.getAuthenticator();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setCookieHandler(cookieHandler7);
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setConnectionPool(connectionPool9);
        boolean boolean11 = okHttpClient10.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        java.util.List<java.lang.String> strList7 = okHttpClient6.getTransports();
        java.net.Proxy proxy8 = okHttpClient6.getProxy();
        java.net.CookieHandler cookieHandler9 = okHttpClient6.getCookieHandler();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setCookieHandler(cookieHandler10);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setFollowProtocolRedirects(true);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setProxySelector(proxySelector14);
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setAuthenticator(okAuthenticator16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setResponseCache(responseCache9);
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setProxySelector(proxySelector11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient2.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setProxySelector(proxySelector15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setAuthenticator(okAuthenticator13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient12.setHostnameVerifier(hostnameVerifier15);
        com.squareup.okhttp.ConnectionPool connectionPool17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient12.setConnectionPool(connectionPool17);
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient12.getHostnameVerifier();
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient12.setCookieHandler(cookieHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient2.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient2.getHostnameVerifier();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxy(proxy9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient2.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient2.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool13 = okHttpClient2.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool13);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ResponseCache responseCache6 = okHttpClient2.getResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient2.getHostnameVerifier();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setAuthenticator(okAuthenticator8);
        java.util.List<java.lang.String> strList10 = okHttpClient2.getTransports();
        boolean boolean11 = okHttpClient2.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxySelector(proxySelector13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient14.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory15);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setHostnameVerifier(hostnameVerifier8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setFollowProtocolRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setCookieHandler(cookieHandler13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setProxySelector(proxySelector19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setAuthenticator(okAuthenticator2);
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.setHostnameVerifier(hostnameVerifier5);
        java.net.Proxy proxy7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient6.setProxy(proxy7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient6.setHostnameVerifier(hostnameVerifier9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setAuthenticator(okAuthenticator7);
        java.net.ProxySelector proxySelector9 = okHttpClient8.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector9);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        java.net.Proxy proxy10 = okHttpClient8.getProxy();
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setResponseCache(responseCache11);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setHostnameVerifier(hostnameVerifier13);
        java.net.Proxy proxy15 = okHttpClient14.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy15);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setResponseCache(responseCache9);
        java.net.Proxy proxy11 = okHttpClient2.getProxy();
        java.util.List<java.lang.String> strList12 = okHttpClient2.getTransports();
        java.net.ProxySelector proxySelector13 = okHttpClient2.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector13);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.ProxySelector proxySelector4 = okHttpClient2.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool6 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setProxySelector(proxySelector7);
        java.net.URL uRL9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection10 = okHttpClient8.open(uRL9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setAuthenticator(okAuthenticator2);
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient3.getHostnameVerifier();
        java.lang.Class<?> wildcardClass6 = okHttpClient3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.Proxy proxy8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setProxy(proxy8);
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setCookieHandler(cookieHandler10);
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory13);
        com.squareup.okhttp.ConnectionPool connectionPool15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setConnectionPool(connectionPool15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient2.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setAuthenticator(okAuthenticator11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setFollowProtocolRedirects(true);
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setProxySelector(proxySelector15);
        com.squareup.okhttp.ConnectionPool connectionPool17 = okHttpClient14.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool17);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = okHttpClient2.getResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient2.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient2.getHostnameVerifier();
        boolean boolean10 = okHttpClient2.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setResponseCache(responseCache13);
        java.net.Proxy proxy15 = okHttpClient14.getProxy();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient14.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory17);
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient14.setAuthenticator(okAuthenticator19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient8.getHostnameVerifier();
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setProxySelector(proxySelector11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setProxy(proxy13);
        java.net.Proxy proxy15 = okHttpClient12.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy15);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setCookieHandler(cookieHandler10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory12);
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient8.setProxy(proxy14);
        com.squareup.okhttp.ConnectionPool connectionPool16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient8.setConnectionPool(connectionPool16);
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler18);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setAuthenticator(okAuthenticator5);
        java.net.ProxySelector proxySelector7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient6.setProxySelector(proxySelector7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        java.lang.Class<?> wildcardClass16 = okHttpClient13.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setTransports((java.util.List<java.lang.String>) strList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setProxySelector(proxySelector14);
        com.squareup.okhttp.ConnectionPool connectionPool16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setConnectionPool(connectionPool16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ProxySelector proxySelector8 = okHttpClient7.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient7.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setConnectionPool(connectionPool10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setCookieHandler(cookieHandler10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setHostnameVerifier(hostnameVerifier12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory14);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient8.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setHostnameVerifier(hostnameVerifier18);
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setHostnameVerifier(hostnameVerifier20);
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient21.setHostnameVerifier(hostnameVerifier22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient23);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setResponseCache(responseCache9);
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setProxySelector(proxySelector11);
        java.net.ResponseCache responseCache13 = okHttpClient12.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setSSLSocketFactory(sSLSocketFactory14);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setSSLSocketFactory(sSLSocketFactory16);
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient12.setAuthenticator(okAuthenticator18);
        java.net.URL uRL20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection21 = okHttpClient12.open(uRL20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        java.net.URL uRL13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection14 = okHttpClient12.open(uRL13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        java.util.List<java.lang.String> strList3 = okHttpClient2.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setFollowProtocolRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setHostnameVerifier(hostnameVerifier7);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setHostnameVerifier(hostnameVerifier13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setHostnameVerifier(hostnameVerifier15);
        java.net.ResponseCache responseCache17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient10.setResponseCache(responseCache17);
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setResponseCache(responseCache19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setResponseCache(responseCache9);
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setProxySelector(proxySelector11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient2.setProxy(proxy13);
        java.util.List<java.lang.String> strList15 = okHttpClient2.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient7.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache11 = okHttpClient10.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache11);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkAuthenticator okAuthenticator1 = okHttpClient0.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setHostnameVerifier(hostnameVerifier2);
        com.squareup.okhttp.OkAuthenticator okAuthenticator4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setAuthenticator(okAuthenticator4);
        java.net.Proxy proxy6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient3.setProxy(proxy6);
        java.net.Proxy proxy8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient3.setProxy(proxy8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient8.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool9);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setResponseCache(responseCache7);
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setConnectionPool(connectionPool9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        java.util.List<java.lang.String> strList13 = okHttpClient12.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setHostnameVerifier(hostnameVerifier14);
        boolean boolean16 = okHttpClient12.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient12.setResponseCache(responseCache17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        java.net.CookieHandler cookieHandler11 = okHttpClient10.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.setConnectionPool(connectionPool12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setCookieHandler(cookieHandler7);
        java.net.Proxy proxy9 = okHttpClient8.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setCookieHandler(cookieHandler10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory14);
        java.net.ProxySelector proxySelector16 = okHttpClient15.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector16);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        java.util.List<java.lang.String> strList7 = okHttpClient6.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient6.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient6.setSSLSocketFactory(sSLSocketFactory9);
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient6.setProxy(proxy11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setAuthenticator(okAuthenticator13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setProxySelector(proxySelector12);
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setConnectionPool(connectionPool14);
        java.net.ResponseCache responseCache16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setResponseCache(responseCache16);
        boolean boolean18 = okHttpClient11.getFollowProtocolRedirects();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setTransports((java.util.List<java.lang.String>) strList22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!, hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxySelector(proxySelector9);
        java.net.ResponseCache responseCache11 = okHttpClient2.getResponseCache();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.setResponseCache(responseCache12);
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient2.setConnectionPool(connectionPool14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setProxy(proxy13);
        java.net.CookieHandler cookieHandler15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setCookieHandler(cookieHandler15);
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient11.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier17);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = okHttpClient8.getResponseCache();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setResponseCache(responseCache10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator12);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory10);
        java.net.Proxy proxy12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setProxy(proxy12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        java.net.Proxy proxy6 = okHttpClient2.getProxy();
        java.util.List<java.lang.String> strList7 = okHttpClient2.getTransports();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        java.net.CookieHandler cookieHandler8 = okHttpClient2.getCookieHandler();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxy(proxy9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient2.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.setHostnameVerifier(hostnameVerifier12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient2.setProxySelector(proxySelector14);
        java.net.ResponseCache responseCache16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient2.setResponseCache(responseCache16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setCookieHandler(cookieHandler10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setHostnameVerifier(hostnameVerifier12);
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setProxy(proxy14);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector18 = okHttpClient17.getProxySelector();
        java.net.ResponseCache responseCache19 = okHttpClient17.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache19);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkAuthenticator okAuthenticator1 = okHttpClient0.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setHostnameVerifier(hostnameVerifier2);
        com.squareup.okhttp.OkAuthenticator okAuthenticator4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setAuthenticator(okAuthenticator4);
        java.net.Proxy proxy6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient3.setProxy(proxy6);
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.Proxy proxy3 = okHttpClient2.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setAuthenticator(okAuthenticator4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy7 = okHttpClient5.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList10 = okHttpClient9.getTransports();
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setProxySelector(proxySelector11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient4.getSslSocketFactory();
        java.net.ResponseCache responseCache6 = okHttpClient4.getResponseCache();
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient4.setTransports((java.util.List<java.lang.String>) strList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setHostnameVerifier(hostnameVerifier6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setAuthenticator(okAuthenticator8);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setProxySelector(proxySelector10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setCookieHandler(cookieHandler13);
        java.net.Proxy proxy15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setProxy(proxy15);
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient14.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier17);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setCookieHandler(cookieHandler10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient8.getAuthenticator();
        java.net.CookieHandler cookieHandler13 = okHttpClient8.getCookieHandler();
        java.util.List<java.lang.String> strList14 = okHttpClient8.getTransports();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        java.net.CookieHandler cookieHandler8 = okHttpClient2.getCookieHandler();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxy(proxy9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient2.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.setHostnameVerifier(hostnameVerifier12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient2.setProxySelector(proxySelector14);
        java.util.List<java.lang.String> strList16 = okHttpClient2.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory12);
        java.net.ProxySelector proxySelector14 = okHttpClient13.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient13.getAuthenticator();
        java.net.Proxy proxy16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setProxy(proxy16);
        java.net.ProxySelector proxySelector18 = okHttpClient17.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector18);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient8.getHostnameVerifier();
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setProxySelector(proxySelector11);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setHostnameVerifier(hostnameVerifier13);
        boolean boolean15 = okHttpClient14.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        java.net.Proxy proxy8 = okHttpClient2.getProxy();
        java.net.CookieHandler cookieHandler9 = okHttpClient2.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler9);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        java.net.Proxy proxy3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setProxy(proxy3);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient4.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory5);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setFollowProtocolRedirects(true);
        java.net.ProxySelector proxySelector13 = okHttpClient2.getProxySelector();
        java.net.ProxySelector proxySelector14 = okHttpClient2.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector14);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxySelector(proxySelector9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setCookieHandler(cookieHandler11);
        java.util.List<java.lang.String> strList13 = okHttpClient12.getTransports();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setResponseCache(responseCache14);
        java.net.CookieHandler cookieHandler16 = okHttpClient12.getCookieHandler();
        java.net.ResponseCache responseCache17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient12.setResponseCache(responseCache17);
        java.net.Proxy proxy19 = okHttpClient18.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy19);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient8.getHostnameVerifier();
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setProxySelector(proxySelector11);
        java.net.ResponseCache responseCache13 = okHttpClient8.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache13);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        java.net.Proxy proxy7 = okHttpClient2.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setAuthenticator(okAuthenticator8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setConnectionPool(connectionPool11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient10.getAuthenticator();
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.setProxySelector(proxySelector12);
        java.net.ProxySelector proxySelector14 = okHttpClient10.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector14);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.ProxySelector proxySelector9 = okHttpClient5.getProxySelector();
        java.util.List<java.lang.String> strList10 = okHttpClient5.getTransports();
        java.net.Proxy proxy11 = okHttpClient5.getProxy();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setCookieHandler(cookieHandler12);
        java.net.ProxySelector proxySelector14 = okHttpClient13.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient13.getConnectionPool();
        java.net.Proxy proxy16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setProxy(proxy16);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setAuthenticator(okAuthenticator8);
        java.util.List<java.lang.String> strList10 = okHttpClient9.getTransports();
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setProxy(proxy11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setProxy(proxy13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient12.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = okHttpClient12.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient12.getSslSocketFactory();
        java.net.ResponseCache responseCache18 = okHttpClient12.getResponseCache();
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient12.setResponseCache(responseCache19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache23 = okHttpClient22.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache23);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = okHttpClient4.getProxySelector();
        java.net.CookieHandler cookieHandler10 = okHttpClient4.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient4.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setHostnameVerifier(hostnameVerifier4);
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setHostnameVerifier(hostnameVerifier6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient7.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = okHttpClient5.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient5.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier10);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient2.getHostnameVerifier();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient2.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient6.getAuthenticator();
        java.net.Proxy proxy8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient6.setProxy(proxy8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient2.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator12);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        java.net.CookieHandler cookieHandler8 = okHttpClient2.getCookieHandler();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxy(proxy9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient2.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.setHostnameVerifier(hostnameVerifier12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient2.setProxySelector(proxySelector14);
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setConnectionPool(connectionPool17);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient15.setTransports((java.util.List<java.lang.String>) strList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxySelector(proxySelector14);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient15.setTransports((java.util.List<java.lang.String>) strList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!, ]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setProxySelector(proxySelector10);
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        java.net.ResponseCache responseCache16 = okHttpClient13.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache16);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setCookieHandler(cookieHandler13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setHostnameVerifier(hostnameVerifier15);
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setAuthenticator(okAuthenticator17);
        java.net.URL uRL19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection20 = okHttpClient18.open(uRL19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkAuthenticator okAuthenticator1 = okHttpClient0.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setHostnameVerifier(hostnameVerifier2);
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.CookieHandler cookieHandler8 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setAuthenticator(okAuthenticator9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setHostnameVerifier(hostnameVerifier6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setAuthenticator(okAuthenticator8);
        java.net.ProxySelector proxySelector10 = okHttpClient9.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector10);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = okHttpClient2.getProxySelector();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = okHttpClient2.getSslSocketFactory();
        java.lang.Class<?> wildcardClass8 = okHttpClient2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setConnectionPool(connectionPool9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setCookieHandler(cookieHandler11);
        java.lang.Class<?> wildcardClass13 = okHttpClient2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setProxySelector(proxySelector12);
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setConnectionPool(connectionPool14);
        java.net.ResponseCache responseCache16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setResponseCache(responseCache16);
        boolean boolean18 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient11.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator19);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        java.net.Proxy proxy10 = okHttpClient8.getProxy();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient8.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory11);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ProxySelector proxySelector8 = okHttpClient7.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient7.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setConnectionPool(connectionPool10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient11.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier12);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setAuthenticator(okAuthenticator8);
        java.net.CookieHandler cookieHandler10 = okHttpClient2.getCookieHandler();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient2.getSslSocketFactory();
        java.net.Proxy proxy12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.setProxy(proxy12);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient2.setTransports((java.util.List<java.lang.String>) strList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setResponseCache(responseCache7);
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setConnectionPool(connectionPool9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        java.util.List<java.lang.String> strList13 = okHttpClient12.getTransports();
        java.net.URL uRL14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection15 = okHttpClient12.open(uRL14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector17 = okHttpClient11.getProxySelector();
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient11.setCookieHandler(cookieHandler18);
        java.net.Proxy proxy20 = okHttpClient11.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setConnectionPool(connectionPool21);
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient22.getConnectionPool();
        java.net.CookieHandler cookieHandler24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.setCookieHandler(cookieHandler24);
        com.squareup.okhttp.ConnectionPool connectionPool26 = okHttpClient22.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool26);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setResponseCache(responseCache8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setAuthenticator(okAuthenticator10);
        java.net.ResponseCache responseCache12 = okHttpClient11.getResponseCache();
        java.lang.Class<?> wildcardClass13 = okHttpClient11.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        java.net.Proxy proxy9 = okHttpClient5.getProxy();
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setProxy(proxy10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory12);
        java.net.Proxy proxy14 = okHttpClient13.getProxy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = proxy14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy14);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setConnectionPool(connectionPool3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setHostnameVerifier(hostnameVerifier5);
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient4.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient4.getConnectionPool();
        java.net.Proxy proxy9 = okHttpClient4.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool10 = okHttpClient4.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool10);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory12);
        java.net.ResponseCache responseCache14 = okHttpClient13.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache14);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient5.getAuthenticator();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxySelector(proxySelector13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setHostnameVerifier(hostnameVerifier15);
        java.util.List<java.lang.String> strList17 = okHttpClient10.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setFollowProtocolRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        java.net.Proxy proxy10 = okHttpClient8.getProxy();
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setProxy(proxy11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkAuthenticator okAuthenticator1 = okHttpClient0.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setHostnameVerifier(hostnameVerifier2);
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        boolean boolean8 = okHttpClient5.getFollowProtocolRedirects();
        boolean boolean9 = okHttpClient5.getFollowProtocolRedirects();
        java.util.List<java.lang.String> strList10 = okHttpClient5.getTransports();
        java.util.List<java.lang.String> strList11 = okHttpClient5.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ProxySelector proxySelector8 = okHttpClient7.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient7.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setConnectionPool(connectionPool10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory12);
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setProxy(proxy14);
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = okHttpClient13.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator16);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setCookieHandler(cookieHandler10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient8.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient8.setHostnameVerifier(hostnameVerifier13);
        java.net.Proxy proxy15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient8.setProxy(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.setProxy(proxy11);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory13);
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setProxySelector(proxySelector15);
        java.util.List<java.lang.String> strList17 = okHttpClient14.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setProxySelector(proxySelector12);
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setConnectionPool(connectionPool14);
        java.net.ResponseCache responseCache16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setResponseCache(responseCache16);
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient11.setAuthenticator(okAuthenticator18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setProxy(proxy13);
        java.net.Proxy proxy15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setProxy(proxy15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setSSLSocketFactory(sSLSocketFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory3);
        java.net.Proxy proxy5 = okHttpClient0.getProxy();
        java.net.ProxySelector proxySelector6 = okHttpClient0.getProxySelector();
        java.net.Proxy proxy7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setProxy(proxy7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient8.getSslSocketFactory();
        java.net.Proxy proxy10 = okHttpClient8.getProxy();
        java.util.List<java.lang.String> strList11 = okHttpClient8.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setProxy(proxy9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setAuthenticator(okAuthenticator13);
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setAuthenticator(okAuthenticator15);
        java.net.ResponseCache responseCache17 = okHttpClient16.getResponseCache();
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.setProxySelector(proxySelector18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setAuthenticator(okAuthenticator8);
        java.util.List<java.lang.String> strList10 = okHttpClient9.getTransports();
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setProxy(proxy11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setProxy(proxy13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient12.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = okHttpClient12.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient12.getSslSocketFactory();
        java.net.ResponseCache responseCache18 = okHttpClient12.getResponseCache();
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient12.setResponseCache(responseCache19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setCookieHandler(cookieHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient24);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient8.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setConnectionPool(connectionPool10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient13.getHostnameVerifier();
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.setResponseCache(responseCache15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setFollowProtocolRedirects(false);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient16.setTransports((java.util.List<java.lang.String>) strList22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!, ]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.ProxySelector proxySelector9 = okHttpClient5.getProxySelector();
        java.util.List<java.lang.String> strList10 = okHttpClient5.getTransports();
        java.net.Proxy proxy11 = okHttpClient5.getProxy();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setCookieHandler(cookieHandler12);
        java.net.ProxySelector proxySelector14 = okHttpClient13.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient13.getConnectionPool();
        java.net.Proxy proxy16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setProxy(proxy16);
        java.util.List<java.lang.String> strList18 = okHttpClient13.getTransports();
        java.net.URL uRL19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection20 = okHttpClient13.open(uRL19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList18);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setResponseCache(responseCache10);
        com.squareup.okhttp.ConnectionPool connectionPool12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setConnectionPool(connectionPool12);
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxy(proxy14);
        boolean boolean16 = okHttpClient15.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setResponseCache(responseCache17);
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setCookieHandler(cookieHandler19);
        java.net.Proxy proxy21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient15.setProxy(proxy21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient22);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient6.setSSLSocketFactory(sSLSocketFactory7);
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setProxy(proxy9);
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient8.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient13.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        java.net.CookieHandler cookieHandler8 = okHttpClient2.getCookieHandler();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxy(proxy9);
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient10.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient10.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setFollowProtocolRedirects(true);
        com.squareup.okhttp.ConnectionPool connectionPool15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setConnectionPool(connectionPool15);
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient10.setProxySelector(proxySelector17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setResponseCache(responseCache9);
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setProxySelector(proxySelector11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient2.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setProxySelector(proxySelector15);
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setHostnameVerifier(hostnameVerifier17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setAuthenticator(okAuthenticator2);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setTransports((java.util.List<java.lang.String>) strList6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.ProxySelector proxySelector9 = okHttpClient5.getProxySelector();
        java.util.List<java.lang.String> strList10 = okHttpClient5.getTransports();
        java.net.Proxy proxy11 = okHttpClient5.getProxy();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory12);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ProxySelector proxySelector8 = okHttpClient7.getProxySelector();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient7.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setResponseCache(responseCache9);
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setProxySelector(proxySelector11);
        java.net.ResponseCache responseCache13 = okHttpClient12.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setSSLSocketFactory(sSLSocketFactory14);
        boolean boolean16 = okHttpClient15.getFollowProtocolRedirects();
        java.net.Proxy proxy17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setProxy(proxy17);
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient15.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier19);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.ConnectionPool connectionPool5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setConnectionPool(connectionPool5);
        com.squareup.okhttp.ConnectionPool connectionPool7 = okHttpClient6.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool7);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setResponseCache(responseCache9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setAuthenticator(okAuthenticator11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient12.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.ConnectionPool connectionPool16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setAuthenticator(okAuthenticator7);
        java.net.ResponseCache responseCache9 = okHttpClient2.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache9);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.ProxySelector proxySelector9 = okHttpClient5.getProxySelector();
        java.util.List<java.lang.String> strList10 = okHttpClient5.getTransports();
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient5.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.ConnectionPool connectionPool13 = okHttpClient5.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool13);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = okHttpClient5.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        java.net.ResponseCache responseCache12 = okHttpClient11.getResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setHostnameVerifier(hostnameVerifier13);
        java.net.Proxy proxy15 = okHttpClient14.getProxy();
        java.util.List<java.lang.String> strList16 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.setTransports(strList16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy15);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        com.squareup.okhttp.ConnectionPool connectionPool12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setConnectionPool(connectionPool12);
        java.net.ResponseCache responseCache14 = okHttpClient13.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache14);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setHostnameVerifier(hostnameVerifier15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setHostnameVerifier(hostnameVerifier7);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setProxySelector(proxySelector13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        com.squareup.okhttp.ConnectionPool connectionPool5 = okHttpClient4.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.setConnectionPool(connectionPool6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient7.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = okHttpClient8.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler12);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient2.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient2.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient2.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setAuthenticator(okAuthenticator2);
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.setHostnameVerifier(hostnameVerifier5);
        java.net.Proxy proxy7 = okHttpClient3.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy7);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setProxy(proxy9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory11);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient12.getHostnameVerifier();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setResponseCache(responseCache14);
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = okHttpClient15.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator16);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setTransports((java.util.List<java.lang.String>) strList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setCookieHandler(cookieHandler5);
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient0.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier7);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setProxySelector(proxySelector14);
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setProxySelector(proxySelector16);
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler18);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient2.getAuthenticator();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setCookieHandler(cookieHandler7);
        java.util.List<java.lang.String> strList9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setTransports(strList9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setCookieHandler(cookieHandler13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory15);
        java.net.Proxy proxy17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient10.setProxy(proxy17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setCookieHandler(cookieHandler13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory17);
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setCookieHandler(cookieHandler19);
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setHostnameVerifier(hostnameVerifier21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient22);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache9 = okHttpClient2.getResponseCache();
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient2.setProxy(proxy10);
        java.net.Proxy proxy12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setProxy(proxy12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setProxySelector(proxySelector14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setResponseCache(responseCache10);
        com.squareup.okhttp.ConnectionPool connectionPool12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setConnectionPool(connectionPool12);
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxy(proxy14);
        java.net.Proxy proxy16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setProxy(proxy16);
        com.squareup.okhttp.ConnectionPool connectionPool18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient11.setConnectionPool(connectionPool18);
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient11.setCookieHandler(cookieHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setCookieHandler(cookieHandler10);
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setResponseCache(responseCache12);
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setProxy(proxy14);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory16);
        java.net.URL uRL18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection19 = okHttpClient13.open(uRL18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setAuthenticator(okAuthenticator9);
        java.net.Proxy proxy11 = okHttpClient10.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.setAuthenticator(okAuthenticator12);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setAuthenticator(okAuthenticator14);
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setHostnameVerifier(hostnameVerifier16);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.util.List<java.lang.String> strList9 = okHttpClient5.getTransports();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient5.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory10);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setHostnameVerifier(hostnameVerifier9);
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setHostnameVerifier(hostnameVerifier11);
        java.util.List<java.lang.String> strList13 = okHttpClient10.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = okHttpClient10.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setConnectionPool(connectionPool15);
        java.net.ResponseCache responseCache17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient10.setResponseCache(responseCache17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient4.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient4.getAuthenticator();
        boolean boolean7 = okHttpClient4.getFollowProtocolRedirects();
        boolean boolean8 = okHttpClient4.getFollowProtocolRedirects();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient4.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient4.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory10);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setAuthenticator(okAuthenticator11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setProxy(proxy13);
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient12.setResponseCache(responseCache15);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setCookieHandler(cookieHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setAuthenticator(okAuthenticator2);
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setCookieHandler(cookieHandler4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient3.setResponseCache(responseCache6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setProxySelector(proxySelector8);
        java.util.List<java.lang.String> strList10 = okHttpClient7.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory10);
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        java.net.CookieHandler cookieHandler14 = okHttpClient11.getCookieHandler();
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setProxySelector(proxySelector15);
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setProxySelector(proxySelector17);
        java.net.Proxy proxy19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setProxy(proxy19);
        java.net.CookieHandler cookieHandler21 = okHttpClient16.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler21);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient5.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient5.getHostnameVerifier();
        java.lang.Class<?> wildcardClass8 = okHttpClient5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setProxy(proxy9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setAuthenticator(okAuthenticator13);
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setAuthenticator(okAuthenticator15);
        java.net.ResponseCache responseCache17 = okHttpClient16.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient16.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool18);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.util.List<java.lang.String> strList12 = okHttpClient11.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache15 = okHttpClient14.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.setConnectionPool(connectionPool16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.Proxy proxy6 = okHttpClient2.getProxy();
        java.net.ProxySelector proxySelector7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setProxySelector(proxySelector7);
        java.net.ResponseCache responseCache9 = okHttpClient8.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache9);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxy(proxy13);
        java.net.ResponseCache responseCache15 = okHttpClient14.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.setConnectionPool(connectionPool16);
        java.net.Proxy proxy18 = okHttpClient14.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy18);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient8.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setConnectionPool(connectionPool10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient13.getHostnameVerifier();
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.setResponseCache(responseCache15);
        java.net.ResponseCache responseCache17 = okHttpClient16.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache17);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.setFollowProtocolRedirects(false);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setHostnameVerifier(hostnameVerifier13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient14.getSslSocketFactory();
        java.net.Proxy proxy16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.setProxy(proxy16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setConnectionPool(connectionPool11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setCookieHandler(cookieHandler13);
        boolean boolean15 = okHttpClient14.getFollowProtocolRedirects();
        boolean boolean16 = okHttpClient14.getFollowProtocolRedirects();
        java.net.Proxy proxy17 = okHttpClient14.getProxy();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient14.setTransports((java.util.List<java.lang.String>) strList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!, hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setCookieHandler(cookieHandler7);
        java.net.CookieHandler cookieHandler9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setCookieHandler(cookieHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory14);
        java.net.Proxy proxy16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setProxy(proxy16);
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setProxySelector(proxySelector18);
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setResponseCache(responseCache20);
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient21.setAuthenticator(okAuthenticator22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient23);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector17 = okHttpClient11.getProxySelector();
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient11.setCookieHandler(cookieHandler18);
        java.net.Proxy proxy20 = okHttpClient11.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setConnectionPool(connectionPool21);
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient22.getConnectionPool();
        java.net.CookieHandler cookieHandler24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.setCookieHandler(cookieHandler24);
        com.squareup.okhttp.ConnectionPool connectionPool26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient25.setConnectionPool(connectionPool26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient27);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = okHttpClient0.getSslSocketFactory();
        java.net.Proxy proxy2 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setConnectionPool(connectionPool4);
        java.net.CookieHandler cookieHandler6 = okHttpClient5.getCookieHandler();
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setResponseCache(responseCache7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient4.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient4.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = okHttpClient4.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setAuthenticator(okAuthenticator8);
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler10);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ResponseCache responseCache9 = okHttpClient4.getResponseCache();
        boolean boolean10 = okHttpClient4.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient4.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient4.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory12);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient4.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient4.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = okHttpClient4.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setAuthenticator(okAuthenticator8);
        com.squareup.okhttp.ConnectionPool connectionPool10 = okHttpClient9.getConnectionPool();
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setResponseCache(responseCache11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setCookieHandler(cookieHandler10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setHostnameVerifier(hostnameVerifier12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory14);
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection17 = okHttpClient8.open(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient10.getAuthenticator();
        java.util.List<java.lang.String> strList12 = okHttpClient10.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setHostnameVerifier(hostnameVerifier13);
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setAuthenticator(okAuthenticator15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setHostnameVerifier(hostnameVerifier9);
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setHostnameVerifier(hostnameVerifier11);
        java.util.List<java.lang.String> strList13 = okHttpClient10.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = okHttpClient10.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setConnectionPool(connectionPool15);
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler17);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.Proxy proxy8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setProxy(proxy8);
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setCookieHandler(cookieHandler10);
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory13);
        java.net.Proxy proxy15 = okHttpClient14.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy15);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setHostnameVerifier(hostnameVerifier5);
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient4.getAuthenticator();
        java.net.CookieHandler cookieHandler8 = okHttpClient4.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setHostnameVerifier(hostnameVerifier9);
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setProxy(proxy11);
        java.net.CookieHandler cookieHandler13 = okHttpClient10.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler13);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.ProxySelector proxySelector4 = okHttpClient2.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient2.getSslSocketFactory();
        boolean boolean7 = okHttpClient2.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setProxySelector(proxySelector8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient8.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier9);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setAuthenticator(okAuthenticator8);
        java.util.List<java.lang.String> strList10 = okHttpClient9.getTransports();
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setProxy(proxy11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setProxy(proxy13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient12.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = okHttpClient12.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient12.getSslSocketFactory();
        com.squareup.okhttp.ConnectionPool connectionPool18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient12.setConnectionPool(connectionPool18);
        java.net.URL uRL20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection21 = okHttpClient19.open(uRL20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory3);
        java.net.Proxy proxy5 = okHttpClient0.getProxy();
        java.net.ProxySelector proxySelector6 = okHttpClient0.getProxySelector();
        java.net.Proxy proxy7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setProxy(proxy7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient8.getSslSocketFactory();
        java.net.Proxy proxy10 = okHttpClient8.getProxy();
        java.net.CookieHandler cookieHandler11 = okHttpClient8.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler11);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxy(proxy9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setAuthenticator(okAuthenticator11);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient10.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier13);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.Proxy proxy3 = okHttpClient2.getProxy();
        java.util.List<java.lang.String> strList4 = okHttpClient2.getTransports();
        com.squareup.okhttp.ConnectionPool connectionPool5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setConnectionPool(connectionPool5);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setProxySelector(proxySelector9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector17 = okHttpClient11.getProxySelector();
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient11.setCookieHandler(cookieHandler18);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setFollowProtocolRedirects(false);
        java.net.Proxy proxy22 = okHttpClient21.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy22);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setResponseCache(responseCache9);
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setProxySelector(proxySelector11);
        com.squareup.okhttp.ConnectionPool connectionPool13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient2.setConnectionPool(connectionPool13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setHostnameVerifier(hostnameVerifier15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setFollowProtocolRedirects(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setHostnameVerifier(hostnameVerifier5);
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient6.getAuthenticator();
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient6.setResponseCache(responseCache8);
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setResponseCache(responseCache10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient5.getAuthenticator();
        java.net.ProxySelector proxySelector7 = okHttpClient5.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setHostnameVerifier(hostnameVerifier9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setCookieHandler(cookieHandler10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory12);
        boolean boolean14 = okHttpClient13.getFollowProtocolRedirects();
        java.util.List<java.lang.String> strList15 = okHttpClient13.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler12 = okHttpClient5.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler12);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setProxy(proxy9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory11);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient12.getHostnameVerifier();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setResponseCache(responseCache14);
        java.net.ProxySelector proxySelector16 = okHttpClient12.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector16);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        java.util.List<java.lang.String> strList7 = okHttpClient6.getTransports();
        java.net.ProxySelector proxySelector8 = okHttpClient6.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector8);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setAuthenticator(okAuthenticator7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache13 = okHttpClient12.getResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient12.getHostnameVerifier();
        java.net.ResponseCache responseCache15 = okHttpClient12.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache15);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkAuthenticator okAuthenticator1 = okHttpClient0.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setHostnameVerifier(hostnameVerifier2);
        com.squareup.okhttp.ConnectionPool connectionPool4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setConnectionPool(connectionPool4);
        java.net.Proxy proxy6 = okHttpClient3.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy6);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setConnectionPool(connectionPool13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory15);
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient4.setProxySelector(proxySelector17);
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setAuthenticator(okAuthenticator19);
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setAuthenticator(okAuthenticator21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient22);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setCookieHandler(cookieHandler10);
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setResponseCache(responseCache12);
        java.lang.Class<?> wildcardClass14 = okHttpClient5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setResponseCache(responseCache7);
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setConnectionPool(connectionPool9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setFollowProtocolRedirects(true);
        com.squareup.okhttp.ConnectionPool connectionPool17 = okHttpClient16.getConnectionPool();
        java.lang.Class<?> wildcardClass18 = okHttpClient16.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ProxySelector proxySelector6 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setCookieHandler(cookieHandler7);
        java.net.ResponseCache responseCache9 = okHttpClient2.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache9);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient12.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator13);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        java.net.ProxySelector proxySelector9 = okHttpClient5.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setHostnameVerifier(hostnameVerifier10);
        java.net.URL uRL12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection13 = okHttpClient11.open(uRL12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setAuthenticator(okAuthenticator11);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setHostnameVerifier(hostnameVerifier13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient12.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient12.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory17);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setResponseCache(responseCache13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler17 = okHttpClient14.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient14.getConnectionPool();
        java.lang.Class<?> wildcardClass19 = okHttpClient14.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = okHttpClient4.getAuthenticator();
        java.net.ResponseCache responseCache10 = okHttpClient4.getResponseCache();
        java.net.URL uRL11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection12 = okHttpClient4.open(uRL11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache10);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = okHttpClient8.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxySelector(proxySelector14);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient11.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory16);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ResponseCache responseCache9 = okHttpClient4.getResponseCache();
        boolean boolean10 = okHttpClient4.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient4.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient4.setConnectionPool(connectionPool12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        java.net.Proxy proxy9 = okHttpClient5.getProxy();
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setProxy(proxy10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory12);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient13.setTransports((java.util.List<java.lang.String>) strList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!, hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setProxySelector(proxySelector12);
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setConnectionPool(connectionPool14);
        boolean boolean16 = okHttpClient15.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setProxySelector(proxySelector17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setProxy(proxy13);
        java.net.CookieHandler cookieHandler15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setCookieHandler(cookieHandler15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient11.getSslSocketFactory();
        java.net.URL uRL18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection19 = okHttpClient11.open(uRL18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory17);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setResponseCache(responseCache9);
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setProxySelector(proxySelector11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient2.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory14);
        boolean boolean16 = okHttpClient15.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setHostnameVerifier(hostnameVerifier9);
        boolean boolean11 = okHttpClient10.getFollowProtocolRedirects();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.setHostnameVerifier(hostnameVerifier12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setCookieHandler(cookieHandler13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool19 = okHttpClient18.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool19);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setConnectionPool(connectionPool9);
        java.util.List<java.lang.String> strList11 = okHttpClient10.getTransports();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory12);
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setProxy(proxy14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setResponseCache(responseCache7);
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setConnectionPool(connectionPool9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setHostnameVerifier(hostnameVerifier14);
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient12.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool16);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setAuthenticator(okAuthenticator12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setHostnameVerifier(hostnameVerifier14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        java.net.Proxy proxy7 = okHttpClient2.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setAuthenticator(okAuthenticator8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector11 = okHttpClient2.getProxySelector();
        boolean boolean12 = okHttpClient2.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler13 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient2.setProxySelector(proxySelector15);
        java.util.List<java.lang.String> strList17 = okHttpClient16.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setConnectionPool(connectionPool9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setCookieHandler(cookieHandler11);
        java.net.ResponseCache responseCache13 = okHttpClient2.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient2.setConnectionPool(connectionPool14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient5.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient5.getHostnameVerifier();
        java.net.Proxy proxy8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxy(proxy8);
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient9.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setHostnameVerifier(hostnameVerifier11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setAuthenticator(okAuthenticator2);
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setProxySelector(proxySelector4);
        java.net.ResponseCache responseCache6 = okHttpClient5.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setResponseCache(responseCache9);
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setHostnameVerifier(hostnameVerifier11);
        java.net.Proxy proxy13 = okHttpClient12.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy13);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory3);
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient4.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient2.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setAuthenticator(okAuthenticator11);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient8.setHostnameVerifier(hostnameVerifier13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory9);
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient5.setProxy(proxy11);
        java.net.ProxySelector proxySelector13 = okHttpClient12.getProxySelector();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setSSLSocketFactory(sSLSocketFactory14);
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection17 = okHttpClient15.open(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setProxySelector(proxySelector12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxySelector(proxySelector14);
        boolean boolean16 = okHttpClient11.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = okHttpClient4.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient4.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.URL uRL9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection10 = okHttpClient4.open(uRL9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        java.net.Proxy proxy14 = okHttpClient13.getProxy();
        java.net.CookieHandler cookieHandler15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.setCookieHandler(cookieHandler15);
        java.lang.String[] strArray19 = new java.lang.String[] { "", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient13.setTransports((java.util.List<java.lang.String>) strList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [, ]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setAuthenticator(okAuthenticator2);
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.setHostnameVerifier(hostnameVerifier5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient6.setResponseCache(responseCache7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setCookieHandler(cookieHandler13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory17);
        java.lang.Class<?> wildcardClass19 = okHttpClient18.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        boolean boolean7 = okHttpClient6.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient6.setAuthenticator(okAuthenticator8);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setSSLSocketFactory(sSLSocketFactory10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setAuthenticator(okAuthenticator12);
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient13.setTransports((java.util.List<java.lang.String>) strList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.util.List<java.lang.String> strList9 = okHttpClient5.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient5.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator10);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.ProxySelector proxySelector9 = okHttpClient5.getProxySelector();
        java.net.ResponseCache responseCache10 = okHttpClient5.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache10);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.Proxy proxy13 = okHttpClient11.getProxy();
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxy(proxy14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        java.net.Proxy proxy7 = okHttpClient2.getProxy();
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setResponseCache(responseCache8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setFollowProtocolRedirects(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setAuthenticator(okAuthenticator13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient12.setHostnameVerifier(hostnameVerifier15);
        com.squareup.okhttp.ConnectionPool connectionPool17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient12.setConnectionPool(connectionPool17);
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient12.setResponseCache(responseCache19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = okHttpClient5.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        java.net.ResponseCache responseCache12 = okHttpClient11.getResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setHostnameVerifier(hostnameVerifier13);
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setAuthenticator(okAuthenticator15);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setCookieHandler(cookieHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        java.net.CookieHandler cookieHandler14 = okHttpClient11.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler14);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        java.net.Proxy proxy7 = okHttpClient2.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setAuthenticator(okAuthenticator8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector11 = okHttpClient2.getProxySelector();
        boolean boolean12 = okHttpClient2.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler13 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient2.setProxySelector(proxySelector15);
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setHostnameVerifier(hostnameVerifier17);
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient18.getAuthenticator();
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.setCookieHandler(cookieHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ProxySelector proxySelector6 = okHttpClient2.getProxySelector();
        java.net.ResponseCache responseCache7 = okHttpClient2.getResponseCache();
        java.net.CookieHandler cookieHandler8 = okHttpClient2.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler8);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkAuthenticator okAuthenticator1 = okHttpClient0.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setHostnameVerifier(hostnameVerifier2);
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setCookieHandler(cookieHandler4);
        com.squareup.okhttp.ConnectionPool connectionPool6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setConnectionPool(connectionPool6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setResponseCache(responseCache7);
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setAuthenticator(okAuthenticator11);
        com.squareup.okhttp.ConnectionPool connectionPool13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setConnectionPool(connectionPool13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setResponseCache(responseCache17);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setFollowProtocolRedirects(false);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient16.setTransports((java.util.List<java.lang.String>) strList23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        java.util.List<java.lang.String> strList3 = okHttpClient2.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setHostnameVerifier(hostnameVerifier4);
        java.net.Proxy proxy6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setProxy(proxy6);
        boolean boolean8 = okHttpClient7.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setHostnameVerifier(hostnameVerifier9);
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setHostnameVerifier(hostnameVerifier11);
        java.util.List<java.lang.String> strList13 = okHttpClient10.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = okHttpClient10.getAuthenticator();
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient10.setTransports((java.util.List<java.lang.String>) strList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: []");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkAuthenticator okAuthenticator1 = okHttpClient0.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setHostnameVerifier(hostnameVerifier2);
        com.squareup.okhttp.ConnectionPool connectionPool4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setConnectionPool(connectionPool4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient3.setAuthenticator(okAuthenticator6);
        com.squareup.okhttp.ConnectionPool connectionPool8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient3.setConnectionPool(connectionPool8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setCookieHandler(cookieHandler10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setHostnameVerifier(hostnameVerifier12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory14);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient8.setFollowProtocolRedirects(true);
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setCookieHandler(cookieHandler18);
        boolean boolean20 = okHttpClient17.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory12);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = okHttpClient11.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator14);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setResponseCache(responseCache10);
        com.squareup.okhttp.ConnectionPool connectionPool12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setConnectionPool(connectionPool12);
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxy(proxy14);
        java.net.Proxy proxy16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setProxy(proxy16);
        java.net.ProxySelector proxySelector18 = okHttpClient17.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector18);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        boolean boolean6 = okHttpClient2.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setAuthenticator(okAuthenticator7);
        java.net.CookieHandler cookieHandler9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setCookieHandler(cookieHandler9);
        java.lang.Class<?> wildcardClass11 = okHttpClient10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        boolean boolean6 = okHttpClient2.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setAuthenticator(okAuthenticator7);
        java.net.CookieHandler cookieHandler9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setCookieHandler(cookieHandler9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.ConnectionPool connectionPool10 = okHttpClient9.getConnectionPool();
        java.net.Proxy proxy11 = okHttpClient9.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy11);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        java.net.Proxy proxy8 = okHttpClient2.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setTransports((java.util.List<java.lang.String>) strList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!, hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient2.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setAuthenticator(okAuthenticator11);
        com.squareup.okhttp.ConnectionPool connectionPool13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setConnectionPool(connectionPool13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setHostnameVerifier(hostnameVerifier15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient16.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory17);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory3);
        java.net.Proxy proxy5 = okHttpClient0.getProxy();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setProxySelector(proxySelector6);
        java.net.Proxy proxy8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setProxy(proxy8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setHostnameVerifier(hostnameVerifier7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient2.getSslSocketFactory();
        com.squareup.okhttp.ConnectionPool connectionPool12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.setConnectionPool(connectionPool12);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection17 = okHttpClient15.open(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        java.util.List<java.lang.String> strList7 = okHttpClient6.getTransports();
        java.net.Proxy proxy8 = okHttpClient6.getProxy();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient6.setResponseCache(responseCache9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setFollowProtocolRedirects(true);
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient14.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory16);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory14);
        java.net.ProxySelector proxySelector16 = okHttpClient13.getProxySelector();
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setCookieHandler(cookieHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setResponseCache(responseCache8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setAuthenticator(okAuthenticator10);
        java.net.Proxy proxy12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setProxy(proxy12);
        java.net.CookieHandler cookieHandler14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setCookieHandler(cookieHandler14);
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient15.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier16);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient6.setHostnameVerifier(hostnameVerifier7);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setHostnameVerifier(hostnameVerifier5);
        java.net.ProxySelector proxySelector7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient6.setProxySelector(proxySelector7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setConnectionPool(connectionPool14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.Proxy proxy6 = okHttpClient5.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setAuthenticator(okAuthenticator7);
        java.net.Proxy proxy9 = okHttpClient5.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient9.getAuthenticator();
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setProxySelector(proxySelector11);
        boolean boolean13 = okHttpClient9.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient9.setSSLSocketFactory(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        java.net.CookieHandler cookieHandler8 = okHttpClient2.getCookieHandler();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxy(proxy9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient2.getAuthenticator();
        java.net.Proxy proxy12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.setProxy(proxy12);
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler14);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory10);
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setProxySelector(proxySelector12);
        java.net.ProxySelector proxySelector14 = okHttpClient13.getProxySelector();
        java.net.URL uRL15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection16 = okHttpClient13.open(uRL15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector14);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setHostnameVerifier(hostnameVerifier6);
        java.util.List<java.lang.String> strList8 = okHttpClient7.getTransports();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setProxy(proxy9);
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setProxy(proxy11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient6.setSSLSocketFactory(sSLSocketFactory7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient8.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient8.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory10);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setResponseCache(responseCache7);
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setAuthenticator(okAuthenticator11);
        com.squareup.okhttp.ConnectionPool connectionPool13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setConnectionPool(connectionPool13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient14.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.setHostnameVerifier(hostnameVerifier16);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient14.setTransports((java.util.List<java.lang.String>) strList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkAuthenticator okAuthenticator1 = okHttpClient0.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setHostnameVerifier(hostnameVerifier2);
        com.squareup.okhttp.OkAuthenticator okAuthenticator4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setAuthenticator(okAuthenticator4);
        java.net.Proxy proxy6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient3.setProxy(proxy6);
        java.net.CookieHandler cookieHandler8 = okHttpClient3.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler8);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = okHttpClient12.getSslSocketFactory();
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setProxySelector(proxySelector14);
        java.net.ResponseCache responseCache16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setResponseCache(responseCache16);
        java.lang.Class<?> wildcardClass18 = okHttpClient12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setConnectionPool(connectionPool9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setAuthenticator(okAuthenticator13);
        boolean boolean15 = okHttpClient14.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setResponseCache(responseCache13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList17 = okHttpClient14.getTransports();
        java.net.Proxy proxy18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.setProxy(proxy18);
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setHostnameVerifier(hostnameVerifier20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxy(proxy13);
        java.net.ResponseCache responseCache15 = okHttpClient14.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.setConnectionPool(connectionPool16);
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient17.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool18);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient9.getAuthenticator();
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setProxySelector(proxySelector11);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setResponseCache(responseCache13);
        java.net.Proxy proxy15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setProxy(proxy15);
        com.squareup.okhttp.ConnectionPool connectionPool17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setConnectionPool(connectionPool17);
        java.net.ProxySelector proxySelector19 = okHttpClient18.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = okHttpClient18.getAuthenticator();
        java.net.CookieHandler cookieHandler21 = okHttpClient18.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler21);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory14);
        com.squareup.okhttp.ConnectionPool connectionPool16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setConnectionPool(connectionPool16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setCookieHandler(cookieHandler10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory12);
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient8.setProxy(proxy14);
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = okHttpClient8.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient8.setConnectionPool(connectionPool17);
        com.squareup.okhttp.ConnectionPool connectionPool19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setConnectionPool(connectionPool19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        com.squareup.okhttp.ConnectionPool connectionPool6 = okHttpClient2.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool6);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.setFollowProtocolRedirects(false);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setHostnameVerifier(hostnameVerifier13);
        com.squareup.okhttp.ConnectionPool connectionPool15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient16.getAuthenticator();
        java.net.CookieHandler cookieHandler18 = okHttpClient16.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setHostnameVerifier(hostnameVerifier19);
        java.net.Proxy proxy21 = okHttpClient16.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy21);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        java.net.ProxySelector proxySelector11 = okHttpClient2.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.setAuthenticator(okAuthenticator12);
        boolean boolean14 = okHttpClient13.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.ProxySelector proxySelector9 = okHttpClient5.getProxySelector();
        java.util.List<java.lang.String> strList10 = okHttpClient5.getTransports();
        java.net.Proxy proxy11 = okHttpClient5.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient5.setFollowProtocolRedirects(false);
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient15.getHostnameVerifier();
        java.net.URL uRL17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection18 = okHttpClient15.open(uRL17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier16);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxy(proxy13);
        java.net.ResponseCache responseCache15 = okHttpClient14.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.setConnectionPool(connectionPool16);
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.setCookieHandler(cookieHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setHostnameVerifier(hostnameVerifier6);
        java.util.List<java.lang.String> strList8 = okHttpClient7.getTransports();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setProxy(proxy9);
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient7.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier11);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.util.List<java.lang.String> strList10 = okHttpClient9.getTransports();
        com.squareup.okhttp.ConnectionPool connectionPool11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setConnectionPool(connectionPool11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient9.setAuthenticator(okAuthenticator13);
        java.net.CookieHandler cookieHandler15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient9.setCookieHandler(cookieHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setResponseCache(responseCache9);
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setProxySelector(proxySelector11);
        com.squareup.okhttp.ConnectionPool connectionPool13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient2.setConnectionPool(connectionPool13);
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setProxySelector(proxySelector15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient16.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory17);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setProxySelector(proxySelector12);
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setConnectionPool(connectionPool14);
        java.net.ResponseCache responseCache16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setResponseCache(responseCache16);
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = okHttpClient17.getAuthenticator();
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.setProxySelector(proxySelector19);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient20.setTransports((java.util.List<java.lang.String>) strList23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.util.List<java.lang.String> strList5 = okHttpClient4.getTransports();
        com.squareup.okhttp.ConnectionPool connectionPool6 = okHttpClient4.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool6);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setProxy(proxy9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setAuthenticator(okAuthenticator13);
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setProxySelector(proxySelector15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setSSLSocketFactory(sSLSocketFactory19);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setSSLSocketFactory(sSLSocketFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient22);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient2.getAuthenticator();
        java.net.CookieHandler cookieHandler12 = okHttpClient2.getCookieHandler();
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient2.setProxy(proxy13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory15);
        boolean boolean17 = okHttpClient16.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector18 = okHttpClient16.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector18);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        java.net.Proxy proxy9 = okHttpClient5.getProxy();
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setProxy(proxy10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory12);
        java.net.Proxy proxy14 = okHttpClient13.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.setHostnameVerifier(hostnameVerifier15);
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setAuthenticator(okAuthenticator17);
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient16.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator19);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        java.net.Proxy proxy2 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setAuthenticator(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        boolean boolean10 = okHttpClient9.getFollowProtocolRedirects();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector12 = okHttpClient9.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector12);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setResponseCache(responseCache9);
        java.net.Proxy proxy11 = okHttpClient2.getProxy();
        java.util.List<java.lang.String> strList12 = okHttpClient2.getTransports();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = okHttpClient2.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory13);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setCookieHandler(cookieHandler8);
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient2.getHostnameVerifier();
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setResponseCache(responseCache11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient6.setCookieHandler(cookieHandler7);
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient8.setTransports((java.util.List<java.lang.String>) strList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: []");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        java.net.Proxy proxy2 = okHttpClient0.getProxy();
        java.util.List<java.lang.String> strList3 = okHttpClient0.getTransports();
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setCookieHandler(cookieHandler4);
        java.net.URL uRL6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection7 = okHttpClient0.open(uRL6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.setAuthenticator(okAuthenticator12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory14);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient2.setFollowProtocolRedirects(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = okHttpClient8.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxySelector(proxySelector14);
        java.net.ProxySelector proxySelector16 = okHttpClient11.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector16);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector17 = okHttpClient11.getProxySelector();
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient11.setCookieHandler(cookieHandler18);
        java.net.Proxy proxy20 = okHttpClient11.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setConnectionPool(connectionPool21);
        java.net.URL uRL23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection24 = okHttpClient11.open(uRL23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient22);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        boolean boolean8 = okHttpClient7.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setProxySelector(proxySelector9);
        java.lang.Class<?> wildcardClass11 = okHttpClient10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ResponseCache responseCache9 = okHttpClient4.getResponseCache();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient4.setCookieHandler(cookieHandler10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setAuthenticator(okAuthenticator12);
        java.util.List<java.lang.String> strList14 = okHttpClient11.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory10);
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        java.net.CookieHandler cookieHandler14 = okHttpClient11.getCookieHandler();
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setProxySelector(proxySelector15);
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setAuthenticator(okAuthenticator17);
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient18.setTransports((java.util.List<java.lang.String>) strList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: []");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        com.squareup.okhttp.ConnectionPool connectionPool12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setConnectionPool(connectionPool12);
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient5.setProxy(proxy14);
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setHostnameVerifier(hostnameVerifier16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        java.net.ProxySelector proxySelector9 = okHttpClient5.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setTransports((java.util.List<java.lang.String>) strList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient2.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setAuthenticator(okAuthenticator11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient10.getAuthenticator();
        java.lang.Class<?> wildcardClass14 = okHttpClient10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.getResponseCache();
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setResponseCache(responseCache7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.ResponseCache responseCache9 = okHttpClient5.getResponseCache();
        java.net.ResponseCache responseCache10 = okHttpClient5.getResponseCache();
        java.net.Proxy proxy11 = okHttpClient5.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy11);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setProxySelector(proxySelector12);
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setConnectionPool(connectionPool14);
        java.net.ResponseCache responseCache16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setResponseCache(responseCache16);
        boolean boolean18 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool19 = okHttpClient11.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool19);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        java.net.Proxy proxy9 = okHttpClient5.getProxy();
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setProxy(proxy10);
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setProxySelector(proxySelector12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        java.net.Proxy proxy15 = okHttpClient11.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setFollowProtocolRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.util.List<java.lang.String> strList12 = okHttpClient11.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setFollowProtocolRedirects(false);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setHostnameVerifier(hostnameVerifier15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient16.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory19);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        java.util.List<java.lang.String> strList7 = okHttpClient6.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient6.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient6.setSSLSocketFactory(sSLSocketFactory9);
        java.net.ResponseCache responseCache11 = okHttpClient10.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache11);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.setAuthenticator(okAuthenticator12);
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setProxy(proxy14);
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setAuthenticator(okAuthenticator16);
        java.net.Proxy proxy18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient13.setProxy(proxy18);
        java.net.URL uRL20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection21 = okHttpClient19.open(uRL20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setResponseCache(responseCache7);
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setConnectionPool(connectionPool9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        boolean boolean14 = okHttpClient12.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler15 = okHttpClient12.getCookieHandler();
        java.net.ResponseCache responseCache16 = okHttpClient12.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient12.setSSLSocketFactory(sSLSocketFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient2.getAuthenticator();
        boolean boolean7 = okHttpClient2.getFollowProtocolRedirects();
        java.net.Proxy proxy8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setProxy(proxy8);
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient2.setResponseCache(responseCache10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache19 = okHttpClient11.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient11.setConnectionPool(connectionPool20);
        java.net.ResponseCache responseCache22 = okHttpClient21.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache22);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ProxySelector proxySelector6 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setCookieHandler(cookieHandler7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setAuthenticator(okAuthenticator11);
        java.net.ProxySelector proxySelector13 = okHttpClient12.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector13);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient9.getAuthenticator();
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setProxySelector(proxySelector11);
        boolean boolean13 = okHttpClient9.getFollowProtocolRedirects();
        boolean boolean14 = okHttpClient9.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        boolean boolean8 = okHttpClient7.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.Proxy proxy3 = okHttpClient2.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setAuthenticator(okAuthenticator4);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setAuthenticator(okAuthenticator10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory11);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setSSLSocketFactory(sSLSocketFactory13);
        java.net.Proxy proxy15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setProxy(proxy15);
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient16.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator17);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setProxy(proxy9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setAuthenticator(okAuthenticator13);
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setProxySelector(proxySelector15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory17);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient18.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory19);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ProxySelector proxySelector6 = okHttpClient2.getProxySelector();
        java.net.ResponseCache responseCache7 = okHttpClient2.getResponseCache();
        java.util.List<java.lang.String> strList8 = okHttpClient2.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setFollowProtocolRedirects(true);
        com.squareup.okhttp.ConnectionPool connectionPool11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setConnectionPool(connectionPool11);
        java.net.ProxySelector proxySelector13 = okHttpClient10.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector13);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setCookieHandler(cookieHandler10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient8.setProxySelector(proxySelector14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        java.net.Proxy proxy2 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.Proxy proxy5 = okHttpClient4.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator4 = okHttpClient2.getAuthenticator();
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        java.net.ProxySelector proxySelector7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient6.setProxySelector(proxySelector7);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setAuthenticator(okAuthenticator11);
        com.squareup.okhttp.ConnectionPool connectionPool13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setConnectionPool(connectionPool13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setCookieHandler(cookieHandler10);
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setResponseCache(responseCache12);
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setProxy(proxy14);
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setCookieHandler(cookieHandler16);
        java.net.Proxy proxy18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setProxy(proxy18);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient17.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory20);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setResponseCache(responseCache7);
        java.net.Proxy proxy9 = okHttpClient8.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setHostnameVerifier(hostnameVerifier10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setAuthenticator(okAuthenticator12);
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setResponseCache(responseCache14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setAuthenticator(okAuthenticator8);
        java.util.List<java.lang.String> strList10 = okHttpClient9.getTransports();
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setProxy(proxy11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setProxy(proxy13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient12.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = okHttpClient12.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient12.getSslSocketFactory();
        java.net.ResponseCache responseCache18 = okHttpClient12.getResponseCache();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient12.setCookieHandler(cookieHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ProxySelector proxySelector6 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setCookieHandler(cookieHandler7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setAuthenticator(okAuthenticator11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setProxy(proxy13);
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler15);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory10);
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setAuthenticator(okAuthenticator14);
        java.util.List<java.lang.String> strList16 = okHttpClient11.getTransports();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = strList16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient10.getAuthenticator();
        java.util.List<java.lang.String> strList12 = okHttpClient10.getTransports();
        java.util.List<java.lang.String> strList13 = okHttpClient10.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setAuthenticator(okAuthenticator8);
        java.util.List<java.lang.String> strList10 = okHttpClient9.getTransports();
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setProxy(proxy11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setProxy(proxy13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient12.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setSSLSocketFactory(sSLSocketFactory16);
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler18);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setHostnameVerifier(hostnameVerifier9);
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setHostnameVerifier(hostnameVerifier11);
        com.squareup.okhttp.ConnectionPool connectionPool13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setConnectionPool(connectionPool13);
        java.net.Proxy proxy15 = okHttpClient10.getProxy();
        java.net.Proxy proxy16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient10.setProxy(proxy16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setCookieHandler(cookieHandler5);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = okHttpClient4.getSslSocketFactory();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setConnectionPool(connectionPool10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory11);
        com.squareup.okhttp.ConnectionPool connectionPool13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setConnectionPool(connectionPool13);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient14.setTransports((java.util.List<java.lang.String>) strList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!, ]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler12);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector17 = okHttpClient11.getProxySelector();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient11.getSslSocketFactory();
        com.squareup.okhttp.ConnectionPool connectionPool19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient11.setConnectionPool(connectionPool19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setResponseCache(responseCache10);
        java.net.ProxySelector proxySelector12 = okHttpClient5.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool13 = okHttpClient5.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool13);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setCookieHandler(cookieHandler13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory17);
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setCookieHandler(cookieHandler19);
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient18.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient18.getSslSocketFactory();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setHostnameVerifier(hostnameVerifier23);
        java.net.ResponseCache responseCache25 = okHttpClient24.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache25);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient14.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier15);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient5.getAuthenticator();
        java.net.ProxySelector proxySelector7 = okHttpClient5.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        boolean boolean9 = okHttpClient5.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ResponseCache responseCache9 = okHttpClient4.getResponseCache();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient4.setCookieHandler(cookieHandler10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setAuthenticator(okAuthenticator12);
        java.net.CookieHandler cookieHandler14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setCookieHandler(cookieHandler14);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory16);
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setCookieHandler(cookieHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setAuthenticator(okAuthenticator8);
        java.util.List<java.lang.String> strList10 = okHttpClient9.getTransports();
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setProxy(proxy11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setProxy(proxy13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient12.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = okHttpClient12.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient12.getSslSocketFactory();
        com.squareup.okhttp.ConnectionPool connectionPool18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient12.setConnectionPool(connectionPool18);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setSSLSocketFactory(sSLSocketFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient2.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setAuthenticator(okAuthenticator11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient10.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient10.setConnectionPool(connectionPool16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ProxySelector proxySelector6 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setCookieHandler(cookieHandler7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory9);
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setHostnameVerifier(hostnameVerifier11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setCookieHandler(cookieHandler13);
        java.util.List<java.lang.String> strList15 = okHttpClient10.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setHostnameVerifier(hostnameVerifier9);
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setHostnameVerifier(hostnameVerifier11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient10.getAuthenticator();
        java.net.CookieHandler cookieHandler14 = okHttpClient10.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setAuthenticator(okAuthenticator15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.setAuthenticator(okAuthenticator12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory14);
        java.net.ProxySelector proxySelector16 = okHttpClient2.getProxySelector();
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient2.setProxySelector(proxySelector17);
        java.net.ProxySelector proxySelector19 = okHttpClient18.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector19);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        java.net.CookieHandler cookieHandler7 = okHttpClient2.getCookieHandler();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory8);
        java.lang.Class<?> wildcardClass10 = okHttpClient2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.ConnectionPool connectionPool13 = okHttpClient12.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool13);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setProxy(proxy13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setFollowProtocolRedirects(false);
        java.net.Proxy proxy19 = okHttpClient18.getProxy();
        java.net.URL uRL20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection21 = okHttpClient18.open(uRL20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy19);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxySelector(proxySelector9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setCookieHandler(cookieHandler11);
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient2.setProxySelector(proxySelector13);
        boolean boolean15 = okHttpClient2.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory16);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setSSLSocketFactory(sSLSocketFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setHostnameVerifier(hostnameVerifier4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient5.setTransports((java.util.List<java.lang.String>) strList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        java.net.Proxy proxy2 = okHttpClient0.getProxy();
        java.util.List<java.lang.String> strList3 = okHttpClient0.getTransports();
        java.net.Proxy proxy4 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool5 = okHttpClient0.getConnectionPool();
        java.net.ResponseCache responseCache6 = okHttpClient0.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache6);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setProxySelector(proxySelector14);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setFollowProtocolRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setConnectionPool(connectionPool13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory15);
        java.net.Proxy proxy17 = okHttpClient16.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy17);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        java.net.ProxySelector proxySelector9 = okHttpClient5.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory12);
        java.net.URL uRL14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection15 = okHttpClient5.open(uRL14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ProxySelector proxySelector8 = okHttpClient7.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient7.getHostnameVerifier();
        java.util.List<java.lang.String> strList10 = okHttpClient7.getTransports();
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setCookieHandler(cookieHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setResponseCache(responseCache10);
        com.squareup.okhttp.ConnectionPool connectionPool12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setConnectionPool(connectionPool12);
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxy(proxy14);
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection17 = okHttpClient11.open(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.setFollowProtocolRedirects(false);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setHostnameVerifier(hostnameVerifier13);
        java.net.ProxySelector proxySelector15 = okHttpClient14.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector15);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        java.net.CookieHandler cookieHandler8 = okHttpClient2.getCookieHandler();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxy(proxy9);
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient10.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient10.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setFollowProtocolRedirects(true);
        com.squareup.okhttp.ConnectionPool connectionPool15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setConnectionPool(connectionPool15);
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setTransports((java.util.List<java.lang.String>) strList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: []");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.util.List<java.lang.String> strList12 = okHttpClient11.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache15 = okHttpClient14.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.setAuthenticator(okAuthenticator16);
        java.net.ResponseCache responseCache18 = okHttpClient17.getResponseCache();
        java.net.ProxySelector proxySelector19 = okHttpClient17.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setAuthenticator(okAuthenticator20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        com.squareup.okhttp.ConnectionPool connectionPool12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setConnectionPool(connectionPool12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient5.setProxySelector(proxySelector14);
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient5.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool16);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setResponseCache(responseCache7);
        com.squareup.okhttp.ConnectionPool connectionPool9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setConnectionPool(connectionPool9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setAuthenticator(okAuthenticator14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ProxySelector proxySelector8 = okHttpClient7.getProxySelector();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setFollowProtocolRedirects(true);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setSSLSocketFactory(sSLSocketFactory13);
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setAuthenticator(okAuthenticator15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setProxySelector(proxySelector10);
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient15.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory16);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.Proxy proxy6 = okHttpClient2.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient2.getHostnameVerifier();
        java.net.Proxy proxy8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setProxy(proxy8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkAuthenticator okAuthenticator1 = okHttpClient0.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setHostnameVerifier(hostnameVerifier2);
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setHostnameVerifier(hostnameVerifier6);
        boolean boolean8 = okHttpClient7.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setResponseCache(responseCache8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setAuthenticator(okAuthenticator10);
        java.net.Proxy proxy12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setProxy(proxy12);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient5.setTransports((java.util.List<java.lang.String>) strList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [, ]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        java.net.Proxy proxy9 = okHttpClient5.getProxy();
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setProxy(proxy10);
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setProxySelector(proxySelector12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient11.setTransports((java.util.List<java.lang.String>) strList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!, ]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ProxySelector proxySelector11 = okHttpClient10.getProxySelector();
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.setProxySelector(proxySelector12);
        java.net.URL uRL14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection15 = okHttpClient10.open(uRL14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.ResponseCache responseCache10 = okHttpClient8.getResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setHostnameVerifier(hostnameVerifier11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient8.setProxy(proxy13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setResponseCache(responseCache10);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient8.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient8.setAuthenticator(okAuthenticator13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient4.getConnectionPool();
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient4.setProxy(proxy10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient4.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setFollowProtocolRedirects(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setAuthenticator(okAuthenticator8);
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient7.setTransports((java.util.List<java.lang.String>) strList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [, hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.setProxy(proxy11);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory15);
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient16.getAuthenticator();
        java.net.ResponseCache responseCache18 = okHttpClient16.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache18);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setAuthenticator(okAuthenticator2);
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setCookieHandler(cookieHandler4);
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setFollowProtocolRedirects(true);
        com.squareup.okhttp.ConnectionPool connectionPool8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setConnectionPool(connectionPool8);
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setHostnameVerifier(hostnameVerifier10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setAuthenticator(okAuthenticator2);
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setCookieHandler(cookieHandler4);
        com.squareup.okhttp.ConnectionPool connectionPool6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient3.setConnectionPool(connectionPool6);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient3.setSSLSocketFactory(sSLSocketFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = okHttpClient5.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        java.net.ResponseCache responseCache12 = okHttpClient11.getResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setHostnameVerifier(hostnameVerifier13);
        java.net.Proxy proxy15 = okHttpClient14.getProxy();
        java.net.Proxy proxy16 = okHttpClient14.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient14.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = okHttpClient5.getProxy();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setResponseCache(responseCache10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.ProxySelector proxySelector4 = okHttpClient2.getProxySelector();
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setResponseCache(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = okHttpClient2.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setAuthenticator(okAuthenticator7);
        java.net.CookieHandler cookieHandler9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setCookieHandler(cookieHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.Proxy proxy5 = okHttpClient4.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy5);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setCookieHandler(cookieHandler7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setResponseCache(responseCache9);
        java.util.List<java.lang.String> strList11 = okHttpClient8.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setFollowProtocolRedirects(true);
        java.net.Proxy proxy19 = okHttpClient18.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool20 = okHttpClient18.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setConnectionPool(connectionPool21);
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setResponseCache(responseCache23);
        java.net.ProxySelector proxySelector25 = okHttpClient24.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector25);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        java.net.CookieHandler cookieHandler2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setCookieHandler(cookieHandler2);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        boolean boolean8 = okHttpClient5.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        java.net.ProxySelector proxySelector11 = okHttpClient2.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient2.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient2.setHostnameVerifier(hostnameVerifier13);
        java.net.Proxy proxy15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setProxy(proxy15);
        java.net.ResponseCache responseCache17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setResponseCache(responseCache17);
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient14.setProxySelector(proxySelector19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setFollowProtocolRedirects(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient22);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setHostnameVerifier(hostnameVerifier5);
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient6.getAuthenticator();
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient6.setResponseCache(responseCache8);
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient6.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier10);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setCookieHandler(cookieHandler10);
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        java.net.CookieHandler cookieHandler14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setCookieHandler(cookieHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.Proxy proxy3 = okHttpClient2.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setAuthenticator(okAuthenticator4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient5.getAuthenticator();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        java.net.Proxy proxy9 = okHttpClient5.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy9);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setAuthenticator(okAuthenticator8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setAuthenticator(okAuthenticator10);
        java.net.ResponseCache responseCache12 = okHttpClient9.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache12);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setCookieHandler(cookieHandler7);
        java.net.CookieHandler cookieHandler9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setCookieHandler(cookieHandler9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.ConnectionPool connectionPool13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setConnectionPool(connectionPool13);
        java.net.ProxySelector proxySelector15 = okHttpClient12.getProxySelector();
        java.net.ResponseCache responseCache16 = okHttpClient12.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache16);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxy(proxy9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setAuthenticator(okAuthenticator11);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setHostnameVerifier(hostnameVerifier13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.setAuthenticator(okAuthenticator12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setProxySelector(proxySelector14);
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setHostnameVerifier(hostnameVerifier16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setCookieHandler(cookieHandler8);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setHostnameVerifier(hostnameVerifier14);
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setProxySelector(proxySelector16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        boolean boolean8 = okHttpClient2.getFollowProtocolRedirects();
        boolean boolean9 = okHttpClient2.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient2.setAuthenticator(okAuthenticator10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxySelector(proxySelector13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setHostnameVerifier(hostnameVerifier15);
        java.net.Proxy proxy17 = okHttpClient16.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy17);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setFollowProtocolRedirects(true);
        java.lang.String[] strArray5 = new java.lang.String[] { "", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setTransports((java.util.List<java.lang.String>) strList6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [, ]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        java.net.Proxy proxy2 = okHttpClient0.getProxy();
        java.util.List<java.lang.String> strList3 = okHttpClient0.getTransports();
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setCookieHandler(cookieHandler4);
        java.net.CookieHandler cookieHandler6 = okHttpClient5.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setHostnameVerifier(hostnameVerifier7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setHostnameVerifier(hostnameVerifier9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector17 = okHttpClient11.getProxySelector();
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient11.setCookieHandler(cookieHandler18);
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setAuthenticator(okAuthenticator20);
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setProxySelector(proxySelector22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient23);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setAuthenticator(okAuthenticator8);
        java.util.List<java.lang.String> strList10 = okHttpClient9.getTransports();
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setProxy(proxy11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setProxy(proxy13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient12.setFollowProtocolRedirects(false);
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient12.setHostnameVerifier(hostnameVerifier17);
        com.squareup.okhttp.ConnectionPool connectionPool19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient12.setConnectionPool(connectionPool19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.setProxy(proxy11);
        com.squareup.okhttp.ConnectionPool connectionPool13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setConnectionPool(connectionPool13);
        java.net.CookieHandler cookieHandler15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient12.setCookieHandler(cookieHandler15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient12.getSslSocketFactory();
        java.net.ResponseCache responseCache18 = okHttpClient12.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache18);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setCookieHandler(cookieHandler10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setHostnameVerifier(hostnameVerifier12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setProxySelector(proxySelector14);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory16);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory3);
        java.net.ProxySelector proxySelector5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setProxySelector(proxySelector5);
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setConnectionPool(connectionPool8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setConnectionPool(connectionPool13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory15);
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient4.setProxySelector(proxySelector17);
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setResponseCache(responseCache19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setCookieHandler(cookieHandler13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setHostnameVerifier(hostnameVerifier15);
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setAuthenticator(okAuthenticator17);
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setProxySelector(proxySelector19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxySelector(proxySelector9);
        java.net.ProxySelector proxySelector11 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy12 = okHttpClient2.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy12);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkAuthenticator okAuthenticator1 = okHttpClient0.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setHostnameVerifier(hostnameVerifier2);
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setCookieHandler(cookieHandler4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient0.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setResponseCache(responseCache10);
        java.net.Proxy proxy12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setProxy(proxy12);
        java.net.ResponseCache responseCache14 = okHttpClient13.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.setAuthenticator(okAuthenticator15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setAuthenticator(okAuthenticator9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient5.setCookieHandler(cookieHandler11);
        java.util.List<java.lang.String> strList13 = okHttpClient12.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setFollowProtocolRedirects(true);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory19);
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient11.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool21);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler13);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.ProxySelector proxySelector9 = okHttpClient5.getProxySelector();
        java.net.CookieHandler cookieHandler10 = okHttpClient5.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler10);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        boolean boolean12 = okHttpClient8.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setFollowProtocolRedirects(true);
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.setHostnameVerifier(hostnameVerifier20);
        java.util.List<java.lang.String> strList22 = okHttpClient21.getTransports();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList22);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.util.List<java.lang.String> strList10 = okHttpClient9.getTransports();
        com.squareup.okhttp.ConnectionPool connectionPool11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setConnectionPool(connectionPool11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setAuthenticator(okAuthenticator13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setResponseCache(responseCache13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList17 = okHttpClient14.getTransports();
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient14.getConnectionPool();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient22.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool23);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setCookieHandler(cookieHandler13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory15);
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setProxySelector(proxySelector17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ProxySelector proxySelector8 = okHttpClient7.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient7.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setConnectionPool(connectionPool10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory12);
        java.net.Proxy proxy14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setProxy(proxy14);
        java.net.Proxy proxy16 = okHttpClient15.getProxy();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient9.getAuthenticator();
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setProxySelector(proxySelector11);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setResponseCache(responseCache13);
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient14.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator15);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setResponseCache(responseCache10);
        java.net.URL uRL12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection13 = okHttpClient9.open(uRL12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setResponseCache(responseCache13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList17 = okHttpClient14.getTransports();
        java.net.ResponseCache responseCache18 = okHttpClient14.getResponseCache();
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient14.setProxySelector(proxySelector19);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient20.setTransports((java.util.List<java.lang.String>) strList23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setCookieHandler(cookieHandler13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory17);
        java.net.CookieHandler cookieHandler19 = okHttpClient14.getCookieHandler();
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient14.setProxySelector(proxySelector20);
        java.net.ResponseCache responseCache22 = okHttpClient14.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache22);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient8.getHostnameVerifier();
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setProxySelector(proxySelector11);
        java.net.ProxySelector proxySelector13 = okHttpClient12.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector13);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setResponseCache(responseCache10);
        java.net.Proxy proxy12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setProxy(proxy12);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient13.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory16);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        java.net.CookieHandler cookieHandler14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setCookieHandler(cookieHandler14);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setProxySelector(proxySelector14);
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setProxySelector(proxySelector16);
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient17.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool18);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient2.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.setFollowProtocolRedirects(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setProxy(proxy9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setAuthenticator(okAuthenticator13);
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setAuthenticator(okAuthenticator15);
        java.net.ResponseCache responseCache17 = okHttpClient16.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.setAuthenticator(okAuthenticator18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setHostnameVerifier(hostnameVerifier6);
        com.squareup.okhttp.ConnectionPool connectionPool8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setConnectionPool(connectionPool8);
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setResponseCache(responseCache10);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        java.net.CookieHandler cookieHandler8 = okHttpClient2.getCookieHandler();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxy(proxy9);
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient10.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient10.getConnectionPool();
        java.lang.Class<?> wildcardClass13 = okHttpClient10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setAuthenticator(okAuthenticator8);
        java.util.List<java.lang.String> strList10 = okHttpClient9.getTransports();
        java.net.Proxy proxy11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setProxy(proxy11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setProxy(proxy13);
        com.squareup.okhttp.ConnectionPool connectionPool15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setConnectionPool(connectionPool15);
        java.net.ProxySelector proxySelector17 = okHttpClient14.getProxySelector();
        java.net.Proxy proxy18 = okHttpClient14.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy18);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setHostnameVerifier(hostnameVerifier4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory8);
        boolean boolean10 = okHttpClient9.getFollowProtocolRedirects();
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient9.setTransports((java.util.List<java.lang.String>) strList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [, hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient6.getHostnameVerifier();
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient6.setProxySelector(proxySelector8);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool12);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setHostnameVerifier(hostnameVerifier5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxy(proxy13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setFollowProtocolRedirects(false);
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient10.setHostnameVerifier(hostnameVerifier17);
        java.net.ProxySelector proxySelector19 = okHttpClient10.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector19);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setProxySelector(proxySelector10);
        java.util.List<java.lang.String> strList12 = okHttpClient11.getTransports();
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setProxySelector(proxySelector13);
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient11.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator15);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setCookieHandler(cookieHandler7);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = okHttpClient2.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator9);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setAuthenticator(okAuthenticator2);
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setProxySelector(proxySelector4);
        java.net.ResponseCache responseCache6 = okHttpClient5.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setCookieHandler(cookieHandler9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setFollowProtocolRedirects(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory9);
        boolean boolean11 = okHttpClient8.getFollowProtocolRedirects();
        java.net.URL uRL12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection13 = okHttpClient8.open(uRL12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setCookieHandler(cookieHandler13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory17);
        java.net.ResponseCache responseCache19 = okHttpClient18.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache19);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setResponseCache(responseCache10);
        com.squareup.okhttp.ConnectionPool connectionPool12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setConnectionPool(connectionPool12);
        java.net.Proxy proxy14 = okHttpClient11.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy14);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setCookieHandler(cookieHandler13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory17);
        java.net.CookieHandler cookieHandler19 = okHttpClient14.getCookieHandler();
        java.net.ProxySelector proxySelector20 = okHttpClient14.getProxySelector();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector20);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.CookieHandler cookieHandler5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setCookieHandler(cookieHandler5);
        boolean boolean7 = okHttpClient6.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient6.setAuthenticator(okAuthenticator8);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setSSLSocketFactory(sSLSocketFactory10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setAuthenticator(okAuthenticator12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setHostnameVerifier(hostnameVerifier14);
        java.lang.Class<?> wildcardClass16 = okHttpClient13.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.lang.Class<?> wildcardClass9 = okHttpClient8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.Proxy proxy13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setProxy(proxy13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setHostnameVerifier(hostnameVerifier17);
        java.net.CookieHandler cookieHandler19 = okHttpClient16.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler19);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setAuthenticator(okAuthenticator13);
        java.util.List<java.lang.String> strList15 = okHttpClient12.getTransports();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient12.getSslSocketFactory();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory16);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setCookieHandler(cookieHandler7);
        java.net.CookieHandler cookieHandler9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setCookieHandler(cookieHandler9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setFollowProtocolRedirects(true);
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setCookieHandler(cookieHandler13);
        java.net.CookieHandler cookieHandler15 = okHttpClient12.getCookieHandler();
        boolean boolean16 = okHttpClient12.getFollowProtocolRedirects();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient12.getHostnameVerifier();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier17);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setResponseCache(responseCache9);
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setProxySelector(proxySelector11);
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient2.setProxySelector(proxySelector13);
        java.net.CookieHandler cookieHandler15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient2.setCookieHandler(cookieHandler15);
        java.net.ProxySelector proxySelector17 = okHttpClient2.getProxySelector();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient2.setTransports((java.util.List<java.lang.String>) strList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!, hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        java.net.Proxy proxy10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxy(proxy10);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setFollowProtocolRedirects(true);
        java.net.Proxy proxy19 = okHttpClient18.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool20 = okHttpClient18.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setConnectionPool(connectionPool21);
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient18.getAuthenticator();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator23);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setProxy(proxy9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setAuthenticator(okAuthenticator11);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setHostnameVerifier(hostnameVerifier13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient12.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient12.setCookieHandler(cookieHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient5.getAuthenticator();
        java.net.ProxySelector proxySelector9 = okHttpClient5.getProxySelector();
        java.util.List<java.lang.String> strList10 = okHttpClient5.getTransports();
        java.net.Proxy proxy11 = okHttpClient5.getProxy();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory12);
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.setProxySelector(proxySelector15);
        java.lang.Class<?> wildcardClass17 = okHttpClient13.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setProxySelector(proxySelector10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient11.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setAuthenticator(okAuthenticator13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sSLSocketFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.net.Proxy proxy9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setProxy(proxy9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setAuthenticator(okAuthenticator13);
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setAuthenticator(okAuthenticator15);
        java.net.Proxy proxy17 = okHttpClient16.getProxy();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy17);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient2.getAuthenticator();
        boolean boolean7 = okHttpClient2.getFollowProtocolRedirects();
        java.net.Proxy proxy8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setProxy(proxy8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setAuthenticator(okAuthenticator10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.CookieHandler cookieHandler4 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient2.getAuthenticator();
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setProxySelector(proxySelector6);
        boolean boolean8 = okHttpClient2.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setCookieHandler(cookieHandler9);
        java.lang.Class<?> wildcardClass11 = okHttpClient2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        boolean boolean6 = okHttpClient2.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setAuthenticator(okAuthenticator7);
        java.net.CookieHandler cookieHandler9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setCookieHandler(cookieHandler9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory11);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient10.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient10.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient10.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool15);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.Proxy proxy5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient4.setProxy(proxy5);
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.setFollowProtocolRedirects(false);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setHostnameVerifier(hostnameVerifier13);
        com.squareup.okhttp.ConnectionPool connectionPool15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setConnectionPool(connectionPool15);
        boolean boolean17 = okHttpClient16.getFollowProtocolRedirects();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler19 = okHttpClient16.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool20 = okHttpClient16.getConnectionPool();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool20);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient5.getAuthenticator();
        java.net.ProxySelector proxySelector7 = okHttpClient5.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient5.getHostnameVerifier();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setAuthenticator(okAuthenticator10);
        java.util.List<java.lang.String> strList12 = okHttpClient11.getTransports();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(hostnameVerifier9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setCookieHandler(cookieHandler7);
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setProxySelector(proxySelector9);
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setHostnameVerifier(hostnameVerifier11);
        java.net.URL uRL13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection14 = okHttpClient10.open(uRL13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setResponseCache(responseCache6);
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setTransports((java.util.List<java.lang.String>) strList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: []");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxySelector3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory10);
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setAuthenticator(okAuthenticator14);
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setHostnameVerifier(hostnameVerifier16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.Proxy proxy4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxy(proxy4);
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setCookieHandler(cookieHandler6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setProxySelector(proxySelector8);
        com.squareup.okhttp.ConnectionPool connectionPool10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setConnectionPool(connectionPool10);
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setProxySelector(proxySelector12);
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setResponseCache(responseCache14);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory14);
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection17 = okHttpClient13.open(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setConnectionPool(connectionPool7);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient2.setHostnameVerifier(hostnameVerifier9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient2.getAuthenticator();
        java.net.ResponseCache responseCache12 = okHttpClient2.getResponseCache();
        java.net.ResponseCache responseCache13 = okHttpClient2.getResponseCache();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okAuthenticator11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache13);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient2.getConnectionPool();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setProxySelector(proxySelector4);
        java.net.CookieHandler cookieHandler6 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient2.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList9 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setAuthenticator(okAuthenticator10);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        java.net.Proxy proxy14 = okHttpClient13.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.setHostnameVerifier(hostnameVerifier15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setFollowProtocolRedirects(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(strList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(proxy14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory1);
        java.net.CookieHandler cookieHandler3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient2.setCookieHandler(cookieHandler3);
        java.net.ResponseCache responseCache5 = okHttpClient2.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient2.getConnectionPool();
        boolean boolean9 = okHttpClient2.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler10 = okHttpClient2.getCookieHandler();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(responseCache5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okHttpClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(connectionPool8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cookieHandler10);
    }
}

