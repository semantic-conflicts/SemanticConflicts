/*
 * This file was automatically generated by EvoSuite
 * Tue May 26 07:24:00 GMT 2020
 */

package com.squareup.okhttp.internal.bytes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.squareup.okhttp.internal.bytes.ByteString;
import com.squareup.okhttp.internal.bytes.Deadline;
import com.squareup.okhttp.internal.bytes.GzipSource;
import com.squareup.okhttp.internal.bytes.InflaterSource;
import com.squareup.okhttp.internal.bytes.OkBuffer;
import com.squareup.okhttp.internal.bytes.Segment;
import com.squareup.okhttp.internal.bytes.Source;
import java.io.EOFException;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import java.util.zip.Inflater;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GzipSource_ESTest extends GzipSource_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      Deadline deadline0 = new Deadline();
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      long long0 = 0L;
      Deadline deadline0 = new Deadline();
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      long long0 = 27L;
      Deadline deadline0 = new Deadline();
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 9;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      try { 
        gzipSource0.read(okBuffer0, int0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-29);
      OkBuffer okBuffer1 = new OkBuffer();
      OkBuffer okBuffer2 = okBuffer1.writeInt(int0);
      int int1 = 0;
      OkBuffer okBuffer3 = okBuffer2.writeShort(int1);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      int int2 = (-27);
      OkBuffer okBuffer4 = okBuffer2.writeInt(int2);
      long long0 = 0L;
      Deadline deadline0 = Deadline.NONE;
      Deadline deadline1 = null;
      gzipSource0.close(deadline1);
      long long1 = gzipSource0.read(okBuffer4, long0, deadline0);
      long long2 = 5399L;
      try { 
        gzipSource0.read(okBuffer3, long2, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0xffffffff != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      OkBuffer okBuffer1 = new OkBuffer();
      long long0 = (-713L);
      Deadline deadline0 = new Deadline();
      long long1 = 1382L;
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      Deadline deadline1 = deadline0.start(long1, timeUnit0);
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer1, long0, deadline1);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -713
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      long long0 = 2L;
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 14;
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      int int1 = 263;
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      OkBuffer okBuffer3 = okBuffer2.writeShort(int0);
      String string0 = ";C?4\\=e";
      okBuffer1.writeUtf8(string0);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      Deadline deadline0 = Deadline.NONE;
      OkBuffer okBuffer4 = new OkBuffer();
      try { 
        gzipSource0.read(okBuffer4, int0, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000e00 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      Source source0 = null;
      GzipSource gzipSource0 = null;
      try {
        gzipSource0 = new GzipSource(source0);
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      Deadline deadline0 = new Deadline();
      gzipSource0.close(deadline0);
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      long long0 = 0L;
      Deadline deadline0 = Deadline.NONE;
      long long1 = gzipSource0.read(okBuffer0, long0, deadline0);
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      long long0 = 649L;
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource0.read(okBuffer0, long0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-1677);
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      OkBuffer okBuffer2 = okBuffer1.writeByte(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer2);
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer1, int0, deadline0);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -1677
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      long long0 = 2048L;
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource0.read(okBuffer0, long0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-6090);
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      int int1 = 0;
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      int int2 = okBuffer0.readShortLe();
      OkBuffer okBuffer3 = okBuffer2.writeByte(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)10;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-114);
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte)124;
      byteArray0[4] = byte4;
      byte byte5 = (byte)41;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-54);
      byteArray0[6] = byte6;
      int int3 = (-1);
      okBuffer3.write(byteArray0, int3, (int) byteArray0[6]);
      Deadline deadline0 = Deadline.NONE;
      gzipSource0.close(deadline0);
      deadline0.throwIfReached();
      long long0 = gzipSource0.read(okBuffer1, int1, deadline0);
      gzipSource0.close(deadline0);
      gzipSource0.close(deadline0);
      long long1 = 3388L;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer1, long1, deadline0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.Util", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-341);
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      OkBuffer okBuffer2 = okBuffer1.writeShort(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer2);
      long long0 = 1048576L;
      Deadline deadline0 = null;
      try { 
        gzipSource0.read(okBuffer2, long0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      int int1 = 2866;
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      Inflater inflater0 = new Inflater();
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer2, inflater0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      long long0 = 8L;
      Deadline deadline0 = new Deadline();
      long long1 = 3734L;
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      Deadline deadline1 = deadline0.start(long1, timeUnit0);
      try { 
        gzipSource0.read(okBuffer2, long0, deadline1);
      } catch(IOException e) {
         //
         // java.util.zip.DataFormatException: unknown compression method
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      Inflater inflater0 = new Inflater();
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer0, inflater0);
      InflaterSource inflaterSource1 = new InflaterSource(inflaterSource0, inflater0, okBuffer0);
      Deadline deadline0 = new Deadline();
      long long0 = 0L;
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      inflaterSource0.close(deadline0);
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      inflaterSource1.close(deadline1);
      GzipSource gzipSource0 = new GzipSource(inflaterSource1);
      long long1 = 998L;
      Deadline deadline2 = new Deadline();
      long long2 = 2048L;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long2, deadline0);
      } catch(IllegalStateException e) {
         //
         // closed
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 1169;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      OkBuffer okBuffer2 = okBuffer1.writeShort(int0);
      OkBuffer okBuffer3 = okBuffer2.writeByte(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      Deadline deadline0 = Deadline.NONE;
      gzipSource0.close(deadline0);
      gzipSource0.close(deadline0);
      int int1 = (-1890);
      OkBuffer okBuffer4 = okBuffer3.writeShort(int1);
      Segment segment0 = new Segment();
      okBuffer0.head = segment0;
      long long0 = 8L;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer4, long0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.Segment", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 768;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = 1597;
      OkBuffer okBuffer2 = okBuffer1.writeShort(int1);
      int int2 = 1177;
      OkBuffer okBuffer3 = okBuffer2.writeByte(int2);
      int int3 = 1308;
      String string0 = "[=dGwBPXY";
      okBuffer2.writeUtf8(string0);
      OkBuffer okBuffer4 = okBuffer1.writeByte(int3);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      Deadline deadline0 = null;
      gzipSource0.close(deadline0);
      Deadline deadline1 = Deadline.NONE;
      gzipSource0.close(deadline1);
      int int4 = 0;
      OkBuffer okBuffer5 = okBuffer2.writeShort(int4);
      long long0 = 5104L;
      try { 
        gzipSource0.read(okBuffer3, long0, deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = new OkBuffer();
      OkBuffer okBuffer2 = okBuffer1.writeInt(int0);
      int int1 = 0;
      OkBuffer okBuffer3 = okBuffer2.writeShort(int1);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      int int2 = (-27);
      OkBuffer okBuffer4 = okBuffer2.writeInt(int2);
      long long0 = 0L;
      Deadline deadline0 = Deadline.NONE;
      gzipSource0.close(deadline0);
      long long1 = gzipSource0.read(okBuffer4, long0, deadline0);
      long long2 = 5399L;
      try { 
        gzipSource0.read(okBuffer3, long2, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-2);
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      OkBuffer okBuffer2 = okBuffer1.writeInt(int0);
      int int1 = 0;
      OkBuffer okBuffer3 = okBuffer2.writeShort(int1);
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      int int2 = (-27);
      OkBuffer okBuffer4 = okBuffer2.writeInt(int2);
      int int3 = (-2144189960);
      OkBuffer okBuffer5 = okBuffer4.writeShort(int3);
      long long0 = 0L;
      Deadline deadline0 = Deadline.NONE;
      Deadline deadline1 = null;
      gzipSource0.close(deadline1);
      long long1 = gzipSource0.read(okBuffer4, long0, deadline0);
      long long2 = 5399L;
      try { 
        gzipSource0.read(okBuffer3, long2, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0xfffffeff != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 10;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      boolean boolean0 = true;
      okBuffer0.byteCount = (long) int0;
      Segment segment0 = new Segment();
      okBuffer1.head = segment0;
      Inflater inflater0 = new Inflater(boolean0);
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer1, inflater0, okBuffer1);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      boolean boolean1 = inflater0.finished();
      Deadline deadline0 = null;
      // Undeclared exception!
      gzipSource0.read(okBuffer1, int0, deadline0);
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 12;
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      int int1 = 263;
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      OkBuffer okBuffer3 = okBuffer2.writeShort(int0);
      String string0 = ";C?4\\=e";
      okBuffer1.writeUtf8(string0);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      byte byte0 = okBuffer2.readByte();
      Deadline deadline0 = new Deadline();
      OkBuffer okBuffer4 = new OkBuffer();
      System.setCurrentTimeMillis(byte0);
      System.setCurrentTimeMillis(int0);
      try { 
        gzipSource0.read(okBuffer4, int0, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 58;
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      int int1 = 263;
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      OkBuffer okBuffer3 = okBuffer2.writeShort(int0);
      String string0 = ";C?4\\=e";
      okBuffer1.writeUtf8(string0);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      Deadline deadline0 = Deadline.NONE;
      OkBuffer okBuffer4 = new OkBuffer();
      try { 
        gzipSource0.read(okBuffer4, int0, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x003a00 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }
}
