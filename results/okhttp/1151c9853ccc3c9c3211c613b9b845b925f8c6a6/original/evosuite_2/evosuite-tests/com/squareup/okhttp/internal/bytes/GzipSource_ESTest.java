/*
 * This file was automatically generated by EvoSuite
 * Tue May 26 07:25:42 GMT 2020
 */

package com.squareup.okhttp.internal.bytes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.squareup.okhttp.internal.bytes.Deadline;
import com.squareup.okhttp.internal.bytes.GzipSource;
import com.squareup.okhttp.internal.bytes.InflaterSource;
import com.squareup.okhttp.internal.bytes.OkBuffer;
import com.squareup.okhttp.internal.bytes.Segment;
import com.squareup.okhttp.internal.bytes.Source;
import java.io.EOFException;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import java.util.zip.Inflater;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GzipSource_ESTest extends GzipSource_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      Deadline deadline0 = new Deadline();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      long long0 = 825L;
      try { 
        gzipSource0.read(okBuffer0, long0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-1032);
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      OkBuffer okBuffer2 = okBuffer0.writeInt(int0);
      OkBuffer okBuffer3 = okBuffer1.writeInt(int0);
      short short0 = okBuffer3.readShort();
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      long long0 = 3L;
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource0.read(okBuffer1, long0, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0xfffffbf8 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      Deadline deadline0 = new Deadline();
      gzipSource0.close(deadline0);
      long long0 = gzipSource0.read(okBuffer0, int0, deadline0);
      int int1 = (-556);
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, int1, deadline0);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -556
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      long long0 = 9L;
      Deadline deadline0 = new Deadline();
      String string0 = "%s: actual %#08x != expected %#08x";
      okBuffer0.writeUtf8(string0);
      try { 
        gzipSource0.read(okBuffer0, long0, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x002573 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      long long0 = (-675L);
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long0, deadline0);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -675
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      Deadline deadline0 = null;
      gzipSource0.close(deadline0);
      gzipSource0.close(deadline0);
      long long0 = 0L;
      long long1 = gzipSource0.read(okBuffer0, long0, deadline0);
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      long long0 = 521L;
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource0.read(okBuffer0, long0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      long long0 = 2048L;
      Deadline deadline0 = new Deadline();
      long long1 = (-1355L);
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      Deadline deadline1 = deadline0.start(long1, timeUnit0);
      long long2 = 1333L;
      long long3 = 2L;
      Deadline deadline2 = deadline1.start(long3, timeUnit0);
      TimeUnit timeUnit1 = TimeUnit.SECONDS;
      Deadline deadline3 = deadline1.start(long2, timeUnit1);
      deadline0.throwIfReached();
      try { 
        gzipSource0.read(okBuffer0, long0, deadline1);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-1355);
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      boolean boolean0 = false;
      Inflater inflater0 = new Inflater(boolean0);
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer1, inflater0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      long long0 = (-3055L);
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer1, long0, deadline0);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -3055
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      Source source0 = null;
      GzipSource gzipSource0 = null;
      try {
        gzipSource0 = new GzipSource(source0);
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 184;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      OkBuffer okBuffer2 = okBuffer1.writeShort(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer2);
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource0.read(okBuffer2, int0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      long long0 = 1144L;
      okBuffer0.byteCount = long0;
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      Deadline deadline0 = Deadline.NONE;
      long long1 = 629L;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long1, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.OkBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-1032);
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = 0;
      OkBuffer okBuffer2 = okBuffer1.writeByte(int1);
      OkBuffer okBuffer3 = okBuffer1.writeInt(int1);
      OkBuffer okBuffer4 = okBuffer2.writeShort(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer4);
      Deadline deadline0 = new Deadline();
      long long0 = 3L;
      gzipSource0.close(deadline0);
      Deadline deadline1 = Deadline.NONE;
      deadline1.throwIfReached();
      try { 
        gzipSource0.read(okBuffer1, long0, deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0xffffffff != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 4;
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      Inflater inflater0 = new Inflater();
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer1, inflater0, okBuffer0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      Deadline deadline0 = new Deadline();
      inflaterSource0.close(deadline0);
      Deadline deadline1 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, int0, deadline1);
      } catch(IllegalStateException e) {
         //
         // closed
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-1032);
      String string0 = "byteCount < 4: ";
      okBuffer0.writeUtf8(string0);
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = 0;
      OkBuffer okBuffer2 = okBuffer1.writeByte(int1);
      OkBuffer okBuffer3 = okBuffer1.writeInt(int1);
      OkBuffer okBuffer4 = okBuffer2.writeShort(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer4);
      Deadline deadline0 = new Deadline();
      long long0 = 3L;
      gzipSource0.close(deadline0);
      Deadline deadline1 = Deadline.NONE;
      long long1 = 2048L;
      System.setCurrentTimeMillis(long1);
      deadline1.throwIfReached();
      try { 
        gzipSource0.read(okBuffer1, long0, deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x006279 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-1032);
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = 0;
      OkBuffer okBuffer2 = okBuffer1.writeByte(int1);
      OkBuffer okBuffer3 = okBuffer1.writeInt(int1);
      OkBuffer okBuffer4 = okBuffer2.writeShort(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer4);
      Deadline deadline0 = new Deadline();
      long long0 = 3L;
      byte byte0 = okBuffer1.readByte();
      gzipSource0.close(deadline0);
      Deadline deadline1 = Deadline.NONE;
      deadline1.throwIfReached();
      try { 
        gzipSource0.read(okBuffer1, long0, deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0xfffffffb != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      long long0 = (-2971L);
      okBuffer0.byteCount = long0;
      long long1 = 518L;
      Deadline deadline0 = null;
      gzipSource0.close(deadline0);
      Deadline deadline1 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long1, deadline1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.Util", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-1032);
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = 0;
      OkBuffer okBuffer2 = okBuffer0.writeInt(int0);
      OkBuffer okBuffer3 = okBuffer1.writeInt(int1);
      OkBuffer okBuffer4 = okBuffer2.writeShort(int0);
      short short0 = okBuffer4.readShort();
      GzipSource gzipSource0 = new GzipSource(okBuffer4);
      Deadline deadline0 = new Deadline();
      long long0 = 3L;
      gzipSource0.close(deadline0);
      Deadline deadline1 = Deadline.NONE;
      gzipSource0.close(deadline0);
      deadline1.throwIfReached();
      try { 
        gzipSource0.read(okBuffer1, long0, deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0xfffffbf8 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }
}
