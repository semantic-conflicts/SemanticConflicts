/*
 * This file was automatically generated by EvoSuite
 * Tue May 26 07:46:03 GMT 2020
 */

package com.squareup.okhttp.internal.bytes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.squareup.okhttp.internal.bytes.ByteString;
import com.squareup.okhttp.internal.bytes.Deadline;
import com.squareup.okhttp.internal.bytes.GzipSource;
import com.squareup.okhttp.internal.bytes.InflaterSource;
import com.squareup.okhttp.internal.bytes.OkBuffer;
import com.squareup.okhttp.internal.bytes.Segment;
import com.squareup.okhttp.internal.bytes.Source;
import java.io.EOFException;
import java.io.IOException;
import java.util.List;
import java.util.concurrent.TimeUnit;
import java.util.zip.Inflater;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GzipSource_ESTest extends GzipSource_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 63;
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource0.read(okBuffer0, int0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 893;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      long long0 = 0L;
      Deadline deadline0 = null;
      long long1 = gzipSource0.read(okBuffer1, long0, deadline0);
      long long2 = (-2588L);
      gzipSource0.close(deadline0);
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long2, deadline0);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -2588
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-4130);
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      OkBuffer okBuffer2 = okBuffer1.writeInt(int0);
      OkBuffer okBuffer3 = okBuffer0.writeShort(int0);
      OkBuffer okBuffer4 = okBuffer0.writeShort(int0);
      long long0 = 691L;
      String string0 = "";
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      OkBuffer okBuffer5 = new OkBuffer();
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource0.read(okBuffer5, long0, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0xffffefde != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 33;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      short short0 = okBuffer0.readShort();
      OkBuffer okBuffer2 = okBuffer1.writeByte(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer2);
      OkBuffer okBuffer3 = okBuffer1.writeShort(short0);
      String string0 = "iqY+D~*ZIaR3";
      ByteString byteString0 = ByteString.encodeUtf8(string0);
      okBuffer2.write(byteString0);
      Deadline deadline0 = new Deadline();
      Deadline deadline1 = new Deadline();
      try { 
        gzipSource0.read(okBuffer1, short0, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x002100 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      Source source0 = null;
      GzipSource gzipSource0 = null;
      try {
        gzipSource0 = new GzipSource(source0);
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      Deadline deadline0 = Deadline.NONE;
      gzipSource0.close(deadline0);
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      long long0 = 0L;
      Deadline deadline0 = Deadline.NONE;
      long long1 = gzipSource0.read(okBuffer0, long0, deadline0);
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 3;
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource0.read(okBuffer0, int0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-2313);
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      long long0 = (-980L);
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer1, long0, deadline1);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -980
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      long long0 = 723L;
      okBuffer0.byteCount = long0;
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      long long1 = 2037L;
      Deadline deadline0 = null;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long1, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.OkBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      Inflater inflater0 = new Inflater();
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-56);
      byteArray0[0] = byte0;
      byte byte1 = (byte)32;
      byteArray0[1] = byte1;
      byte byte2 = (byte)2;
      byteArray0[2] = byte2;
      byte byte3 = (byte)7;
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte)14;
      byteArray0[5] = byte5;
      int int1 = inflater0.inflate(byteArray0);
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer1, inflater0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      inflater0.reset();
      Deadline deadline0 = new Deadline();
      okBuffer0.clear();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      Deadline deadline1 = deadline0.start(int0, timeUnit0);
      long long0 = gzipSource0.read(okBuffer1, int0, deadline0);
      gzipSource0.close(deadline0);
      inflaterSource0.close(deadline0);
      Deadline deadline2 = new Deadline();
      long long1 = gzipSource0.read(okBuffer0, long0, deadline2);
      gzipSource0.close(deadline0);
      long long2 = 2L;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer1, long2, deadline2);
      } catch(IllegalStateException e) {
         //
         // closed
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      int int1 = (-6666);
      OkBuffer okBuffer2 = okBuffer1.writeByte(int1);
      List<Integer> list0 = okBuffer2.segmentSizes();
      int int2 = 0;
      OkBuffer okBuffer3 = okBuffer2.writeInt(int2);
      OkBuffer okBuffer4 = okBuffer3.writeInt(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      long long0 = 1223L;
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource0.read(okBuffer3, long0, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-4130);
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      OkBuffer okBuffer2 = okBuffer1.writeShort(int0);
      OkBuffer okBuffer3 = okBuffer2.writeInt(int0);
      OkBuffer okBuffer4 = okBuffer1.writeShort(int0);
      int int1 = 748;
      OkBuffer okBuffer5 = okBuffer1.writeShort(int1);
      GzipSource gzipSource0 = new GzipSource(okBuffer4);
      long long0 = 688L;
      Deadline deadline0 = Deadline.NONE;
      String string0 = "";
      okBuffer1.writeUtf8(string0);
      try { 
        gzipSource0.read(okBuffer2, long0, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0xffffdeef != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 33;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      short short0 = okBuffer0.readShort();
      OkBuffer okBuffer2 = okBuffer1.writeByte(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer2);
      long long0 = 8L;
      String string0 = "iqY+D~*ZIaR3";
      ByteString byteString0 = ByteString.encodeUtf8(string0);
      okBuffer2.write(byteString0);
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      Deadline deadline1 = new Deadline();
      try { 
        gzipSource0.read(okBuffer1, long0, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x002169 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-4130);
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      OkBuffer okBuffer2 = okBuffer1.writeInt(int0);
      OkBuffer okBuffer3 = okBuffer0.writeShort(int0);
      int int1 = 748;
      OkBuffer okBuffer4 = okBuffer0.writeShort(int1);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      long long0 = 688L;
      Deadline deadline0 = Deadline.NONE;
      String string0 = "";
      okBuffer0.writeUtf8(string0);
      try { 
        gzipSource0.read(okBuffer1, long0, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0xffffefde != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-4130);
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      OkBuffer okBuffer2 = okBuffer1.writeInt(int0);
      OkBuffer okBuffer3 = okBuffer0.writeShort(int0);
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)81;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-101);
      byteArray0[1] = byte1;
      byte byte2 = (byte)75;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-13);
      byteArray0[3] = byte3;
      byte byte4 = (byte)3;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-32);
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-1);
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-66);
      byteArray0[7] = byte7;
      int int1 = 3230;
      okBuffer3.write(byteArray0, int1, (int) byte7);
      int int2 = (-2146605330);
      OkBuffer okBuffer4 = okBuffer0.writeShort(int2);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      long long0 = 688L;
      Deadline deadline0 = Deadline.NONE;
      String string0 = "";
      okBuffer0.writeUtf8(string0);
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer1, long0, deadline0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.Util", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 893;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      long long0 = 0L;
      Deadline deadline0 = null;
      short short0 = okBuffer0.readShort();
      long long1 = gzipSource0.read(okBuffer1, long0, deadline0);
      long long2 = gzipSource0.read(okBuffer0, long0, deadline0);
      Deadline deadline1 = Deadline.NONE;
      deadline1.throwIfReached();
      deadline1.throwIfReached();
      gzipSource0.close(deadline1);
      int int1 = (-2822);
      OkBuffer okBuffer2 = okBuffer1.writeShort(int1);
      long long3 = (-2588L);
      OkBuffer okBuffer3 = okBuffer2.writeShort(int1);
      int int2 = 1952257861;
      OkBuffer okBuffer4 = okBuffer3.writeInt(int2);
      try { 
        gzipSource0.read(okBuffer4, int0, deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x00037d != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }
}
