/*
 * This file was automatically generated by EvoSuite
 * Tue May 26 07:47:44 GMT 2020
 */

package com.squareup.okhttp.internal.bytes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.squareup.okhttp.internal.bytes.ByteString;
import com.squareup.okhttp.internal.bytes.Deadline;
import com.squareup.okhttp.internal.bytes.GzipSource;
import com.squareup.okhttp.internal.bytes.InflaterSource;
import com.squareup.okhttp.internal.bytes.OkBuffer;
import com.squareup.okhttp.internal.bytes.Source;
import java.io.EOFException;
import java.io.IOException;
import java.util.List;
import java.util.concurrent.TimeUnit;
import java.util.zip.Inflater;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GzipSource_ESTest extends GzipSource_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      okBuffer1.skip(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      Deadline deadline0 = Deadline.NONE;
      deadline0.throwIfReached();
      gzipSource0.close(deadline0);
      long long0 = gzipSource0.read(okBuffer0, int0, deadline0);
      long long1 = 10L;
      try { 
        gzipSource0.read(okBuffer1, long1, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)110;
      OkBuffer okBuffer1 = okBuffer0.writeInt(byte0);
      ByteString byteString0 = new ByteString(byteArray0);
      okBuffer0.write(byteString0);
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      Deadline deadline0 = new Deadline();
      long long0 = (-2292L);
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      long long1 = 2146789792L;
      try { 
        gzipSource0.read(okBuffer1, long1, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = 1936;
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      int int2 = (-1910);
      OkBuffer okBuffer3 = okBuffer2.writeByte(int2);
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      Deadline deadline0 = new Deadline();
      OkBuffer okBuffer4 = okBuffer0.writeShort(int2);
      try { 
        gzipSource0.read(okBuffer4, int1, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      long long0 = (-1900L);
      OkBuffer okBuffer0 = new OkBuffer();
      Inflater inflater0 = new Inflater();
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer0, inflater0, okBuffer0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      Deadline deadline0 = new Deadline();
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long0, deadline0);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -1900
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      Source source0 = null;
      GzipSource gzipSource0 = null;
      try {
        gzipSource0 = new GzipSource(source0);
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      Deadline deadline0 = Deadline.NONE;
      gzipSource0.close(deadline0);
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      long long0 = (-2615L);
      Deadline deadline0 = new Deadline();
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long0, deadline0);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -2615
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 907;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      OkBuffer okBuffer2 = okBuffer1.writeInt(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer2);
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource0.read(okBuffer2, int0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      Deadline deadline0 = new Deadline();
      gzipSource0.close(deadline0);
      gzipSource0.close(deadline0);
      long long0 = 1491L;
      try { 
        gzipSource0.read(okBuffer0, long0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      boolean boolean0 = true;
      Inflater inflater0 = new Inflater(boolean0);
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer0, inflater0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      Deadline deadline0 = new Deadline();
      inflaterSource0.close(deadline0);
      inflaterSource0.close(deadline0);
      Deadline deadline1 = new Deadline();
      gzipSource0.close(deadline1);
      long long0 = 4L;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long0, deadline1);
      } catch(IllegalStateException e) {
         //
         // closed
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 49;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      long long0 = 0L;
      Deadline deadline0 = new Deadline();
      long long1 = gzipSource0.read(okBuffer1, long0, deadline0);
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      Deadline deadline0 = new Deadline();
      long long0 = (-2675L);
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      long long1 = (-1279L);
      TimeUnit timeUnit1 = TimeUnit.MICROSECONDS;
      Deadline deadline2 = deadline0.start(long1, timeUnit1);
      gzipSource0.close(deadline2);
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long1, deadline0);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -1279
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 1324;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      Inflater inflater0 = new Inflater();
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer1, inflater0, okBuffer1);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource0.read(okBuffer0, int0, deadline0);
      } catch(IOException e) {
         //
         // java.util.zip.DataFormatException: unknown compression method
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-1976);
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      int int1 = 0;
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      OkBuffer okBuffer3 = okBuffer2.writeByte(int0);
      short short0 = okBuffer3.readShort();
      byte byte0 = okBuffer1.readByte();
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      int int2 = 10;
      OkBuffer okBuffer4 = okBuffer3.writeInt(int2);
      Deadline deadline0 = new Deadline();
      long long0 = (-1569L);
      okBuffer2.byteCount = long0;
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      Deadline deadline1 = deadline0.start(int0, timeUnit0);
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer4, int2, deadline1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.Util", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      long long0 = 0L;
      int int1 = 0;
      OkBuffer okBuffer2 = okBuffer1.writeByte(int1);
      byte byte0 = okBuffer1.getByte(long0);
      long long1 = 2L;
      Deadline deadline0 = Deadline.NONE;
      gzipSource0.close(deadline0);
      okBuffer1.byteCount = long1;
      Deadline deadline1 = new Deadline();
      long long2 = gzipSource0.read(okBuffer1, int0, deadline1);
      long long3 = 2L;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long3, deadline1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.OkBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = 1928;
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      int int2 = (-1904);
      OkBuffer okBuffer3 = okBuffer2.writeByte(int2);
      Deadline deadline0 = Deadline.NONE;
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      Deadline deadline1 = new Deadline();
      OkBuffer okBuffer4 = okBuffer0.writeShort(int2);
      try { 
        gzipSource0.read(okBuffer4, int1, deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)53;
      byteArray0[1] = byte1;
      byte byte2 = (byte)110;
      byteArray0[2] = byte2;
      byte byte3 = (byte)4;
      String string0 = "Ok,i'*";
      okBuffer0.writeUtf8(string0);
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-1);
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      byte byte6 = (byte)0;
      byteArray0[6] = byte6;
      ByteString byteString0 = new ByteString(byteArray0);
      okBuffer0.write(byteString0);
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      Deadline deadline0 = new Deadline();
      long long0 = (-2292L);
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      try { 
        gzipSource0.read(okBuffer0, byte3, deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x004f6b != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)53;
      byteArray0[1] = byte1;
      byte byte2 = (byte)110;
      byteArray0[2] = byte2;
      byte byte3 = (byte)4;
      byteArray0[3] = byte3;
      OkBuffer okBuffer1 = okBuffer0.writeInt(byte2);
      byte byte4 = (byte) (-1);
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      byte byte6 = (byte)0;
      byteArray0[6] = byte6;
      ByteString byteString0 = new ByteString(byteArray0);
      okBuffer0.write(byteString0);
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      Deadline deadline0 = new Deadline();
      long long0 = (-2292L);
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      try { 
        gzipSource0.read(okBuffer0, byte3, deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = 1928;
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      int int2 = (-1904);
      Deadline deadline0 = Deadline.NONE;
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      Deadline deadline1 = new Deadline();
      OkBuffer okBuffer3 = okBuffer0.writeShort(int2);
      try { 
        gzipSource0.read(okBuffer3, int1, deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      boolean boolean1 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean0, boolean0);
      OkBuffer okBuffer0 = new OkBuffer();
      Inflater inflater0 = new Inflater();
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer0, inflater0, okBuffer0);
      InflaterSource inflaterSource1 = new InflaterSource(inflaterSource0, inflater0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource1);
      long long0 = 2171L;
      long long1 = 1479L;
      okBuffer0.byteCount = long1;
      Deadline deadline0 = null;
      // Undeclared exception!
      try { 
        gzipSource0.close(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.OkBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-42);
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = 1928;
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      int int2 = (-1904);
      OkBuffer okBuffer3 = okBuffer2.writeByte(int2);
      Deadline deadline0 = Deadline.NONE;
      Deadline deadline1 = new Deadline();
      OkBuffer okBuffer4 = okBuffer0.writeShort(int2);
      try { 
        gzipSource0.read(okBuffer4, int1, deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0xffffffff != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }
}
